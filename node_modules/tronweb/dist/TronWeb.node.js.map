{"version":3,"file":"TronWeb.node.js","mappings":"0BAaA,IAAIA,EAAOC,EAAQ,KACfC,EAAOF,EACPG,EACqB,oBAAfC,YAA8BA,YACnB,oBAAXC,QAA0BA,aACf,IAAXF,GAA0BA,GACjB,oBAATG,MAAwBA,MAC/B,WAAc,OAAOC,IAAM,EAAGC,KAAK,OACpCC,SAAS,cAATA,GAEEC,EAAyBT,EAAQ,KACrCC,EAAKS,OAAOC,OAAOC,MAAOH,GAC1BR,EAAKY,aAAa,uBAAwB,KAAMX,GAChDD,EAAKY,aAAa,uCAAwC,KAAMX,GAChED,EAAKY,aAAa,8BAA+B,KAAMX,GACvDD,EAAKY,aAAa,yBAA0B,KAAMX,GAClDD,EAAKY,aAAa,2BAA4B,KAAMX,GACpDD,EAAKY,aAAa,iCAAkC,KAAMX,GAC1DD,EAAKY,aAAa,wBAAyB,KAAMX,GACjDD,EAAKY,aAAa,mBAAoB,KAAMX,GAC5CD,EAAKY,aAAa,iCAAkC,KAAMX,GAC1DD,EAAKY,aAAa,0BAA2B,KAAMX,GACnDD,EAAKY,aAAa,yCAA0C,KAAMX,GAClED,EAAKY,aAAa,wBAAyB,KAAMX,GACjDD,EAAKY,aAAa,8BAA+B,KAAMX,GACvDD,EAAKY,aAAa,2BAA4B,KAAMX,GACpDD,EAAKY,aAAa,oCAAqC,KAAMX,GAC7DD,EAAKY,aAAa,iDAAkD,KAAMX,GAC1ED,EAAKY,aAAa,kCAAmC,KAAMX,GAC3DD,EAAKY,aAAa,uCAAwC,KAAMX,GAChED,EAAKY,aAAa,iDAAkD,KAAMX,GAC1ED,EAAKY,aAAa,+BAAgC,KAAMX,GACxDD,EAAKY,aAAa,oBAAqB,KAAMX,GAC7CD,EAAKY,aAAa,qBAAsB,KAAMX,GAC9CD,EAAKY,aAAa,uBAAwB,KAAMX,GAChDD,EAAKY,aAAa,yBAA0B,KAAMX,GAWlDY,aAAaC,UAAY,SAASC,GAChCjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAaC,UAAWhB,EAAKkB,SACvChB,EAAKmB,QAAUC,WAKjBP,aAAaC,UAAUO,YAAc,0BAYvCR,aAAaS,KAAO,SAASP,GAC3BjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAaS,KAAMxB,EAAKkB,SAClChB,EAAKmB,QAAUC,WAKjBP,aAAaS,KAAKD,YAAc,qBAYlCR,aAAaU,SAAW,SAASR,GAC/BjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAGF,aAAaU,SAASC,gBAAiB,KACxF,EACAxB,EAAKkB,SAASL,aAAaU,SAAUzB,EAAKkB,SACtChB,EAAKmB,QAAUC,WAKjBP,aAAaU,SAASF,YAAc,yBAYtCR,aAAaY,SAAW,SAASV,GAC/BjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAaY,SAAU3B,EAAKkB,SACtChB,EAAKmB,QAAUC,WAKjBP,aAAaY,SAASJ,YAAc,yBAYtCR,aAAaa,QAAU,SAASX,GAC9BjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAGF,aAAaa,QAAQF,gBAAiB,KACvF,EACAxB,EAAKkB,SAASL,aAAaa,QAAS5B,EAAKkB,SACrChB,EAAKmB,QAAUC,WAKjBP,aAAaa,QAAQL,YAAc,wBAYrCR,aAAaa,QAAQC,OAAS,SAASZ,GACrCjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAaa,QAAQC,OAAQ7B,EAAKkB,SAC5ChB,EAAKmB,QAAUC,WAKjBP,aAAaa,QAAQC,OAAON,YAAc,+BAY5CR,aAAaa,QAAQE,gBAAkB,SAASb,GAC9CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAaa,QAAQE,gBAAiB9B,EAAKkB,SACrDhB,EAAKmB,QAAUC,WAKjBP,aAAaa,QAAQE,gBAAgBP,YAAc,wCAYrDR,aAAagB,IAAM,SAASd,GAC1BjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAagB,IAAK/B,EAAKkB,SACjChB,EAAKmB,QAAUC,WAKjBP,aAAagB,IAAIR,YAAc,oBAYjCR,aAAaiB,kBAAoB,SAASf,GACxCjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAaiB,kBAAmBhC,EAAKkB,SAC/ChB,EAAKmB,QAAUC,WAKjBP,aAAaiB,kBAAkBT,YAAc,kCAY/CR,aAAakB,UAAY,SAAShB,GAChCjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAakB,UAAWjC,EAAKkB,SACvChB,EAAKmB,QAAUC,WAKjBP,aAAakB,UAAUV,YAAc,0BAYvCR,aAAamB,WAAa,SAASjB,GACjCjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAGF,aAAamB,WAAWR,gBAAiB,KAC1F,EACAxB,EAAKkB,SAASL,aAAamB,WAAYlC,EAAKkB,SACxChB,EAAKmB,QAAUC,WAKjBP,aAAamB,WAAWX,YAAc,2BAYxCR,aAAaoB,QAAU,SAASlB,GAC9BjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAaoB,QAASnC,EAAKkB,SACrChB,EAAKmB,QAAUC,WAKjBP,aAAaoB,QAAQZ,YAAc,wBAYrCR,aAAaqB,MAAQ,SAASnB,GAC5BjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAGF,aAAaqB,MAAMV,gBAAiB,KACrF,EACAxB,EAAKkB,SAASL,aAAaqB,MAAOpC,EAAKkB,SACnChB,EAAKmB,QAAUC,WAKjBP,aAAaqB,MAAMb,YAAc,sBAYnCR,aAAasB,kBAAoB,SAASpB,GACxCjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAasB,kBAAmBrC,EAAKkB,SAC/ChB,EAAKmB,QAAUC,WAKjBP,aAAasB,kBAAkBd,YAAc,kCAY/CR,aAAauB,YAAc,SAASrB,GAClCjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAGF,aAAauB,YAAYZ,gBAAiB,KAC3F,EACAxB,EAAKkB,SAASL,aAAauB,YAAatC,EAAKkB,SACzChB,EAAKmB,QAAUC,WAKjBP,aAAauB,YAAYf,YAAc,4BAYzCR,aAAauB,YAAYC,SAAW,SAAStB,GAC3CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAauB,YAAYC,SAAUvC,EAAKkB,SAClDhB,EAAKmB,QAAUC,WAKjBP,aAAauB,YAAYC,SAAShB,YAAc,qCAYlDR,aAAauB,YAAYE,OAAS,SAASvB,GACzCjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAGF,aAAauB,YAAYE,OAAOd,gBAAiB,KAClG,EACAxB,EAAKkB,SAASL,aAAauB,YAAYE,OAAQxC,EAAKkB,SAChDhB,EAAKmB,QAAUC,WAKjBP,aAAauB,YAAYE,OAAOjB,YAAc,mCAYhDR,aAAauB,YAAYG,IAAM,SAASxB,GACtCjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAGF,aAAauB,YAAYG,IAAIf,gBAAiB,KAC/F,EACAxB,EAAKkB,SAASL,aAAauB,YAAYG,IAAKzC,EAAKkB,SAC7ChB,EAAKmB,QAAUC,WAKjBP,aAAauB,YAAYG,IAAIlB,YAAc,gCAKzCvB,EAAKkB,QAAQwB,qBAajB3B,aAAaC,UAAU2B,UAAUC,SAAW,SAASC,GACnD,OAAO9B,aAAaC,UAAU4B,SAASC,EAAqBtC,KAC9D,EAYAQ,aAAaC,UAAU4B,SAAW,SAASE,EAAiBC,GAC1D,IAAOC,EAAM,CACXC,KAAMF,EAAIG,gBACVC,QAASJ,EAAIK,oBAMf,OAHIN,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAaC,UAAUsC,kBAAoB,SAASC,GAClD,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAaC,UAC3B,OAAOD,aAAaC,UAAU0C,4BAA4BX,EAAKS,EACjE,EAUAzC,aAAaC,UAAU0C,4BAA8B,SAASX,EAAKS,GACjE,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAIiB,QAAQF,GACZ,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAIkB,WAAWH,GACf,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAaC,UAAU2B,UAAUwB,gBAAkB,WACjD,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAaC,UAAUsD,wBAAwB/D,KAAM6D,GAC9CA,EAAOG,iBAChB,EAUAxD,aAAaC,UAAUsD,wBAA0B,SAASE,EAASJ,GACjE,IAAIK,OAAIC,GACRD,EAAID,EAAQG,gBACNC,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQM,mBACNF,OAAS,GACbR,EAAOS,WACL,EACAJ,EAGN,EAOA1D,aAAaC,UAAU2B,UAAUoC,QAAU,WACzC,OAA4C/E,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaC,UAAU2B,UAAUO,cAAgB,WAC/C,OAA8BlD,EAAKkB,QAAQ+D,WACvC1E,KAAKwE,UACX,EAUAhE,aAAaC,UAAU2B,UAAUgC,aAAe,WAC9C,OAAmC3E,EAAKkB,QAAQgE,UAC5C3E,KAAKwE,UACX,EAOAhE,aAAaC,UAAU2B,UAAUqB,QAAU,SAASF,GAClD,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaC,UAAU2B,UAAUyC,WAAa,WAC5C,OAA4CpF,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaC,UAAU2B,UAAUS,iBAAmB,WAClD,OAA8BpD,EAAKkB,QAAQ+D,WACvC1E,KAAK6E,aACX,EAUArE,aAAaC,UAAU2B,UAAUmC,gBAAkB,WACjD,OAAmC9E,EAAKkB,QAAQgE,UAC5C3E,KAAK6E,aACX,EAOArE,aAAaC,UAAU2B,UAAUsB,WAAa,SAASH,GACrD,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAaS,KAAKmB,UAAUC,SAAW,SAASC,GAC9C,OAAO9B,aAAaS,KAAKoB,SAASC,EAAqBtC,KACzD,EAYAQ,aAAaS,KAAKoB,SAAW,SAASE,EAAiBC,GACrD,IAAOC,EAAM,CACXqC,YAAatC,EAAIuC,uBACjBC,UAAWvF,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAMtD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAaS,KAAK8B,kBAAoB,SAASC,GAC7C,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAaS,KAC3B,OAAOT,aAAaS,KAAKkC,4BAA4BX,EAAKS,EAC5D,EAUAzC,aAAaS,KAAKkC,4BAA8B,SAASX,EAAKS,GAC5D,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAIyC,eAAe1B,GACnB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI2C,aAAa5B,GACjB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAaS,KAAKmB,UAAUwB,gBAAkB,WAC5C,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAaS,KAAK8C,wBAAwB/D,KAAM6D,GACzCA,EAAOG,iBAChB,EAUAxD,aAAaS,KAAK8C,wBAA0B,SAASE,EAASJ,GAC5D,IAAIK,OAAIC,GACRD,EAAID,EAAQmB,uBACNf,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQoB,iBAEVxB,EAAOyB,WACL,EACApB,EAGN,EAOA1D,aAAaS,KAAKmB,UAAUmD,eAAiB,WAC3C,OAA4C9F,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaS,KAAKmB,UAAU2C,qBAAuB,WACjD,OAA8BtF,EAAKkB,QAAQ+D,WACvC1E,KAAKuF,iBACX,EAUA/E,aAAaS,KAAKmB,UAAUgD,oBAAsB,WAChD,OAAmC3F,EAAKkB,QAAQgE,UAC5C3E,KAAKuF,iBACX,EAOA/E,aAAaS,KAAKmB,UAAU6C,eAAiB,SAAS1B,GACpD,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaS,KAAKmB,UAAUiD,aAAe,WACzC,OAA8B5F,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaS,KAAKmB,UAAU+C,aAAe,SAAS5B,GAClD,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EASA/C,aAAaU,SAASC,gBAAkB,CAAC,GAIrC1B,EAAKkB,QAAQwB,qBAajB3B,aAAaU,SAASkB,UAAUC,SAAW,SAASC,GAClD,OAAO9B,aAAaU,SAASmB,SAASC,EAAqBtC,KAC7D,EAYAQ,aAAaU,SAASmB,SAAW,SAASE,EAAiBC,GACzD,IAAI0B,EAAGzB,EAAM,CACXgD,WAAYhG,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACrDkD,gBAAiBlD,EAAImD,2BACrBC,eAAgB1B,EAAI1B,EAAIqD,oBAAsB3B,EAAE7B,SAASE,OAAiB4B,GAAa,GACvF2B,eAAgBrG,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACzDuD,WAAYtG,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACrDwD,cAAexD,EAAIyD,yBACnBC,MAAOzG,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAMlD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAaU,SAAS6B,kBAAoB,SAASC,GACjD,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAaU,SAC3B,OAAOV,aAAaU,SAASiC,4BAA4BX,EAAKS,EAChE,EAUAzC,aAAaU,SAASiC,4BAA8B,SAASX,EAAKS,GAChE,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAA+BN,EAAOiC,YAC1C1C,EAAI2D,cAAc5C,GAClB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAI4D,mBAAmB7C,GACvB,MACF,KAAK,EACCA,EAAQf,EAAIqD,mBAChB5C,EAAOoD,YAAY9C,GAAO,SAASU,EAAShB,GAC1CxD,EAAK6G,IAAIvD,kBAAkBkB,EAAShB,EAAQxD,EAAKyD,aAAad,UAAU8C,UAAWzF,EAAKyD,aAAad,UAAU8C,UAAW,KAAM,EAAG,EAClI,IACH,MACF,KAAK,EACC3B,EAA+BN,EAAOiC,YAC1C1C,EAAI+D,kBAAkBhD,GACtB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIgE,cAAcjD,GAClB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAIiE,aAAalD,GACjB,MACF,KAAK,EACCA,EAAqDN,EAAOyD,WAChElE,EAAImE,SAASpD,GACb,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAaU,SAASkB,UAAUwB,gBAAkB,WAChD,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAaU,SAAS6C,wBAAwB/D,KAAM6D,GAC7CA,EAAOG,iBAChB,EAUAxD,aAAaU,SAAS6C,wBAA0B,SAASE,EAASJ,GAChE,IAAIK,OAAIC,EAEE,KADVD,EAAID,EAAQ2C,kBAEV/C,EAAOyB,WACL,EACApB,IAGJA,EAAID,EAAQ4C,2BACNxC,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQ4B,kBAAiB,KACpB3B,EAAE4C,YAAc,GACvB5C,EAAEN,gBAAgB,EAAGC,EAAQpE,EAAKqE,aAAa1B,UAAUkD,WAAY7F,EAAKqE,aAAa1B,UAAUkD,YAGzF,KADVpB,EAAID,EAAQ8C,sBAEVlD,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQ+C,kBAEVnD,EAAOyB,WACL,EACApB,IAGJA,EAAID,EAAQgD,yBACN5C,OAAS,GACbR,EAAOqD,mBACL,EACAhD,GAIM,KADVA,EAAID,EAAQkD,aAEVtD,EAAOuD,UACL,EACAlD,EAGN,EAMA1D,aAAaU,SAASmG,MAAQ,CAC5BC,QAAS,EACTC,YAAa,EACbC,SAAU,EACVC,SAAU,GAOZjH,aAAaU,SAASkB,UAAUwE,cAAgB,WAC9C,OAA8BnH,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaU,SAASkB,UAAU+D,cAAgB,SAAS5C,GACvD,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAaU,SAASkB,UAAUsF,mBAAqB,WACnD,OAA4CjI,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaU,SAASkB,UAAUuD,yBAA2B,WACzD,OAA8BlG,EAAKkB,QAAQ+D,WACvC1E,KAAK0H,qBACX,EAUAlH,aAAaU,SAASkB,UAAUyE,wBAA0B,WACxD,OAAmCpH,EAAKkB,QAAQgE,UAC5C3E,KAAK0H,qBACX,EAOAlH,aAAaU,SAASkB,UAAUgE,mBAAqB,SAAS7C,GAC5D,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EASA/C,aAAaU,SAASkB,UAAUyD,iBAAmB,SAAS8B,GAC1D,OACIlI,EAAKkB,QAAQiH,YAAY5H,KAAM,EAAG2H,EAClC,KACN,EAOAnH,aAAaU,SAASkB,UAAUyF,mBAAqB,WAEnD,OADA7H,KAAK6F,mBAAmBiC,QACjB9H,IAAK,EAOdQ,aAAaU,SAASkB,UAAU2E,kBAAoB,WAClD,OAA8BtH,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaU,SAASkB,UAAUmE,kBAAoB,SAAShD,GAC3D,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAaU,SAASkB,UAAU4E,cAAgB,WAC9C,OAA8BvH,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaU,SAASkB,UAAUoE,cAAgB,SAASjD,GACvD,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAaU,SAASkB,UAAU2F,iBAAmB,WACjD,OAA2DtI,EAAKkB,QAAQqH,iBAAiBhI,KAAM,EACjG,EAQAQ,aAAaU,SAASkB,UAAU6D,uBAAyB,WACvD,OAAsCxG,EAAKkB,QAAQsH,eAC/CjI,KAAK+H,mBACX,EAUAvH,aAAaU,SAASkB,UAAU6E,sBAAwB,WACtD,OAA2CxH,EAAKkB,QAAQuH,cACpDlI,KAAK+H,mBACX,EAOAvH,aAAaU,SAASkB,UAAU+F,iBAAmB,SAAS5E,GAC1D,OAAO9D,EAAKkB,QAAQyH,SAASpI,KAAM,EAAGuD,GAAS,GACjD,EAQA/C,aAAaU,SAASkB,UAAUqE,aAAe,SAASlD,EAAO8E,GAC7D,OAAO5I,EAAKkB,QAAQ2H,mBAAmBtI,KAAM,EAAGuD,EAAO8E,EACzD,EAOA7H,aAAaU,SAASkB,UAAUmG,mBAAqB,WACnD,OAAOvI,KAAKmI,iBAAiB,GAC/B,EAOA3H,aAAaU,SAASkB,UAAU+E,SAAW,WACzC,OAAoD1H,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAChG,EAOAQ,aAAaU,SAASkB,UAAUuE,SAAW,SAASpD,GAClD,OAAO9D,EAAKkB,QAAQ6H,mBAAmBxI,KAAM,EAAGuD,EAClD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAaY,SAASgB,UAAUC,SAAW,SAASC,GAClD,OAAO9B,aAAaY,SAASiB,SAASC,EAAqBtC,KAC7D,EAYAQ,aAAaY,SAASiB,SAAW,SAASE,EAAiBC,GACzD,IAAOC,EAAM,CACXgG,WAAYhJ,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACrDkG,eAAgBlG,EAAImG,0BACpB5C,WAAYtG,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACrDoG,aAAcpG,EAAIqG,wBAClBC,kBAAmBrJ,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GAC5DuG,cAAevG,EAAIwG,yBACnBC,mBAAoBxJ,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAM/D,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAaY,SAAS2B,kBAAoB,SAASC,GACjD,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAaY,SAC3B,OAAOZ,aAAaY,SAAS+B,4BAA4BX,EAAKS,EAChE,EAUAzC,aAAaY,SAAS+B,4BAA8B,SAASX,EAAKS,GAChE,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAA+BN,EAAOiC,YAC1C1C,EAAI0G,cAAc3F,GAClB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAI2G,kBAAkB5F,GACtB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIgE,cAAcjD,GAClB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAI4G,gBAAgB7F,GACpB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI6G,qBAAqB9F,GACzB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAI8G,iBAAiB/F,GACrB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI+G,sBAAsBhG,GAC1B,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAaY,SAASgB,UAAUwB,gBAAkB,WAChD,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAaY,SAAS2C,wBAAwB/D,KAAM6D,GAC7CA,EAAOG,iBAChB,EAUAxD,aAAaY,SAAS2C,wBAA0B,SAASE,EAASJ,GAChE,IAAIK,OAAIC,EAEE,KADVD,EAAID,EAAQuF,kBAEV3F,EAAOyB,WACL,EACApB,IAGJA,EAAID,EAAQwF,0BACNpF,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQ+C,kBAEVnD,EAAOyB,WACL,EACApB,IAGJA,EAAID,EAAQyF,wBACNrF,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQ0F,yBAEV9F,EAAOyB,WACL,EACApB,IAGJA,EAAID,EAAQ2F,yBACNvF,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQ4F,0BAEVhG,EAAOyB,WACL,EACApB,EAGN,EAOA1D,aAAaY,SAASgB,UAAUoH,cAAgB,WAC9C,OAA8B/J,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaY,SAASgB,UAAU8G,cAAgB,SAAS3F,GACvD,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAaY,SAASgB,UAAU0H,kBAAoB,WAClD,OAA4CrK,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaY,SAASgB,UAAUuG,wBAA0B,WACxD,OAA8BlJ,EAAKkB,QAAQ+D,WACvC1E,KAAK8J,oBACX,EAUAtJ,aAAaY,SAASgB,UAAUqH,uBAAyB,WACvD,OAAmChK,EAAKkB,QAAQgE,UAC5C3E,KAAK8J,oBACX,EAOAtJ,aAAaY,SAASgB,UAAU+G,kBAAoB,SAAS5F,GAC3D,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaY,SAASgB,UAAU4E,cAAgB,WAC9C,OAA8BvH,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaY,SAASgB,UAAUoE,cAAgB,SAASjD,GACvD,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAaY,SAASgB,UAAU2H,gBAAkB,WAChD,OAA4CtK,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaY,SAASgB,UAAUyG,sBAAwB,WACtD,OAA8BpJ,EAAKkB,QAAQ+D,WACvC1E,KAAK+J,kBACX,EAUAvJ,aAAaY,SAASgB,UAAUsH,qBAAuB,WACrD,OAAmCjK,EAAKkB,QAAQgE,UAC5C3E,KAAK+J,kBACX,EAOAvJ,aAAaY,SAASgB,UAAUgH,gBAAkB,SAAS7F,GACzD,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaY,SAASgB,UAAUuH,qBAAuB,WACrD,OAA8BlK,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaY,SAASgB,UAAUiH,qBAAuB,SAAS9F,GAC9D,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAaY,SAASgB,UAAU4H,iBAAmB,WACjD,OAA4CvK,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaY,SAASgB,UAAU4G,uBAAyB,WACvD,OAA8BvJ,EAAKkB,QAAQ+D,WACvC1E,KAAKgK,mBACX,EAUAxJ,aAAaY,SAASgB,UAAUwH,sBAAwB,WACtD,OAAmCnK,EAAKkB,QAAQgE,UAC5C3E,KAAKgK,mBACX,EAOAxJ,aAAaY,SAASgB,UAAUkH,iBAAmB,SAAS/F,GAC1D,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaY,SAASgB,UAAUyH,sBAAwB,WACtD,OAA8BpK,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaY,SAASgB,UAAUmH,sBAAwB,SAAShG,GAC/D,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EASA/C,aAAaa,QAAQF,gBAAkB,CAAC,EAAE,EAAE,GAAG,IAI3C1B,EAAKkB,QAAQwB,qBAajB3B,aAAaa,QAAQe,UAAUC,SAAW,SAASC,GACjD,OAAO9B,aAAaa,QAAQgB,SAASC,EAAqBtC,KAC5D,EAYAQ,aAAaa,QAAQgB,SAAW,SAASE,EAAiBC,GACxD,IAAI0B,EAAGzB,EAAM,CACXwH,YAAazH,EAAI0H,uBACjBC,KAAM1K,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GAC/CI,QAASJ,EAAIK,mBACbuH,QAAS3K,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GAClD6H,UAAW5K,EAAKkB,QAAQ2J,aAAa9H,EAAI+H,eACzC/J,aAAaS,KAAKoB,SAAUE,GAC5BiI,UAAWtG,EAAI1B,EAAIiI,eAAiBvG,EAAE7B,SAASE,OAAiB4B,GAAa,GAC7EuG,YAAaxG,EAAI1B,EAAImI,iBAAmBzG,EAAE7B,SAASE,OAAiB4B,GAAa,GACjFyG,WAAYnL,EAAKkB,QAAQ2J,aAAa9H,EAAIqI,gBAC1CrK,aAAaa,QAAQC,OAAOe,SAAUE,GACtCuI,SAAUrL,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACnDuI,2CAA4CtL,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,GAAI,GACtFwI,mCAAoCvL,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,GAAI,GAC9EyI,aAAcxL,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,GAAI,GACxD0I,WAAYhH,EAAI1B,EAAI2I,iBAAmB3K,aAAaa,QAAQC,OAAOe,SAASE,EAAiB2B,GAC7FkH,eAAgB3L,EAAKkB,QAAQ0K,2BAA2B7I,EAAK,IAAI,GACjEuD,WAAYtG,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACrD8I,mBAAoB7L,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,GAAI,GAC9D+I,UAAW9L,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,GAAI,GACrDgJ,mBAAoB/L,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,GAAI,GAC9DiJ,KAAMjJ,EAAIkJ,gBACVC,UAAWlM,EAAKkB,QAAQ0K,2BAA2B7I,EAAK,IAAI,GAC5DoJ,YAAanM,EAAKkB,QAAQ0K,2BAA2B7I,EAAK,IAAI,GAC9DqJ,iBAAkBpM,EAAKkB,QAAQ2J,aAAa9H,EAAIsJ,sBAChDtL,aAAaa,QAAQC,OAAOe,SAAUE,GACtCwJ,gBAAiBvJ,EAAIwJ,2BACrBC,cAAezJ,EAAI0J,yBACnBC,6BAA8BjI,EAAI1B,EAAI4J,kCAAoClI,EAAE7B,SAASE,OAAiB4B,GAAa,GACnHkI,+BAAgCnI,EAAI1B,EAAI8J,oCAAsCpI,EAAE7B,SAASE,OAAiB4B,GAAa,GACvHoI,aAAc9M,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,GAAI,GACxDgK,sBAAuBtI,EAAI1B,EAAIiK,2BAA6BvI,EAAE7B,SAASE,OAAiB4B,GAAa,GACrGuI,wBAAyBxI,EAAI1B,EAAImK,6BAA+BzI,EAAE7B,SAASE,OAAiB4B,GAAa,GACzGyI,kBAAmBnN,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,GAAI,GAC7DqK,sBAAuBpN,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,GAAI,GACjEsK,UAAWtK,EAAIuK,qBACfC,iBAAkB9I,EAAI1B,EAAIyK,uBAAyBzM,aAAaa,QAAQE,gBAAgBc,SAASE,EAAiB2B,GAClHgJ,SAAU1K,EAAI2K,oBACdC,iBAAkBlJ,EAAI1B,EAAI6K,uBAAyB7M,aAAamB,WAAWU,SAASE,EAAiB2B,GACrGoJ,mBAAoBpJ,EAAI1B,EAAI+K,yBAA2B/M,aAAamB,WAAWU,SAASE,EAAiB2B,GACzGsJ,qBAAsB/N,EAAKkB,QAAQ2J,aAAa9H,EAAIiL,0BACpDjN,aAAamB,WAAWU,SAAUE,IAMpC,OAHIA,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAaa,QAAQ0B,kBAAoB,SAASC,GAChD,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAaa,QAC3B,OAAOb,aAAaa,QAAQ8B,4BAA4BX,EAAKS,EAC/D,EAUAzC,aAAaa,QAAQ8B,4BAA8B,SAASX,EAAKS,GAC/D,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAIkL,eAAenK,GACnB,MACF,KAAK,EACCA,EAAkDN,EAAOyD,WAC7DlE,EAAImL,QAAQpK,GACZ,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAIkB,WAAWH,GACf,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIoL,WAAWrK,GACf,MACF,KAAK,EACCA,EAAQ,IAAI/C,aAAaS,KAC7BgC,EAAOoD,YAAY9C,EAAM/C,aAAaS,KAAKkC,6BAC3CX,EAAIqL,SAAStK,GACb,MACF,KAAK,EACCA,EAAQf,EAAIiI,cAChBxH,EAAOoD,YAAY9C,GAAO,SAASU,EAAShB,GAC1CxD,EAAK6G,IAAIvD,kBAAkBkB,EAAShB,EAAQxD,EAAKyD,aAAad,UAAU0L,WAAYrO,EAAKyD,aAAad,UAAU8C,UAAW,KAAM,GAAI,EACpI,IACH,MACF,KAAK,GACC3B,EAAQf,EAAImI,gBAChB1H,EAAOoD,YAAY9C,GAAO,SAASU,EAAShB,GAC1CxD,EAAK6G,IAAIvD,kBAAkBkB,EAAShB,EAAQxD,EAAKyD,aAAad,UAAU0L,WAAYrO,EAAKyD,aAAad,UAAU8C,UAAW,KAAM,GAAI,EACpI,IACH,MACF,KAAK,EACC3B,EAAQ,IAAI/C,aAAaa,QAAQC,OACrC2B,EAAOoD,YAAY9C,EAAM/C,aAAaa,QAAQC,OAAO6B,6BACrDX,EAAIuL,UAAUxK,GACd,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIwL,YAAYzK,GAChB,MACF,KAAK,GACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIyL,8CAA8C1K,GAClD,MACF,KAAK,GACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI0L,sCAAsC3K,GAC1C,MACF,KAAK,GACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI2L,gBAAgB5K,GACpB,MACF,KAAK,GACCA,EAAQ,IAAI/C,aAAaa,QAAQC,OACrC2B,EAAOoD,YAAY9C,EAAM/C,aAAaa,QAAQC,OAAO6B,6BACrDX,EAAI4L,aAAa7K,GACjB,MACF,KAAK,GACCA,EAAgCN,EAAOoL,WAC3C7L,EAAI8L,kBAAkB/K,GACtB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIgE,cAAcjD,GAClB,MACF,KAAK,GACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI+L,sBAAsBhL,GAC1B,MACF,KAAK,GACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIgM,aAAajL,GACjB,MACF,KAAK,GACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIiM,sBAAsBlL,GAC1B,MACF,KAAK,GACCA,EAAoCN,EAAOO,YAC/ChB,EAAIkM,QAAQnL,GACZ,MACF,KAAK,GACCA,EAAgCN,EAAOoL,WAC3C7L,EAAImM,aAAapL,GACjB,MACF,KAAK,GACCA,EAAgCN,EAAOoL,WAC3C7L,EAAIoM,eAAerL,GACnB,MACF,KAAK,GACCA,EAAQ,IAAI/C,aAAaa,QAAQC,OACrC2B,EAAOoD,YAAY9C,EAAM/C,aAAaa,QAAQC,OAAO6B,6BACrDX,EAAIqM,gBAAgBtL,GACpB,MACF,KAAK,GACCA,EAAoCN,EAAOO,YAC/ChB,EAAIsM,mBAAmBvL,GACvB,MACF,KAAK,GACCA,EAAoCN,EAAOO,YAC/ChB,EAAIuM,iBAAiBxL,GACrB,MACF,KAAK,GACCA,EAAQf,EAAI4J,iCAChBnJ,EAAOoD,YAAY9C,GAAO,SAASU,EAAShB,GAC1CxD,EAAK6G,IAAIvD,kBAAkBkB,EAAShB,EAAQxD,EAAKyD,aAAad,UAAU0L,WAAYrO,EAAKyD,aAAad,UAAU8C,UAAW,KAAM,GAAI,EACpI,IACH,MACF,KAAK,GACC3B,EAAQf,EAAI8J,mCAChBrJ,EAAOoD,YAAY9C,GAAO,SAASU,EAAShB,GAC1CxD,EAAK6G,IAAIvD,kBAAkBkB,EAAShB,EAAQxD,EAAKyD,aAAad,UAAU0L,WAAYrO,EAAKyD,aAAad,UAAU8C,UAAW,KAAM,GAAI,EACpI,IACH,MACF,KAAK,GACC3B,EAA+BN,EAAOiC,YAC1C1C,EAAIwM,gBAAgBzL,GACpB,MACF,KAAK,GACCA,EAAQf,EAAIiK,0BAChBxJ,EAAOoD,YAAY9C,GAAO,SAASU,EAAShB,GAC1CxD,EAAK6G,IAAIvD,kBAAkBkB,EAAShB,EAAQxD,EAAKyD,aAAad,UAAU0L,WAAYrO,EAAKyD,aAAad,UAAU8C,UAAW,KAAM,GAAI,EACpI,IACH,MACF,KAAK,GACC3B,EAAQf,EAAImK,4BAChB1J,EAAOoD,YAAY9C,GAAO,SAASU,EAAShB,GAC1CxD,EAAK6G,IAAIvD,kBAAkBkB,EAAShB,EAAQxD,EAAKyD,aAAad,UAAU0L,WAAYrO,EAAKyD,aAAad,UAAU8C,UAAW,KAAM,GAAI,EACpI,IACH,MACF,KAAK,GACC3B,EAA+BN,EAAOiC,YAC1C1C,EAAIyM,qBAAqB1L,GACzB,MACF,KAAK,GACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI0M,yBAAyB3L,GAC7B,MACF,KAAK,GACCA,EAAoCN,EAAOO,YAC/ChB,EAAI2M,aAAa5L,GACjB,MACF,KAAK,GACCA,EAAQ,IAAI/C,aAAaa,QAAQE,gBACrC0B,EAAOoD,YAAY9C,EAAM/C,aAAaa,QAAQE,gBAAgB4B,6BAC9DX,EAAI4M,mBAAmB7L,GACvB,MACF,KAAK,GACCA,EAAoCN,EAAOO,YAC/ChB,EAAI6M,YAAY9L,GAChB,MACF,KAAK,GACCA,EAAQ,IAAI/C,aAAamB,WAC7BsB,EAAOoD,YAAY9C,EAAM/C,aAAamB,WAAWwB,6BACjDX,EAAI8M,mBAAmB/L,GACvB,MACF,KAAK,GACCA,EAAQ,IAAI/C,aAAamB,WAC7BsB,EAAOoD,YAAY9C,EAAM/C,aAAamB,WAAWwB,6BACjDX,EAAI+M,qBAAqBhM,GACzB,MACF,KAAK,GACCA,EAAQ,IAAI/C,aAAamB,WAC7BsB,EAAOoD,YAAY9C,EAAM/C,aAAamB,WAAWwB,6BACjDX,EAAIgN,oBAAoBjM,GACxB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAaa,QAAQe,UAAUwB,gBAAkB,WAC/C,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAaa,QAAQ0C,wBAAwB/D,KAAM6D,GAC5CA,EAAOG,iBAChB,EAUAxD,aAAaa,QAAQ0C,wBAA0B,SAASE,EAASJ,GAC/D,IAAIK,OAAIC,GACRD,EAAID,EAAQwL,uBACNpL,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQyL,YAEV7L,EAAOuD,UACL,EACAlD,IAGJA,EAAID,EAAQM,mBACNF,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQ0L,eAEV9L,EAAOyB,WACL,EACApB,IAGJA,EAAID,EAAQsG,gBACNlG,OAAS,GACbR,EAAO+L,qBACL,EACA1L,EACA1D,aAAaS,KAAK8C,0BAGtBG,EAAID,EAAQwG,aAAY,KACfvG,EAAE4C,YAAc,GACvB5C,EAAEN,gBAAgB,EAAGC,EAAQpE,EAAKqE,aAAa1B,UAAUyN,YAAapQ,EAAKqE,aAAa1B,UAAUkD,aAEpGpB,EAAID,EAAQ0G,eAAc,KACjBzG,EAAE4C,YAAc,GACvB5C,EAAEN,gBAAgB,GAAIC,EAAQpE,EAAKqE,aAAa1B,UAAUyN,YAAapQ,EAAKqE,aAAa1B,UAAUkD,aAErGpB,EAAID,EAAQ4G,iBACNxG,OAAS,GACbR,EAAO+L,qBACL,EACA1L,EACA1D,aAAaa,QAAQC,OAAOyC,yBAItB,KADVG,EAAID,EAAQ6L,gBAEVjM,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQ8L,kDAEVlM,EAAOyB,WACL,GACApB,GAIM,KADVA,EAAID,EAAQ+L,0CAEVnM,EAAOyB,WACL,GACApB,GAIM,KADVA,EAAID,EAAQgM,oBAEVpM,EAAOyB,WACL,GACApB,GAIK,OADTA,EAAID,EAAQkH,iBAEVtH,EAAOqM,aACL,GACAhM,EACA1D,aAAaa,QAAQC,OAAOyC,0BAGhCG,EAAID,EAAQkM,sBAEVtM,EAAOuM,UACL,GACAlM,GAIM,KADVA,EAAID,EAAQ+C,kBAEVnD,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQoM,0BAEVxM,EAAOyB,WACL,GACApB,GAIM,KADVA,EAAID,EAAQqM,iBAEVzM,EAAOyB,WACL,GACApB,GAIM,KADVA,EAAID,EAAQsM,0BAEV1M,EAAOyB,WACL,GACApB,IAGJA,EAAID,EAAQuM,gBACNnM,OAAS,GACbR,EAAOS,WACL,GACAJ,IAGJA,EAAID,EAAQwM,iBAEV5M,EAAOuM,UACL,GACAlM,IAGJA,EAAID,EAAQyM,mBAEV7M,EAAOuM,UACL,GACAlM,IAGJA,EAAID,EAAQ6H,uBACNzH,OAAS,GACbR,EAAO+L,qBACL,GACA1L,EACA1D,aAAaa,QAAQC,OAAOyC,0BAGhCG,EAAID,EAAQ0M,2BACNtM,OAAS,GACbR,EAAOS,WACL,GACAJ,IAGJA,EAAID,EAAQ2M,yBACNvM,OAAS,GACbR,EAAOS,WACL,GACAJ,IAGJA,EAAID,EAAQmI,gCAA+B,KAClClI,EAAE4C,YAAc,GACvB5C,EAAEN,gBAAgB,GAAIC,EAAQpE,EAAKqE,aAAa1B,UAAUyN,YAAapQ,EAAKqE,aAAa1B,UAAUkD,aAErGpB,EAAID,EAAQqI,kCAAiC,KACpCpI,EAAE4C,YAAc,GACvB5C,EAAEN,gBAAgB,GAAIC,EAAQpE,EAAKqE,aAAa1B,UAAUyN,YAAapQ,EAAKqE,aAAa1B,UAAUkD,YAG3F,KADVpB,EAAID,EAAQ4M,oBAEVhN,EAAOyB,WACL,GACApB,IAGJA,EAAID,EAAQwI,yBAAwB,KAC3BvI,EAAE4C,YAAc,GACvB5C,EAAEN,gBAAgB,GAAIC,EAAQpE,EAAKqE,aAAa1B,UAAUyN,YAAapQ,EAAKqE,aAAa1B,UAAUkD,aAErGpB,EAAID,EAAQ0I,2BAA0B,KAC7BzI,EAAE4C,YAAc,GACvB5C,EAAEN,gBAAgB,GAAIC,EAAQpE,EAAKqE,aAAa1B,UAAUyN,YAAapQ,EAAKqE,aAAa1B,UAAUkD,YAG3F,KADVpB,EAAID,EAAQ6M,yBAEVjN,EAAOyB,WACL,GACApB,GAIM,KADVA,EAAID,EAAQ8M,6BAEVlN,EAAOyB,WACL,GACApB,IAGJA,EAAID,EAAQ+M,qBACN3M,OAAS,GACbR,EAAOS,WACL,GACAJ,GAIK,OADTA,EAAID,EAAQgJ,uBAEVpJ,EAAOqM,aACL,GACAhM,EACA1D,aAAaa,QAAQE,gBAAgBwC,0BAGzCG,EAAID,EAAQgN,oBACN5M,OAAS,GACbR,EAAOS,WACL,GACAJ,GAIK,OADTA,EAAID,EAAQoJ,uBAEVxJ,EAAOqM,aACL,GACAhM,EACA1D,aAAamB,WAAWoC,yBAInB,OADTG,EAAID,EAAQsJ,yBAEV1J,EAAOqM,aACL,GACAhM,EACA1D,aAAamB,WAAWoC,0BAG5BG,EAAID,EAAQwJ,2BACNpJ,OAAS,GACbR,EAAO+L,qBACL,GACA1L,EACA1D,aAAamB,WAAWoC,wBAG9B,EAMItE,EAAKkB,QAAQwB,qBAajB3B,aAAaa,QAAQC,OAAOc,UAAUC,SAAW,SAASC,GACxD,OAAO9B,aAAaa,QAAQC,OAAOe,SAASC,EAAqBtC,KACnE,EAYAQ,aAAaa,QAAQC,OAAOe,SAAW,SAASE,EAAiBC,GAC/D,IAAOC,EAAM,CACXyO,cAAezR,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACxD2O,WAAY1R,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAMvD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAaa,QAAQC,OAAOyB,kBAAoB,SAASC,GACvD,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAaa,QAAQC,OACnC,OAAOd,aAAaa,QAAQC,OAAO6B,4BAA4BX,EAAKS,EACtE,EAUAzC,aAAaa,QAAQC,OAAO6B,4BAA8B,SAASX,EAAKS,GACtE,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAA+BN,EAAOiC,YAC1C1C,EAAI4O,iBAAiB7N,GACrB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI6O,cAAc9N,GAClB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAaa,QAAQC,OAAOc,UAAUwB,gBAAkB,WACtD,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAaa,QAAQC,OAAOyC,wBAAwB/D,KAAM6D,GACnDA,EAAOG,iBAChB,EAUAxD,aAAaa,QAAQC,OAAOyC,wBAA0B,SAASE,EAASJ,GACtE,IAAIK,OAAIC,EAEE,KADVD,EAAID,EAAQqN,qBAEVzN,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQsN,kBAEV1N,EAAOyB,WACL,EACApB,EAGN,EAOA1D,aAAaa,QAAQC,OAAOc,UAAUkP,iBAAmB,WACvD,OAA8B7R,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaa,QAAQC,OAAOc,UAAUgP,iBAAmB,SAAS7N,GAChE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAaa,QAAQC,OAAOc,UAAUmP,cAAgB,WACpD,OAA8B9R,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaa,QAAQC,OAAOc,UAAUiP,cAAgB,SAAS9N,GAC7D,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAaa,QAAQE,gBAAgBa,UAAUC,SAAW,SAASC,GACjE,OAAO9B,aAAaa,QAAQE,gBAAgBc,SAASC,EAAqBtC,KAC5E,EAYAQ,aAAaa,QAAQE,gBAAgBc,SAAW,SAASE,EAAiBC,GACxE,IAAI0B,EAAGzB,EAAM,CACX+O,YAAa/R,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACtDiP,wBAAyBvN,EAAI1B,EAAIkP,8BAAgClR,aAAaa,QAAQC,OAAOe,SAASE,EAAiB2B,GACvHyN,2BAA4BlS,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACrEoP,wCAAyCnS,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GAClFqP,gCAAiCpS,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GAC1EsP,aAAcrS,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACvDuP,aAActS,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACvDwP,0BAA2BvS,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAMtE,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAaa,QAAQE,gBAAgBwB,kBAAoB,SAASC,GAChE,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAaa,QAAQE,gBACnC,OAAOf,aAAaa,QAAQE,gBAAgB4B,4BAA4BX,EAAKS,EAC/E,EAUAzC,aAAaa,QAAQE,gBAAgB4B,4BAA8B,SAASX,EAAKS,GAC/E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAA+BN,EAAOiC,YAC1C1C,EAAIyP,eAAe1O,GACnB,MACF,KAAK,EACCA,EAAQ,IAAI/C,aAAaa,QAAQC,OACrC2B,EAAOoD,YAAY9C,EAAM/C,aAAaa,QAAQC,OAAO6B,6BACrDX,EAAI0P,0BAA0B3O,GAC9B,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI2P,8BAA8B5O,GAClC,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI4P,2CAA2C7O,GAC/C,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI6P,mCAAmC9O,GACvC,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI8P,gBAAgB/O,GACpB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI+P,gBAAgBhP,GACpB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIgQ,6BAA6BjP,GACjC,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAaa,QAAQE,gBAAgBa,UAAUwB,gBAAkB,WAC/D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAaa,QAAQE,gBAAgBwC,wBAAwB/D,KAAM6D,GAC5DA,EAAOG,iBAChB,EAUAxD,aAAaa,QAAQE,gBAAgBwC,wBAA0B,SAASE,EAASJ,GAC/E,IAAIK,OAAIC,EAEE,KADVD,EAAID,EAAQwO,mBAEV5O,EAAOyB,WACL,EACApB,GAIK,OADTA,EAAID,EAAQyN,8BAEV7N,EAAOqM,aACL,EACAhM,EACA1D,aAAaa,QAAQC,OAAOyC,yBAItB,KADVG,EAAID,EAAQyO,kCAEV7O,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQ0O,+CAEV9O,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQ2O,uCAEV/O,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQ4O,oBAEVhP,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQ6O,oBAEVjP,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQ8O,iCAEVlP,EAAOyB,WACL,EACApB,EAGN,EAOA1D,aAAaa,QAAQE,gBAAgBa,UAAUqQ,eAAiB,WAC9D,OAA8BhT,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaa,QAAQE,gBAAgBa,UAAU6P,eAAiB,SAAS1O,GACvE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAaa,QAAQE,gBAAgBa,UAAUsP,0BAA4B,WACzE,OACEjS,EAAKkB,QAAQqS,gBAAgBhT,KAAMQ,aAAaa,QAAQC,OAAQ,EACpE,EAOAd,aAAaa,QAAQE,gBAAgBa,UAAU8P,0BAA4B,SAAS3O,GAClF,OAAO9D,EAAKkB,QAAQsS,gBAAgBjT,KAAM,EAAGuD,EAC/C,EAOA/C,aAAaa,QAAQE,gBAAgBa,UAAU8Q,4BAA8B,WAC3E,OAAOlT,KAAKkS,+BAA0B/N,EACxC,EAOA3D,aAAaa,QAAQE,gBAAgBa,UAAU+Q,0BAA4B,WACzE,OAAyC,MAAlC1T,EAAKkB,QAAQyS,SAASpT,KAAM,EACrC,EAOAQ,aAAaa,QAAQE,gBAAgBa,UAAUsQ,8BAAgC,WAC7E,OAA8BjT,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaa,QAAQE,gBAAgBa,UAAU+P,8BAAgC,SAAS5O,GACtF,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAaa,QAAQE,gBAAgBa,UAAUuQ,2CAA6C,WAC1F,OAA8BlT,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaa,QAAQE,gBAAgBa,UAAUgQ,2CAA6C,SAAS7O,GACnG,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAaa,QAAQE,gBAAgBa,UAAUwQ,mCAAqC,WAClF,OAA8BnT,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaa,QAAQE,gBAAgBa,UAAUiQ,mCAAqC,SAAS9O,GAC3F,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAaa,QAAQE,gBAAgBa,UAAUyQ,gBAAkB,WAC/D,OAA8BpT,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaa,QAAQE,gBAAgBa,UAAUkQ,gBAAkB,SAAS/O,GACxE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAaa,QAAQE,gBAAgBa,UAAU0Q,gBAAkB,WAC/D,OAA8BrT,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaa,QAAQE,gBAAgBa,UAAUmQ,gBAAkB,SAAShP,GACxE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAaa,QAAQE,gBAAgBa,UAAU2Q,6BAA+B,WAC5E,OAA8BtT,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaa,QAAQE,gBAAgBa,UAAUoQ,6BAA+B,SAASjP,GACrF,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAaa,QAAQe,UAAUiR,eAAiB,WAC9C,OAA4C5T,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaa,QAAQe,UAAU8H,qBAAuB,WACpD,OAA8BzK,EAAKkB,QAAQ+D,WACvC1E,KAAKqT,iBACX,EAUA7S,aAAaa,QAAQe,UAAUqN,oBAAsB,WACnD,OAAmChQ,EAAKkB,QAAQgE,UAC5C3E,KAAKqT,iBACX,EAOA7S,aAAaa,QAAQe,UAAUsL,eAAiB,SAASnK,GACvD,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaa,QAAQe,UAAUsN,QAAU,WACvC,OAAiDjQ,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC7F,EAOAQ,aAAaa,QAAQe,UAAUuL,QAAU,SAASpK,GAChD,OAAO9D,EAAKkB,QAAQ6H,mBAAmBxI,KAAM,EAAGuD,EAClD,EAOA/C,aAAaa,QAAQe,UAAUyC,WAAa,WAC1C,OAA4CpF,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaa,QAAQe,UAAUS,iBAAmB,WAChD,OAA8BpD,EAAKkB,QAAQ+D,WACvC1E,KAAK6E,aACX,EAUArE,aAAaa,QAAQe,UAAUmC,gBAAkB,WAC/C,OAAmC9E,EAAKkB,QAAQgE,UAC5C3E,KAAK6E,aACX,EAOArE,aAAaa,QAAQe,UAAUsB,WAAa,SAASH,GACnD,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaa,QAAQe,UAAUuN,WAAa,WAC1C,OAA8BlQ,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaa,QAAQe,UAAUwL,WAAa,SAASrK,GACnD,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAaa,QAAQe,UAAUmI,aAAe,WAC5C,OACE9K,EAAKkB,QAAQ2S,wBAAwBtT,KAAMQ,aAAaS,KAAM,EAClE,EAOAT,aAAaa,QAAQe,UAAUmR,aAAe,SAAShQ,GACrD,OAAO9D,EAAKkB,QAAQ6S,wBAAwBxT,KAAM,EAAGuD,EACvD,EAQA/C,aAAaa,QAAQe,UAAUyL,SAAW,SAAS4F,EAAWpL,GAC5D,OAAO5I,EAAKkB,QAAQ+S,0BAA0B1T,KAAM,EAAGyT,EAAWjT,aAAaS,KAAMoH,EACvF,EAOA7H,aAAaa,QAAQe,UAAUuR,eAAiB,WAC9C,OAAO3T,KAAKuT,aAAa,GAC3B,EASA/S,aAAaa,QAAQe,UAAUqI,YAAc,SAAS9C,GACpD,OACIlI,EAAKkB,QAAQiH,YAAY5H,KAAM,EAAG2H,EAClC,KACN,EAOAnH,aAAaa,QAAQe,UAAUwR,cAAgB,WAE7C,OADA5T,KAAKyK,cAAc3C,QACZ9H,IAAK,EASdQ,aAAaa,QAAQe,UAAUuI,cAAgB,SAAShD,GACtD,OACIlI,EAAKkB,QAAQiH,YAAY5H,KAAM,GAAI2H,EACnC,KACN,EAOAnH,aAAaa,QAAQe,UAAUyR,gBAAkB,WAE/C,OADA7T,KAAK2K,gBAAgB7C,QACd9H,IAAK,EAOdQ,aAAaa,QAAQe,UAAUyI,cAAgB,WAC7C,OACEpL,EAAKkB,QAAQ2S,wBAAwBtT,KAAMQ,aAAaa,QAAQC,OAAQ,EAC5E,EAOAd,aAAaa,QAAQe,UAAU0R,cAAgB,SAASvQ,GACtD,OAAO9D,EAAKkB,QAAQ6S,wBAAwBxT,KAAM,EAAGuD,EACvD,EAQA/C,aAAaa,QAAQe,UAAU2L,UAAY,SAAS0F,EAAWpL,GAC7D,OAAO5I,EAAKkB,QAAQ+S,0BAA0B1T,KAAM,EAAGyT,EAAWjT,aAAaa,QAAQC,OAAQ+G,EACjG,EAOA7H,aAAaa,QAAQe,UAAU2R,gBAAkB,WAC/C,OAAO/T,KAAK8T,cAAc,GAC5B,EAOAtT,aAAaa,QAAQe,UAAU0N,YAAc,WAC3C,OAA8BrQ,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaa,QAAQe,UAAU4L,YAAc,SAASzK,GACpD,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAaa,QAAQe,UAAU2N,8CAAgD,WAC7E,OAA8BtQ,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,EAC3E,EAOAQ,aAAaa,QAAQe,UAAU6L,8CAAgD,SAAS1K,GACtF,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,GAAIuD,EAClD,EAOA/C,aAAaa,QAAQe,UAAU4N,sCAAwC,WACrE,OAA8BvQ,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,EAC3E,EAOAQ,aAAaa,QAAQe,UAAU8L,sCAAwC,SAAS3K,GAC9E,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,GAAIuD,EAClD,EAOA/C,aAAaa,QAAQe,UAAU6N,gBAAkB,WAC/C,OAA8BxQ,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,EAC3E,EAOAQ,aAAaa,QAAQe,UAAU+L,gBAAkB,SAAS5K,GACxD,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,GAAIuD,EAClD,EAOA/C,aAAaa,QAAQe,UAAU+I,aAAe,WAC5C,OACE1L,EAAKkB,QAAQqS,gBAAgBhT,KAAMQ,aAAaa,QAAQC,OAAQ,GACpE,EAOAd,aAAaa,QAAQe,UAAUgM,aAAe,SAAS7K,GACrD,OAAO9D,EAAKkB,QAAQsS,gBAAgBjT,KAAM,GAAIuD,EAChD,EAOA/C,aAAaa,QAAQe,UAAU4R,eAAiB,WAC9C,OAAOhU,KAAKoO,kBAAajK,EAC3B,EAOA3D,aAAaa,QAAQe,UAAU6R,aAAe,WAC5C,OAA0C,MAAnCxU,EAAKkB,QAAQyS,SAASpT,KAAM,GACrC,EAOAQ,aAAaa,QAAQe,UAAU+N,kBAAoB,WACjD,OAA+B1Q,EAAKkB,QAAQ0K,2BAA2BrL,KAAM,IAAI,EACnF,EAOAQ,aAAaa,QAAQe,UAAUkM,kBAAoB,SAAS/K,GAC1D,OAAO9D,EAAKkB,QAAQuT,sBAAsBlU,KAAM,GAAIuD,EACtD,EAOA/C,aAAaa,QAAQe,UAAU4E,cAAgB,WAC7C,OAA8BvH,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaa,QAAQe,UAAUoE,cAAgB,SAASjD,GACtD,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAaa,QAAQe,UAAUiO,sBAAwB,WACrD,OAA8B5Q,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,EAC3E,EAOAQ,aAAaa,QAAQe,UAAUmM,sBAAwB,SAAShL,GAC9D,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,GAAIuD,EAClD,EAOA/C,aAAaa,QAAQe,UAAUkO,aAAe,WAC5C,OAA8B7Q,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,EAC3E,EAOAQ,aAAaa,QAAQe,UAAUoM,aAAe,SAASjL,GACrD,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,GAAIuD,EAClD,EAOA/C,aAAaa,QAAQe,UAAUmO,sBAAwB,WACrD,OAA8B9Q,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,EAC3E,EAOAQ,aAAaa,QAAQe,UAAUqM,sBAAwB,SAASlL,GAC9D,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,GAAIuD,EAClD,EAOA/C,aAAaa,QAAQe,UAAU+R,QAAU,WACvC,OAA4C1U,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,GACzF,EAQAQ,aAAaa,QAAQe,UAAUsJ,cAAgB,WAC7C,OAA8BjM,EAAKkB,QAAQ+D,WACvC1E,KAAKmU,UACX,EAUA3T,aAAaa,QAAQe,UAAUoO,aAAe,WAC5C,OAAmC/Q,EAAKkB,QAAQgE,UAC5C3E,KAAKmU,UACX,EAOA3T,aAAaa,QAAQe,UAAUsM,QAAU,SAASnL,GAChD,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,GAAIuD,EACpD,EAOA/C,aAAaa,QAAQe,UAAUqO,aAAe,WAC5C,OAA+BhR,EAAKkB,QAAQ0K,2BAA2BrL,KAAM,IAAI,EACnF,EAOAQ,aAAaa,QAAQe,UAAUuM,aAAe,SAASpL,GACrD,OAAO9D,EAAKkB,QAAQuT,sBAAsBlU,KAAM,GAAIuD,EACtD,EAOA/C,aAAaa,QAAQe,UAAUsO,eAAiB,WAC9C,OAA+BjR,EAAKkB,QAAQ0K,2BAA2BrL,KAAM,IAAI,EACnF,EAOAQ,aAAaa,QAAQe,UAAUwM,eAAiB,SAASrL,GACvD,OAAO9D,EAAKkB,QAAQuT,sBAAsBlU,KAAM,GAAIuD,EACtD,EAOA/C,aAAaa,QAAQe,UAAU0J,oBAAsB,WACnD,OACErM,EAAKkB,QAAQ2S,wBAAwBtT,KAAMQ,aAAaa,QAAQC,OAAQ,GAC5E,EAOAd,aAAaa,QAAQe,UAAUgS,oBAAsB,SAAS7Q,GAC5D,OAAO9D,EAAKkB,QAAQ6S,wBAAwBxT,KAAM,GAAIuD,EACxD,EAQA/C,aAAaa,QAAQe,UAAUyM,gBAAkB,SAAS4E,EAAWpL,GACnE,OAAO5I,EAAKkB,QAAQ+S,0BAA0B1T,KAAM,GAAIyT,EAAWjT,aAAaa,QAAQC,OAAQ+G,EAClG,EAOA7H,aAAaa,QAAQe,UAAUiS,sBAAwB,WACrD,OAAOrU,KAAKoU,oBAAoB,GAClC,EAOA5T,aAAaa,QAAQe,UAAUkS,mBAAqB,WAClD,OAA4C7U,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,GACzF,EAQAQ,aAAaa,QAAQe,UAAU4J,yBAA2B,WACxD,OAA8BvM,EAAKkB,QAAQ+D,WACvC1E,KAAKsU,qBACX,EAUA9T,aAAaa,QAAQe,UAAUuO,wBAA0B,WACvD,OAAmClR,EAAKkB,QAAQgE,UAC5C3E,KAAKsU,qBACX,EAOA9T,aAAaa,QAAQe,UAAU0M,mBAAqB,SAASvL,GAC3D,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,GAAIuD,EACpD,EAOA/C,aAAaa,QAAQe,UAAUmS,iBAAmB,WAChD,OAA4C9U,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,GACzF,EAQAQ,aAAaa,QAAQe,UAAU8J,uBAAyB,WACtD,OAA8BzM,EAAKkB,QAAQ+D,WACvC1E,KAAKuU,mBACX,EAUA/T,aAAaa,QAAQe,UAAUwO,sBAAwB,WACrD,OAAmCnR,EAAKkB,QAAQgE,UAC5C3E,KAAKuU,mBACX,EAOA/T,aAAaa,QAAQe,UAAU2M,iBAAmB,SAASxL,GACzD,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,GAAIuD,EACpD,EASA/C,aAAaa,QAAQe,UAAUgK,+BAAiC,SAASzE,GACvE,OACIlI,EAAKkB,QAAQiH,YAAY5H,KAAM,GAAI2H,EACnC,KACN,EAOAnH,aAAaa,QAAQe,UAAUoS,iCAAmC,WAEhE,OADAxU,KAAKoM,iCAAiCtE,QAC/B9H,IAAK,EASdQ,aAAaa,QAAQe,UAAUkK,iCAAmC,SAAS3E,GACzE,OACIlI,EAAKkB,QAAQiH,YAAY5H,KAAM,GAAI2H,EACnC,KACN,EAOAnH,aAAaa,QAAQe,UAAUqS,mCAAqC,WAElE,OADAzU,KAAKsM,mCAAmCxE,QACjC9H,IAAK,EAOdQ,aAAaa,QAAQe,UAAUyO,gBAAkB,WAC/C,OAA8BpR,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,EAC3E,EAOAQ,aAAaa,QAAQe,UAAU4M,gBAAkB,SAASzL,GACxD,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,GAAIuD,EAClD,EASA/C,aAAaa,QAAQe,UAAUqK,wBAA0B,SAAS9E,GAChE,OACIlI,EAAKkB,QAAQiH,YAAY5H,KAAM,GAAI2H,EACnC,KACN,EAOAnH,aAAaa,QAAQe,UAAUsS,0BAA4B,WAEzD,OADA1U,KAAKyM,0BAA0B3E,QACxB9H,IAAK,EASdQ,aAAaa,QAAQe,UAAUuK,0BAA4B,SAAShF,GAClE,OACIlI,EAAKkB,QAAQiH,YAAY5H,KAAM,GAAI2H,EACnC,KACN,EAOAnH,aAAaa,QAAQe,UAAUuS,4BAA8B,WAE3D,OADA3U,KAAK2M,4BAA4B7E,QAC1B9H,IAAK,EAOdQ,aAAaa,QAAQe,UAAU0O,qBAAuB,WACpD,OAA8BrR,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,EAC3E,EAOAQ,aAAaa,QAAQe,UAAU6M,qBAAuB,SAAS1L,GAC7D,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,GAAIuD,EAClD,EAOA/C,aAAaa,QAAQe,UAAU2O,yBAA2B,WACxD,OAA8BtR,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,EAC3E,EAOAQ,aAAaa,QAAQe,UAAU8M,yBAA2B,SAAS3L,GACjE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,GAAIuD,EAClD,EAOA/C,aAAaa,QAAQe,UAAUwS,aAAe,WAC5C,OAA4CnV,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,GACzF,EAQAQ,aAAaa,QAAQe,UAAU2K,mBAAqB,WAClD,OAA8BtN,EAAKkB,QAAQ+D,WACvC1E,KAAK4U,eACX,EAUApU,aAAaa,QAAQe,UAAU4O,kBAAoB,WACjD,OAAmCvR,EAAKkB,QAAQgE,UAC5C3E,KAAK4U,eACX,EAOApU,aAAaa,QAAQe,UAAU+M,aAAe,SAAS5L,GACrD,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,GAAIuD,EACpD,EAOA/C,aAAaa,QAAQe,UAAU6K,mBAAqB,WAClD,OACExN,EAAKkB,QAAQqS,gBAAgBhT,KAAMQ,aAAaa,QAAQE,gBAAiB,GAC7E,EAOAf,aAAaa,QAAQe,UAAUgN,mBAAqB,SAAS7L,GAC3D,OAAO9D,EAAKkB,QAAQsS,gBAAgBjT,KAAM,GAAIuD,EAChD,EAOA/C,aAAaa,QAAQe,UAAUyS,qBAAuB,WACpD,OAAO7U,KAAKoP,wBAAmBjL,EACjC,EAOA3D,aAAaa,QAAQe,UAAU0S,mBAAqB,WAClD,OAA0C,MAAnCrV,EAAKkB,QAAQyS,SAASpT,KAAM,GACrC,EAOAQ,aAAaa,QAAQe,UAAU2S,YAAc,WAC3C,OAA4CtV,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,GACzF,EAQAQ,aAAaa,QAAQe,UAAU+K,kBAAoB,WACjD,OAA8B1N,EAAKkB,QAAQ+D,WACvC1E,KAAK+U,cACX,EAUAvU,aAAaa,QAAQe,UAAU6O,iBAAmB,WAChD,OAAmCxR,EAAKkB,QAAQgE,UAC5C3E,KAAK+U,cACX,EAOAvU,aAAaa,QAAQe,UAAUiN,YAAc,SAAS9L,GACpD,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,GAAIuD,EACpD,EAOA/C,aAAaa,QAAQe,UAAUiL,mBAAqB,WAClD,OACE5N,EAAKkB,QAAQqS,gBAAgBhT,KAAMQ,aAAamB,WAAY,GAChE,EAOAnB,aAAaa,QAAQe,UAAUkN,mBAAqB,SAAS/L,GAC3D,OAAO9D,EAAKkB,QAAQsS,gBAAgBjT,KAAM,GAAIuD,EAChD,EAOA/C,aAAaa,QAAQe,UAAU4S,qBAAuB,WACpD,OAAOhV,KAAKsP,wBAAmBnL,EACjC,EAOA3D,aAAaa,QAAQe,UAAU6S,mBAAqB,WAClD,OAA0C,MAAnCxV,EAAKkB,QAAQyS,SAASpT,KAAM,GACrC,EAOAQ,aAAaa,QAAQe,UAAUmL,qBAAuB,WACpD,OACE9N,EAAKkB,QAAQqS,gBAAgBhT,KAAMQ,aAAamB,WAAY,GAChE,EAOAnB,aAAaa,QAAQe,UAAUmN,qBAAuB,SAAShM,GAC7D,OAAO9D,EAAKkB,QAAQsS,gBAAgBjT,KAAM,GAAIuD,EAChD,EAOA/C,aAAaa,QAAQe,UAAU8S,uBAAyB,WACtD,OAAOlV,KAAKuP,0BAAqBpL,EACnC,EAOA3D,aAAaa,QAAQe,UAAU+S,qBAAuB,WACpD,OAA0C,MAAnC1V,EAAKkB,QAAQyS,SAASpT,KAAM,GACrC,EAOAQ,aAAaa,QAAQe,UAAUqL,wBAA0B,WACvD,OACEhO,EAAKkB,QAAQ2S,wBAAwBtT,KAAMQ,aAAamB,WAAY,GACxE,EAOAnB,aAAaa,QAAQe,UAAUgT,wBAA0B,SAAS7R,GAChE,OAAO9D,EAAKkB,QAAQ6S,wBAAwBxT,KAAM,GAAIuD,EACxD,EAQA/C,aAAaa,QAAQe,UAAUoN,oBAAsB,SAASiE,EAAWpL,GACvE,OAAO5I,EAAKkB,QAAQ+S,0BAA0B1T,KAAM,GAAIyT,EAAWjT,aAAamB,WAAY0G,EAC9F,EAOA7H,aAAaa,QAAQe,UAAUiT,0BAA4B,WACzD,OAAOrV,KAAKoV,wBAAwB,GACtC,EAMI3V,EAAKkB,QAAQwB,qBAajB3B,aAAagB,IAAIY,UAAUC,SAAW,SAASC,GAC7C,OAAO9B,aAAagB,IAAIa,SAASC,EAAqBtC,KACxD,EAYAQ,aAAagB,IAAIa,SAAW,SAASE,EAAiBC,GACpD,IAAOC,EAAM,CACXG,QAASJ,EAAIK,mBACbyS,OAAQ7V,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAMnD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAagB,IAAIuB,kBAAoB,SAASC,GAC5C,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAagB,IAC3B,OAAOhB,aAAagB,IAAI2B,4BAA4BX,EAAKS,EAC3D,EAUAzC,aAAagB,IAAI2B,4BAA8B,SAASX,EAAKS,GAC3D,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAIkB,WAAWH,GACf,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI+S,UAAUhS,GACd,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAagB,IAAIY,UAAUwB,gBAAkB,WAC3C,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAagB,IAAIuC,wBAAwB/D,KAAM6D,GACxCA,EAAOG,iBAChB,EAUAxD,aAAagB,IAAIuC,wBAA0B,SAASE,EAASJ,GAC3D,IAAIK,OAAIC,GACRD,EAAID,EAAQM,mBACNF,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQuR,cAEV3R,EAAOyB,WACL,EACApB,EAGN,EAOA1D,aAAagB,IAAIY,UAAUyC,WAAa,WACtC,OAA4CpF,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAagB,IAAIY,UAAUS,iBAAmB,WAC5C,OAA8BpD,EAAKkB,QAAQ+D,WACvC1E,KAAK6E,aACX,EAUArE,aAAagB,IAAIY,UAAUmC,gBAAkB,WAC3C,OAAmC9E,EAAKkB,QAAQgE,UAC5C3E,KAAK6E,aACX,EAOArE,aAAagB,IAAIY,UAAUsB,WAAa,SAASH,GAC/C,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAagB,IAAIY,UAAUoT,UAAY,WACrC,OAA8B/V,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAagB,IAAIY,UAAUmT,UAAY,SAAShS,GAC9C,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAaiB,kBAAkBW,UAAUC,SAAW,SAASC,GAC3D,OAAO9B,aAAaiB,kBAAkBY,SAASC,EAAqBtC,KACtE,EAYAQ,aAAaiB,kBAAkBY,SAAW,SAASE,EAAiBC,GAClE,IAAOC,EAAM,CACXgT,KAAMjT,EAAIkT,gBACVC,GAAInT,EAAIoT,cACRC,0BAA2BpW,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACpEiP,uBAAwBhS,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACjEsT,uBAAwBrW,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACjEuT,oBAAqBtW,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAMhE,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAaiB,kBAAkBsB,kBAAoB,SAASC,GAC1D,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAaiB,kBAC3B,OAAOjB,aAAaiB,kBAAkB0B,4BAA4BX,EAAKS,EACzE,EAUAzC,aAAaiB,kBAAkB0B,4BAA8B,SAASX,EAAKS,GACzE,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAIwT,QAAQzS,GACZ,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAIyT,MAAM1S,GACV,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI0T,6BAA6B3S,GACjC,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI0P,0BAA0B3O,GAC9B,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI2T,0BAA0B5S,GAC9B,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI4T,uBAAuB7S,GAC3B,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAaiB,kBAAkBW,UAAUwB,gBAAkB,WACzD,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAaiB,kBAAkBsC,wBAAwB/D,KAAM6D,GACtDA,EAAOG,iBAChB,EAUAxD,aAAaiB,kBAAkBsC,wBAA0B,SAASE,EAASJ,GACzE,IAAIK,OAAIC,GACRD,EAAID,EAAQoS,gBACNhS,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQqS,cACNjS,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQsS,iCAEV1S,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQyN,8BAEV7N,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQuS,8BAEV3S,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQwS,2BAEV5S,EAAOyB,WACL,EACApB,EAGN,EAOA1D,aAAaiB,kBAAkBW,UAAUsU,QAAU,WACjD,OAA4CjX,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaiB,kBAAkBW,UAAUsT,cAAgB,WACvD,OAA8BjW,EAAKkB,QAAQ+D,WACvC1E,KAAK0W,UACX,EAUAlW,aAAaiB,kBAAkBW,UAAUiU,aAAe,WACtD,OAAmC5W,EAAKkB,QAAQgE,UAC5C3E,KAAK0W,UACX,EAOAlW,aAAaiB,kBAAkBW,UAAU4T,QAAU,SAASzS,GAC1D,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaiB,kBAAkBW,UAAUuU,MAAQ,WAC/C,OAA4ClX,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaiB,kBAAkBW,UAAUwT,YAAc,WACrD,OAA8BnW,EAAKkB,QAAQ+D,WACvC1E,KAAK2W,QACX,EAUAnW,aAAaiB,kBAAkBW,UAAUkU,WAAa,WACpD,OAAmC7W,EAAKkB,QAAQgE,UAC5C3E,KAAK2W,QACX,EAOAnW,aAAaiB,kBAAkBW,UAAU6T,MAAQ,SAAS1S,GACxD,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaiB,kBAAkBW,UAAUmU,6BAA+B,WACtE,OAA8B9W,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaiB,kBAAkBW,UAAU8T,6BAA+B,SAAS3S,GAC/E,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAaiB,kBAAkBW,UAAUsP,0BAA4B,WACnE,OAA8BjS,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaiB,kBAAkBW,UAAU8P,0BAA4B,SAAS3O,GAC5E,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAaiB,kBAAkBW,UAAUoU,0BAA4B,WACnE,OAA8B/W,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaiB,kBAAkBW,UAAU+T,0BAA4B,SAAS5S,GAC5E,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAaiB,kBAAkBW,UAAUqU,uBAAyB,WAChE,OAA8BhX,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaiB,kBAAkBW,UAAUgU,uBAAyB,SAAS7S,GACzE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAakB,UAAUU,UAAUC,SAAW,SAASC,GACnD,OAAO9B,aAAakB,UAAUW,SAASC,EAAqBtC,KAC9D,EAYAQ,aAAakB,UAAUW,SAAW,SAASE,EAAiBC,GAC1D,IAAI0B,EAAGzB,EAAM,CACXmU,SAAU1S,EAAI1B,EAAIqU,eAAiBrW,aAAaC,UAAU4B,SAASE,EAAiB2B,GACpF4S,eAAgBtU,EAAIuU,2BAMtB,OAHIxU,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAakB,UAAUqB,kBAAoB,SAASC,GAClD,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAakB,UAC3B,OAAOlB,aAAakB,UAAUyB,4BAA4BX,EAAKS,EACjE,EAUAzC,aAAakB,UAAUyB,4BAA8B,SAASX,EAAKS,GACjE,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAQ,IAAI/C,aAAaC,UAC7BwC,EAAOoD,YAAY9C,EAAM/C,aAAaC,UAAU0C,6BAChDX,EAAIwU,WAAWzT,GACf,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAIyU,kBAAkB1T,GACtB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAakB,UAAUU,UAAUwB,gBAAkB,WACjD,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAakB,UAAUqC,wBAAwB/D,KAAM6D,GAC9CA,EAAOG,iBAChB,EAUAxD,aAAakB,UAAUqC,wBAA0B,SAASE,EAASJ,GACjE,IAAIK,OAAIC,EAEC,OADTD,EAAID,EAAQ4S,eAEVhT,EAAOqM,aACL,EACAhM,EACA1D,aAAaC,UAAUsD,0BAG3BG,EAAID,EAAQiT,0BACN7S,OAAS,GACbR,EAAOS,WACL,EACAJ,EAGN,EAOA1D,aAAakB,UAAUU,UAAUyU,WAAa,WAC5C,OACEpX,EAAKkB,QAAQqS,gBAAgBhT,KAAMQ,aAAaC,UAAW,EAC/D,EAOAD,aAAakB,UAAUU,UAAU4U,WAAa,SAASzT,GACrD,OAAO9D,EAAKkB,QAAQsS,gBAAgBjT,KAAM,EAAGuD,EAC/C,EAOA/C,aAAakB,UAAUU,UAAU+U,aAAe,WAC9C,OAAOnX,KAAKgX,gBAAW7S,EACzB,EAOA3D,aAAakB,UAAUU,UAAUgV,WAAa,WAC5C,OAAyC,MAAlC3X,EAAKkB,QAAQyS,SAASpT,KAAM,EACrC,EAOAQ,aAAakB,UAAUU,UAAUiV,kBAAoB,WACnD,OAA4C5X,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAakB,UAAUU,UAAU2U,wBAA0B,WACzD,OAA8BtX,EAAKkB,QAAQ+D,WACvC1E,KAAKqX,oBACX,EAUA7W,aAAakB,UAAUU,UAAU8U,uBAAyB,WACxD,OAAmCzX,EAAKkB,QAAQgE,UAC5C3E,KAAKqX,oBACX,EAOA7W,aAAakB,UAAUU,UAAU6U,kBAAoB,SAAS1T,GAC5D,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EASA/C,aAAamB,WAAWR,gBAAkB,CAAC,GAIvC1B,EAAKkB,QAAQwB,qBAajB3B,aAAamB,WAAWS,UAAUC,SAAW,SAASC,GACpD,OAAO9B,aAAamB,WAAWU,SAASC,EAAqBtC,KAC/D,EAYAQ,aAAamB,WAAWU,SAAW,SAASE,EAAiBC,GAC3D,IAAOC,EAAM,CACX0H,KAAM1K,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GAC/C8U,GAAI7X,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GAC7CsU,eAAgBrX,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IACzD+U,UAAW9X,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACpDgV,SAAU/X,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACnDiV,WAAYjV,EAAIkV,sBAChBC,SAAUlY,EAAKkB,QAAQ2J,aAAa9H,EAAIoV,cACxCpX,aAAagB,IAAIa,SAAUE,IAM7B,OAHIA,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAamB,WAAWoB,kBAAoB,SAASC,GACnD,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAamB,WAC3B,OAAOnB,aAAamB,WAAWwB,4BAA4BX,EAAKS,EAClE,EAUAzC,aAAamB,WAAWwB,4BAA8B,SAASX,EAAKS,GAClE,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAgEN,EAAOyD,WAC3ElE,EAAImL,QAAQpK,GACZ,MACF,KAAK,EACCA,EAA+BN,EAAO4U,YAC1CrV,EAAIsV,MAAMvU,GACV,MACF,KAAK,EACCA,EAA+BN,EAAO6K,aAC1CtL,EAAIyU,kBAAkB1T,GACtB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIuV,aAAaxU,GACjB,MACF,KAAK,EACCA,EAA+BN,EAAO4U,YAC1CrV,EAAIwV,YAAYzU,GAChB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAIyV,cAAc1U,GAClB,MACF,KAAK,EACCA,EAAQ,IAAI/C,aAAagB,IAC7ByB,EAAOoD,YAAY9C,EAAM/C,aAAagB,IAAI2B,6BAC1CX,EAAI0V,QAAQ3U,GACZ,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAamB,WAAWS,UAAUwB,gBAAkB,WAClD,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAamB,WAAWoC,wBAAwB/D,KAAM6D,GAC/CA,EAAOG,iBAChB,EAUAxD,aAAamB,WAAWoC,wBAA0B,SAASE,EAASJ,GAClE,IAAIK,OAAIC,EAEE,KADVD,EAAID,EAAQyL,YAEV7L,EAAOuD,UACL,EACAlD,GAIM,KADVA,EAAID,EAAQkU,UAEVtU,EAAOuU,WACL,EACAlU,IAGJA,EAAID,EAAQoT,qBACNhT,OAAS,GACbR,EAAOgM,YACL,EACA3L,GAIM,KADVA,EAAID,EAAQoU,iBAEVxU,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQqU,gBAEVzU,EAAOuU,WACL,EACAlU,IAGJA,EAAID,EAAQsU,sBACNlU,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQ2T,eACNvT,OAAS,GACbR,EAAO+L,qBACL,EACA1L,EACA1D,aAAagB,IAAIuC,wBAGvB,EAMAvD,aAAamB,WAAW6W,eAAiB,CACvCC,MAAO,EACPC,QAAS,EACTC,OAAQ,GAOVnY,aAAamB,WAAWS,UAAUsN,QAAU,WAC1C,OAA+DjQ,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC3G,EAOAQ,aAAamB,WAAWS,UAAUuL,QAAU,SAASpK,GACnD,OAAO9D,EAAKkB,QAAQ6H,mBAAmBxI,KAAM,EAAGuD,EAClD,EAOA/C,aAAamB,WAAWS,UAAU+V,MAAQ,WACxC,OAA8B1Y,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAamB,WAAWS,UAAU0V,MAAQ,SAASvU,GACjD,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAamB,WAAWS,UAAUiV,kBAAoB,WACpD,OAA8B5X,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GAC1E,EAOAQ,aAAamB,WAAWS,UAAU6U,kBAAoB,SAAS1T,GAC7D,OAAO9D,EAAKkB,QAAQiY,qBAAqB5Y,KAAM,EAAGuD,EACpD,EAOA/C,aAAamB,WAAWS,UAAUiW,aAAe,WAC/C,OAA8B5Y,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAamB,WAAWS,UAAU2V,aAAe,SAASxU,GACxD,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAamB,WAAWS,UAAUkW,YAAc,WAC9C,OAA8B7Y,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAamB,WAAWS,UAAU4V,YAAc,SAASzU,GACvD,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAamB,WAAWS,UAAUyW,cAAgB,WAChD,OAA4CpZ,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAamB,WAAWS,UAAUsV,oBAAsB,WACtD,OAA8BjY,EAAKkB,QAAQ+D,WACvC1E,KAAK6Y,gBACX,EAUArY,aAAamB,WAAWS,UAAUmW,mBAAqB,WACrD,OAAmC9Y,EAAKkB,QAAQgE,UAC5C3E,KAAK6Y,gBACX,EAOArY,aAAamB,WAAWS,UAAU6V,cAAgB,SAAS1U,GACzD,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAamB,WAAWS,UAAUwV,YAAc,WAC9C,OACEnY,EAAKkB,QAAQ2S,wBAAwBtT,KAAMQ,aAAagB,IAAK,EACjE,EAOAhB,aAAamB,WAAWS,UAAU0W,YAAc,SAASvV,GACvD,OAAO9D,EAAKkB,QAAQ6S,wBAAwBxT,KAAM,EAAGuD,EACvD,EAQA/C,aAAamB,WAAWS,UAAU8V,QAAU,SAASzE,EAAWpL,GAC9D,OAAO5I,EAAKkB,QAAQ+S,0BAA0B1T,KAAM,EAAGyT,EAAWjT,aAAagB,IAAK6G,EACtF,EAOA7H,aAAamB,WAAWS,UAAU2W,cAAgB,WAChD,OAAO/Y,KAAK8Y,YAAY,GAC1B,EAMIrZ,EAAKkB,QAAQwB,qBAajB3B,aAAaoB,QAAQQ,UAAUC,SAAW,SAASC,GACjD,OAAO9B,aAAaoB,QAAQS,SAASC,EAAqBtC,KAC5D,EAYAQ,aAAaoB,QAAQS,SAAW,SAASE,EAAiBC,GACxD,IAAOC,EAAM,CACXG,QAASJ,EAAIK,mBACbmW,UAAWvZ,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACpDyW,OAAQzW,EAAI0W,kBACZC,IAAK1Z,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAC9C4W,cAAe3Z,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACxD6W,YAAa5Z,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACtD8W,eAAgB7Z,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACzD+W,cAAe9Z,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACxDgX,OAAQ/Z,EAAKkB,QAAQ0K,2BAA2B7I,EAAK,GAAG,IAM1D,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAaoB,QAAQmB,kBAAoB,SAASC,GAChD,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAaoB,QAC3B,OAAOpB,aAAaoB,QAAQuB,4BAA4BX,EAAKS,EAC/D,EAUAzC,aAAaoB,QAAQuB,4BAA8B,SAASX,EAAKS,GAC/D,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAIkB,WAAWH,GACf,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIiX,aAAalW,GACjB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAIkX,UAAUnW,GACd,MACF,KAAK,EACCA,EAA+BN,EAAO6K,aAC1CtL,EAAImX,OAAOpW,GACX,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIoX,iBAAiBrW,GACrB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIqX,eAAetW,GACnB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIsX,kBAAkBvW,GACtB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIuX,iBAAiBxW,GACrB,MACF,KAAK,EACCA,EAAgCN,EAAOoL,WAC3C7L,EAAIwX,UAAUzW,GACd,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAaoB,QAAQQ,UAAUwB,gBAAkB,WAC/C,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAaoB,QAAQmC,wBAAwB/D,KAAM6D,GAC5CA,EAAOG,iBAChB,EAUAxD,aAAaoB,QAAQmC,wBAA0B,SAASE,EAASJ,GAC/D,IAAIK,OAAIC,GACRD,EAAID,EAAQM,mBACNF,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQgW,iBAEVpW,EAAOyB,WACL,EACApB,IAGJA,EAAID,EAAQiW,kBACN7V,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQkW,UACN9V,OAAS,GACbR,EAAOgM,YACL,EACA3L,GAIM,KADVA,EAAID,EAAQmW,qBAEVvW,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQoW,mBAEVxW,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQqW,sBAEVzW,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQsW,qBAEV1W,EAAOyB,WACL,EACApB,IAGJA,EAAID,EAAQuW,cAEV3W,EAAOuM,UACL,EACAlM,EAGN,EAOA1D,aAAaoB,QAAQQ,UAAUyC,WAAa,WAC1C,OAA4CpF,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaoB,QAAQQ,UAAUS,iBAAmB,WAChD,OAA8BpD,EAAKkB,QAAQ+D,WACvC1E,KAAK6E,aACX,EAUArE,aAAaoB,QAAQQ,UAAUmC,gBAAkB,WAC/C,OAAmC9E,EAAKkB,QAAQgE,UAC5C3E,KAAK6E,aACX,EAOArE,aAAaoB,QAAQQ,UAAUsB,WAAa,SAASH,GACnD,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaoB,QAAQQ,UAAU6X,aAAe,WAC5C,OAA8Bxa,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaoB,QAAQQ,UAAUqX,aAAe,SAASlW,GACrD,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAaoB,QAAQQ,UAAUqY,UAAY,WACzC,OAA4Chb,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaoB,QAAQQ,UAAU8W,gBAAkB,WAC/C,OAA8BzZ,EAAKkB,QAAQ+D,WACvC1E,KAAKya,YACX,EAUAja,aAAaoB,QAAQQ,UAAU8X,eAAiB,WAC9C,OAAmCza,EAAKkB,QAAQgE,UAC5C3E,KAAKya,YACX,EAOAja,aAAaoB,QAAQQ,UAAUsX,UAAY,SAASnW,GAClD,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaoB,QAAQQ,UAAU+X,OAAS,WACtC,OAA8B1a,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GAC1E,EAOAQ,aAAaoB,QAAQQ,UAAUuX,OAAS,SAASpW,GAC/C,OAAO9D,EAAKkB,QAAQiY,qBAAqB5Y,KAAM,EAAGuD,EACpD,EAOA/C,aAAaoB,QAAQQ,UAAUgY,iBAAmB,WAChD,OAA8B3a,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaoB,QAAQQ,UAAUwX,iBAAmB,SAASrW,GACzD,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAaoB,QAAQQ,UAAUiY,eAAiB,WAC9C,OAA8B5a,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaoB,QAAQQ,UAAUyX,eAAiB,SAAStW,GACvD,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAaoB,QAAQQ,UAAUkY,kBAAoB,WACjD,OAA8B7a,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaoB,QAAQQ,UAAU0X,kBAAoB,SAASvW,GAC1D,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAaoB,QAAQQ,UAAUmY,iBAAmB,WAChD,OAA8B9a,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaoB,QAAQQ,UAAU2X,iBAAmB,SAASxW,GACzD,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAaoB,QAAQQ,UAAUoY,UAAY,WACzC,OAA+B/a,EAAKkB,QAAQ0K,2BAA2BrL,KAAM,GAAG,EAClF,EAOAQ,aAAaoB,QAAQQ,UAAU4X,UAAY,SAASzW,GAClD,OAAO9D,EAAKkB,QAAQuT,sBAAsBlU,KAAM,EAAGuD,EACrD,EASA/C,aAAaqB,MAAMV,gBAAkB,CAAC,EAAE,GAIpC1B,EAAKkB,QAAQwB,qBAajB3B,aAAaqB,MAAMO,UAAUC,SAAW,SAASC,GAC/C,OAAO9B,aAAaqB,MAAMQ,SAASC,EAAqBtC,KAC1D,EAYAQ,aAAaqB,MAAMQ,SAAW,SAASE,EAAiBC,GACtD,IAAOC,EAAM,CACXG,QAASJ,EAAIK,mBACb6X,aAAcjb,EAAKkB,QAAQ2J,aAAa9H,EAAImY,kBAC5Cna,aAAaS,KAAKoB,SAAUE,GAC5BqY,aAAcnb,EAAKkB,QAAQ2J,aAAa9H,EAAIqY,kBAC5Cra,aAAaS,KAAKoB,SAAUE,IAM9B,OAHIA,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAaqB,MAAMkB,kBAAoB,SAASC,GAC9C,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAaqB,MAC3B,OAAOrB,aAAaqB,MAAMsB,4BAA4BX,EAAKS,EAC7D,EAUAzC,aAAaqB,MAAMsB,4BAA8B,SAASX,EAAKS,GAC7D,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAIkB,WAAWH,GACf,MACF,KAAK,EACCA,EAAQ,IAAI/C,aAAaS,KAC7BgC,EAAOoD,YAAY9C,EAAM/C,aAAaS,KAAKkC,6BAC3CX,EAAIsY,YAAYvX,GAChB,MACF,KAAK,EACCA,EAAQ,IAAI/C,aAAaS,KAC7BgC,EAAOoD,YAAY9C,EAAM/C,aAAaS,KAAKkC,6BAC3CX,EAAIuY,YAAYxX,GAChB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAaqB,MAAMO,UAAUwB,gBAAkB,WAC7C,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAaqB,MAAMkC,wBAAwB/D,KAAM6D,GAC1CA,EAAOG,iBAChB,EAUAxD,aAAaqB,MAAMkC,wBAA0B,SAASE,EAASJ,GAC7D,IAAIK,OAAIC,GACRD,EAAID,EAAQM,mBACNF,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQ0W,mBACNtW,OAAS,GACbR,EAAO+L,qBACL,EACA1L,EACA1D,aAAaS,KAAK8C,0BAGtBG,EAAID,EAAQ4W,mBACNxW,OAAS,GACbR,EAAO+L,qBACL,EACA1L,EACA1D,aAAaS,KAAK8C,wBAGxB,EAOAvD,aAAaqB,MAAMO,UAAUyC,WAAa,WACxC,OAA4CpF,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaqB,MAAMO,UAAUS,iBAAmB,WAC9C,OAA8BpD,EAAKkB,QAAQ+D,WACvC1E,KAAK6E,aACX,EAUArE,aAAaqB,MAAMO,UAAUmC,gBAAkB,WAC7C,OAAmC9E,EAAKkB,QAAQgE,UAC5C3E,KAAK6E,aACX,EAOArE,aAAaqB,MAAMO,UAAUsB,WAAa,SAASH,GACjD,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaqB,MAAMO,UAAUuY,gBAAkB,WAC7C,OACElb,EAAKkB,QAAQ2S,wBAAwBtT,KAAMQ,aAAaS,KAAM,EAClE,EAOAT,aAAaqB,MAAMO,UAAU4Y,gBAAkB,SAASzX,GACtD,OAAO9D,EAAKkB,QAAQ6S,wBAAwBxT,KAAM,EAAGuD,EACvD,EAQA/C,aAAaqB,MAAMO,UAAU0Y,YAAc,SAASrH,EAAWpL,GAC7D,OAAO5I,EAAKkB,QAAQ+S,0BAA0B1T,KAAM,EAAGyT,EAAWjT,aAAaS,KAAMoH,EACvF,EAOA7H,aAAaqB,MAAMO,UAAU6Y,kBAAoB,WAC/C,OAAOjb,KAAKgb,gBAAgB,GAC9B,EAOAxa,aAAaqB,MAAMO,UAAUyY,gBAAkB,WAC7C,OACEpb,EAAKkB,QAAQ2S,wBAAwBtT,KAAMQ,aAAaS,KAAM,EAClE,EAOAT,aAAaqB,MAAMO,UAAU8Y,gBAAkB,SAAS3X,GACtD,OAAO9D,EAAKkB,QAAQ6S,wBAAwBxT,KAAM,EAAGuD,EACvD,EAQA/C,aAAaqB,MAAMO,UAAU2Y,YAAc,SAAStH,EAAWpL,GAC7D,OAAO5I,EAAKkB,QAAQ+S,0BAA0B1T,KAAM,EAAGyT,EAAWjT,aAAaS,KAAMoH,EACvF,EAOA7H,aAAaqB,MAAMO,UAAU+Y,kBAAoB,WAC/C,OAAOnb,KAAKkb,gBAAgB,GAC9B,EAMIzb,EAAKkB,QAAQwB,qBAajB3B,aAAasB,kBAAkBM,UAAUC,SAAW,SAASC,GAC3D,OAAO9B,aAAasB,kBAAkBO,SAASC,EAAqBtC,KACtE,EAYAQ,aAAasB,kBAAkBO,SAAW,SAASE,EAAiBC,GAClE,IAAOC,EAAM,CACX2Y,aAAc5Y,EAAI6Y,wBAClBC,aAAc9Y,EAAI+Y,wBAClBC,iBAAkB/b,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GAC3DiZ,gBAAiBhc,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAM5D,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAasB,kBAAkBiB,kBAAoB,SAASC,GAC1D,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAasB,kBAC3B,OAAOtB,aAAasB,kBAAkBqB,4BAA4BX,EAAKS,EACzE,EAUAzC,aAAasB,kBAAkBqB,4BAA8B,SAASX,EAAKS,GACzE,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAIkZ,gBAAgBnY,GACpB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAImZ,gBAAgBpY,GACpB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIoZ,oBAAoBrY,GACxB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIqZ,mBAAmBtY,GACvB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAasB,kBAAkBM,UAAUwB,gBAAkB,WACzD,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAasB,kBAAkBiC,wBAAwB/D,KAAM6D,GACtDA,EAAOG,iBAChB,EAUAxD,aAAasB,kBAAkBiC,wBAA0B,SAASE,EAASJ,GACzE,IAAIK,OAAIC,GACRD,EAAID,EAAQ6X,wBACNzX,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQ8X,wBACN1X,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQ+X,wBAEVnY,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQgY,uBAEVpY,EAAOyB,WACL,EACApB,EAGN,EAOA1D,aAAasB,kBAAkBM,UAAU8Z,gBAAkB,WACzD,OAA4Czc,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAasB,kBAAkBM,UAAUiZ,sBAAwB,WAC/D,OAA8B5b,EAAKkB,QAAQ+D,WACvC1E,KAAKkc,kBACX,EAUA1b,aAAasB,kBAAkBM,UAAU0Z,qBAAuB,WAC9D,OAAmCrc,EAAKkB,QAAQgE,UAC5C3E,KAAKkc,kBACX,EAOA1b,aAAasB,kBAAkBM,UAAUsZ,gBAAkB,SAASnY,GAClE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAasB,kBAAkBM,UAAU+Z,gBAAkB,WACzD,OAA4C1c,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAasB,kBAAkBM,UAAUmZ,sBAAwB,WAC/D,OAA8B9b,EAAKkB,QAAQ+D,WACvC1E,KAAKmc,kBACX,EAUA3b,aAAasB,kBAAkBM,UAAU2Z,qBAAuB,WAC9D,OAAmCtc,EAAKkB,QAAQgE,UAC5C3E,KAAKmc,kBACX,EAOA3b,aAAasB,kBAAkBM,UAAUuZ,gBAAkB,SAASpY,GAClE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAasB,kBAAkBM,UAAU4Z,oBAAsB,WAC7D,OAA8Bvc,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAasB,kBAAkBM,UAAUwZ,oBAAsB,SAASrY,GACtE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAasB,kBAAkBM,UAAU6Z,mBAAqB,WAC5D,OAA8Bxc,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAasB,kBAAkBM,UAAUyZ,mBAAqB,SAAStY,GACrE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EASA/C,aAAauB,YAAYZ,gBAAkB,CAAC,EAAE,GAI1C1B,EAAKkB,QAAQwB,qBAajB3B,aAAauB,YAAYK,UAAUC,SAAW,SAASC,GACrD,OAAO9B,aAAauB,YAAYM,SAASC,EAAqBtC,KAChE,EAYAQ,aAAauB,YAAYM,SAAW,SAASE,EAAiBC,GAC5D,IAAI0B,EAAGzB,EAAM,CACX2Z,SAAUlY,EAAI1B,EAAI6Z,eAAiB7b,aAAauB,YAAYG,IAAIG,SAASE,EAAiB2B,GAC1FoY,cAAe9Z,EAAI+Z,yBACnBC,QAAS/c,EAAKkB,QAAQ2J,aAAa9H,EAAIia,aACvCjc,aAAauB,YAAYE,OAAOI,SAAUE,IAM5C,OAHIA,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAauB,YAAYgB,kBAAoB,SAASC,GACpD,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAauB,YAC3B,OAAOvB,aAAauB,YAAYoB,4BAA4BX,EAAKS,EACnE,EAUAzC,aAAauB,YAAYoB,4BAA8B,SAASX,EAAKS,GACnE,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAQ,IAAI/C,aAAauB,YAAYG,IACzCe,EAAOoD,YAAY9C,EAAM/C,aAAauB,YAAYG,IAAIiB,6BACtDX,EAAIka,WAAWnZ,GACf,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAIma,aAAapZ,GACjB,MACF,KAAK,EACCA,EAAQ,IAAI/C,aAAauB,YAAYE,OACzCgB,EAAOoD,YAAY9C,EAAM/C,aAAauB,YAAYE,OAAOkB,6BACzDX,EAAIoa,OAAOrZ,GACX,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAauB,YAAYK,UAAUwB,gBAAkB,WACnD,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAauB,YAAYgC,wBAAwB/D,KAAM6D,GAChDA,EAAOG,iBAChB,EAUAxD,aAAauB,YAAYgC,wBAA0B,SAASE,EAASJ,GACnE,IAAIK,OAAIC,EAEC,OADTD,EAAID,EAAQoY,eAEVxY,EAAOqM,aACL,EACAhM,EACA1D,aAAauB,YAAYG,IAAI6B,0BAGjCG,EAAID,EAAQ4Y,yBACNxY,OAAS,GACbR,EAAOqD,mBACL,EACAhD,IAGJA,EAAID,EAAQwY,cACNpY,OAAS,GACbR,EAAO+L,qBACL,EACA1L,EACA1D,aAAauB,YAAYE,OAAO8B,wBAGtC,EAMItE,EAAKkB,QAAQwB,qBAajB3B,aAAauB,YAAYC,SAASI,UAAUC,SAAW,SAASC,GAC9D,OAAO9B,aAAauB,YAAYC,SAASK,SAASC,EAAqBtC,KACzE,EAYAQ,aAAauB,YAAYC,SAASK,SAAW,SAASE,EAAiBC,GACrE,IAAI0B,EAAGzB,EAAM,CACX0H,KAAM1K,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GAC/Csa,WAAY5Y,EAAI1B,EAAIua,iBAAmB5c,EAAuB6c,IAAI3a,SAASE,EAAiB2B,GAC5F+Y,SAAUza,EAAI0a,oBACdC,aAAc3a,EAAI4a,wBAClBC,aAAc5d,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAMzD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAauB,YAAYC,SAASe,kBAAoB,SAASC,GAC7D,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAauB,YAAYC,SACvC,OAAOxB,aAAauB,YAAYC,SAASmB,4BAA4BX,EAAKS,EAC5E,EAUAzC,aAAauB,YAAYC,SAASmB,4BAA8B,SAASX,EAAKS,GAC5E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAwEN,EAAOyD,WACnFlE,EAAImL,QAAQpK,GACZ,MACF,KAAK,EACCA,EAAQ,IAAIpD,EAAuB6c,IACvC/Z,EAAOoD,YAAY9C,EAAMpD,EAAuB6c,IAAI7Z,6BACpDX,EAAI8a,aAAa/Z,GACjB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAI+a,YAAYha,GAChB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAIgb,gBAAgBja,GACpB,MACF,KAAK,EACCA,EAA+BN,EAAO4U,YAC1CrV,EAAIib,gBAAgBla,GACpB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAauB,YAAYC,SAASI,UAAUwB,gBAAkB,WAC5D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAauB,YAAYC,SAAS+B,wBAAwB/D,KAAM6D,GACzDA,EAAOG,iBAChB,EAUAxD,aAAauB,YAAYC,SAAS+B,wBAA0B,SAASE,EAASJ,GAC5E,IAAIK,OAAIC,EAEE,KADVD,EAAID,EAAQyL,YAEV7L,EAAOuD,UACL,EACAlD,GAIK,OADTA,EAAID,EAAQ8Y,iBAEVlZ,EAAOqM,aACL,EACAhM,EACA/D,EAAuB6c,IAAIjZ,0BAG/BG,EAAID,EAAQyZ,oBACNrZ,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQ0Z,wBACNtZ,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQ2Z,oBAEV/Z,EAAOuU,WACL,EACAlU,EAGN,EAMA1D,aAAauB,YAAYC,SAAS6b,aAAe,CAC/CC,sBAAuB,EACvBC,iBAAkB,EAClBC,sBAAuB,EACvBC,kBAAmB,EACnBC,oBAAqB,EACrBC,sBAAuB,EACvBC,mBAAoB,EACpBC,sBAAuB,EACvBC,8BAA+B,EAC/BC,sBAAuB,GACvBC,sBAAuB,GACvBC,wBAAyB,GACzBC,wBAAyB,GACzBC,sBAAuB,GACvBC,oBAAqB,GACrBC,uBAAwB,GACxBC,wBAAyB,GACzBC,uBAAwB,GACxBC,qBAAsB,GACtBC,eAAgB,GAChBC,oBAAqB,GACrBC,qBAAsB,GACtBC,YAAa,GACbC,sBAAuB,GACvBC,uBAAwB,GACxBC,uBAAwB,GACxBC,yBAA0B,GAC1BC,4BAA6B,GAC7BC,0BAA2B,GAC3BC,gCAAiC,GACjCC,iBAAkB,GAClBC,wBAAyB,GACzBC,yBAA0B,GAC1BC,wBAAyB,GACzBC,0BAA2B,GAC3BC,wBAAyB,GACzBC,0BAA2B,GAC3BC,+BAAgC,GAChCC,yBAA0B,GAC1BC,2BAA4B,GAC5BC,4BAA6B,IAO/B9f,aAAauB,YAAYC,SAASI,UAAUsN,QAAU,WACpD,OAAuEjQ,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EACnH,EAOAQ,aAAauB,YAAYC,SAASI,UAAUuL,QAAU,SAASpK,GAC7D,OAAO9D,EAAKkB,QAAQ6H,mBAAmBxI,KAAM,EAAGuD,EAClD,EAOA/C,aAAauB,YAAYC,SAASI,UAAU2a,aAAe,WACzD,OACEtd,EAAKkB,QAAQqS,gBAAgBhT,KAAMG,EAAuB6c,IAAK,EACnE,EAOAxc,aAAauB,YAAYC,SAASI,UAAUkb,aAAe,SAAS/Z,GAClE,OAAO9D,EAAKkB,QAAQsS,gBAAgBjT,KAAM,EAAGuD,EAC/C,EAOA/C,aAAauB,YAAYC,SAASI,UAAUme,eAAiB,WAC3D,OAAOvgB,KAAKsd,kBAAanZ,EAC3B,EAOA3D,aAAauB,YAAYC,SAASI,UAAUoe,aAAe,WACzD,OAAyC,MAAlC/gB,EAAKkB,QAAQyS,SAASpT,KAAM,EACrC,EAOAQ,aAAauB,YAAYC,SAASI,UAAUqe,YAAc,WACxD,OAA4ChhB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAauB,YAAYC,SAASI,UAAU8a,kBAAoB,WAC9D,OAA8Bzd,EAAKkB,QAAQ+D,WACvC1E,KAAKygB,cACX,EAUAjgB,aAAauB,YAAYC,SAASI,UAAUsb,iBAAmB,WAC7D,OAAmCje,EAAKkB,QAAQgE,UAC5C3E,KAAKygB,cACX,EAOAjgB,aAAauB,YAAYC,SAASI,UAAUmb,YAAc,SAASha,GACjE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAauB,YAAYC,SAASI,UAAUse,gBAAkB,WAC5D,OAA4CjhB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAauB,YAAYC,SAASI,UAAUgb,sBAAwB,WAClE,OAA8B3d,EAAKkB,QAAQ+D,WACvC1E,KAAK0gB,kBACX,EAUAlgB,aAAauB,YAAYC,SAASI,UAAUub,qBAAuB,WACjE,OAAmCle,EAAKkB,QAAQgE,UAC5C3E,KAAK0gB,kBACX,EAOAlgB,aAAauB,YAAYC,SAASI,UAAUob,gBAAkB,SAASja,GACrE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAauB,YAAYC,SAASI,UAAUwb,gBAAkB,WAC5D,OAA8Bne,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAauB,YAAYC,SAASI,UAAUqb,gBAAkB,SAASla,GACrE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EASA/C,aAAauB,YAAYE,OAAOd,gBAAkB,CAAC,IAI/C1B,EAAKkB,QAAQwB,qBAajB3B,aAAauB,YAAYE,OAAOG,UAAUC,SAAW,SAASC,GAC5D,OAAO9B,aAAauB,YAAYE,OAAOI,SAASC,EAAqBtC,KACvE,EAYAQ,aAAauB,YAAYE,OAAOI,SAAW,SAASE,EAAiBC,GACnE,IAAOC,EAAM,CACXke,IAAKlhB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GAC9Coe,IAAKnhB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GAC9Cqe,YAAaphB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACtDse,aAAcrhB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,GAAI,IACxDue,eAAgBthB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,GAAI,GAC1Dwe,eAAgBvhB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,GAAI,GAC1Dye,uBAAwBxhB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,GAAI,GAClE0e,4BAA6BzhB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,GAAI,GACvE2e,8BAA+B1hB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,GAAI,GACzEiG,WAAYhJ,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,GAAI,GACtD4e,uBAAwB3hB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,GAAI,GAClE6e,QAAS7e,EAAI8e,mBACbC,iBAAkB9hB,EAAKkB,QAAQ2J,aAAa9H,EAAIgf,sBAChDhhB,aAAasB,kBAAkBO,SAAUE,IAM3C,OAHIA,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAauB,YAAYE,OAAOc,kBAAoB,SAASC,GAC3D,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAauB,YAAYE,OACvC,OAAOzB,aAAauB,YAAYE,OAAOkB,4BAA4BX,EAAKS,EAC1E,EAUAzC,aAAauB,YAAYE,OAAOkB,4BAA8B,SAASX,EAAKS,GAC1E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAA+BN,EAAOiC,YAC1C1C,EAAIif,OAAOle,GACX,MACF,KAAK,EACCA,EAA8DN,EAAOyD,WACzElE,EAAIkf,OAAOne,GACX,MACF,KAAK,EACCA,EAAwEN,EAAOyD,WACnFlE,EAAImf,eAAepe,GACnB,MACF,KAAK,GACCA,EAA+BN,EAAO6K,aAC1CtL,EAAIof,gBAAgBre,GACpB,MACF,KAAK,GACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIqf,kBAAkBte,GACtB,MACF,KAAK,GACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIsf,kBAAkBve,GACtB,MACF,KAAK,GACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIuf,0BAA0Bxe,GAC9B,MACF,KAAK,GACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIwf,+BAA+Bze,GACnC,MACF,KAAK,GACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIyf,iCAAiC1e,GACrC,MACF,KAAK,GACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI0G,cAAc3F,GAClB,MACF,KAAK,GACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI0f,0BAA0B3e,GAC9B,MACF,KAAK,GACCA,EAAoCN,EAAOO,YAC/ChB,EAAI2f,WAAW5e,GACf,MACF,KAAK,GACCA,EAAQ,IAAI/C,aAAasB,kBAC7BmB,EAAOoD,YAAY9C,EAAM/C,aAAasB,kBAAkBqB,6BACxDX,EAAI4f,gBAAgB7e,GACpB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAauB,YAAYE,OAAOG,UAAUwB,gBAAkB,WAC1D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAauB,YAAYE,OAAO8B,wBAAwB/D,KAAM6D,GACvDA,EAAOG,iBAChB,EAUAxD,aAAauB,YAAYE,OAAO8B,wBAA0B,SAASE,EAASJ,GAC1E,IAAIK,OAAIC,EAEE,KADVD,EAAID,EAAQoe,WAEVxe,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQqe,WAEVze,EAAOuD,UACL,EACAlD,GAIM,KADVA,EAAID,EAAQse,mBAEV1e,EAAOuD,UACL,EACAlD,IAGJA,EAAID,EAAQue,mBACNne,OAAS,GACbR,EAAOgM,YACL,GACA3L,GAIM,KADVA,EAAID,EAAQwe,sBAEV5e,EAAOyB,WACL,GACApB,GAIM,KADVA,EAAID,EAAQye,sBAEV7e,EAAOyB,WACL,GACApB,GAIM,KADVA,EAAID,EAAQ0e,8BAEV9e,EAAOyB,WACL,GACApB,GAIM,KADVA,EAAID,EAAQ2e,mCAEV/e,EAAOyB,WACL,GACApB,GAIM,KADVA,EAAID,EAAQ4e,qCAEVhf,EAAOyB,WACL,GACApB,GAIM,KADVA,EAAID,EAAQuF,kBAEV3F,EAAOyB,WACL,GACApB,GAIM,KADVA,EAAID,EAAQ6e,8BAEVjf,EAAOyB,WACL,GACApB,IAGJA,EAAID,EAAQ8e,mBACN1e,OAAS,GACbR,EAAOS,WACL,GACAJ,IAGJA,EAAID,EAAQud,uBACNnd,OAAS,GACbR,EAAO+L,qBACL,GACA1L,EACA1D,aAAasB,kBAAkBiC,wBAGrC,EAMAvD,aAAauB,YAAYE,OAAOwJ,KAAO,CACrCuX,OAAQ,EACRC,OAAQ,GAMVziB,aAAauB,YAAYE,OAAOihB,eAAiB,CAC/CC,QAAS,EACTC,QAAS,EACTC,OAAQ,EACRC,qBAAsB,EACtBC,cAAe,EACfC,qBAAsB,EACtBC,gBAAiB,EACjBC,gBAAiB,EACjBC,kBAAmB,EACnBC,eAAgB,EAChBC,cAAe,GACfC,YAAa,GACbC,oBAAqB,GACrBC,QAAS,GACTC,gBAAiB,GACjBC,aAAc,IAOhB1jB,aAAauB,YAAYE,OAAOG,UAAUigB,OAAS,WACjD,OAA8B5iB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAauB,YAAYE,OAAOG,UAAUqf,OAAS,SAASle,GAC1D,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAauB,YAAYE,OAAOG,UAAUkgB,OAAS,WACjD,OAA6D7iB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EACzG,EAOAQ,aAAauB,YAAYE,OAAOG,UAAUsf,OAAS,SAASne,GAC1D,OAAO9D,EAAKkB,QAAQ6H,mBAAmBxI,KAAM,EAAGuD,EAClD,EAOA/C,aAAauB,YAAYE,OAAOG,UAAUmgB,eAAiB,WACzD,OAAuE9iB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EACnH,EAOAQ,aAAauB,YAAYE,OAAOG,UAAUuf,eAAiB,SAASpe,GAClE,OAAO9D,EAAKkB,QAAQ6H,mBAAmBxI,KAAM,EAAGuD,EAClD,EAOA/C,aAAauB,YAAYE,OAAOG,UAAUogB,gBAAkB,WAC1D,OAA8B/iB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,GAC3E,EAOAQ,aAAauB,YAAYE,OAAOG,UAAUwf,gBAAkB,SAASre,GACnE,OAAO9D,EAAKkB,QAAQiY,qBAAqB5Y,KAAM,GAAIuD,EACrD,EAOA/C,aAAauB,YAAYE,OAAOG,UAAUqgB,kBAAoB,WAC5D,OAA8BhjB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,EAC3E,EAOAQ,aAAauB,YAAYE,OAAOG,UAAUyf,kBAAoB,SAASte,GACrE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,GAAIuD,EAClD,EAOA/C,aAAauB,YAAYE,OAAOG,UAAUsgB,kBAAoB,WAC5D,OAA8BjjB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,EAC3E,EAOAQ,aAAauB,YAAYE,OAAOG,UAAU0f,kBAAoB,SAASve,GACrE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,GAAIuD,EAClD,EAOA/C,aAAauB,YAAYE,OAAOG,UAAUugB,0BAA4B,WACpE,OAA8BljB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,EAC3E,EAOAQ,aAAauB,YAAYE,OAAOG,UAAU2f,0BAA4B,SAASxe,GAC7E,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,GAAIuD,EAClD,EAOA/C,aAAauB,YAAYE,OAAOG,UAAUwgB,+BAAiC,WACzE,OAA8BnjB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,EAC3E,EAOAQ,aAAauB,YAAYE,OAAOG,UAAU4f,+BAAiC,SAASze,GAClF,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,GAAIuD,EAClD,EAOA/C,aAAauB,YAAYE,OAAOG,UAAUygB,iCAAmC,WAC3E,OAA8BpjB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,EAC3E,EAOAQ,aAAauB,YAAYE,OAAOG,UAAU6f,iCAAmC,SAAS1e,GACpF,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,GAAIuD,EAClD,EAOA/C,aAAauB,YAAYE,OAAOG,UAAUoH,cAAgB,WACxD,OAA8B/J,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,EAC3E,EAOAQ,aAAauB,YAAYE,OAAOG,UAAU8G,cAAgB,SAAS3F,GACjE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,GAAIuD,EAClD,EAOA/C,aAAauB,YAAYE,OAAOG,UAAU0gB,0BAA4B,WACpE,OAA8BrjB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,EAC3E,EAOAQ,aAAauB,YAAYE,OAAOG,UAAU8f,0BAA4B,SAAS3e,GAC7E,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,GAAIuD,EAClD,EAOA/C,aAAauB,YAAYE,OAAOG,UAAU+hB,WAAa,WACrD,OAA4C1kB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,GACzF,EAQAQ,aAAauB,YAAYE,OAAOG,UAAUkf,iBAAmB,WAC3D,OAA8B7hB,EAAKkB,QAAQ+D,WACvC1E,KAAKmkB,aACX,EAUA3jB,aAAauB,YAAYE,OAAOG,UAAU2gB,gBAAkB,WAC1D,OAAmCtjB,EAAKkB,QAAQgE,UAC5C3E,KAAKmkB,aACX,EAOA3jB,aAAauB,YAAYE,OAAOG,UAAU+f,WAAa,SAAS5e,GAC9D,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,GAAIuD,EACpD,EAOA/C,aAAauB,YAAYE,OAAOG,UAAUof,oBAAsB,WAC9D,OACE/hB,EAAKkB,QAAQ2S,wBAAwBtT,KAAMQ,aAAasB,kBAAmB,GAC/E,EAOAtB,aAAauB,YAAYE,OAAOG,UAAUgiB,oBAAsB,SAAS7gB,GACvE,OAAO9D,EAAKkB,QAAQ6S,wBAAwBxT,KAAM,GAAIuD,EACxD,EAQA/C,aAAauB,YAAYE,OAAOG,UAAUggB,gBAAkB,SAAS3O,EAAWpL,GAC9E,OAAO5I,EAAKkB,QAAQ+S,0BAA0B1T,KAAM,GAAIyT,EAAWjT,aAAasB,kBAAmBuG,EACrG,EAOA7H,aAAauB,YAAYE,OAAOG,UAAUiiB,sBAAwB,WAChE,OAAOrkB,KAAKokB,oBAAoB,GAClC,EASA5jB,aAAauB,YAAYG,IAAIf,gBAAkB,CAAC,EAAE,IAI9C1B,EAAKkB,QAAQwB,qBAajB3B,aAAauB,YAAYG,IAAIE,UAAUC,SAAW,SAASC,GACzD,OAAO9B,aAAauB,YAAYG,IAAIG,SAASC,EAAqBtC,KACpE,EAYAQ,aAAauB,YAAYG,IAAIG,SAAW,SAASE,EAAiBC,GAChE,IAAOC,EAAM,CACX6hB,cAAe9hB,EAAI+hB,yBACnBC,YAAa/kB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACtDiiB,aAAcjiB,EAAIkiB,wBAClBC,WAAYllB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACrDoiB,UAAWnlB,EAAKkB,QAAQ2J,aAAa9H,EAAIqiB,eACzCrkB,aAAakB,UAAUW,SAAUE,GACjCuiB,KAAMtiB,EAAIuiB,gBACVC,aAAcvlB,EAAKkB,QAAQ2J,aAAa9H,EAAIyiB,kBAC5CzkB,aAAauB,YAAYC,SAASK,SAAUE,GAC5C2iB,QAAS1iB,EAAI2iB,mBACbC,UAAW3lB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,GAAI,GACrD6iB,SAAU5lB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,GAAI,IAMtD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAauB,YAAYG,IAAIa,kBAAoB,SAASC,GACxD,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAauB,YAAYG,IACvC,OAAO1B,aAAauB,YAAYG,IAAIiB,4BAA4BX,EAAKS,EACvE,EAUAzC,aAAauB,YAAYG,IAAIiB,4BAA8B,SAASX,EAAKS,GACvE,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI8iB,iBAAiB/hB,GACrB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI+iB,eAAehiB,GACnB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAIgjB,gBAAgBjiB,GACpB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIijB,cAAcliB,GAClB,MACF,KAAK,EACCA,EAAQ,IAAI/C,aAAakB,UAC7BuB,EAAOoD,YAAY9C,EAAM/C,aAAakB,UAAUyB,6BAChDX,EAAIkjB,SAASniB,GACb,MACF,KAAK,GACCA,EAAoCN,EAAOO,YAC/ChB,EAAImjB,QAAQpiB,GACZ,MACF,KAAK,GACCA,EAAQ,IAAI/C,aAAauB,YAAYC,SACzCiB,EAAOoD,YAAY9C,EAAM/C,aAAauB,YAAYC,SAASmB,6BAC3DX,EAAIojB,YAAYriB,GAChB,MACF,KAAK,GACCA,EAAoCN,EAAOO,YAC/ChB,EAAIqjB,WAAWtiB,GACf,MACF,KAAK,GACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIsjB,aAAaviB,GACjB,MACF,KAAK,GACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIujB,YAAYxiB,GAChB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAauB,YAAYG,IAAIE,UAAUwB,gBAAkB,WACvD,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAauB,YAAYG,IAAI6B,wBAAwB/D,KAAM6D,GACpDA,EAAOG,iBAChB,EAUAxD,aAAauB,YAAYG,IAAI6B,wBAA0B,SAASE,EAASJ,GACvE,IAAIK,OAAIC,GACRD,EAAID,EAAQ+hB,yBACN3hB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQgiB,mBAEVpiB,EAAOyB,WACL,EACApB,IAGJA,EAAID,EAAQiiB,wBACN7hB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQkiB,kBAEVtiB,EAAOyB,WACL,EACApB,IAGJA,EAAID,EAAQ4gB,gBACNxgB,OAAS,GACbR,EAAO+L,qBACL,EACA1L,EACA1D,aAAakB,UAAUqC,0BAG3BG,EAAID,EAAQmiB,gBACN/hB,OAAS,GACbR,EAAOS,WACL,GACAJ,IAGJA,EAAID,EAAQghB,mBACN5gB,OAAS,GACbR,EAAO+L,qBACL,GACA1L,EACA1D,aAAauB,YAAYC,SAAS+B,0BAGtCG,EAAID,EAAQoiB,mBACNhiB,OAAS,GACbR,EAAOS,WACL,GACAJ,GAIM,KADVA,EAAID,EAAQqiB,iBAEVziB,EAAOyB,WACL,GACApB,GAIM,KADVA,EAAID,EAAQsiB,gBAEV1iB,EAAOyB,WACL,GACApB,EAGN,EAOA1D,aAAauB,YAAYG,IAAIE,UAAUokB,iBAAmB,WACxD,OAA4C/mB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAauB,YAAYG,IAAIE,UAAUmiB,uBAAyB,WAC9D,OAA8B9kB,EAAKkB,QAAQ+D,WACvC1E,KAAKwmB,mBACX,EAUAhmB,aAAauB,YAAYG,IAAIE,UAAU4jB,sBAAwB,WAC7D,OAAmCvmB,EAAKkB,QAAQgE,UAC5C3E,KAAKwmB,mBACX,EAOAhmB,aAAauB,YAAYG,IAAIE,UAAUkjB,iBAAmB,SAAS/hB,GACjE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAauB,YAAYG,IAAIE,UAAU6jB,eAAiB,WACtD,OAA8BxmB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAauB,YAAYG,IAAIE,UAAUmjB,eAAiB,SAAShiB,GAC/D,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAauB,YAAYG,IAAIE,UAAUqkB,gBAAkB,WACvD,OAA4ChnB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAauB,YAAYG,IAAIE,UAAUsiB,sBAAwB,WAC7D,OAA8BjlB,EAAKkB,QAAQ+D,WACvC1E,KAAKymB,kBACX,EAUAjmB,aAAauB,YAAYG,IAAIE,UAAU8jB,qBAAuB,WAC5D,OAAmCzmB,EAAKkB,QAAQgE,UAC5C3E,KAAKymB,kBACX,EAOAjmB,aAAauB,YAAYG,IAAIE,UAAUojB,gBAAkB,SAASjiB,GAChE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAauB,YAAYG,IAAIE,UAAU+jB,cAAgB,WACrD,OAA8B1mB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAauB,YAAYG,IAAIE,UAAUqjB,cAAgB,SAASliB,GAC9D,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAauB,YAAYG,IAAIE,UAAUyiB,aAAe,WACpD,OACEplB,EAAKkB,QAAQ2S,wBAAwBtT,KAAMQ,aAAakB,UAAW,EACvE,EAOAlB,aAAauB,YAAYG,IAAIE,UAAUskB,aAAe,SAASnjB,GAC7D,OAAO9D,EAAKkB,QAAQ6S,wBAAwBxT,KAAM,EAAGuD,EACvD,EAQA/C,aAAauB,YAAYG,IAAIE,UAAUsjB,SAAW,SAASjS,EAAWpL,GACpE,OAAO5I,EAAKkB,QAAQ+S,0BAA0B1T,KAAM,EAAGyT,EAAWjT,aAAakB,UAAW2G,EAC5F,EAOA7H,aAAauB,YAAYG,IAAIE,UAAUukB,eAAiB,WACtD,OAAO3mB,KAAK0mB,aAAa,GAC3B,EAOAlmB,aAAauB,YAAYG,IAAIE,UAAUwkB,QAAU,WAC/C,OAA4CnnB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,GACzF,EAQAQ,aAAauB,YAAYG,IAAIE,UAAU2iB,cAAgB,WACrD,OAA8BtlB,EAAKkB,QAAQ+D,WACvC1E,KAAK4mB,UACX,EAUApmB,aAAauB,YAAYG,IAAIE,UAAUgkB,aAAe,WACpD,OAAmC3mB,EAAKkB,QAAQgE,UAC5C3E,KAAK4mB,UACX,EAOApmB,aAAauB,YAAYG,IAAIE,UAAUujB,QAAU,SAASpiB,GACxD,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,GAAIuD,EACpD,EAOA/C,aAAauB,YAAYG,IAAIE,UAAU6iB,gBAAkB,WACvD,OACExlB,EAAKkB,QAAQ2S,wBAAwBtT,KAAMQ,aAAauB,YAAYC,SAAU,GAClF,EAOAxB,aAAauB,YAAYG,IAAIE,UAAUykB,gBAAkB,SAAStjB,GAChE,OAAO9D,EAAKkB,QAAQ6S,wBAAwBxT,KAAM,GAAIuD,EACxD,EAQA/C,aAAauB,YAAYG,IAAIE,UAAUwjB,YAAc,SAASnS,EAAWpL,GACvE,OAAO5I,EAAKkB,QAAQ+S,0BAA0B1T,KAAM,GAAIyT,EAAWjT,aAAauB,YAAYC,SAAUqG,EACxG,EAOA7H,aAAauB,YAAYG,IAAIE,UAAU0kB,kBAAoB,WACzD,OAAO9mB,KAAK6mB,gBAAgB,GAC9B,EAOArmB,aAAauB,YAAYG,IAAIE,UAAU2kB,WAAa,WAClD,OAA4CtnB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,GACzF,EAQAQ,aAAauB,YAAYG,IAAIE,UAAU+iB,iBAAmB,WACxD,OAA8B1lB,EAAKkB,QAAQ+D,WACvC1E,KAAK+mB,aACX,EAUAvmB,aAAauB,YAAYG,IAAIE,UAAUikB,gBAAkB,WACvD,OAAmC5mB,EAAKkB,QAAQgE,UAC5C3E,KAAK+mB,aACX,EAOAvmB,aAAauB,YAAYG,IAAIE,UAAUyjB,WAAa,SAAStiB,GAC3D,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,GAAIuD,EACpD,EAOA/C,aAAauB,YAAYG,IAAIE,UAAUkkB,aAAe,WACpD,OAA8B7mB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,EAC3E,EAOAQ,aAAauB,YAAYG,IAAIE,UAAU0jB,aAAe,SAASviB,GAC7D,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,GAAIuD,EAClD,EAOA/C,aAAauB,YAAYG,IAAIE,UAAUmkB,YAAc,WACnD,OAA8B9mB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,EAC3E,EAOAQ,aAAauB,YAAYG,IAAIE,UAAU2jB,YAAc,SAASxiB,GAC5D,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,GAAIuD,EAClD,EAOA/C,aAAauB,YAAYK,UAAUia,WAAa,WAC9C,OACE5c,EAAKkB,QAAQqS,gBAAgBhT,KAAMQ,aAAauB,YAAYG,IAAK,EACrE,EAOA1B,aAAauB,YAAYK,UAAUsa,WAAa,SAASnZ,GACvD,OAAO9D,EAAKkB,QAAQsS,gBAAgBjT,KAAM,EAAGuD,EAC/C,EAOA/C,aAAauB,YAAYK,UAAU4kB,aAAe,WAChD,OAAOhnB,KAAK0c,gBAAWvY,EACzB,EAOA3D,aAAauB,YAAYK,UAAU6kB,WAAa,WAC9C,OAAyC,MAAlCxnB,EAAKkB,QAAQyS,SAASpT,KAAM,EACrC,EAOAQ,aAAauB,YAAYK,UAAU8kB,iBAAmB,WACpD,OAA2DznB,EAAKkB,QAAQqH,iBAAiBhI,KAAM,EACjG,EAQAQ,aAAauB,YAAYK,UAAUma,uBAAyB,WAC1D,OAAsC9c,EAAKkB,QAAQsH,eAC/CjI,KAAKknB,mBACX,EAUA1mB,aAAauB,YAAYK,UAAUya,sBAAwB,WACzD,OAA2Cpd,EAAKkB,QAAQuH,cACpDlI,KAAKknB,mBACX,EAOA1mB,aAAauB,YAAYK,UAAU+kB,iBAAmB,SAAS5jB,GAC7D,OAAO9D,EAAKkB,QAAQyH,SAASpI,KAAM,EAAGuD,GAAS,GACjD,EAQA/C,aAAauB,YAAYK,UAAUua,aAAe,SAASpZ,EAAO8E,GAChE,OAAO5I,EAAKkB,QAAQ2H,mBAAmBtI,KAAM,EAAGuD,EAAO8E,EACzD,EAOA7H,aAAauB,YAAYK,UAAUglB,mBAAqB,WACtD,OAAOpnB,KAAKmnB,iBAAiB,GAC/B,EAOA3mB,aAAauB,YAAYK,UAAUqa,WAAa,WAC9C,OACEhd,EAAKkB,QAAQ2S,wBAAwBtT,KAAMQ,aAAauB,YAAYE,OAAQ,EAChF,EAOAzB,aAAauB,YAAYK,UAAUilB,WAAa,SAAS9jB,GACvD,OAAO9D,EAAKkB,QAAQ6S,wBAAwBxT,KAAM,EAAGuD,EACvD,EAQA/C,aAAauB,YAAYK,UAAUwa,OAAS,SAASnJ,EAAWpL,GAC9D,OAAO5I,EAAKkB,QAAQ+S,0BAA0B1T,KAAM,EAAGyT,EAAWjT,aAAauB,YAAYE,OAAQoG,EACrG,EAOA7H,aAAauB,YAAYK,UAAUklB,aAAe,WAChD,OAAOtnB,KAAKqnB,WAAW,GACzB,EAMA7mB,aAAa+mB,YAAc,CACzBC,OAAQ,EACRC,WAAY,EACZC,SAAU,GAGZ/nB,EAAKS,OAAOC,OAAOsnB,EAASnnB,a,gBCt1O5B,IAAIf,EAAOC,EAAQ,KACfC,EAAOF,EACPG,EACqB,oBAAfC,YAA8BA,YACnB,oBAAXC,QAA0BA,aACf,IAAXF,GAA0BA,GACjB,oBAATG,MAAwBA,MAC/B,WAAc,OAAOC,IAAM,EAAGC,KAAK,OACpCC,SAAS,cAATA,GAEE0nB,EAAeloB,EAAQ,IAC3BC,EAAKS,OAAOC,OAAOC,MAAOsnB,GAC1BjoB,EAAKY,aAAa,qCAAsC,KAAMX,GAC9DD,EAAKY,aAAa,+CAAgD,KAAMX,GACxED,EAAKY,aAAa,qCAAsC,KAAMX,GAC9DD,EAAKY,aAAa,oCAAqC,KAAMX,GAW7DY,aAAaqnB,sBAAwB,SAASnnB,GAC5CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAaqnB,sBAAuBpoB,EAAKkB,SACnDhB,EAAKmB,QAAUC,WAKjBP,aAAaqnB,sBAAsB7mB,YAAc,sCAYnDR,aAAasnB,sBAAwB,SAASpnB,GAC5CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAasnB,sBAAuBroB,EAAKkB,SACnDhB,EAAKmB,QAAUC,WAKjBP,aAAasnB,sBAAsB9mB,YAAc,sCAYnDR,aAAaunB,qBAAuB,SAASrnB,GAC3CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAaunB,qBAAsBtoB,EAAKkB,SAClDhB,EAAKmB,QAAUC,WAKjBP,aAAaunB,qBAAqB/mB,YAAc,qCAYlDR,aAAawnB,gCAAkC,SAAStnB,GACtDjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAGF,aAAawnB,gCAAgC7mB,gBAAiB,KAC/G,EACAxB,EAAKkB,SAASL,aAAawnB,gCAAiCvoB,EAAKkB,SAC7DhB,EAAKmB,QAAUC,WAKjBP,aAAawnB,gCAAgChnB,YAAc,gDAKzDvB,EAAKkB,QAAQwB,qBAajB3B,aAAaqnB,sBAAsBzlB,UAAUC,SAAW,SAASC,GAC/D,OAAO9B,aAAaqnB,sBAAsBxlB,SAASC,EAAqBtC,KAC1E,EAYAQ,aAAaqnB,sBAAsBxlB,SAAW,SAASE,EAAiBC,GACtE,IAAOC,EAAM,CACXwlB,aAAczlB,EAAI0lB,wBAClBC,eAAgB3lB,EAAI4lB,0BACpBje,KAAM1K,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAMjD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAaqnB,sBAAsB9kB,kBAAoB,SAASC,GAC9D,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAaqnB,sBAC3B,OAAOrnB,aAAaqnB,sBAAsB1kB,4BAA4BX,EAAKS,EAC7E,EAUAzC,aAAaqnB,sBAAsB1kB,4BAA8B,SAASX,EAAKS,GAC7E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAI8lB,kBAAkB/kB,GACtB,MACF,KAAK,EACCA,EAAkDN,EAAOyD,WAC7DlE,EAAImL,QAAQpK,GACZ,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAaqnB,sBAAsBzlB,UAAUwB,gBAAkB,WAC7D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAaqnB,sBAAsB9jB,wBAAwB/D,KAAM6D,GAC1DA,EAAOG,iBAChB,EAUAxD,aAAaqnB,sBAAsB9jB,wBAA0B,SAASE,EAASJ,GAC7E,IAAIK,OAAIC,GACRD,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQukB,0BACNnkB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQyL,YAEV7L,EAAOuD,UACL,EACAlD,EAGN,EAOA1D,aAAaqnB,sBAAsBzlB,UAAUqmB,gBAAkB,WAC7D,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaqnB,sBAAsBzlB,UAAU8lB,sBAAwB,WACnE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAaqnB,sBAAsBzlB,UAAUmmB,qBAAuB,WAClE,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAaqnB,sBAAsBzlB,UAAUimB,gBAAkB,SAAS9kB,GACtE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaqnB,sBAAsBzlB,UAAUsmB,kBAAoB,WAC/D,OAA4CjpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaqnB,sBAAsBzlB,UAAUgmB,wBAA0B,WACrE,OAA8B3oB,EAAKkB,QAAQ+D,WACvC1E,KAAK0oB,oBACX,EAUAloB,aAAaqnB,sBAAsBzlB,UAAUomB,uBAAyB,WACpE,OAAmC/oB,EAAKkB,QAAQgE,UAC5C3E,KAAK0oB,oBACX,EAOAloB,aAAaqnB,sBAAsBzlB,UAAUkmB,kBAAoB,SAAS/kB,GACxE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaqnB,sBAAsBzlB,UAAUsN,QAAU,WACrD,OAAiDjQ,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC7F,EAOAQ,aAAaqnB,sBAAsBzlB,UAAUuL,QAAU,SAASpK,GAC9D,OAAO9D,EAAKkB,QAAQ6H,mBAAmBxI,KAAM,EAAGuD,EAClD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAasnB,sBAAsB1lB,UAAUC,SAAW,SAASC,GAC/D,OAAO9B,aAAasnB,sBAAsBzlB,SAASC,EAAqBtC,KAC1E,EAYAQ,aAAasnB,sBAAsBzlB,SAAW,SAASE,EAAiBC,GACtE,IAAOC,EAAM,CACXwH,YAAazH,EAAI0H,uBACjB+d,aAAczlB,EAAI0lB,yBAMpB,OAHI3lB,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAasnB,sBAAsB/kB,kBAAoB,SAASC,GAC9D,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAasnB,sBAC3B,OAAOtnB,aAAasnB,sBAAsB3kB,4BAA4BX,EAAKS,EAC7E,EAUAzC,aAAasnB,sBAAsB3kB,4BAA8B,SAASX,EAAKS,GAC7E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAIkL,eAAenK,GACnB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAasnB,sBAAsB1lB,UAAUwB,gBAAkB,WAC7D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAasnB,sBAAsB/jB,wBAAwB/D,KAAM6D,GAC1DA,EAAOG,iBAChB,EAUAxD,aAAasnB,sBAAsB/jB,wBAA0B,SAASE,EAASJ,GAC7E,IAAIK,OAAIC,GACRD,EAAID,EAAQwL,uBACNpL,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,EAGN,EAOA1D,aAAasnB,sBAAsB1lB,UAAUiR,eAAiB,WAC5D,OAA4C5T,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAasnB,sBAAsB1lB,UAAU8H,qBAAuB,WAClE,OAA8BzK,EAAKkB,QAAQ+D,WACvC1E,KAAKqT,iBACX,EAUA7S,aAAasnB,sBAAsB1lB,UAAUqN,oBAAsB,WACjE,OAAmChQ,EAAKkB,QAAQgE,UAC5C3E,KAAKqT,iBACX,EAOA7S,aAAasnB,sBAAsB1lB,UAAUsL,eAAiB,SAASnK,GACrE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAasnB,sBAAsB1lB,UAAUqmB,gBAAkB,WAC7D,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAasnB,sBAAsB1lB,UAAU8lB,sBAAwB,WACnE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAasnB,sBAAsB1lB,UAAUmmB,qBAAuB,WAClE,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAasnB,sBAAsB1lB,UAAUimB,gBAAkB,SAAS9kB,GACtE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAaunB,qBAAqB3lB,UAAUC,SAAW,SAASC,GAC9D,OAAO9B,aAAaunB,qBAAqB1lB,SAASC,EAAqBtC,KACzE,EAYAQ,aAAaunB,qBAAqB1lB,SAAW,SAASE,EAAiBC,GACrE,IAAOC,EAAM,CACXqK,UAAWtK,EAAIuK,qBACfkb,aAAczlB,EAAI0lB,yBAMpB,OAHI3lB,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAaunB,qBAAqBhlB,kBAAoB,SAASC,GAC7D,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAaunB,qBAC3B,OAAOvnB,aAAaunB,qBAAqB5kB,4BAA4BX,EAAKS,EAC5E,EAUAzC,aAAaunB,qBAAqB5kB,4BAA8B,SAASX,EAAKS,GAC5E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI2M,aAAa5L,GACjB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAaunB,qBAAqB3lB,UAAUwB,gBAAkB,WAC5D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAaunB,qBAAqBhkB,wBAAwB/D,KAAM6D,GACzDA,EAAOG,iBAChB,EAUAxD,aAAaunB,qBAAqBhkB,wBAA0B,SAASE,EAASJ,GAC5E,IAAIK,OAAIC,GACRD,EAAID,EAAQ+M,qBACN3M,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,EAGN,EAOA1D,aAAaunB,qBAAqB3lB,UAAUwS,aAAe,WACzD,OAA4CnV,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaunB,qBAAqB3lB,UAAU2K,mBAAqB,WAC/D,OAA8BtN,EAAKkB,QAAQ+D,WACvC1E,KAAK4U,eACX,EAUApU,aAAaunB,qBAAqB3lB,UAAU4O,kBAAoB,WAC9D,OAAmCvR,EAAKkB,QAAQgE,UAC5C3E,KAAK4U,eACX,EAOApU,aAAaunB,qBAAqB3lB,UAAU+M,aAAe,SAAS5L,GAClE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaunB,qBAAqB3lB,UAAUqmB,gBAAkB,WAC5D,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaunB,qBAAqB3lB,UAAU8lB,sBAAwB,WAClE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAaunB,qBAAqB3lB,UAAUmmB,qBAAuB,WACjE,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAaunB,qBAAqB3lB,UAAUimB,gBAAkB,SAAS9kB,GACrE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EASA/C,aAAawnB,gCAAgC7mB,gBAAkB,CAAC,GAI5D1B,EAAKkB,QAAQwB,qBAajB3B,aAAawnB,gCAAgC5lB,UAAUC,SAAW,SAASC,GACzE,OAAO9B,aAAawnB,gCAAgC3lB,SAASC,EAAqBtC,KACpF,EAYAQ,aAAawnB,gCAAgC3lB,SAAW,SAASE,EAAiBC,GAChF,IAAI0B,EAAGzB,EAAM,CACXwlB,aAAczlB,EAAI0lB,wBAClBS,OAAQzkB,EAAI1B,EAAIomB,aAAehB,EAAajmB,WAAWU,SAASE,EAAiB2B,GACjF2kB,SAAU3kB,EAAI1B,EAAIsmB,eAAiBlB,EAAajmB,WAAWU,SAASE,EAAiB2B,GACrF6kB,YAAatpB,EAAKkB,QAAQ2J,aAAa9H,EAAIwmB,iBAC3CpB,EAAajmB,WAAWU,SAAUE,IAMpC,OAHIA,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAawnB,gCAAgCjlB,kBAAoB,SAASC,GACxE,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAawnB,gCAC3B,OAAOxnB,aAAawnB,gCAAgC7kB,4BAA4BX,EAAKS,EACvF,EAUAzC,aAAawnB,gCAAgC7kB,4BAA8B,SAASX,EAAKS,GACvF,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,EACCA,EAAQ,IAAIqkB,EAAajmB,WAC7BsB,EAAOoD,YAAY9C,EAAMqkB,EAAajmB,WAAWwB,6BACjDX,EAAIymB,SAAS1lB,GACb,MACF,KAAK,EACCA,EAAQ,IAAIqkB,EAAajmB,WAC7BsB,EAAOoD,YAAY9C,EAAMqkB,EAAajmB,WAAWwB,6BACjDX,EAAI0mB,WAAW3lB,GACf,MACF,KAAK,EACCA,EAAQ,IAAIqkB,EAAajmB,WAC7BsB,EAAOoD,YAAY9C,EAAMqkB,EAAajmB,WAAWwB,6BACjDX,EAAI2mB,WAAW5lB,GACf,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAawnB,gCAAgC5lB,UAAUwB,gBAAkB,WACvE,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAawnB,gCAAgCjkB,wBAAwB/D,KAAM6D,GACpEA,EAAOG,iBAChB,EAUAxD,aAAawnB,gCAAgCjkB,wBAA0B,SAASE,EAASJ,GACvF,IAAIK,OAAIC,GACRD,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIK,OADTA,EAAID,EAAQ2kB,aAEV/kB,EAAOqM,aACL,EACAhM,EACA0jB,EAAajmB,WAAWoC,yBAInB,OADTG,EAAID,EAAQ6kB,eAEVjlB,EAAOqM,aACL,EACAhM,EACA0jB,EAAajmB,WAAWoC,0BAG5BG,EAAID,EAAQ+kB,kBACN3kB,OAAS,GACbR,EAAO+L,qBACL,EACA1L,EACA0jB,EAAajmB,WAAWoC,wBAG9B,EAOAvD,aAAawnB,gCAAgC5lB,UAAUqmB,gBAAkB,WACvE,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAawnB,gCAAgC5lB,UAAU8lB,sBAAwB,WAC7E,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAawnB,gCAAgC5lB,UAAUmmB,qBAAuB,WAC5E,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAawnB,gCAAgC5lB,UAAUimB,gBAAkB,SAAS9kB,GAChF,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAawnB,gCAAgC5lB,UAAUwmB,SAAW,WAChE,OACEnpB,EAAKkB,QAAQqS,gBAAgBhT,KAAM4nB,EAAajmB,WAAY,EAChE,EAOAnB,aAAawnB,gCAAgC5lB,UAAU6mB,SAAW,SAAS1lB,GACzE,OAAO9D,EAAKkB,QAAQsS,gBAAgBjT,KAAM,EAAGuD,EAC/C,EAOA/C,aAAawnB,gCAAgC5lB,UAAUgnB,WAAa,WAClE,OAAOppB,KAAKipB,cAAS9kB,EACvB,EAOA3D,aAAawnB,gCAAgC5lB,UAAUinB,SAAW,WAChE,OAAyC,MAAlC5pB,EAAKkB,QAAQyS,SAASpT,KAAM,EACrC,EAOAQ,aAAawnB,gCAAgC5lB,UAAU0mB,WAAa,WAClE,OACErpB,EAAKkB,QAAQqS,gBAAgBhT,KAAM4nB,EAAajmB,WAAY,EAChE,EAOAnB,aAAawnB,gCAAgC5lB,UAAU8mB,WAAa,SAAS3lB,GAC3E,OAAO9D,EAAKkB,QAAQsS,gBAAgBjT,KAAM,EAAGuD,EAC/C,EAOA/C,aAAawnB,gCAAgC5lB,UAAUknB,aAAe,WACpE,OAAOtpB,KAAKkpB,gBAAW/kB,EACzB,EAOA3D,aAAawnB,gCAAgC5lB,UAAUmnB,WAAa,WAClE,OAAyC,MAAlC9pB,EAAKkB,QAAQyS,SAASpT,KAAM,EACrC,EAOAQ,aAAawnB,gCAAgC5lB,UAAU4mB,eAAiB,WACtE,OACEvpB,EAAKkB,QAAQ2S,wBAAwBtT,KAAM4nB,EAAajmB,WAAY,EACxE,EAOAnB,aAAawnB,gCAAgC5lB,UAAUonB,eAAiB,SAASjmB,GAC/E,OAAO9D,EAAKkB,QAAQ6S,wBAAwBxT,KAAM,EAAGuD,EACvD,EAQA/C,aAAawnB,gCAAgC5lB,UAAU+mB,WAAa,SAAS1V,EAAWpL,GACtF,OAAO5I,EAAKkB,QAAQ+S,0BAA0B1T,KAAM,EAAGyT,EAAWjT,aAAamB,WAAY0G,EAC7F,EAOA7H,aAAawnB,gCAAgC5lB,UAAUqnB,iBAAmB,WACxE,OAAOzpB,KAAKwpB,eAAe,GAC7B,EAGA7pB,EAAKS,OAAOC,OAAOsnB,EAASnnB,a,gBC9iC5B,IAAIf,EAAOC,EAAQ,KACfC,EAAOF,EACPG,EACqB,oBAAfC,YAA8BA,YACnB,oBAAXC,QAA0BA,aACf,IAAXF,GAA0BA,GACjB,oBAATG,MAAwBA,MAC/B,WAAc,OAAOC,IAAM,EAAGC,KAAK,OACpCC,SAAS,cAATA,GAEFP,EAAKY,aAAa,kCAAmC,KAAMX,GAC3DD,EAAKY,aAAa,+CAAgD,KAAMX,GACxED,EAAKY,aAAa,6CAA8C,KAAMX,GACtED,EAAKY,aAAa,qCAAsC,KAAMX,GAC9DD,EAAKY,aAAa,qCAAsC,KAAMX,GAC9DD,EAAKY,aAAa,mCAAoC,KAAMX,GAW5DY,aAAakpB,mBAAqB,SAAShpB,GACzCjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAGF,aAAakpB,mBAAmBvoB,gBAAiB,KAClG,EACAxB,EAAKkB,SAASL,aAAakpB,mBAAoBjqB,EAAKkB,SAChDhB,EAAKmB,QAAUC,WAKjBP,aAAakpB,mBAAmB1oB,YAAc,mCAYhDR,aAAakpB,mBAAmBC,aAAe,SAASjpB,GACtDjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAakpB,mBAAmBC,aAAclqB,EAAKkB,SAC7DhB,EAAKmB,QAAUC,WAKjBP,aAAakpB,mBAAmBC,aAAa3oB,YAAc,gDAY7DR,aAAaopB,sBAAwB,SAASlpB,GAC5CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAaopB,sBAAuBnqB,EAAKkB,SACnDhB,EAAKmB,QAAUC,WAKjBP,aAAaopB,sBAAsB5oB,YAAc,sCAYnDR,aAAaqpB,sBAAwB,SAASnpB,GAC5CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAaqpB,sBAAuBpqB,EAAKkB,SACnDhB,EAAKmB,QAAUC,WAKjBP,aAAaqpB,sBAAsB7oB,YAAc,sCAYnDR,aAAaspB,oBAAsB,SAASppB,GAC1CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAaspB,oBAAqBrqB,EAAKkB,SACjDhB,EAAKmB,QAAUC,WAKjBP,aAAaspB,oBAAoB9oB,YAAc,oCAYjDR,aAAaupB,8BAAgC,SAASrpB,GACpDjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAaupB,8BAA+BtqB,EAAKkB,SAC3DhB,EAAKmB,QAAUC,WAKjBP,aAAaupB,8BAA8B/oB,YAAc,8CAQ3DR,aAAakpB,mBAAmBvoB,gBAAkB,CAAC,GAI/C1B,EAAKkB,QAAQwB,qBAajB3B,aAAakpB,mBAAmBtnB,UAAUC,SAAW,SAASC,GAC5D,OAAO9B,aAAakpB,mBAAmBrnB,SAASC,EAAqBtC,KACvE,EAYAQ,aAAakpB,mBAAmBrnB,SAAW,SAASE,EAAiBC,GACnE,IAAOC,EAAM,CACX6U,GAAI7X,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,GAAI,IAC9CylB,aAAczlB,EAAI0lB,wBAClBxlB,KAAMF,EAAIG,gBACVqnB,KAAMxnB,EAAIynB,gBACVC,YAAazqB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACtDqJ,iBAAkBpM,EAAKkB,QAAQ2J,aAAa9H,EAAIsJ,sBAChDtL,aAAakpB,mBAAmBC,aAAatnB,SAAUE,GACvD4nB,OAAQ1qB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACjD4nB,UAAW3qB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACpD6nB,IAAK5qB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GAC9C8nB,UAAW7qB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACpD+nB,QAAS9qB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,GAAI,GACnDgoB,MAAO/qB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,GAAI,GACjDioB,UAAWhrB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,GAAI,GACrDkoB,YAAaloB,EAAImoB,uBACjBxR,IAAK3W,EAAIooB,eACTC,kBAAmBprB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,GAAI,GAC7DsoB,wBAAyBrrB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,GAAI,GACnEuoB,wBAAyBtrB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,GAAI,GACnEwoB,wBAAyBvrB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,GAAI,IAMrE,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAakpB,mBAAmB3mB,kBAAoB,SAASC,GAC3D,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAakpB,mBAC3B,OAAOlpB,aAAakpB,mBAAmBvmB,4BAA4BX,EAAKS,EAC1E,EAUAzC,aAAakpB,mBAAmBvmB,4BAA8B,SAASX,EAAKS,GAC1E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,GACH,IAAIC,EAA+BN,EAAO6K,aAC1CtL,EAAIsV,MAAMvU,GACV,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAIiB,QAAQF,GACZ,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAIyoB,QAAQ1nB,GACZ,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI0oB,eAAe3nB,GACnB,MACF,KAAK,EACCA,EAAQ,IAAI/C,aAAakpB,mBAAmBC,aAChD1mB,EAAOoD,YAAY9C,EAAM/C,aAAakpB,mBAAmBC,aAAaxmB,6BACtEX,EAAIqM,gBAAgBtL,GACpB,MACF,KAAK,EACCA,EAA+BN,EAAO4U,YAC1CrV,EAAI2oB,UAAU5nB,GACd,MACF,KAAK,EACCA,EAA+BN,EAAO4U,YAC1CrV,EAAI4oB,aAAa7nB,GACjB,MACF,KAAK,EACCA,EAA+BN,EAAO4U,YAC1CrV,EAAI6oB,OAAO9nB,GACX,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI8oB,aAAa/nB,GACjB,MACF,KAAK,GACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI+oB,WAAWhoB,GACf,MACF,KAAK,GACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIgpB,SAASjoB,GACb,MACF,KAAK,GACCA,EAA+BN,EAAO4U,YAC1CrV,EAAIipB,aAAaloB,GACjB,MACF,KAAK,GACCA,EAAoCN,EAAOO,YAC/ChB,EAAIkpB,eAAenoB,GACnB,MACF,KAAK,GACCA,EAAoCN,EAAOO,YAC/ChB,EAAImX,OAAOpW,GACX,MACF,KAAK,GACCA,EAA+BN,EAAOiC,YAC1C1C,EAAImpB,qBAAqBpoB,GACzB,MACF,KAAK,GACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIopB,2BAA2BroB,GAC/B,MACF,KAAK,GACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIqpB,2BAA2BtoB,GAC/B,MACF,KAAK,GACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIspB,2BAA2BvoB,GAC/B,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAakpB,mBAAmBtnB,UAAUwB,gBAAkB,WAC1D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAakpB,mBAAmB3lB,wBAAwB/D,KAAM6D,GACvDA,EAAOG,iBAChB,EAUAxD,aAAakpB,mBAAmB3lB,wBAA0B,SAASE,EAASJ,GAC1E,IAAIK,OAAIC,GACRD,EAAID,EAAQkU,SACN9T,OAAS,GACbR,EAAOgM,YACL,GACA3L,IAGJA,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQG,gBACNC,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQ8nB,gBACN1nB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQ+nB,mBAEVnoB,EAAOyB,WACL,EACApB,IAGJA,EAAID,EAAQ6H,uBACNzH,OAAS,GACbR,EAAO+L,qBACL,EACA1L,EACA1D,aAAakpB,mBAAmBC,aAAa5lB,yBAIvC,KADVG,EAAID,EAAQgoB,cAEVpoB,EAAOuU,WACL,EACAlU,GAIM,KADVA,EAAID,EAAQioB,iBAEVroB,EAAOuU,WACL,EACAlU,GAIM,KADVA,EAAID,EAAQkoB,WAEVtoB,EAAOuU,WACL,EACAlU,GAIM,KADVA,EAAID,EAAQmoB,iBAEVvoB,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQooB,eAEVxoB,EAAOyB,WACL,GACApB,GAIM,KADVA,EAAID,EAAQqoB,aAEVzoB,EAAOyB,WACL,GACApB,GAIM,KADVA,EAAID,EAAQsoB,iBAEV1oB,EAAOuU,WACL,GACAlU,IAGJA,EAAID,EAAQuoB,uBACNnoB,OAAS,GACbR,EAAOS,WACL,GACAJ,IAGJA,EAAID,EAAQwoB,eACNpoB,OAAS,GACbR,EAAOS,WACL,GACAJ,GAIM,KADVA,EAAID,EAAQyoB,yBAEV7oB,EAAOyB,WACL,GACApB,GAIM,KADVA,EAAID,EAAQ0oB,+BAEV9oB,EAAOyB,WACL,GACApB,GAIM,KADVA,EAAID,EAAQ2oB,+BAEV/oB,EAAOyB,WACL,GACApB,GAIM,KADVA,EAAID,EAAQ4oB,+BAEVhpB,EAAOyB,WACL,GACApB,EAGN,EAMIzE,EAAKkB,QAAQwB,qBAajB3B,aAAakpB,mBAAmBC,aAAavnB,UAAUC,SAAW,SAASC,GACzE,OAAO9B,aAAakpB,mBAAmBC,aAAatnB,SAASC,EAAqBtC,KACpF,EAYAQ,aAAakpB,mBAAmBC,aAAatnB,SAAW,SAASE,EAAiBC,GAChF,IAAOC,EAAM,CACXqqB,aAAcrtB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACvDuqB,WAAYttB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAMvD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAakpB,mBAAmBC,aAAa5mB,kBAAoB,SAASC,GACxE,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAakpB,mBAAmBC,aAC9C,OAAOnpB,aAAakpB,mBAAmBC,aAAaxmB,4BAA4BX,EAAKS,EACvF,EAUAzC,aAAakpB,mBAAmBC,aAAaxmB,4BAA8B,SAASX,EAAKS,GACvF,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAA+BN,EAAOiC,YAC1C1C,EAAIwqB,gBAAgBzpB,GACpB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIyqB,cAAc1pB,GAClB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAakpB,mBAAmBC,aAAavnB,UAAUwB,gBAAkB,WACvE,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAakpB,mBAAmBC,aAAa5lB,wBAAwB/D,KAAM6D,GACpEA,EAAOG,iBAChB,EAUAxD,aAAakpB,mBAAmBC,aAAa5lB,wBAA0B,SAASE,EAASJ,GACvF,IAAIK,OAAIC,EAEE,KADVD,EAAID,EAAQipB,oBAEVrpB,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQkpB,kBAEVtpB,EAAOyB,WACL,EACApB,EAGN,EAOA1D,aAAakpB,mBAAmBC,aAAavnB,UAAU8qB,gBAAkB,WACvE,OAA8BztB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAakpB,mBAAmBC,aAAavnB,UAAU4qB,gBAAkB,SAASzpB,GAChF,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAakpB,mBAAmBC,aAAavnB,UAAU+qB,cAAgB,WACrE,OAA8B1tB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAakpB,mBAAmBC,aAAavnB,UAAU6qB,cAAgB,SAAS1pB,GAC9E,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAakpB,mBAAmBtnB,UAAU+V,MAAQ,WAChD,OAA8B1Y,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,GAC3E,EAOAQ,aAAakpB,mBAAmBtnB,UAAU0V,MAAQ,SAASvU,GACzD,OAAO9D,EAAKkB,QAAQiY,qBAAqB5Y,KAAM,GAAIuD,EACrD,EAOA/C,aAAakpB,mBAAmBtnB,UAAUqmB,gBAAkB,WAC1D,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAakpB,mBAAmBtnB,UAAU8lB,sBAAwB,WAChE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAakpB,mBAAmBtnB,UAAUmmB,qBAAuB,WAC/D,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAakpB,mBAAmBtnB,UAAUimB,gBAAkB,SAAS9kB,GACnE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAakpB,mBAAmBtnB,UAAUoC,QAAU,WAClD,OAA4C/E,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAakpB,mBAAmBtnB,UAAUO,cAAgB,WACxD,OAA8BlD,EAAKkB,QAAQ+D,WACvC1E,KAAKwE,UACX,EAUAhE,aAAakpB,mBAAmBtnB,UAAUgC,aAAe,WACvD,OAAmC3E,EAAKkB,QAAQgE,UAC5C3E,KAAKwE,UACX,EAOAhE,aAAakpB,mBAAmBtnB,UAAUqB,QAAU,SAASF,GAC3D,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAakpB,mBAAmBtnB,UAAUgrB,QAAU,WAClD,OAA4C3tB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAakpB,mBAAmBtnB,UAAU6nB,cAAgB,WACxD,OAA8BxqB,EAAKkB,QAAQ+D,WACvC1E,KAAKotB,UACX,EAUA5sB,aAAakpB,mBAAmBtnB,UAAU2pB,aAAe,WACvD,OAAmCtsB,EAAKkB,QAAQgE,UAC5C3E,KAAKotB,UACX,EAOA5sB,aAAakpB,mBAAmBtnB,UAAU6oB,QAAU,SAAS1nB,GAC3D,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAakpB,mBAAmBtnB,UAAU4pB,eAAiB,WACzD,OAA8BvsB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAakpB,mBAAmBtnB,UAAU8oB,eAAiB,SAAS3nB,GAClE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAakpB,mBAAmBtnB,UAAU0J,oBAAsB,WAC9D,OACErM,EAAKkB,QAAQ2S,wBAAwBtT,KAAMQ,aAAakpB,mBAAmBC,aAAc,EAC7F,EAOAnpB,aAAakpB,mBAAmBtnB,UAAUgS,oBAAsB,SAAS7Q,GACvE,OAAO9D,EAAKkB,QAAQ6S,wBAAwBxT,KAAM,EAAGuD,EACvD,EAQA/C,aAAakpB,mBAAmBtnB,UAAUyM,gBAAkB,SAAS4E,EAAWpL,GAC9E,OAAO5I,EAAKkB,QAAQ+S,0BAA0B1T,KAAM,EAAGyT,EAAWjT,aAAakpB,mBAAmBC,aAActhB,EAClH,EAOA7H,aAAakpB,mBAAmBtnB,UAAUiS,sBAAwB,WAChE,OAAOrU,KAAKoU,oBAAoB,GAClC,EAOA5T,aAAakpB,mBAAmBtnB,UAAU6pB,UAAY,WACpD,OAA8BxsB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAakpB,mBAAmBtnB,UAAU+oB,UAAY,SAAS5nB,GAC7D,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAakpB,mBAAmBtnB,UAAU8pB,aAAe,WACvD,OAA8BzsB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAakpB,mBAAmBtnB,UAAUgpB,aAAe,SAAS7nB,GAChE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAakpB,mBAAmBtnB,UAAU+pB,OAAS,WACjD,OAA8B1sB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAakpB,mBAAmBtnB,UAAUipB,OAAS,SAAS9nB,GAC1D,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAakpB,mBAAmBtnB,UAAUgqB,aAAe,WACvD,OAA8B3sB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAakpB,mBAAmBtnB,UAAUkpB,aAAe,SAAS/nB,GAChE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAakpB,mBAAmBtnB,UAAUiqB,WAAa,WACrD,OAA8B5sB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,EAC3E,EAOAQ,aAAakpB,mBAAmBtnB,UAAUmpB,WAAa,SAAShoB,GAC9D,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,GAAIuD,EAClD,EAOA/C,aAAakpB,mBAAmBtnB,UAAUkqB,SAAW,WACnD,OAA8B7sB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,EAC3E,EAOAQ,aAAakpB,mBAAmBtnB,UAAUopB,SAAW,SAASjoB,GAC5D,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,GAAIuD,EAClD,EAOA/C,aAAakpB,mBAAmBtnB,UAAUmqB,aAAe,WACvD,OAA8B9sB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,EAC3E,EAOAQ,aAAakpB,mBAAmBtnB,UAAUqpB,aAAe,SAASloB,GAChE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,GAAIuD,EAClD,EAOA/C,aAAakpB,mBAAmBtnB,UAAUirB,eAAiB,WACzD,OAA4C5tB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,GACzF,EAQAQ,aAAakpB,mBAAmBtnB,UAAUuoB,qBAAuB,WAC/D,OAA8BlrB,EAAKkB,QAAQ+D,WACvC1E,KAAKqtB,iBACX,EAUA7sB,aAAakpB,mBAAmBtnB,UAAUoqB,oBAAsB,WAC9D,OAAmC/sB,EAAKkB,QAAQgE,UAC5C3E,KAAKqtB,iBACX,EAOA7sB,aAAakpB,mBAAmBtnB,UAAUspB,eAAiB,SAASnoB,GAClE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,GAAIuD,EACpD,EAOA/C,aAAakpB,mBAAmBtnB,UAAU+X,OAAS,WACjD,OAA4C1a,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,GACzF,EAQAQ,aAAakpB,mBAAmBtnB,UAAUwoB,aAAe,WACvD,OAA8BnrB,EAAKkB,QAAQ+D,WACvC1E,KAAKma,SACX,EAUA3Z,aAAakpB,mBAAmBtnB,UAAUqqB,YAAc,WACtD,OAAmChtB,EAAKkB,QAAQgE,UAC5C3E,KAAKma,SACX,EAOA3Z,aAAakpB,mBAAmBtnB,UAAUuX,OAAS,SAASpW,GAC1D,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,GAAIuD,EACpD,EAOA/C,aAAakpB,mBAAmBtnB,UAAUsqB,qBAAuB,WAC/D,OAA8BjtB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,EAC3E,EAOAQ,aAAakpB,mBAAmBtnB,UAAUupB,qBAAuB,SAASpoB,GACxE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,GAAIuD,EAClD,EAOA/C,aAAakpB,mBAAmBtnB,UAAUuqB,2BAA6B,WACrE,OAA8BltB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,EAC3E,EAOAQ,aAAakpB,mBAAmBtnB,UAAUwpB,2BAA6B,SAASroB,GAC9E,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,GAAIuD,EAClD,EAOA/C,aAAakpB,mBAAmBtnB,UAAUwqB,2BAA6B,WACrE,OAA8BntB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,EAC3E,EAOAQ,aAAakpB,mBAAmBtnB,UAAUypB,2BAA6B,SAAStoB,GAC9E,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,GAAIuD,EAClD,EAOA/C,aAAakpB,mBAAmBtnB,UAAUyqB,2BAA6B,WACrE,OAA8BptB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,EAC3E,EAOAQ,aAAakpB,mBAAmBtnB,UAAU0pB,2BAA6B,SAASvoB,GAC9E,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,GAAIuD,EAClD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAaopB,sBAAsBxnB,UAAUC,SAAW,SAASC,GAC/D,OAAO9B,aAAaopB,sBAAsBvnB,SAASC,EAAqBtC,KAC1E,EAYAQ,aAAaopB,sBAAsBvnB,SAAW,SAASE,EAAiBC,GACtE,IAAOC,EAAM,CACX6qB,UAAW9qB,EAAI+qB,qBACftF,aAAczlB,EAAI0lB,wBAClBsF,UAAWhrB,EAAIirB,qBACfC,OAAQjuB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAMnD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAaopB,sBAAsB7mB,kBAAoB,SAASC,GAC9D,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAaopB,sBAC3B,OAAOppB,aAAaopB,sBAAsBzmB,4BAA4BX,EAAKS,EAC7E,EAUAzC,aAAaopB,sBAAsBzmB,4BAA8B,SAASX,EAAKS,GAC7E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAImrB,aAAapqB,GACjB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAIorB,aAAarqB,GACjB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIqrB,UAAUtqB,GACd,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAaopB,sBAAsBxnB,UAAUwB,gBAAkB,WAC7D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAaopB,sBAAsB7lB,wBAAwB/D,KAAM6D,GAC1DA,EAAOG,iBAChB,EAUAxD,aAAaopB,sBAAsB7lB,wBAA0B,SAASE,EAASJ,GAC7E,IAAIK,OAAIC,GACRD,EAAID,EAAQ6pB,qBACNzpB,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQ8pB,qBACN1pB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQ+pB,cAEVnqB,EAAOyB,WACL,EACApB,EAGN,EAOA1D,aAAaopB,sBAAsBxnB,UAAU6rB,aAAe,WAC1D,OAA4CxuB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaopB,sBAAsBxnB,UAAUmrB,mBAAqB,WAChE,OAA8B9tB,EAAKkB,QAAQ+D,WACvC1E,KAAKiuB,eACX,EAUAztB,aAAaopB,sBAAsBxnB,UAAU0rB,kBAAoB,WAC/D,OAAmCruB,EAAKkB,QAAQgE,UAC5C3E,KAAKiuB,eACX,EAOAztB,aAAaopB,sBAAsBxnB,UAAUurB,aAAe,SAASpqB,GACnE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaopB,sBAAsBxnB,UAAUqmB,gBAAkB,WAC7D,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaopB,sBAAsBxnB,UAAU8lB,sBAAwB,WACnE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAaopB,sBAAsBxnB,UAAUmmB,qBAAuB,WAClE,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAaopB,sBAAsBxnB,UAAUimB,gBAAkB,SAAS9kB,GACtE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaopB,sBAAsBxnB,UAAU8rB,aAAe,WAC1D,OAA4CzuB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaopB,sBAAsBxnB,UAAUqrB,mBAAqB,WAChE,OAA8BhuB,EAAKkB,QAAQ+D,WACvC1E,KAAKkuB,eACX,EAUA1tB,aAAaopB,sBAAsBxnB,UAAU2rB,kBAAoB,WAC/D,OAAmCtuB,EAAKkB,QAAQgE,UAC5C3E,KAAKkuB,eACX,EAOA1tB,aAAaopB,sBAAsBxnB,UAAUwrB,aAAe,SAASrqB,GACnE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaopB,sBAAsBxnB,UAAU4rB,UAAY,WACvD,OAA8BvuB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaopB,sBAAsBxnB,UAAUyrB,UAAY,SAAStqB,GAChE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAaqpB,sBAAsBznB,UAAUC,SAAW,SAASC,GAC/D,OAAO9B,aAAaqpB,sBAAsBxnB,SAASC,EAAqBtC,KAC1E,EAYAQ,aAAaqpB,sBAAsBxnB,SAAW,SAASE,EAAiBC,GACtE,IAAOC,EAAM,CACXwlB,aAAczlB,EAAI0lB,yBAMpB,OAHI3lB,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAaqpB,sBAAsB9mB,kBAAoB,SAASC,GAC9D,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAaqpB,sBAC3B,OAAOrpB,aAAaqpB,sBAAsB1mB,4BAA4BX,EAAKS,EAC7E,EAUAzC,aAAaqpB,sBAAsB1mB,4BAA8B,SAASX,EAAKS,GAC7E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,GACK,IAFOJ,EAAOK,iBAEnB,CACE,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,EACf,MAELN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAaqpB,sBAAsBznB,UAAUwB,gBAAkB,WAC7D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAaqpB,sBAAsB9lB,wBAAwB/D,KAAM6D,GAC1DA,EAAOG,iBAChB,EAUAxD,aAAaqpB,sBAAsB9lB,wBAA0B,SAASE,EAASJ,GAC7E,IAAIK,GACJA,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,EAGN,EAOA1D,aAAaqpB,sBAAsBznB,UAAUqmB,gBAAkB,WAC7D,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaqpB,sBAAsBznB,UAAU8lB,sBAAwB,WACnE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAaqpB,sBAAsBznB,UAAUmmB,qBAAuB,WAClE,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAaqpB,sBAAsBznB,UAAUimB,gBAAkB,SAAS9kB,GACtE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAaspB,oBAAoB1nB,UAAUC,SAAW,SAASC,GAC7D,OAAO9B,aAAaspB,oBAAoBznB,SAASC,EAAqBtC,KACxE,EAYAQ,aAAaspB,oBAAoBznB,SAAW,SAASE,EAAiBC,GACpE,IAAOC,EAAM,CACXwlB,aAAczlB,EAAI0lB,wBAClBwC,YAAaloB,EAAImoB,uBACjBxR,IAAK3W,EAAIooB,eACTuD,SAAU1uB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACnD4rB,eAAgB3uB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAM3D,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAaspB,oBAAoB/mB,kBAAoB,SAASC,GAC5D,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAaspB,oBAC3B,OAAOtpB,aAAaspB,oBAAoB3mB,4BAA4BX,EAAKS,EAC3E,EAUAzC,aAAaspB,oBAAoB3mB,4BAA8B,SAASX,EAAKS,GAC3E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAIkpB,eAAenoB,GACnB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAImX,OAAOpW,GACX,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI6rB,YAAY9qB,GAChB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI8rB,kBAAkB/qB,GACtB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAaspB,oBAAoB1nB,UAAUwB,gBAAkB,WAC3D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAaspB,oBAAoB/lB,wBAAwB/D,KAAM6D,GACxDA,EAAOG,iBAChB,EAUAxD,aAAaspB,oBAAoB/lB,wBAA0B,SAASE,EAASJ,GAC3E,IAAIK,OAAIC,GACRD,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQuoB,uBACNnoB,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQwoB,eACNpoB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQsqB,gBAEV1qB,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQuqB,sBAEV3qB,EAAOyB,WACL,EACApB,EAGN,EAOA1D,aAAaspB,oBAAoB1nB,UAAUqmB,gBAAkB,WAC3D,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaspB,oBAAoB1nB,UAAU8lB,sBAAwB,WACjE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAaspB,oBAAoB1nB,UAAUmmB,qBAAuB,WAChE,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAaspB,oBAAoB1nB,UAAUimB,gBAAkB,SAAS9kB,GACpE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaspB,oBAAoB1nB,UAAUirB,eAAiB,WAC1D,OAA4C5tB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaspB,oBAAoB1nB,UAAUuoB,qBAAuB,WAChE,OAA8BlrB,EAAKkB,QAAQ+D,WACvC1E,KAAKqtB,iBACX,EAUA7sB,aAAaspB,oBAAoB1nB,UAAUoqB,oBAAsB,WAC/D,OAAmC/sB,EAAKkB,QAAQgE,UAC5C3E,KAAKqtB,iBACX,EAOA7sB,aAAaspB,oBAAoB1nB,UAAUspB,eAAiB,SAASnoB,GACnE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaspB,oBAAoB1nB,UAAU+X,OAAS,WAClD,OAA4C1a,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaspB,oBAAoB1nB,UAAUwoB,aAAe,WACxD,OAA8BnrB,EAAKkB,QAAQ+D,WACvC1E,KAAKma,SACX,EAUA3Z,aAAaspB,oBAAoB1nB,UAAUqqB,YAAc,WACvD,OAAmChtB,EAAKkB,QAAQgE,UAC5C3E,KAAKma,SACX,EAOA3Z,aAAaspB,oBAAoB1nB,UAAUuX,OAAS,SAASpW,GAC3D,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaspB,oBAAoB1nB,UAAUmsB,YAAc,WACvD,OAA8B9uB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaspB,oBAAoB1nB,UAAUisB,YAAc,SAAS9qB,GAChE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAaspB,oBAAoB1nB,UAAUosB,kBAAoB,WAC7D,OAA8B/uB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaspB,oBAAoB1nB,UAAUksB,kBAAoB,SAAS/qB,GACtE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAaupB,8BAA8B3nB,UAAUC,SAAW,SAASC,GACvE,OAAO9B,aAAaupB,8BAA8B1nB,SAASC,EAAqBtC,KAClF,EAYAQ,aAAaupB,8BAA8B1nB,SAAW,SAASE,EAAiBC,GAC9E,IAAOC,EAAM,CACXwlB,aAAczlB,EAAI0lB,wBAClBsF,UAAWhrB,EAAIirB,qBACfH,UAAW9qB,EAAI+qB,qBACfG,OAAQjuB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAMnD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAaupB,8BAA8BhnB,kBAAoB,SAASC,GACtE,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAaupB,8BAC3B,OAAOvpB,aAAaupB,8BAA8B5mB,4BAA4BX,EAAKS,EACrF,EAUAzC,aAAaupB,8BAA8B5mB,4BAA8B,SAASX,EAAKS,GACrF,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAIorB,aAAarqB,GACjB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAImrB,aAAapqB,GACjB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIqrB,UAAUtqB,GACd,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAaupB,8BAA8B3nB,UAAUwB,gBAAkB,WACrE,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAaupB,8BAA8BhmB,wBAAwB/D,KAAM6D,GAClEA,EAAOG,iBAChB,EAUAxD,aAAaupB,8BAA8BhmB,wBAA0B,SAASE,EAASJ,GACrF,IAAIK,OAAIC,GACRD,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQ8pB,qBACN1pB,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQ6pB,qBACNzpB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQ+pB,cAEVnqB,EAAOyB,WACL,EACApB,EAGN,EAOA1D,aAAaupB,8BAA8B3nB,UAAUqmB,gBAAkB,WACrE,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaupB,8BAA8B3nB,UAAU8lB,sBAAwB,WAC3E,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAaupB,8BAA8B3nB,UAAUmmB,qBAAuB,WAC1E,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAaupB,8BAA8B3nB,UAAUimB,gBAAkB,SAAS9kB,GAC9E,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaupB,8BAA8B3nB,UAAU8rB,aAAe,WAClE,OAA4CzuB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaupB,8BAA8B3nB,UAAUqrB,mBAAqB,WACxE,OAA8BhuB,EAAKkB,QAAQ+D,WACvC1E,KAAKkuB,eACX,EAUA1tB,aAAaupB,8BAA8B3nB,UAAU2rB,kBAAoB,WACvE,OAAmCtuB,EAAKkB,QAAQgE,UAC5C3E,KAAKkuB,eACX,EAOA1tB,aAAaupB,8BAA8B3nB,UAAUwrB,aAAe,SAASrqB,GAC3E,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaupB,8BAA8B3nB,UAAU6rB,aAAe,WAClE,OAA4CxuB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaupB,8BAA8B3nB,UAAUmrB,mBAAqB,WACxE,OAA8B9tB,EAAKkB,QAAQ+D,WACvC1E,KAAKiuB,eACX,EAUAztB,aAAaupB,8BAA8B3nB,UAAU0rB,kBAAoB,WACvE,OAAmCruB,EAAKkB,QAAQgE,UAC5C3E,KAAKiuB,eACX,EAOAztB,aAAaupB,8BAA8B3nB,UAAUurB,aAAe,SAASpqB,GAC3E,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaupB,8BAA8B3nB,UAAU4rB,UAAY,WAC/D,OAA8BvuB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaupB,8BAA8B3nB,UAAUyrB,UAAY,SAAStqB,GACxE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAGA5D,EAAKS,OAAOC,OAAOsnB,EAASnnB,a,gBCtoE5B,IAAIf,EAAOC,EAAQ,KACfC,EAAOF,EACPG,EACqB,oBAAfC,YAA8BA,YACnB,oBAAXC,QAA0BA,aACf,IAAXF,GAA0BA,GACjB,oBAATG,MAAwBA,MAC/B,WAAc,OAAOC,IAAM,EAAGC,KAAK,OACpCC,SAAS,cAATA,GAEEuuB,EAA0B/uB,EAAQ,KACtCC,EAAKS,OAAOC,OAAOC,MAAOmuB,GAC1B9uB,EAAKY,aAAa,qCAAsC,KAAMX,GAC9DD,EAAKY,aAAa,sCAAuC,KAAMX,GAC/DD,EAAKY,aAAa,iCAAkC,KAAMX,GAC1DD,EAAKY,aAAa,4BAA6B,KAAMX,GACrDD,EAAKY,aAAa,iCAAkC,KAAMX,GAC1DD,EAAKY,aAAa,iDAAkD,KAAMX,GAC1ED,EAAKY,aAAa,2CAA4C,KAAMX,GACpED,EAAKY,aAAa,wCAAyC,KAAMX,GACjED,EAAKY,aAAa,qCAAsC,KAAMX,GAC9DD,EAAKY,aAAa,uCAAwC,KAAMX,GAChED,EAAKY,aAAa,uCAAwC,KAAMX,GAChED,EAAKY,aAAa,iDAAkD,KAAMX,GAC1ED,EAAKY,aAAa,gCAAiC,KAAMX,GACzDD,EAAKY,aAAa,0CAA2C,KAAMX,GACnED,EAAKY,aAAa,uCAAwC,KAAMX,GAChED,EAAKY,aAAa,yCAA0C,KAAMX,GAClED,EAAKY,aAAa,uCAAwC,KAAMX,GAChED,EAAKY,aAAa,8CAA+C,KAAMX,GAWvEY,aAAakuB,sBAAwB,SAAShuB,GAC5CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAakuB,sBAAuBjvB,EAAKkB,SACnDhB,EAAKmB,QAAUC,WAKjBP,aAAakuB,sBAAsB1tB,YAAc,sCAYnDR,aAAamuB,wBAA0B,SAASjuB,GAC9CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAamuB,wBAAyBlvB,EAAKkB,SACrDhB,EAAKmB,QAAUC,WAKjBP,aAAamuB,wBAAwB3tB,YAAc,wCAYrDR,aAAaouB,wBAA0B,SAASluB,GAC9CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAaouB,wBAAyBnvB,EAAKkB,SACrDhB,EAAKmB,QAAUC,WAKjBP,aAAaouB,wBAAwB5tB,YAAc,wCAYrDR,aAAaquB,iBAAmB,SAASnuB,GACvCjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAaquB,iBAAkBpvB,EAAKkB,SAC9ChB,EAAKmB,QAAUC,WAKjBP,aAAaquB,iBAAiB7tB,YAAc,iCAY9CR,aAAasuB,wBAA0B,SAASpuB,GAC9CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAGF,aAAasuB,wBAAwB3tB,gBAAiB,KACvG,EACAxB,EAAKkB,SAASL,aAAasuB,wBAAyBrvB,EAAKkB,SACrDhB,EAAKmB,QAAUC,WAKjBP,aAAasuB,wBAAwB9tB,YAAc,wCAYrDR,aAAasuB,wBAAwBC,UAAY,SAASruB,GACxDjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAasuB,wBAAwBC,UAAWtvB,EAAKkB,SAC/DhB,EAAKmB,QAAUC,WAKjBP,aAAasuB,wBAAwBC,UAAU/tB,YAAc,kDAY/DR,aAAawuB,kBAAoB,SAAStuB,GACxCjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAGF,aAAawuB,kBAAkB7tB,gBAAiB,KACjG,EACAxB,EAAKkB,SAASL,aAAawuB,kBAAmBvvB,EAAKkB,SAC/ChB,EAAKmB,QAAUC,WAKjBP,aAAawuB,kBAAkBhuB,YAAc,kCAY/CR,aAAawuB,kBAAkBC,gBAAkB,SAASvuB,GACxDjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAawuB,kBAAkBC,gBAAiBxvB,EAAKkB,SAC/DhB,EAAKmB,QAAUC,WAKjBP,aAAawuB,kBAAkBC,gBAAgBjuB,YAAc,kDAY/DR,aAAa0uB,aAAe,SAASxuB,GACnCjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAa0uB,aAAczvB,EAAKkB,SAC1ChB,EAAKmB,QAAUC,WAKjBP,aAAa0uB,aAAaluB,YAAc,6BAY1CR,aAAa2uB,kBAAoB,SAASzuB,GACxCjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAa2uB,kBAAmB1vB,EAAKkB,SAC/ChB,EAAKmB,QAAUC,WAKjBP,aAAa2uB,kBAAkBnuB,YAAc,kCAY/CR,aAAa4uB,sBAAwB,SAAS1uB,GAC5CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAa4uB,sBAAuB3vB,EAAKkB,SACnDhB,EAAKmB,QAAUC,WAKjBP,aAAa4uB,sBAAsBpuB,YAAc,sCAYnDR,aAAa6uB,uBAAyB,SAAS3uB,GAC7CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAa6uB,uBAAwB5vB,EAAKkB,SACpDhB,EAAKmB,QAAUC,WAKjBP,aAAa6uB,uBAAuBruB,YAAc,uCAYpDR,aAAa8uB,wBAA0B,SAAS5uB,GAC9CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAa8uB,wBAAyB7vB,EAAKkB,SACrDhB,EAAKmB,QAAUC,WAKjBP,aAAa8uB,wBAAwBtuB,YAAc,wCAYrDR,aAAa+uB,0BAA4B,SAAS7uB,GAChDjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAa+uB,0BAA2B9vB,EAAKkB,SACvDhB,EAAKmB,QAAUC,WAKjBP,aAAa+uB,0BAA0BvuB,YAAc,0CAYvDR,aAAagvB,+BAAiC,SAAS9uB,GACrDjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAagvB,+BAAgC/vB,EAAKkB,SAC5DhB,EAAKmB,QAAUC,WAKjBP,aAAagvB,+BAA+BxuB,YAAc,+CAY5DR,aAAaivB,yBAA2B,SAAS/uB,GAC/CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAaivB,yBAA0BhwB,EAAKkB,SACtDhB,EAAKmB,QAAUC,WAKjBP,aAAaivB,yBAAyBzuB,YAAc,yCAYtDR,aAAakvB,2BAA6B,SAAShvB,GACjDjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAakvB,2BAA4BjwB,EAAKkB,SACxDhB,EAAKmB,QAAUC,WAKjBP,aAAakvB,2BAA2B1uB,YAAc,2CAYxDR,aAAamvB,4BAA8B,SAASjvB,GAClDjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAamvB,4BAA6BlwB,EAAKkB,SACzDhB,EAAKmB,QAAUC,WAKjBP,aAAamvB,4BAA4B3uB,YAAc,4CAKrDvB,EAAKkB,QAAQwB,qBAajB3B,aAAakuB,sBAAsBtsB,UAAUC,SAAW,SAASC,GAC/D,OAAO9B,aAAakuB,sBAAsBrsB,SAASC,EAAqBtC,KAC1E,EAYAQ,aAAakuB,sBAAsBrsB,SAAW,SAASE,EAAiBC,GACtE,IAAOC,EAAM,CACXwlB,aAAczlB,EAAI0lB,wBAClBhX,cAAezR,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACxDotB,eAAgBnwB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACzDqtB,SAAUpwB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,GAAI,GACpDstB,gBAAiBttB,EAAIutB,4BAMvB,OAHIxtB,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAakuB,sBAAsB3rB,kBAAoB,SAASC,GAC9D,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAakuB,sBAC3B,OAAOluB,aAAakuB,sBAAsBvrB,4BAA4BX,EAAKS,EAC7E,EAUAzC,aAAakuB,sBAAsBvrB,4BAA8B,SAASX,EAAKS,GAC7E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI4O,iBAAiB7N,GACrB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIwtB,kBAAkBzsB,GACtB,MACF,KAAK,GACCA,EAAmDN,EAAOyD,WAC9DlE,EAAIytB,YAAY1sB,GAChB,MACF,KAAK,GACCA,EAAoCN,EAAOO,YAC/ChB,EAAI0tB,mBAAmB3sB,GACvB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAakuB,sBAAsBtsB,UAAUwB,gBAAkB,WAC7D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAakuB,sBAAsB3qB,wBAAwB/D,KAAM6D,GAC1DA,EAAOG,iBAChB,EAUAxD,aAAakuB,sBAAsB3qB,wBAA0B,SAASE,EAASJ,GAC7E,IAAIK,OAAIC,GACRD,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQqN,qBAEVzN,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQksB,sBAEVtsB,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQmsB,gBAEVvsB,EAAOuD,UACL,GACAlD,IAGJA,EAAID,EAAQosB,2BACNhsB,OAAS,GACbR,EAAOS,WACL,GACAJ,EAGN,EAOA1D,aAAakuB,sBAAsBtsB,UAAUqmB,gBAAkB,WAC7D,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAakuB,sBAAsBtsB,UAAU8lB,sBAAwB,WACnE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAakuB,sBAAsBtsB,UAAUmmB,qBAAuB,WAClE,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAakuB,sBAAsBtsB,UAAUimB,gBAAkB,SAAS9kB,GACtE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAakuB,sBAAsBtsB,UAAUkP,iBAAmB,WAC9D,OAA8B7R,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAakuB,sBAAsBtsB,UAAUgP,iBAAmB,SAAS7N,GACvE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAakuB,sBAAsBtsB,UAAU+tB,kBAAoB,WAC/D,OAA8B1wB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAakuB,sBAAsBtsB,UAAU4tB,kBAAoB,SAASzsB,GACxE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAakuB,sBAAsBtsB,UAAUguB,YAAc,WACzD,OAAkD3wB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,EAC/F,EAOAQ,aAAakuB,sBAAsBtsB,UAAU6tB,YAAc,SAAS1sB,GAClE,OAAO9D,EAAKkB,QAAQ6H,mBAAmBxI,KAAM,GAAIuD,EACnD,EAOA/C,aAAakuB,sBAAsBtsB,UAAUkuB,mBAAqB,WAChE,OAA4C7wB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,GACzF,EAQAQ,aAAakuB,sBAAsBtsB,UAAU2tB,yBAA2B,WACtE,OAA8BtwB,EAAKkB,QAAQ+D,WACvC1E,KAAKswB,qBACX,EAUA9vB,aAAakuB,sBAAsBtsB,UAAUiuB,wBAA0B,WACrE,OAAmC5wB,EAAKkB,QAAQgE,UAC5C3E,KAAKswB,qBACX,EAOA9vB,aAAakuB,sBAAsBtsB,UAAU8tB,mBAAqB,SAAS3sB,GACzE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,GAAIuD,EACpD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAamuB,wBAAwBvsB,UAAUC,SAAW,SAASC,GACjE,OAAO9B,aAAamuB,wBAAwBtsB,SAASC,EAAqBtC,KAC5E,EAYAQ,aAAamuB,wBAAwBtsB,SAAW,SAASE,EAAiBC,GACxE,IAAOC,EAAM,CACXwlB,aAAczlB,EAAI0lB,wBAClB2H,SAAUpwB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,GAAI,GACpDstB,gBAAiBttB,EAAIutB,4BAMvB,OAHIxtB,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAamuB,wBAAwB5rB,kBAAoB,SAASC,GAChE,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAamuB,wBAC3B,OAAOnuB,aAAamuB,wBAAwBxrB,4BAA4BX,EAAKS,EAC/E,EAUAzC,aAAamuB,wBAAwBxrB,4BAA8B,SAASX,EAAKS,GAC/E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,GACCA,EAAmDN,EAAOyD,WAC9DlE,EAAIytB,YAAY1sB,GAChB,MACF,KAAK,GACCA,EAAoCN,EAAOO,YAC/ChB,EAAI0tB,mBAAmB3sB,GACvB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAamuB,wBAAwBvsB,UAAUwB,gBAAkB,WAC/D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAamuB,wBAAwB5qB,wBAAwB/D,KAAM6D,GAC5DA,EAAOG,iBAChB,EAUAxD,aAAamuB,wBAAwB5qB,wBAA0B,SAASE,EAASJ,GAC/E,IAAIK,OAAIC,GACRD,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQmsB,gBAEVvsB,EAAOuD,UACL,GACAlD,IAGJA,EAAID,EAAQosB,2BACNhsB,OAAS,GACbR,EAAOS,WACL,GACAJ,EAGN,EAOA1D,aAAamuB,wBAAwBvsB,UAAUqmB,gBAAkB,WAC/D,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAamuB,wBAAwBvsB,UAAU8lB,sBAAwB,WACrE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAamuB,wBAAwBvsB,UAAUmmB,qBAAuB,WACpE,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAamuB,wBAAwBvsB,UAAUimB,gBAAkB,SAAS9kB,GACxE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAamuB,wBAAwBvsB,UAAUguB,YAAc,WAC3D,OAAkD3wB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,EAC/F,EAOAQ,aAAamuB,wBAAwBvsB,UAAU6tB,YAAc,SAAS1sB,GACpE,OAAO9D,EAAKkB,QAAQ6H,mBAAmBxI,KAAM,GAAIuD,EACnD,EAOA/C,aAAamuB,wBAAwBvsB,UAAUkuB,mBAAqB,WAClE,OAA4C7wB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,GACzF,EAQAQ,aAAamuB,wBAAwBvsB,UAAU2tB,yBAA2B,WACxE,OAA8BtwB,EAAKkB,QAAQ+D,WACvC1E,KAAKswB,qBACX,EAUA9vB,aAAamuB,wBAAwBvsB,UAAUiuB,wBAA0B,WACvE,OAAmC5wB,EAAKkB,QAAQgE,UAC5C3E,KAAKswB,qBACX,EAOA9vB,aAAamuB,wBAAwBvsB,UAAU8tB,mBAAqB,SAAS3sB,GAC3E,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,GAAIuD,EACpD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAaouB,wBAAwBxsB,UAAUC,SAAW,SAASC,GACjE,OAAO9B,aAAaouB,wBAAwBvsB,SAASC,EAAqBtC,KAC5E,EAYAQ,aAAaouB,wBAAwBvsB,SAAW,SAASE,EAAiBC,GACxE,IAAOC,EAAM,CACXwlB,aAAczlB,EAAI0lB,yBAMpB,OAHI3lB,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAaouB,wBAAwB7rB,kBAAoB,SAASC,GAChE,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAaouB,wBAC3B,OAAOpuB,aAAaouB,wBAAwBzrB,4BAA4BX,EAAKS,EAC/E,EAUAzC,aAAaouB,wBAAwBzrB,4BAA8B,SAASX,EAAKS,GAC/E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,GACK,IAFOJ,EAAOK,iBAEnB,CACE,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,EACf,MAELN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAaouB,wBAAwBxsB,UAAUwB,gBAAkB,WAC/D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAaouB,wBAAwB7qB,wBAAwB/D,KAAM6D,GAC5DA,EAAOG,iBAChB,EAUAxD,aAAaouB,wBAAwB7qB,wBAA0B,SAASE,EAASJ,GAC/E,IAAIK,GACJA,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,EAGN,EAOA1D,aAAaouB,wBAAwBxsB,UAAUqmB,gBAAkB,WAC/D,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaouB,wBAAwBxsB,UAAU8lB,sBAAwB,WACrE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAaouB,wBAAwBxsB,UAAUmmB,qBAAuB,WACpE,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAaouB,wBAAwBxsB,UAAUimB,gBAAkB,SAAS9kB,GACxE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAaquB,iBAAiBzsB,UAAUC,SAAW,SAASC,GAC1D,OAAO9B,aAAaquB,iBAAiBxsB,SAASC,EAAqBtC,KACrE,EAYAQ,aAAaquB,iBAAiBxsB,SAAW,SAASE,EAAiBC,GACjE,IAAOC,EAAM,CACXwlB,aAAczlB,EAAI0lB,wBAClBsF,UAAWhrB,EAAIirB,qBACfC,OAAQjuB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAMnD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAaquB,iBAAiB9rB,kBAAoB,SAASC,GACzD,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAaquB,iBAC3B,OAAOruB,aAAaquB,iBAAiB1rB,4BAA4BX,EAAKS,EACxE,EAUAzC,aAAaquB,iBAAiB1rB,4BAA8B,SAASX,EAAKS,GACxE,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAIorB,aAAarqB,GACjB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIqrB,UAAUtqB,GACd,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAaquB,iBAAiBzsB,UAAUwB,gBAAkB,WACxD,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAaquB,iBAAiB9qB,wBAAwB/D,KAAM6D,GACrDA,EAAOG,iBAChB,EAUAxD,aAAaquB,iBAAiB9qB,wBAA0B,SAASE,EAASJ,GACxE,IAAIK,OAAIC,GACRD,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQ8pB,qBACN1pB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQ+pB,cAEVnqB,EAAOyB,WACL,EACApB,EAGN,EAOA1D,aAAaquB,iBAAiBzsB,UAAUqmB,gBAAkB,WACxD,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaquB,iBAAiBzsB,UAAU8lB,sBAAwB,WAC9D,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAaquB,iBAAiBzsB,UAAUmmB,qBAAuB,WAC7D,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAaquB,iBAAiBzsB,UAAUimB,gBAAkB,SAAS9kB,GACjE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaquB,iBAAiBzsB,UAAU8rB,aAAe,WACrD,OAA4CzuB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaquB,iBAAiBzsB,UAAUqrB,mBAAqB,WAC3D,OAA8BhuB,EAAKkB,QAAQ+D,WACvC1E,KAAKkuB,eACX,EAUA1tB,aAAaquB,iBAAiBzsB,UAAU2rB,kBAAoB,WAC1D,OAAmCtuB,EAAKkB,QAAQgE,UAC5C3E,KAAKkuB,eACX,EAOA1tB,aAAaquB,iBAAiBzsB,UAAUwrB,aAAe,SAASrqB,GAC9D,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaquB,iBAAiBzsB,UAAU4rB,UAAY,WAClD,OAA8BvuB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaquB,iBAAiBzsB,UAAUyrB,UAAY,SAAStqB,GAC3D,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EASA/C,aAAasuB,wBAAwB3tB,gBAAkB,CAAC,GAIpD1B,EAAKkB,QAAQwB,qBAajB3B,aAAasuB,wBAAwB1sB,UAAUC,SAAW,SAASC,GACjE,OAAO9B,aAAasuB,wBAAwBzsB,SAASC,EAAqBtC,KAC5E,EAYAQ,aAAasuB,wBAAwBzsB,SAAW,SAASE,EAAiBC,GACxE,IAAOC,EAAM,CACX8tB,sBAAuB/tB,EAAIguB,iCAC3BC,cAAehxB,EAAKkB,QAAQ2J,aAAa9H,EAAIkuB,mBAC7ClwB,aAAasuB,wBAAwBC,UAAU1sB,SAAUE,GACzD4H,KAAM1K,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAC/CmuB,OAAQlxB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,KAMnD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAasuB,wBAAwB/rB,kBAAoB,SAASC,GAChE,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAasuB,wBAC3B,OAAOtuB,aAAasuB,wBAAwB3rB,4BAA4BX,EAAKS,EAC/E,EAUAzC,aAAasuB,wBAAwB3rB,4BAA8B,SAASX,EAAKS,GAC/E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAIouB,yBAAyBrtB,GAC7B,MACF,KAAK,EACCA,EAAQ,IAAI/C,aAAasuB,wBAAwBC,UACrD9rB,EAAOoD,YAAY9C,EAAM/C,aAAasuB,wBAAwBC,UAAU5rB,6BACxEX,EAAIquB,aAAattB,GACjB,MACF,KAAK,EACCA,EAA+BN,EAAO6K,aAC1CtL,EAAImL,QAAQpK,GACZ,MACF,KAAK,EACCA,EAA+BN,EAAO6K,aAC1CtL,EAAIsuB,UAAUvtB,GACd,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAasuB,wBAAwB1sB,UAAUwB,gBAAkB,WAC/D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAasuB,wBAAwB/qB,wBAAwB/D,KAAM6D,GAC5DA,EAAOG,iBAChB,EAUAxD,aAAasuB,wBAAwB/qB,wBAA0B,SAASE,EAASJ,GAC/E,IAAIK,OAAIC,GACRD,EAAID,EAAQ8sB,iCACN1sB,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQysB,oBACNrsB,OAAS,GACbR,EAAO+L,qBACL,EACA1L,EACA1D,aAAasuB,wBAAwBC,UAAUhrB,0BAGnDG,EAAID,EAAQyL,WACNrL,OAAS,GACbR,EAAOgM,YACL,EACA3L,IAGJA,EAAID,EAAQ+sB,aACN3sB,OAAS,GACbR,EAAOgM,YACL,EACA3L,EAGN,EAMIzE,EAAKkB,QAAQwB,qBAajB3B,aAAasuB,wBAAwBC,UAAU3sB,UAAUC,SAAW,SAASC,GAC3E,OAAO9B,aAAasuB,wBAAwBC,UAAU1sB,SAASC,EAAqBtC,KACtF,EAYAQ,aAAasuB,wBAAwBC,UAAU1sB,SAAW,SAASE,EAAiBC,GAClF,IAAOC,EAAM,CACXwuB,oBAAqBxxB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GAC9DI,QAASJ,EAAIK,mBACb6qB,OAAQjuB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAMnD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAasuB,wBAAwBC,UAAUhsB,kBAAoB,SAASC,GAC1E,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAasuB,wBAAwBC,UACnD,OAAOvuB,aAAasuB,wBAAwBC,UAAU5rB,4BAA4BX,EAAKS,EACzF,EAUAzC,aAAasuB,wBAAwBC,UAAU5rB,4BAA8B,SAASX,EAAKS,GACzF,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAA+BN,EAAOiC,YAC1C1C,EAAI0uB,uBAAuB3tB,GAC3B,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAIkB,WAAWH,GACf,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIqrB,UAAUtqB,GACd,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAasuB,wBAAwBC,UAAU3sB,UAAUwB,gBAAkB,WACzE,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAasuB,wBAAwBC,UAAUhrB,wBAAwB/D,KAAM6D,GACtEA,EAAOG,iBAChB,EAUAxD,aAAasuB,wBAAwBC,UAAUhrB,wBAA0B,SAASE,EAASJ,GACzF,IAAIK,OAAIC,EAEE,KADVD,EAAID,EAAQktB,2BAEVttB,EAAOyB,WACL,EACApB,IAGJA,EAAID,EAAQM,mBACNF,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQ+pB,cAEVnqB,EAAOyB,WACL,EACApB,EAGN,EAOA1D,aAAasuB,wBAAwBC,UAAU3sB,UAAU+uB,uBAAyB,WAChF,OAA8B1xB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAasuB,wBAAwBC,UAAU3sB,UAAU8uB,uBAAyB,SAAS3tB,GACzF,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAasuB,wBAAwBC,UAAU3sB,UAAUyC,WAAa,WACpE,OAA4CpF,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAasuB,wBAAwBC,UAAU3sB,UAAUS,iBAAmB,WAC1E,OAA8BpD,EAAKkB,QAAQ+D,WACvC1E,KAAK6E,aACX,EAUArE,aAAasuB,wBAAwBC,UAAU3sB,UAAUmC,gBAAkB,WACzE,OAAmC9E,EAAKkB,QAAQgE,UAC5C3E,KAAK6E,aACX,EAOArE,aAAasuB,wBAAwBC,UAAU3sB,UAAUsB,WAAa,SAASH,GAC7E,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAasuB,wBAAwBC,UAAU3sB,UAAU4rB,UAAY,WACnE,OAA8BvuB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAasuB,wBAAwBC,UAAU3sB,UAAUyrB,UAAY,SAAStqB,GAC5E,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAasuB,wBAAwB1sB,UAAUgvB,yBAA2B,WACxE,OAA4C3xB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAasuB,wBAAwB1sB,UAAUouB,+BAAiC,WAC9E,OAA8B/wB,EAAKkB,QAAQ+D,WACvC1E,KAAKoxB,2BACX,EAUA5wB,aAAasuB,wBAAwB1sB,UAAU2uB,8BAAgC,WAC7E,OAAmCtxB,EAAKkB,QAAQgE,UAC5C3E,KAAKoxB,2BACX,EAOA5wB,aAAasuB,wBAAwB1sB,UAAUwuB,yBAA2B,SAASrtB,GACjF,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAasuB,wBAAwB1sB,UAAUsuB,iBAAmB,WAChE,OACEjxB,EAAKkB,QAAQ2S,wBAAwBtT,KAAMQ,aAAasuB,wBAAwBC,UAAW,EAC/F,EAOAvuB,aAAasuB,wBAAwB1sB,UAAUivB,iBAAmB,SAAS9tB,GACzE,OAAO9D,EAAKkB,QAAQ6S,wBAAwBxT,KAAM,EAAGuD,EACvD,EAQA/C,aAAasuB,wBAAwB1sB,UAAUyuB,aAAe,SAASpd,EAAWpL,GAChF,OAAO5I,EAAKkB,QAAQ+S,0BAA0B1T,KAAM,EAAGyT,EAAWjT,aAAasuB,wBAAwBC,UAAW1mB,EACpH,EAOA7H,aAAasuB,wBAAwB1sB,UAAUkvB,mBAAqB,WAClE,OAAOtxB,KAAKqxB,iBAAiB,GAC/B,EAOA7wB,aAAasuB,wBAAwB1sB,UAAUsN,QAAU,WACvD,OAA8BjQ,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GAC1E,EAOAQ,aAAasuB,wBAAwB1sB,UAAUuL,QAAU,SAASpK,GAChE,OAAO9D,EAAKkB,QAAQiY,qBAAqB5Y,KAAM,EAAGuD,EACpD,EAOA/C,aAAasuB,wBAAwB1sB,UAAU4uB,UAAY,WACzD,OAA8BvxB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GAC1E,EAOAQ,aAAasuB,wBAAwB1sB,UAAU0uB,UAAY,SAASvtB,GAClE,OAAO9D,EAAKkB,QAAQiY,qBAAqB5Y,KAAM,EAAGuD,EACpD,EASA/C,aAAawuB,kBAAkB7tB,gBAAkB,CAAC,GAI9C1B,EAAKkB,QAAQwB,qBAajB3B,aAAawuB,kBAAkB5sB,UAAUC,SAAW,SAASC,GAC3D,OAAO9B,aAAawuB,kBAAkB3sB,SAASC,EAAqBtC,KACtE,EAYAQ,aAAawuB,kBAAkB3sB,SAAW,SAASE,EAAiBC,GAClE,IAAI0B,EAAGzB,EAAM,CACX8uB,iBAAkBrtB,EAAI1B,EAAIgvB,uBAAyBhxB,aAAawuB,kBAAkBC,gBAAgB5sB,SAASE,EAAiB2B,GAC5HkhB,UAAW3lB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACpDivB,4BAA6BhyB,EAAKkB,QAAQ2J,aAAa9H,EAAIkvB,iCAC3DlxB,aAAasuB,wBAAwBzsB,SAAUE,IAMjD,OAHIA,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAawuB,kBAAkBjsB,kBAAoB,SAASC,GAC1D,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAawuB,kBAC3B,OAAOxuB,aAAawuB,kBAAkB7rB,4BAA4BX,EAAKS,EACzE,EAUAzC,aAAawuB,kBAAkB7rB,4BAA8B,SAASX,EAAKS,GACzE,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAQ,IAAI/C,aAAawuB,kBAAkBC,gBAC/ChsB,EAAOoD,YAAY9C,EAAM/C,aAAawuB,kBAAkBC,gBAAgB9rB,6BACxEX,EAAImvB,mBAAmBpuB,GACvB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIsjB,aAAaviB,GACjB,MACF,KAAK,EACCA,EAAQ,IAAI/C,aAAasuB,wBAC7B7rB,EAAOoD,YAAY9C,EAAM/C,aAAasuB,wBAAwB3rB,6BAC9DX,EAAIovB,2BAA2BruB,GAC/B,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAawuB,kBAAkB5sB,UAAUwB,gBAAkB,WACzD,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAawuB,kBAAkBjrB,wBAAwB/D,KAAM6D,GACtDA,EAAOG,iBAChB,EAUAxD,aAAawuB,kBAAkBjrB,wBAA0B,SAASE,EAASJ,GACzE,IAAIK,OAAIC,EAEC,OADTD,EAAID,EAAQutB,uBAEV3tB,EAAOqM,aACL,EACAhM,EACA1D,aAAawuB,kBAAkBC,gBAAgBlrB,yBAIzC,KADVG,EAAID,EAAQqiB,iBAEVziB,EAAOyB,WACL,EACApB,IAGJA,EAAID,EAAQytB,kCACNrtB,OAAS,GACbR,EAAO+L,qBACL,EACA1L,EACA1D,aAAasuB,wBAAwB/qB,wBAG3C,EAMItE,EAAKkB,QAAQwB,qBAajB3B,aAAawuB,kBAAkBC,gBAAgB7sB,UAAUC,SAAW,SAASC,GAC3E,OAAO9B,aAAawuB,kBAAkBC,gBAAgB5sB,SAASC,EAAqBtC,KACtF,EAYAQ,aAAawuB,kBAAkBC,gBAAgB5sB,SAAW,SAASE,EAAiBC,GAClF,IAAOC,EAAM,CACXovB,KAAMrvB,EAAIsvB,gBACVC,OAAQtyB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAMnD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAawuB,kBAAkBC,gBAAgBlsB,kBAAoB,SAASC,GAC1E,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAawuB,kBAAkBC,gBAC7C,OAAOzuB,aAAawuB,kBAAkBC,gBAAgB9rB,4BAA4BX,EAAKS,EACzF,EAUAzC,aAAawuB,kBAAkBC,gBAAgB9rB,4BAA8B,SAASX,EAAKS,GACzF,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAIwvB,QAAQzuB,GACZ,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIyvB,UAAU1uB,GACd,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAawuB,kBAAkBC,gBAAgB7sB,UAAUwB,gBAAkB,WACzE,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAawuB,kBAAkBC,gBAAgBlrB,wBAAwB/D,KAAM6D,GACtEA,EAAOG,iBAChB,EAUAxD,aAAawuB,kBAAkBC,gBAAgBlrB,wBAA0B,SAASE,EAASJ,GACzF,IAAIK,OAAIC,GACRD,EAAID,EAAQiuB,gBACN7tB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQkuB,cAEVtuB,EAAOyB,WACL,EACApB,EAGN,EAOA1D,aAAawuB,kBAAkBC,gBAAgB7sB,UAAUgwB,QAAU,WACjE,OAA4C3yB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAawuB,kBAAkBC,gBAAgB7sB,UAAU0vB,cAAgB,WACvE,OAA8BryB,EAAKkB,QAAQ+D,WACvC1E,KAAKoyB,UACX,EAUA5xB,aAAawuB,kBAAkBC,gBAAgB7sB,UAAU8vB,aAAe,WACtE,OAAmCzyB,EAAKkB,QAAQgE,UAC5C3E,KAAKoyB,UACX,EAOA5xB,aAAawuB,kBAAkBC,gBAAgB7sB,UAAU4vB,QAAU,SAASzuB,GAC1E,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAawuB,kBAAkBC,gBAAgB7sB,UAAU+vB,UAAY,WACnE,OAA8B1yB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAawuB,kBAAkBC,gBAAgB7sB,UAAU6vB,UAAY,SAAS1uB,GAC5E,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAawuB,kBAAkB5sB,UAAUovB,mBAAqB,WAC5D,OACE/xB,EAAKkB,QAAQqS,gBAAgBhT,KAAMQ,aAAawuB,kBAAkBC,gBAAiB,EACvF,EAOAzuB,aAAawuB,kBAAkB5sB,UAAUuvB,mBAAqB,SAASpuB,GACrE,OAAO9D,EAAKkB,QAAQsS,gBAAgBjT,KAAM,EAAGuD,EAC/C,EAOA/C,aAAawuB,kBAAkB5sB,UAAUiwB,qBAAuB,WAC9D,OAAOryB,KAAK2xB,wBAAmBxtB,EACjC,EAOA3D,aAAawuB,kBAAkB5sB,UAAUkwB,mBAAqB,WAC5D,OAAyC,MAAlC7yB,EAAKkB,QAAQyS,SAASpT,KAAM,EACrC,EAOAQ,aAAawuB,kBAAkB5sB,UAAUkkB,aAAe,WACtD,OAA8B7mB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAawuB,kBAAkB5sB,UAAU0jB,aAAe,SAASviB,GAC/D,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAawuB,kBAAkB5sB,UAAUsvB,+BAAiC,WACxE,OACEjyB,EAAKkB,QAAQ2S,wBAAwBtT,KAAMQ,aAAasuB,wBAAyB,EACrF,EAOAtuB,aAAawuB,kBAAkB5sB,UAAUmwB,+BAAiC,SAAShvB,GACjF,OAAO9D,EAAKkB,QAAQ6S,wBAAwBxT,KAAM,EAAGuD,EACvD,EAQA/C,aAAawuB,kBAAkB5sB,UAAUwvB,2BAA6B,SAASne,EAAWpL,GACxF,OAAO5I,EAAKkB,QAAQ+S,0BAA0B1T,KAAM,EAAGyT,EAAWjT,aAAasuB,wBAAyBzmB,EAC1G,EAOA7H,aAAawuB,kBAAkB5sB,UAAUowB,iCAAmC,WAC1E,OAAOxyB,KAAKuyB,+BAA+B,GAC7C,EAMI9yB,EAAKkB,QAAQwB,qBAajB3B,aAAa0uB,aAAa9sB,UAAUC,SAAW,SAASC,GACtD,OAAO9B,aAAa0uB,aAAa7sB,SAASC,EAAqBtC,KACjE,EAYAQ,aAAa0uB,aAAa7sB,SAAW,SAASE,EAAiBC,GAC7D,IAAOC,EAAM,CACX2H,QAAS3K,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GAClDiwB,YAAahzB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,GAAI,IAMzD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAa0uB,aAAansB,kBAAoB,SAASC,GACrD,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAa0uB,aAC3B,OAAO1uB,aAAa0uB,aAAa/rB,4BAA4BX,EAAKS,EACpE,EAUAzC,aAAa0uB,aAAa/rB,4BAA8B,SAASX,EAAKS,GACpE,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAA+BN,EAAOiC,YAC1C1C,EAAIoL,WAAWrK,GACf,MACF,KAAK,GACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIkwB,eAAenvB,GACnB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAa0uB,aAAa9sB,UAAUwB,gBAAkB,WACpD,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAa0uB,aAAanrB,wBAAwB/D,KAAM6D,GACjDA,EAAOG,iBAChB,EAUAxD,aAAa0uB,aAAanrB,wBAA0B,SAASE,EAASJ,GACpE,IAAIK,OAAIC,EAEE,KADVD,EAAID,EAAQ0L,eAEV9L,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQ0uB,mBAEV9uB,EAAOyB,WACL,GACApB,EAGN,EAOA1D,aAAa0uB,aAAa9sB,UAAUuN,WAAa,WAC/C,OAA8BlQ,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAa0uB,aAAa9sB,UAAUwL,WAAa,SAASrK,GACxD,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAa0uB,aAAa9sB,UAAUuwB,eAAiB,WACnD,OAA8BlzB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,EAC3E,EAOAQ,aAAa0uB,aAAa9sB,UAAUswB,eAAiB,SAASnvB,GAC5D,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,GAAIuD,EAClD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAa2uB,kBAAkB/sB,UAAUC,SAAW,SAASC,GAC3D,OAAO9B,aAAa2uB,kBAAkB9sB,SAASC,EAAqBtC,KACtE,EAYAQ,aAAa2uB,kBAAkB9sB,SAAW,SAASE,EAAiBC,GAClE,IAAOC,EAAM,CACXG,QAASJ,EAAIK,oBAMf,OAHIN,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAa2uB,kBAAkBpsB,kBAAoB,SAASC,GAC1D,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAa2uB,kBAC3B,OAAO3uB,aAAa2uB,kBAAkBhsB,4BAA4BX,EAAKS,EACzE,EAUAzC,aAAa2uB,kBAAkBhsB,4BAA8B,SAASX,EAAKS,GACzE,KAAOA,EAAOG,cACRH,EAAOI,cAIX,GACK,IAFOJ,EAAOK,iBAEnB,CACE,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAIkB,WAAWH,EACV,MAELN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAa2uB,kBAAkB/sB,UAAUwB,gBAAkB,WACzD,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAa2uB,kBAAkBprB,wBAAwB/D,KAAM6D,GACtDA,EAAOG,iBAChB,EAUAxD,aAAa2uB,kBAAkBprB,wBAA0B,SAASE,EAASJ,GACzE,IAAIK,GACJA,EAAID,EAAQM,mBACNF,OAAS,GACbR,EAAOS,WACL,EACAJ,EAGN,EAOA1D,aAAa2uB,kBAAkB/sB,UAAUyC,WAAa,WACpD,OAA4CpF,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAa2uB,kBAAkB/sB,UAAUS,iBAAmB,WAC1D,OAA8BpD,EAAKkB,QAAQ+D,WACvC1E,KAAK6E,aACX,EAUArE,aAAa2uB,kBAAkB/sB,UAAUmC,gBAAkB,WACzD,OAAmC9E,EAAKkB,QAAQgE,UAC5C3E,KAAK6E,aACX,EAOArE,aAAa2uB,kBAAkB/sB,UAAUsB,WAAa,SAASH,GAC7D,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAa4uB,sBAAsBhtB,UAAUC,SAAW,SAASC,GAC/D,OAAO9B,aAAa4uB,sBAAsB/sB,SAASC,EAAqBtC,KAC1E,EAYAQ,aAAa4uB,sBAAsB/sB,SAAW,SAASE,EAAiBC,GACtE,IAAI0B,EAAGzB,EAAM,CACXmwB,mBAAoB1uB,EAAI1B,EAAIqwB,yBAA2BryB,aAAa2uB,kBAAkB9sB,SAASE,EAAiB2B,GAChHqtB,iBAAkBrtB,EAAI1B,EAAIgvB,uBAAyBhxB,aAAawuB,kBAAkBC,gBAAgB5sB,SAASE,EAAiB2B,IAM9H,OAHI3B,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAa4uB,sBAAsBrsB,kBAAoB,SAASC,GAC9D,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAa4uB,sBAC3B,OAAO5uB,aAAa4uB,sBAAsBjsB,4BAA4BX,EAAKS,EAC7E,EAUAzC,aAAa4uB,sBAAsBjsB,4BAA8B,SAASX,EAAKS,GAC7E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAQ,IAAI/C,aAAa2uB,kBAC7BlsB,EAAOoD,YAAY9C,EAAM/C,aAAa2uB,kBAAkBhsB,6BACxDX,EAAIswB,qBAAqBvvB,GACzB,MACF,KAAK,EACCA,EAAQ,IAAI/C,aAAawuB,kBAAkBC,gBAC/ChsB,EAAOoD,YAAY9C,EAAM/C,aAAawuB,kBAAkBC,gBAAgB9rB,6BACxEX,EAAImvB,mBAAmBpuB,GACvB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAa4uB,sBAAsBhtB,UAAUwB,gBAAkB,WAC7D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAa4uB,sBAAsBrrB,wBAAwB/D,KAAM6D,GAC1DA,EAAOG,iBAChB,EAUAxD,aAAa4uB,sBAAsBrrB,wBAA0B,SAASE,EAASJ,GAC7E,IAAIK,OAAIC,EAEC,OADTD,EAAID,EAAQ4uB,yBAEVhvB,EAAOqM,aACL,EACAhM,EACA1D,aAAa2uB,kBAAkBprB,yBAI1B,OADTG,EAAID,EAAQutB,uBAEV3tB,EAAOqM,aACL,EACAhM,EACA1D,aAAawuB,kBAAkBC,gBAAgBlrB,wBAGrD,EAOAvD,aAAa4uB,sBAAsBhtB,UAAUywB,qBAAuB,WAClE,OACEpzB,EAAKkB,QAAQqS,gBAAgBhT,KAAMQ,aAAa2uB,kBAAmB,EACvE,EAOA3uB,aAAa4uB,sBAAsBhtB,UAAU0wB,qBAAuB,SAASvvB,GAC3E,OAAO9D,EAAKkB,QAAQsS,gBAAgBjT,KAAM,EAAGuD,EAC/C,EAOA/C,aAAa4uB,sBAAsBhtB,UAAU2wB,uBAAyB,WACpE,OAAO/yB,KAAK8yB,0BAAqB3uB,EACnC,EAOA3D,aAAa4uB,sBAAsBhtB,UAAU4wB,qBAAuB,WAClE,OAAyC,MAAlCvzB,EAAKkB,QAAQyS,SAASpT,KAAM,EACrC,EAOAQ,aAAa4uB,sBAAsBhtB,UAAUovB,mBAAqB,WAChE,OACE/xB,EAAKkB,QAAQqS,gBAAgBhT,KAAMQ,aAAawuB,kBAAkBC,gBAAiB,EACvF,EAOAzuB,aAAa4uB,sBAAsBhtB,UAAUuvB,mBAAqB,SAASpuB,GACzE,OAAO9D,EAAKkB,QAAQsS,gBAAgBjT,KAAM,EAAGuD,EAC/C,EAOA/C,aAAa4uB,sBAAsBhtB,UAAUiwB,qBAAuB,WAClE,OAAOryB,KAAK2xB,wBAAmBxtB,EACjC,EAOA3D,aAAa4uB,sBAAsBhtB,UAAUkwB,mBAAqB,WAChE,OAAyC,MAAlC7yB,EAAKkB,QAAQyS,SAASpT,KAAM,EACrC,EAMIP,EAAKkB,QAAQwB,qBAajB3B,aAAa6uB,uBAAuBjtB,UAAUC,SAAW,SAASC,GAChE,OAAO9B,aAAa6uB,uBAAuBhtB,SAASC,EAAqBtC,KAC3E,EAYAQ,aAAa6uB,uBAAuBhtB,SAAW,SAASE,EAAiBC,GACvE,IAAI0B,EAAGzB,EAAM,CACX2H,QAAS3K,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GAClD+uB,iBAAkBrtB,EAAI1B,EAAIgvB,uBAAyBhxB,aAAawuB,kBAAkBC,gBAAgB5sB,SAASE,EAAiB2B,IAM9H,OAHI3B,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAa6uB,uBAAuBtsB,kBAAoB,SAASC,GAC/D,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAa6uB,uBAC3B,OAAO7uB,aAAa6uB,uBAAuBlsB,4BAA4BX,EAAKS,EAC9E,EAUAzC,aAAa6uB,uBAAuBlsB,4BAA8B,SAASX,EAAKS,GAC9E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAA+BN,EAAOiC,YAC1C1C,EAAIoL,WAAWrK,GACf,MACF,KAAK,EACCA,EAAQ,IAAI/C,aAAawuB,kBAAkBC,gBAC/ChsB,EAAOoD,YAAY9C,EAAM/C,aAAawuB,kBAAkBC,gBAAgB9rB,6BACxEX,EAAImvB,mBAAmBpuB,GACvB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAa6uB,uBAAuBjtB,UAAUwB,gBAAkB,WAC9D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAa6uB,uBAAuBtrB,wBAAwB/D,KAAM6D,GAC3DA,EAAOG,iBAChB,EAUAxD,aAAa6uB,uBAAuBtrB,wBAA0B,SAASE,EAASJ,GAC9E,IAAIK,OAAIC,EAEE,KADVD,EAAID,EAAQ0L,eAEV9L,EAAOyB,WACL,EACApB,GAIK,OADTA,EAAID,EAAQutB,uBAEV3tB,EAAOqM,aACL,EACAhM,EACA1D,aAAawuB,kBAAkBC,gBAAgBlrB,wBAGrD,EAOAvD,aAAa6uB,uBAAuBjtB,UAAUuN,WAAa,WACzD,OAA8BlQ,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAa6uB,uBAAuBjtB,UAAUwL,WAAa,SAASrK,GAClE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAa6uB,uBAAuBjtB,UAAUovB,mBAAqB,WACjE,OACE/xB,EAAKkB,QAAQqS,gBAAgBhT,KAAMQ,aAAawuB,kBAAkBC,gBAAiB,EACvF,EAOAzuB,aAAa6uB,uBAAuBjtB,UAAUuvB,mBAAqB,SAASpuB,GAC1E,OAAO9D,EAAKkB,QAAQsS,gBAAgBjT,KAAM,EAAGuD,EAC/C,EAOA/C,aAAa6uB,uBAAuBjtB,UAAUiwB,qBAAuB,WACnE,OAAOryB,KAAK2xB,wBAAmBxtB,EACjC,EAOA3D,aAAa6uB,uBAAuBjtB,UAAUkwB,mBAAqB,WACjE,OAAyC,MAAlC7yB,EAAKkB,QAAQyS,SAASpT,KAAM,EACrC,EAMIP,EAAKkB,QAAQwB,qBAajB3B,aAAa8uB,wBAAwBltB,UAAUC,SAAW,SAASC,GACjE,OAAO9B,aAAa8uB,wBAAwBjtB,SAASC,EAAqBtC,KAC5E,EAYAQ,aAAa8uB,wBAAwBjtB,SAAW,SAASE,EAAiBC,GACxE,IAAOC,EAAM,CACXwlB,aAAczlB,EAAI0lB,wBAClBhX,cAAezR,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACxDqtB,SAAUpwB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAMrD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAa8uB,wBAAwBvsB,kBAAoB,SAASC,GAChE,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAa8uB,wBAC3B,OAAO9uB,aAAa8uB,wBAAwBnsB,4BAA4BX,EAAKS,EAC/E,EAUAzC,aAAa8uB,wBAAwBnsB,4BAA8B,SAASX,EAAKS,GAC/E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI4O,iBAAiB7N,GACrB,MACF,KAAK,EACCA,EAAmDN,EAAOyD,WAC9DlE,EAAIytB,YAAY1sB,GAChB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAa8uB,wBAAwBltB,UAAUwB,gBAAkB,WAC/D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAa8uB,wBAAwBvrB,wBAAwB/D,KAAM6D,GAC5DA,EAAOG,iBAChB,EAUAxD,aAAa8uB,wBAAwBvrB,wBAA0B,SAASE,EAASJ,GAC/E,IAAIK,OAAIC,GACRD,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQqN,qBAEVzN,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQmsB,gBAEVvsB,EAAOuD,UACL,EACAlD,EAGN,EAOA1D,aAAa8uB,wBAAwBltB,UAAUqmB,gBAAkB,WAC/D,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAa8uB,wBAAwBltB,UAAU8lB,sBAAwB,WACrE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAa8uB,wBAAwBltB,UAAUmmB,qBAAuB,WACpE,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAa8uB,wBAAwBltB,UAAUimB,gBAAkB,SAAS9kB,GACxE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAa8uB,wBAAwBltB,UAAUkP,iBAAmB,WAChE,OAA8B7R,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAa8uB,wBAAwBltB,UAAUgP,iBAAmB,SAAS7N,GACzE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAa8uB,wBAAwBltB,UAAUguB,YAAc,WAC3D,OAAkD3wB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC9F,EAOAQ,aAAa8uB,wBAAwBltB,UAAU6tB,YAAc,SAAS1sB,GACpE,OAAO9D,EAAKkB,QAAQ6H,mBAAmBxI,KAAM,EAAGuD,EAClD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAa+uB,0BAA0BntB,UAAUC,SAAW,SAASC,GACnE,OAAO9B,aAAa+uB,0BAA0BltB,SAASC,EAAqBtC,KAC9E,EAYAQ,aAAa+uB,0BAA0BltB,SAAW,SAASE,EAAiBC,GAC1E,IAAOC,EAAM,CACXwlB,aAAczlB,EAAI0lB,wBAClB+K,gBAAiBxzB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GAC1DqtB,SAAUpwB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAMrD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAa+uB,0BAA0BxsB,kBAAoB,SAASC,GAClE,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAa+uB,0BAC3B,OAAO/uB,aAAa+uB,0BAA0BpsB,4BAA4BX,EAAKS,EACjF,EAUAzC,aAAa+uB,0BAA0BpsB,4BAA8B,SAASX,EAAKS,GACjF,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI0wB,mBAAmB3vB,GACvB,MACF,KAAK,EACCA,EAAmDN,EAAOyD,WAC9DlE,EAAIytB,YAAY1sB,GAChB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAa+uB,0BAA0BntB,UAAUwB,gBAAkB,WACjE,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAa+uB,0BAA0BxrB,wBAAwB/D,KAAM6D,GAC9DA,EAAOG,iBAChB,EAUAxD,aAAa+uB,0BAA0BxrB,wBAA0B,SAASE,EAASJ,GACjF,IAAIK,OAAIC,GACRD,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQkvB,uBAEVtvB,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQmsB,gBAEVvsB,EAAOuD,UACL,EACAlD,EAGN,EAOA1D,aAAa+uB,0BAA0BntB,UAAUqmB,gBAAkB,WACjE,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAa+uB,0BAA0BntB,UAAU8lB,sBAAwB,WACvE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAa+uB,0BAA0BntB,UAAUmmB,qBAAuB,WACtE,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAa+uB,0BAA0BntB,UAAUimB,gBAAkB,SAAS9kB,GAC1E,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAa+uB,0BAA0BntB,UAAU+wB,mBAAqB,WACpE,OAA8B1zB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAa+uB,0BAA0BntB,UAAU8wB,mBAAqB,SAAS3vB,GAC7E,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAa+uB,0BAA0BntB,UAAUguB,YAAc,WAC7D,OAAkD3wB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC9F,EAOAQ,aAAa+uB,0BAA0BntB,UAAU6tB,YAAc,SAAS1sB,GACtE,OAAO9D,EAAKkB,QAAQ6H,mBAAmBxI,KAAM,EAAGuD,EAClD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAagvB,+BAA+BptB,UAAUC,SAAW,SAASC,GACxE,OAAO9B,aAAagvB,+BAA+BntB,SAASC,EAAqBtC,KACnF,EAYAQ,aAAagvB,+BAA+BntB,SAAW,SAASE,EAAiBC,GAC/E,IAAOC,EAAM,CACXwlB,aAAczlB,EAAI0lB,yBAMpB,OAHI3lB,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAagvB,+BAA+BzsB,kBAAoB,SAASC,GACvE,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAagvB,+BAC3B,OAAOhvB,aAAagvB,+BAA+BrsB,4BAA4BX,EAAKS,EACtF,EAUAzC,aAAagvB,+BAA+BrsB,4BAA8B,SAASX,EAAKS,GACtF,KAAOA,EAAOG,cACRH,EAAOI,cAIX,GACK,IAFOJ,EAAOK,iBAEnB,CACE,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,EACf,MAELN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAagvB,+BAA+BptB,UAAUwB,gBAAkB,WACtE,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAagvB,+BAA+BzrB,wBAAwB/D,KAAM6D,GACnEA,EAAOG,iBAChB,EAUAxD,aAAagvB,+BAA+BzrB,wBAA0B,SAASE,EAASJ,GACtF,IAAIK,GACJA,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,EAGN,EAOA1D,aAAagvB,+BAA+BptB,UAAUqmB,gBAAkB,WACtE,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAagvB,+BAA+BptB,UAAU8lB,sBAAwB,WAC5E,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAagvB,+BAA+BptB,UAAUmmB,qBAAuB,WAC3E,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAagvB,+BAA+BptB,UAAUimB,gBAAkB,SAAS9kB,GAC/E,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAaivB,yBAAyBrtB,UAAUC,SAAW,SAASC,GAClE,OAAO9B,aAAaivB,yBAAyBptB,SAASC,EAAqBtC,KAC7E,EAYAQ,aAAaivB,yBAAyBptB,SAAW,SAASE,EAAiBC,GACzE,IAAOC,EAAM,CACXwlB,aAAczlB,EAAI0lB,wBAClB2H,SAAUpwB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACnD4H,QAAS3K,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GAClDstB,gBAAiBttB,EAAIutB,2BACrBqD,KAAM3zB,EAAKkB,QAAQ0K,2BAA2B7I,EAAK,GAAG,GACtD6wB,WAAY5zB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAMvD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAaivB,yBAAyB1sB,kBAAoB,SAASC,GACjE,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAaivB,yBAC3B,OAAOjvB,aAAaivB,yBAAyBtsB,4BAA4BX,EAAKS,EAChF,EAUAzC,aAAaivB,yBAAyBtsB,4BAA8B,SAASX,EAAKS,GAChF,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,EACCA,EAAmDN,EAAOyD,WAC9DlE,EAAIytB,YAAY1sB,GAChB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIoL,WAAWrK,GACf,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAI0tB,mBAAmB3sB,GACvB,MACF,KAAK,EACCA,EAAgCN,EAAOoL,WAC3C7L,EAAI8wB,QAAQ/vB,GACZ,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI+wB,cAAchwB,GAClB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAaivB,yBAAyBrtB,UAAUwB,gBAAkB,WAChE,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAaivB,yBAAyB1rB,wBAAwB/D,KAAM6D,GAC7DA,EAAOG,iBAChB,EAUAxD,aAAaivB,yBAAyB1rB,wBAA0B,SAASE,EAASJ,GAChF,IAAIK,OAAIC,GACRD,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQmsB,gBAEVvsB,EAAOuD,UACL,EACAlD,GAIM,KADVA,EAAID,EAAQ0L,eAEV9L,EAAOyB,WACL,EACApB,IAGJA,EAAID,EAAQosB,2BACNhsB,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQuvB,YAEV3vB,EAAOuM,UACL,EACAlM,GAIM,KADVA,EAAID,EAAQwvB,kBAEV5vB,EAAOyB,WACL,EACApB,EAGN,EAOA1D,aAAaivB,yBAAyBrtB,UAAUqmB,gBAAkB,WAChE,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaivB,yBAAyBrtB,UAAU8lB,sBAAwB,WACtE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAaivB,yBAAyBrtB,UAAUmmB,qBAAuB,WACrE,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAaivB,yBAAyBrtB,UAAUimB,gBAAkB,SAAS9kB,GACzE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaivB,yBAAyBrtB,UAAUguB,YAAc,WAC5D,OAAkD3wB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC9F,EAOAQ,aAAaivB,yBAAyBrtB,UAAU6tB,YAAc,SAAS1sB,GACrE,OAAO9D,EAAKkB,QAAQ6H,mBAAmBxI,KAAM,EAAGuD,EAClD,EAOA/C,aAAaivB,yBAAyBrtB,UAAUuN,WAAa,WAC3D,OAA8BlQ,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaivB,yBAAyBrtB,UAAUwL,WAAa,SAASrK,GACpE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAaivB,yBAAyBrtB,UAAUkuB,mBAAqB,WACnE,OAA4C7wB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaivB,yBAAyBrtB,UAAU2tB,yBAA2B,WACzE,OAA8BtwB,EAAKkB,QAAQ+D,WACvC1E,KAAKswB,qBACX,EAUA9vB,aAAaivB,yBAAyBrtB,UAAUiuB,wBAA0B,WACxE,OAAmC5wB,EAAKkB,QAAQgE,UAC5C3E,KAAKswB,qBACX,EAOA9vB,aAAaivB,yBAAyBrtB,UAAU8tB,mBAAqB,SAAS3sB,GAC5E,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaivB,yBAAyBrtB,UAAUoxB,QAAU,WACxD,OAA+B/zB,EAAKkB,QAAQ0K,2BAA2BrL,KAAM,GAAG,EAClF,EAOAQ,aAAaivB,yBAAyBrtB,UAAUkxB,QAAU,SAAS/vB,GACjE,OAAO9D,EAAKkB,QAAQuT,sBAAsBlU,KAAM,EAAGuD,EACrD,EAOA/C,aAAaivB,yBAAyBrtB,UAAUqxB,cAAgB,WAC9D,OAA8Bh0B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaivB,yBAAyBrtB,UAAUmxB,cAAgB,SAAShwB,GACvE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAakvB,2BAA2BttB,UAAUC,SAAW,SAASC,GACpE,OAAO9B,aAAakvB,2BAA2BrtB,SAASC,EAAqBtC,KAC/E,EAYAQ,aAAakvB,2BAA2BrtB,SAAW,SAASE,EAAiBC,GAC3E,IAAOC,EAAM,CACXwlB,aAAczlB,EAAI0lB,wBAClB2H,SAAUpwB,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACnD4H,QAAS3K,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GAClDstB,gBAAiBttB,EAAIutB,4BAMvB,OAHIxtB,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAakvB,2BAA2B3sB,kBAAoB,SAASC,GACnE,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAakvB,2BAC3B,OAAOlvB,aAAakvB,2BAA2BvsB,4BAA4BX,EAAKS,EAClF,EAUAzC,aAAakvB,2BAA2BvsB,4BAA8B,SAASX,EAAKS,GAClF,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,EACCA,EAAmDN,EAAOyD,WAC9DlE,EAAIytB,YAAY1sB,GAChB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIoL,WAAWrK,GACf,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAI0tB,mBAAmB3sB,GACvB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAakvB,2BAA2BttB,UAAUwB,gBAAkB,WAClE,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAakvB,2BAA2B3rB,wBAAwB/D,KAAM6D,GAC/DA,EAAOG,iBAChB,EAUAxD,aAAakvB,2BAA2B3rB,wBAA0B,SAASE,EAASJ,GAClF,IAAIK,OAAIC,GACRD,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQmsB,gBAEVvsB,EAAOuD,UACL,EACAlD,GAIM,KADVA,EAAID,EAAQ0L,eAEV9L,EAAOyB,WACL,EACApB,IAGJA,EAAID,EAAQosB,2BACNhsB,OAAS,GACbR,EAAOS,WACL,EACAJ,EAGN,EAOA1D,aAAakvB,2BAA2BttB,UAAUqmB,gBAAkB,WAClE,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAakvB,2BAA2BttB,UAAU8lB,sBAAwB,WACxE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAakvB,2BAA2BttB,UAAUmmB,qBAAuB,WACvE,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAakvB,2BAA2BttB,UAAUimB,gBAAkB,SAAS9kB,GAC3E,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAakvB,2BAA2BttB,UAAUguB,YAAc,WAC9D,OAAkD3wB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC9F,EAOAQ,aAAakvB,2BAA2BttB,UAAU6tB,YAAc,SAAS1sB,GACvE,OAAO9D,EAAKkB,QAAQ6H,mBAAmBxI,KAAM,EAAGuD,EAClD,EAOA/C,aAAakvB,2BAA2BttB,UAAUuN,WAAa,WAC7D,OAA8BlQ,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAakvB,2BAA2BttB,UAAUwL,WAAa,SAASrK,GACtE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAakvB,2BAA2BttB,UAAUkuB,mBAAqB,WACrE,OAA4C7wB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAakvB,2BAA2BttB,UAAU2tB,yBAA2B,WAC3E,OAA8BtwB,EAAKkB,QAAQ+D,WACvC1E,KAAKswB,qBACX,EAUA9vB,aAAakvB,2BAA2BttB,UAAUiuB,wBAA0B,WAC1E,OAAmC5wB,EAAKkB,QAAQgE,UAC5C3E,KAAKswB,qBACX,EAOA9vB,aAAakvB,2BAA2BttB,UAAU8tB,mBAAqB,SAAS3sB,GAC9E,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAamvB,4BAA4BvtB,UAAUC,SAAW,SAASC,GACrE,OAAO9B,aAAamvB,4BAA4BttB,SAASC,EAAqBtC,KAChF,EAYAQ,aAAamvB,4BAA4BttB,SAAW,SAASE,EAAiBC,GAC5E,IAAOC,EAAM,CACXwlB,aAAczlB,EAAI0lB,yBAMpB,OAHI3lB,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAamvB,4BAA4B5sB,kBAAoB,SAASC,GACpE,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAamvB,4BAC3B,OAAOnvB,aAAamvB,4BAA4BxsB,4BAA4BX,EAAKS,EACnF,EAUAzC,aAAamvB,4BAA4BxsB,4BAA8B,SAASX,EAAKS,GACnF,KAAOA,EAAOG,cACRH,EAAOI,cAIX,GACK,IAFOJ,EAAOK,iBAEnB,CACE,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,EACf,MAELN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAamvB,4BAA4BvtB,UAAUwB,gBAAkB,WACnE,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAamvB,4BAA4B5rB,wBAAwB/D,KAAM6D,GAChEA,EAAOG,iBAChB,EAUAxD,aAAamvB,4BAA4B5rB,wBAA0B,SAASE,EAASJ,GACnF,IAAIK,GACJA,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,EAGN,EAOA1D,aAAamvB,4BAA4BvtB,UAAUqmB,gBAAkB,WACnE,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAamvB,4BAA4BvtB,UAAU8lB,sBAAwB,WACzE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAamvB,4BAA4BvtB,UAAUmmB,qBAAuB,WACxE,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAamvB,4BAA4BvtB,UAAUimB,gBAAkB,SAAS9kB,GAC5E,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAGA5D,EAAKS,OAAOC,OAAOsnB,EAASnnB,a,gBCtrI5B,IACIb,EADOD,EAAQ,KAEfE,EACqB,oBAAfC,YAA8BA,YACnB,oBAAXC,QAA0BA,aACf,IAAXF,GAA0BA,GACjB,oBAATG,MAAwBA,MAC/B,WAAc,OAAOC,IAAM,EAAGC,KAAK,OACpCC,SAAS,cAATA,GAEFP,EAAKY,aAAa,4BAA6B,KAAMX,GAIrDY,aAAakzB,aAAe,CAC1BC,UAAW,EACXC,OAAQ,EACRC,WAAY,GAGdl0B,EAAKS,OAAOC,OAAOsnB,EAASnnB,a,gBCpB5B,IAAIf,EAAOC,EAAQ,KACfC,EAAOF,EACPG,EACqB,oBAAfC,YAA8BA,YACnB,oBAAXC,QAA0BA,aACf,IAAXF,GAA0BA,GACjB,oBAATG,MAAwBA,MAC/B,WAAc,OAAOC,IAAM,EAAGC,KAAK,OACpCC,SAAS,cAATA,GAEFP,EAAKY,aAAa,sCAAuC,KAAMX,GAC/DD,EAAKY,aAAa,sCAAuC,KAAMX,GAC/DD,EAAKY,aAAa,2CAA4C,KAAMX,GACpED,EAAKY,aAAa,wCAAyC,KAAMX,GAWjEY,aAAaszB,uBAAyB,SAASpzB,GAC7CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAaszB,uBAAwBr0B,EAAKkB,SACpDhB,EAAKmB,QAAUC,WAKjBP,aAAaszB,uBAAuB9yB,YAAc,uCAYpDR,aAAauzB,uBAAyB,SAASrzB,GAC7CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAauzB,uBAAwBt0B,EAAKkB,SACpDhB,EAAKmB,QAAUC,WAKjBP,aAAauzB,uBAAuB/yB,YAAc,uCAYpDR,aAAawzB,yBAA2B,SAAStzB,GAC/CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAawzB,yBAA0Bv0B,EAAKkB,SACtDhB,EAAKmB,QAAUC,WAKjBP,aAAawzB,yBAAyBhzB,YAAc,yCAYtDR,aAAayzB,4BAA8B,SAASvzB,GAClDjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAayzB,4BAA6Bx0B,EAAKkB,SACzDhB,EAAKmB,QAAUC,WAKjBP,aAAayzB,4BAA4BjzB,YAAc,4CAKrDvB,EAAKkB,QAAQwB,qBAajB3B,aAAaszB,uBAAuB1xB,UAAUC,SAAW,SAASC,GAChE,OAAO9B,aAAaszB,uBAAuBzxB,SAASC,EAAqBtC,KAC3E,EAYAQ,aAAaszB,uBAAuBzxB,SAAW,SAASE,EAAiBC,GACvE,IAAOC,EAAM,CACXwlB,aAAczlB,EAAI0lB,wBAClBtf,aAAcpG,EAAIqG,wBAClBC,kBAAmBrJ,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GAC5DuG,cAAevG,EAAIwG,yBACnBC,mBAAoBxJ,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAM/D,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAaszB,uBAAuB/wB,kBAAoB,SAASC,GAC/D,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAaszB,uBAC3B,OAAOtzB,aAAaszB,uBAAuB3wB,4BAA4BX,EAAKS,EAC9E,EAUAzC,aAAaszB,uBAAuB3wB,4BAA8B,SAASX,EAAKS,GAC9E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAI4G,gBAAgB7F,GACpB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI6G,qBAAqB9F,GACzB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAI8G,iBAAiB/F,GACrB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI+G,sBAAsBhG,GAC1B,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAaszB,uBAAuB1xB,UAAUwB,gBAAkB,WAC9D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAaszB,uBAAuB/vB,wBAAwB/D,KAAM6D,GAC3DA,EAAOG,iBAChB,EAUAxD,aAAaszB,uBAAuB/vB,wBAA0B,SAASE,EAASJ,GAC9E,IAAIK,OAAIC,GACRD,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQyF,wBACNrF,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQ0F,yBAEV9F,EAAOyB,WACL,EACApB,IAGJA,EAAID,EAAQ2F,yBACNvF,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQ4F,0BAEVhG,EAAOyB,WACL,EACApB,EAGN,EAOA1D,aAAaszB,uBAAuB1xB,UAAUqmB,gBAAkB,WAC9D,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaszB,uBAAuB1xB,UAAU8lB,sBAAwB,WACpE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAaszB,uBAAuB1xB,UAAUmmB,qBAAuB,WACnE,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAaszB,uBAAuB1xB,UAAUimB,gBAAkB,SAAS9kB,GACvE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaszB,uBAAuB1xB,UAAU2H,gBAAkB,WAC9D,OAA4CtK,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaszB,uBAAuB1xB,UAAUyG,sBAAwB,WACpE,OAA8BpJ,EAAKkB,QAAQ+D,WACvC1E,KAAK+J,kBACX,EAUAvJ,aAAaszB,uBAAuB1xB,UAAUsH,qBAAuB,WACnE,OAAmCjK,EAAKkB,QAAQgE,UAC5C3E,KAAK+J,kBACX,EAOAvJ,aAAaszB,uBAAuB1xB,UAAUgH,gBAAkB,SAAS7F,GACvE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaszB,uBAAuB1xB,UAAUuH,qBAAuB,WACnE,OAA8BlK,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaszB,uBAAuB1xB,UAAUiH,qBAAuB,SAAS9F,GAC5E,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAaszB,uBAAuB1xB,UAAU4H,iBAAmB,WAC/D,OAA4CvK,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaszB,uBAAuB1xB,UAAU4G,uBAAyB,WACrE,OAA8BvJ,EAAKkB,QAAQ+D,WACvC1E,KAAKgK,mBACX,EAUAxJ,aAAaszB,uBAAuB1xB,UAAUwH,sBAAwB,WACpE,OAAmCnK,EAAKkB,QAAQgE,UAC5C3E,KAAKgK,mBACX,EAOAxJ,aAAaszB,uBAAuB1xB,UAAUkH,iBAAmB,SAAS/F,GACxE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaszB,uBAAuB1xB,UAAUyH,sBAAwB,WACpE,OAA8BpK,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaszB,uBAAuB1xB,UAAUmH,sBAAwB,SAAShG,GAC7E,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAauzB,uBAAuB3xB,UAAUC,SAAW,SAASC,GAChE,OAAO9B,aAAauzB,uBAAuB1xB,SAASC,EAAqBtC,KAC3E,EAYAQ,aAAauzB,uBAAuB1xB,SAAW,SAASE,EAAiBC,GACvE,IAAOC,EAAM,CACXwlB,aAAczlB,EAAI0lB,wBAClBzf,WAAYhJ,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACrD0xB,QAAS1xB,EAAI2xB,mBACbC,MAAO30B,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAMlD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAauzB,uBAAuBhxB,kBAAoB,SAASC,GAC/D,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAauzB,uBAC3B,OAAOvzB,aAAauzB,uBAAuB5wB,4BAA4BX,EAAKS,EAC9E,EAUAzC,aAAauzB,uBAAuB5wB,4BAA8B,SAASX,EAAKS,GAC9E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI0G,cAAc3F,GAClB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAI6xB,WAAW9wB,GACf,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI8xB,SAAS/wB,GACb,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAauzB,uBAAuB3xB,UAAUwB,gBAAkB,WAC9D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAauzB,uBAAuBhwB,wBAAwB/D,KAAM6D,GAC3DA,EAAOG,iBAChB,EAUAxD,aAAauzB,uBAAuBhwB,wBAA0B,SAASE,EAASJ,GAC9E,IAAIK,OAAIC,GACRD,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQuF,kBAEV3F,EAAOyB,WACL,EACApB,IAGJA,EAAID,EAAQswB,mBACNlwB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQuwB,aAEV3wB,EAAOyB,WACL,EACApB,EAGN,EAOA1D,aAAauzB,uBAAuB3xB,UAAUqmB,gBAAkB,WAC9D,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAauzB,uBAAuB3xB,UAAU8lB,sBAAwB,WACpE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAauzB,uBAAuB3xB,UAAUmmB,qBAAuB,WACnE,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAauzB,uBAAuB3xB,UAAUimB,gBAAkB,SAAS9kB,GACvE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAauzB,uBAAuB3xB,UAAUoH,cAAgB,WAC5D,OAA8B/J,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAauzB,uBAAuB3xB,UAAU8G,cAAgB,SAAS3F,GACrE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAauzB,uBAAuB3xB,UAAUqyB,WAAa,WACzD,OAA4Ch1B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAauzB,uBAAuB3xB,UAAU+xB,iBAAmB,WAC/D,OAA8B10B,EAAKkB,QAAQ+D,WACvC1E,KAAKy0B,aACX,EAUAj0B,aAAauzB,uBAAuB3xB,UAAUmyB,gBAAkB,WAC9D,OAAmC90B,EAAKkB,QAAQgE,UAC5C3E,KAAKy0B,aACX,EAOAj0B,aAAauzB,uBAAuB3xB,UAAUiyB,WAAa,SAAS9wB,GAClE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAauzB,uBAAuB3xB,UAAUoyB,SAAW,WACvD,OAA8B/0B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAauzB,uBAAuB3xB,UAAUkyB,SAAW,SAAS/wB,GAChE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAawzB,yBAAyB5xB,UAAUC,SAAW,SAASC,GAClE,OAAO9B,aAAawzB,yBAAyB3xB,SAASC,EAAqBtC,KAC7E,EAYAQ,aAAawzB,yBAAyB3xB,SAAW,SAASE,EAAiBC,GACzE,IAAOC,EAAM,CACXwlB,aAAczlB,EAAI0lB,wBAClBzf,WAAYhJ,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACrD0xB,QAAS1xB,EAAI2xB,mBACbC,MAAO30B,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAMlD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAawzB,yBAAyBjxB,kBAAoB,SAASC,GACjE,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAawzB,yBAC3B,OAAOxzB,aAAawzB,yBAAyB7wB,4BAA4BX,EAAKS,EAChF,EAUAzC,aAAawzB,yBAAyB7wB,4BAA8B,SAASX,EAAKS,GAChF,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI0G,cAAc3F,GAClB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAI6xB,WAAW9wB,GACf,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI8xB,SAAS/wB,GACb,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAawzB,yBAAyB5xB,UAAUwB,gBAAkB,WAChE,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAawzB,yBAAyBjwB,wBAAwB/D,KAAM6D,GAC7DA,EAAOG,iBAChB,EAUAxD,aAAawzB,yBAAyBjwB,wBAA0B,SAASE,EAASJ,GAChF,IAAIK,OAAIC,GACRD,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQuF,kBAEV3F,EAAOyB,WACL,EACApB,IAGJA,EAAID,EAAQswB,mBACNlwB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQuwB,aAEV3wB,EAAOyB,WACL,EACApB,EAGN,EAOA1D,aAAawzB,yBAAyB5xB,UAAUqmB,gBAAkB,WAChE,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAawzB,yBAAyB5xB,UAAU8lB,sBAAwB,WACtE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAawzB,yBAAyB5xB,UAAUmmB,qBAAuB,WACrE,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAawzB,yBAAyB5xB,UAAUimB,gBAAkB,SAAS9kB,GACzE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAawzB,yBAAyB5xB,UAAUoH,cAAgB,WAC9D,OAA8B/J,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAawzB,yBAAyB5xB,UAAU8G,cAAgB,SAAS3F,GACvE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAawzB,yBAAyB5xB,UAAUqyB,WAAa,WAC3D,OAA4Ch1B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAawzB,yBAAyB5xB,UAAU+xB,iBAAmB,WACjE,OAA8B10B,EAAKkB,QAAQ+D,WACvC1E,KAAKy0B,aACX,EAUAj0B,aAAawzB,yBAAyB5xB,UAAUmyB,gBAAkB,WAChE,OAAmC90B,EAAKkB,QAAQgE,UAC5C3E,KAAKy0B,aACX,EAOAj0B,aAAawzB,yBAAyB5xB,UAAUiyB,WAAa,SAAS9wB,GACpE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAawzB,yBAAyB5xB,UAAUoyB,SAAW,WACzD,OAA8B/0B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAawzB,yBAAyB5xB,UAAUkyB,SAAW,SAAS/wB,GAClE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAayzB,4BAA4B7xB,UAAUC,SAAW,SAASC,GACrE,OAAO9B,aAAayzB,4BAA4B5xB,SAASC,EAAqBtC,KAChF,EAYAQ,aAAayzB,4BAA4B5xB,SAAW,SAASE,EAAiBC,GAC5E,IAAOC,EAAM,CACXwlB,aAAczlB,EAAI0lB,wBAClBzf,WAAYhJ,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACrD0xB,QAAS1xB,EAAI2xB,mBACbC,MAAO30B,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GAChDkyB,SAAUj1B,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAMrD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAayzB,4BAA4BlxB,kBAAoB,SAASC,GACpE,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAayzB,4BAC3B,OAAOzzB,aAAayzB,4BAA4B9wB,4BAA4BX,EAAKS,EACnF,EAUAzC,aAAayzB,4BAA4B9wB,4BAA8B,SAASX,EAAKS,GACnF,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI0G,cAAc3F,GAClB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAI6xB,WAAW9wB,GACf,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI8xB,SAAS/wB,GACb,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAImyB,YAAYpxB,GAChB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAayzB,4BAA4B7xB,UAAUwB,gBAAkB,WACnE,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAayzB,4BAA4BlwB,wBAAwB/D,KAAM6D,GAChEA,EAAOG,iBAChB,EAUAxD,aAAayzB,4BAA4BlwB,wBAA0B,SAASE,EAASJ,GACnF,IAAIK,OAAIC,GACRD,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQuF,kBAEV3F,EAAOyB,WACL,EACApB,IAGJA,EAAID,EAAQswB,mBACNlwB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQuwB,aAEV3wB,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQ2wB,gBAEV/wB,EAAOyB,WACL,EACApB,EAGN,EAOA1D,aAAayzB,4BAA4B7xB,UAAUqmB,gBAAkB,WACnE,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAayzB,4BAA4B7xB,UAAU8lB,sBAAwB,WACzE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAayzB,4BAA4B7xB,UAAUmmB,qBAAuB,WACxE,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAayzB,4BAA4B7xB,UAAUimB,gBAAkB,SAAS9kB,GAC5E,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAayzB,4BAA4B7xB,UAAUoH,cAAgB,WACjE,OAA8B/J,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAayzB,4BAA4B7xB,UAAU8G,cAAgB,SAAS3F,GAC1E,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAayzB,4BAA4B7xB,UAAUqyB,WAAa,WAC9D,OAA4Ch1B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAayzB,4BAA4B7xB,UAAU+xB,iBAAmB,WACpE,OAA8B10B,EAAKkB,QAAQ+D,WACvC1E,KAAKy0B,aACX,EAUAj0B,aAAayzB,4BAA4B7xB,UAAUmyB,gBAAkB,WACnE,OAAmC90B,EAAKkB,QAAQgE,UAC5C3E,KAAKy0B,aACX,EAOAj0B,aAAayzB,4BAA4B7xB,UAAUiyB,WAAa,SAAS9wB,GACvE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAayzB,4BAA4B7xB,UAAUoyB,SAAW,WAC5D,OAA8B/0B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAayzB,4BAA4B7xB,UAAUkyB,SAAW,SAAS/wB,GACrE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAayzB,4BAA4B7xB,UAAUwyB,YAAc,WAC/D,OAA8Bn1B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAayzB,4BAA4B7xB,UAAUuyB,YAAc,SAASpxB,GACxE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAGA5D,EAAKS,OAAOC,OAAOsnB,EAASnnB,a,gBCtuC5B,IAAIf,EAAOC,EAAQ,KACfC,EAAOF,EACPG,EACqB,oBAAfC,YAA8BA,YACnB,oBAAXC,QAA0BA,aACf,IAAXF,GAA0BA,GACjB,oBAATG,MAAwBA,MAC/B,WAAc,OAAOC,IAAM,EAAGC,KAAK,OACpCC,SAAS,cAATA,GAEFP,EAAKY,aAAa,uCAAwC,KAAMX,GAChED,EAAKY,aAAa,sCAAuC,KAAMX,GAC/DD,EAAKY,aAAa,sCAAuC,KAAMX,GAW/DY,aAAaq0B,wBAA0B,SAASn0B,GAC9CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAaq0B,wBAAyBp1B,EAAKkB,SACrDhB,EAAKmB,QAAUC,WAKjBP,aAAaq0B,wBAAwB7zB,YAAc,wCAYrDR,aAAas0B,uBAAyB,SAASp0B,GAC7CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAas0B,uBAAwBr1B,EAAKkB,SACpDhB,EAAKmB,QAAUC,WAKjBP,aAAas0B,uBAAuB9zB,YAAc,uCAYpDR,aAAau0B,uBAAyB,SAASr0B,GAC7CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAau0B,uBAAwBt1B,EAAKkB,SACpDhB,EAAKmB,QAAUC,WAKjBP,aAAau0B,uBAAuB/zB,YAAc,uCAKhDvB,EAAKkB,QAAQwB,qBAajB3B,aAAaq0B,wBAAwBzyB,UAAUC,SAAW,SAASC,GACjE,OAAO9B,aAAaq0B,wBAAwBxyB,SAASC,EAAqBtC,KAC5E,EAYAQ,aAAaq0B,wBAAwBxyB,SAAW,SAASE,EAAiBC,GACxE,IAAOC,EAAM,CACXwlB,aAAczlB,EAAI0lB,wBAClBziB,WAAYhG,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACrDwyB,cAAev1B,EAAKkB,QAAQ0K,2BAA2B7I,EAAK,GAAG,IAMjE,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAaq0B,wBAAwB9xB,kBAAoB,SAASC,GAChE,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAaq0B,wBAC3B,OAAOr0B,aAAaq0B,wBAAwB1xB,4BAA4BX,EAAKS,EAC/E,EAUAzC,aAAaq0B,wBAAwB1xB,4BAA8B,SAASX,EAAKS,GAC/E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI2D,cAAc5C,GAClB,MACF,KAAK,EACCA,EAAgCN,EAAOoL,WAC3C7L,EAAIyyB,iBAAiB1xB,GACrB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAaq0B,wBAAwBzyB,UAAUwB,gBAAkB,WAC/D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAaq0B,wBAAwB9wB,wBAAwB/D,KAAM6D,GAC5DA,EAAOG,iBAChB,EAUAxD,aAAaq0B,wBAAwB9wB,wBAA0B,SAASE,EAASJ,GAC/E,IAAIK,OAAIC,GACRD,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQ2C,kBAEV/C,EAAOyB,WACL,EACApB,IAGJA,EAAID,EAAQixB,qBAEVrxB,EAAOuM,UACL,EACAlM,EAGN,EAOA1D,aAAaq0B,wBAAwBzyB,UAAUqmB,gBAAkB,WAC/D,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaq0B,wBAAwBzyB,UAAU8lB,sBAAwB,WACrE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAaq0B,wBAAwBzyB,UAAUmmB,qBAAuB,WACpE,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAaq0B,wBAAwBzyB,UAAUimB,gBAAkB,SAAS9kB,GACxE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaq0B,wBAAwBzyB,UAAUwE,cAAgB,WAC7D,OAA8BnH,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAaq0B,wBAAwBzyB,UAAU+D,cAAgB,SAAS5C,GACtE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAaq0B,wBAAwBzyB,UAAU8yB,iBAAmB,WAChE,OAA+Bz1B,EAAKkB,QAAQ0K,2BAA2BrL,KAAM,GAAG,EAClF,EAOAQ,aAAaq0B,wBAAwBzyB,UAAU6yB,iBAAmB,SAAS1xB,GACzE,OAAO9D,EAAKkB,QAAQuT,sBAAsBlU,KAAM,EAAGuD,EACrD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAas0B,uBAAuB1yB,UAAUC,SAAW,SAASC,GAChE,OAAO9B,aAAas0B,uBAAuBzyB,SAASC,EAAqBtC,KAC3E,EAYAQ,aAAas0B,uBAAuBzyB,SAAW,SAASE,EAAiBC,GACvE,IAAI0B,EAAGzB,EAAM,CACXwlB,aAAczlB,EAAI0lB,wBAClBtiB,eAAgB1B,EAAI1B,EAAIqD,oBAAsB3B,EAAE7B,SAASE,OAAiB4B,GAAa,IAMzF,OAHI5B,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAas0B,uBAAuB/xB,kBAAoB,SAASC,GAC/D,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAas0B,uBAC3B,OAAOt0B,aAAas0B,uBAAuB3xB,4BAA4BX,EAAKS,EAC9E,EAUAzC,aAAas0B,uBAAuB3xB,4BAA8B,SAASX,EAAKS,GAC9E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,EACCA,EAAQf,EAAIqD,mBAChB5C,EAAOoD,YAAY9C,GAAO,SAASU,EAAShB,GAC1CxD,EAAK6G,IAAIvD,kBAAkBkB,EAAShB,EAAQxD,EAAKyD,aAAad,UAAU8C,UAAWzF,EAAKyD,aAAad,UAAU8C,UAAW,KAAM,EAAG,EAClI,IACH,MACF,QACEjC,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAas0B,uBAAuB1yB,UAAUwB,gBAAkB,WAC9D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAas0B,uBAAuB/wB,wBAAwB/D,KAAM6D,GAC3DA,EAAOG,iBAChB,EAUAxD,aAAas0B,uBAAuB/wB,wBAA0B,SAASE,EAASJ,GAC9E,IAAIK,OAAIC,GACRD,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQ4B,kBAAiB,KACpB3B,EAAE4C,YAAc,GACvB5C,EAAEN,gBAAgB,EAAGC,EAAQpE,EAAKqE,aAAa1B,UAAUkD,WAAY7F,EAAKqE,aAAa1B,UAAUkD,WAErG,EAOA9E,aAAas0B,uBAAuB1yB,UAAUqmB,gBAAkB,WAC9D,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAas0B,uBAAuB1yB,UAAU8lB,sBAAwB,WACpE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAas0B,uBAAuB1yB,UAAUmmB,qBAAuB,WACnE,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAas0B,uBAAuB1yB,UAAUimB,gBAAkB,SAAS9kB,GACvE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EASA/C,aAAas0B,uBAAuB1yB,UAAUyD,iBAAmB,SAAS8B,GACxE,OACIlI,EAAKkB,QAAQiH,YAAY5H,KAAM,EAAG2H,EAClC,KACN,EAOAnH,aAAas0B,uBAAuB1yB,UAAUyF,mBAAqB,WAEjE,OADA7H,KAAK6F,mBAAmBiC,QACjB9H,IAAK,EAMVP,EAAKkB,QAAQwB,qBAajB3B,aAAau0B,uBAAuB3yB,UAAUC,SAAW,SAASC,GAChE,OAAO9B,aAAau0B,uBAAuB1yB,SAASC,EAAqBtC,KAC3E,EAYAQ,aAAau0B,uBAAuB1yB,SAAW,SAASE,EAAiBC,GACvE,IAAOC,EAAM,CACXwlB,aAAczlB,EAAI0lB,wBAClBziB,WAAYhG,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAMvD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAau0B,uBAAuBhyB,kBAAoB,SAASC,GAC/D,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAau0B,uBAC3B,OAAOv0B,aAAau0B,uBAAuB5xB,4BAA4BX,EAAKS,EAC9E,EAUAzC,aAAau0B,uBAAuB5xB,4BAA8B,SAASX,EAAKS,GAC9E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI2D,cAAc5C,GAClB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAau0B,uBAAuB3yB,UAAUwB,gBAAkB,WAC9D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAau0B,uBAAuBhxB,wBAAwB/D,KAAM6D,GAC3DA,EAAOG,iBAChB,EAUAxD,aAAau0B,uBAAuBhxB,wBAA0B,SAASE,EAASJ,GAC9E,IAAIK,OAAIC,GACRD,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQ2C,kBAEV/C,EAAOyB,WACL,EACApB,EAGN,EAOA1D,aAAau0B,uBAAuB3yB,UAAUqmB,gBAAkB,WAC9D,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAau0B,uBAAuB3yB,UAAU8lB,sBAAwB,WACpE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAau0B,uBAAuB3yB,UAAUmmB,qBAAuB,WACnE,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAau0B,uBAAuB3yB,UAAUimB,gBAAkB,SAAS9kB,GACvE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAau0B,uBAAuB3yB,UAAUwE,cAAgB,WAC5D,OAA8BnH,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAau0B,uBAAuB3yB,UAAU+D,cAAgB,SAAS5C,GACrE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAGA5D,EAAKS,OAAOC,OAAOsnB,EAASnnB,a,gBCrpB5B,IAAIf,EAAOC,EAAQ,KACfC,EAAOF,EACPG,EACqB,oBAAfC,YAA8BA,YACnB,oBAAXC,QAA0BA,aACf,IAAXF,GAA0BA,GACjB,oBAATG,MAAwBA,MAC/B,WAAc,OAAOC,IAAM,EAAGC,KAAK,OACpCC,SAAS,cAATA,GAEE0nB,EAAeloB,EAAQ,IAC3BC,EAAKS,OAAOC,OAAOC,MAAOsnB,GAC1BjoB,EAAKY,aAAa,gCAAiC,KAAMX,GACzDD,EAAKY,aAAa,6BAA8B,KAAMX,GACtDD,EAAKY,aAAa,mCAAoC,KAAMX,GAC5DD,EAAKY,aAAa,6BAA8B,KAAMX,GACtDD,EAAKY,aAAa,iCAAkC,KAAMX,GAC1DD,EAAKY,aAAa,uCAAwC,KAAMX,GAChED,EAAKY,aAAa,iDAAkD,KAAMX,GAC1ED,EAAKY,aAAa,6CAA8C,KAAMX,GACtED,EAAKY,aAAa,2DAA4D,KAAMX,GACpFD,EAAKY,aAAa,wCAAyC,KAAMX,GACjED,EAAKY,aAAa,oCAAqC,KAAMX,GAC7DD,EAAKY,aAAa,yCAA0C,KAAMX,GAClED,EAAKY,aAAa,qCAAsC,KAAMX,GAW9DY,aAAa20B,cAAgB,SAASz0B,GACpCjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAa20B,cAAe11B,EAAKkB,SAC3ChB,EAAKmB,QAAUC,WAKjBP,aAAa20B,cAAcn0B,YAAc,8BAY3CR,aAAa20B,cAAcC,IAAM,SAAS10B,GACxCjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAGF,aAAa20B,cAAcC,IAAIj0B,gBAAiB,KACjG,EACAxB,EAAKkB,SAASL,aAAa20B,cAAcC,IAAK31B,EAAKkB,SAC/ChB,EAAKmB,QAAUC,WAKjBP,aAAa20B,cAAcC,IAAIp0B,YAAc,kCAY/CR,aAAa20B,cAAcC,IAAIC,MAAQ,SAAS30B,GAC9CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAGF,aAAa20B,cAAcC,IAAIC,MAAMl0B,gBAAiB,KACvG,EACAxB,EAAKkB,SAASL,aAAa20B,cAAcC,IAAIC,MAAO51B,EAAKkB,SACrDhB,EAAKmB,QAAUC,WAKjBP,aAAa20B,cAAcC,IAAIC,MAAMr0B,YAAc,wCAYrDR,aAAa20B,cAAcC,IAAIC,MAAMC,MAAQ,SAAS50B,GACpDjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAa20B,cAAcC,IAAIC,MAAMC,MAAO71B,EAAKkB,SAC3DhB,EAAKmB,QAAUC,WAKjBP,aAAa20B,cAAcC,IAAIC,MAAMC,MAAMt0B,YAAc,8CAY3DR,aAAa+0B,cAAgB,SAAS70B,GACpCjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAa+0B,cAAe91B,EAAKkB,SAC3ChB,EAAKmB,QAAUC,WAKjBP,aAAa+0B,cAAcv0B,YAAc,8BAY3CR,aAAag1B,oBAAsB,SAAS90B,GAC1CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAag1B,oBAAqB/1B,EAAKkB,SACjDhB,EAAKmB,QAAUC,WAKjBP,aAAag1B,oBAAoBx0B,YAAc,oCAYjDR,aAAai1B,qBAAuB,SAAS/0B,GAC3CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAai1B,qBAAsBh2B,EAAKkB,SAClDhB,EAAKmB,QAAUC,WAKjBP,aAAai1B,qBAAqBz0B,YAAc,qCAYlDR,aAAak1B,iBAAmB,SAASh1B,GACvCjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAak1B,iBAAkBj2B,EAAKkB,SAC9ChB,EAAKmB,QAAUC,WAKjBP,aAAak1B,iBAAiB10B,YAAc,iCAY9CR,aAAam1B,sBAAwB,SAASj1B,GAC5CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAam1B,sBAAuBl2B,EAAKkB,SACnDhB,EAAKmB,QAAUC,WAKjBP,aAAam1B,sBAAsB30B,YAAc,sCAYnDR,aAAao1B,0BAA4B,SAASl1B,GAChDjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAao1B,0BAA2Bn2B,EAAKkB,SACvDhB,EAAKmB,QAAUC,WAKjBP,aAAao1B,0BAA0B50B,YAAc,0CAYvDR,aAAaq1B,yBAA2B,SAASn1B,GAC/CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAaq1B,yBAA0Bp2B,EAAKkB,SACtDhB,EAAKmB,QAAUC,WAKjBP,aAAaq1B,yBAAyB70B,YAAc,yCAKlDvB,EAAKkB,QAAQwB,qBAajB3B,aAAa20B,cAAc/yB,UAAUC,SAAW,SAASC,GACvD,OAAO9B,aAAa20B,cAAc9yB,SAASC,EAAqBtC,KAClE,EAYAQ,aAAa20B,cAAc9yB,SAAW,SAASE,EAAiBC,GAC9D,IAAI0B,EAAGzB,EAAM,CACXqzB,cAAetzB,EAAIuzB,yBACnBC,gBAAiBxzB,EAAIyzB,2BACrBC,KAAMhyB,EAAI1B,EAAI2zB,WAAa31B,aAAa20B,cAAcC,IAAI/yB,SAASE,EAAiB2B,GACpFkyB,SAAU5zB,EAAI6zB,oBACdC,UAAW72B,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACpD+zB,2BAA4B92B,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACrEE,KAAMjD,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAC/Cg0B,kBAAmB/2B,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GAC5Di0B,SAAUj0B,EAAIk0B,oBACdC,QAASn0B,EAAIo0B,mBACbC,QAASp3B,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,GAAI,IAMrD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAa20B,cAAcpyB,kBAAoB,SAASC,GACtD,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAa20B,cAC3B,OAAO30B,aAAa20B,cAAchyB,4BAA4BX,EAAKS,EACrE,EAUAzC,aAAa20B,cAAchyB,4BAA8B,SAASX,EAAKS,GACrE,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAIs0B,iBAAiBvzB,GACrB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAIu0B,mBAAmBxzB,GACvB,MACF,KAAK,EACCA,EAAQ,IAAI/C,aAAa20B,cAAcC,IAC3CnyB,EAAOoD,YAAY9C,EAAM/C,aAAa20B,cAAcC,IAAIjyB,6BACxDX,EAAIw0B,OAAOzzB,GACX,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAIy0B,YAAY1zB,GAChB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI00B,aAAa3zB,GACjB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI20B,8BAA8B5zB,GAClC,MACF,KAAK,EACCA,EAA+BN,EAAO6K,aAC1CtL,EAAIiB,QAAQF,GACZ,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI40B,qBAAqB7zB,GACzB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAI60B,YAAY9zB,GAChB,MACF,KAAK,GACCA,EAAoCN,EAAOO,YAC/ChB,EAAI80B,WAAW/zB,GACf,MACF,KAAK,GACCA,EAA+BN,EAAO4U,YAC1CrV,EAAI+0B,WAAWh0B,GACf,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAa20B,cAAc/yB,UAAUwB,gBAAkB,WACrD,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAa20B,cAAcpxB,wBAAwB/D,KAAM6D,GAClDA,EAAOG,iBAChB,EAUAxD,aAAa20B,cAAcpxB,wBAA0B,SAASE,EAASJ,GACrE,IAAIK,OAAIC,GACRD,EAAID,EAAQuzB,yBACNnzB,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQwzB,2BACNpzB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIK,OADTA,EAAID,EAAQkyB,WAEVtyB,EAAOqM,aACL,EACAhM,EACA1D,aAAa20B,cAAcC,IAAIrxB,0BAGnCG,EAAID,EAAQyzB,oBACNrzB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQ0zB,iBAEV9zB,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQ2zB,kCAEV/zB,EAAOyB,WACL,EACApB,IAGJA,EAAID,EAAQO,WACNH,OAAS,GACbR,EAAOgM,YACL,EACA3L,GAIM,KADVA,EAAID,EAAQ4zB,yBAEVh0B,EAAOyB,WACL,EACApB,IAGJA,EAAID,EAAQ6zB,oBACNzzB,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQ8zB,mBACN1zB,OAAS,GACbR,EAAOS,WACL,GACAJ,GAIM,KADVA,EAAID,EAAQ+zB,eAEVn0B,EAAOuU,WACL,GACAlU,EAGN,EASA1D,aAAa20B,cAAcC,IAAIj0B,gBAAkB,CAAC,GAI9C1B,EAAKkB,QAAQwB,qBAajB3B,aAAa20B,cAAcC,IAAIhzB,UAAUC,SAAW,SAASC,GAC3D,OAAO9B,aAAa20B,cAAcC,IAAI/yB,SAASC,EAAqBtC,KACtE,EAYAQ,aAAa20B,cAAcC,IAAI/yB,SAAW,SAASE,EAAiBC,GAClE,IAAOC,EAAM,CACXw1B,WAAYx4B,EAAKkB,QAAQ2J,aAAa9H,EAAI01B,gBAC1C13B,aAAa20B,cAAcC,IAAIC,MAAMhzB,SAAUE,IAMjD,OAHIA,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAa20B,cAAcC,IAAIryB,kBAAoB,SAASC,GAC1D,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAa20B,cAAcC,IACzC,OAAO50B,aAAa20B,cAAcC,IAAIjyB,4BAA4BX,EAAKS,EACzE,EAUAzC,aAAa20B,cAAcC,IAAIjyB,4BAA8B,SAASX,EAAKS,GACzE,KAAOA,EAAOG,cACRH,EAAOI,cAIX,GACK,IAFOJ,EAAOK,iBAEnB,CACE,IAAIC,EAAQ,IAAI/C,aAAa20B,cAAcC,IAAIC,MAC/CpyB,EAAOoD,YAAY9C,EAAM/C,aAAa20B,cAAcC,IAAIC,MAAMlyB,6BAC9DX,EAAI21B,UAAU50B,EACT,MAELN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAa20B,cAAcC,IAAIhzB,UAAUwB,gBAAkB,WACzD,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAa20B,cAAcC,IAAIrxB,wBAAwB/D,KAAM6D,GACtDA,EAAOG,iBAChB,EAUAxD,aAAa20B,cAAcC,IAAIrxB,wBAA0B,SAASE,EAASJ,GACzE,IAAIK,GACJA,EAAID,EAAQi0B,iBACN7zB,OAAS,GACbR,EAAO+L,qBACL,EACA1L,EACA1D,aAAa20B,cAAcC,IAAIC,MAAMtxB,wBAG3C,EASAvD,aAAa20B,cAAcC,IAAIC,MAAMl0B,gBAAkB,CAAC,EAAE,GAItD1B,EAAKkB,QAAQwB,qBAajB3B,aAAa20B,cAAcC,IAAIC,MAAMjzB,UAAUC,SAAW,SAASC,GACjE,OAAO9B,aAAa20B,cAAcC,IAAIC,MAAMhzB,SAASC,EAAqBtC,KAC5E,EAYAQ,aAAa20B,cAAcC,IAAIC,MAAMhzB,SAAW,SAASE,EAAiBC,GACxE,IAAOC,EAAM,CACX21B,UAAW34B,EAAKkB,QAAQ0K,2BAA2B7I,EAAK,GAAG,GAC3D61B,SAAU54B,EAAKkB,QAAQ0K,2BAA2B7I,EAAK,GAAG,GAC1DE,KAAMjD,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAC/C81B,WAAY74B,EAAKkB,QAAQ2J,aAAa9H,EAAI+1B,gBAC1C/3B,aAAa20B,cAAcC,IAAIC,MAAMC,MAAMjzB,SAAUE,GACrDi2B,YAAa/4B,EAAKkB,QAAQ2J,aAAa9H,EAAIi2B,iBAC3Cj4B,aAAa20B,cAAcC,IAAIC,MAAMC,MAAMjzB,SAAUE,GACrD4H,KAAM1K,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GAC/Ck2B,QAASj5B,EAAKkB,QAAQ0K,2BAA2B7I,EAAK,GAAG,GACzDm2B,gBAAiBl5B,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAM5D,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAa20B,cAAcC,IAAIC,MAAMtyB,kBAAoB,SAASC,GAChE,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAa20B,cAAcC,IAAIC,MAC7C,OAAO70B,aAAa20B,cAAcC,IAAIC,MAAMlyB,4BAA4BX,EAAKS,EAC/E,EAUAzC,aAAa20B,cAAcC,IAAIC,MAAMlyB,4BAA8B,SAASX,EAAKS,GAC/E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAgCN,EAAOoL,WAC3C7L,EAAIo2B,aAAar1B,GACjB,MACF,KAAK,EACCA,EAAgCN,EAAOoL,WAC3C7L,EAAIq2B,YAAYt1B,GAChB,MACF,KAAK,EACCA,EAA+BN,EAAO6K,aAC1CtL,EAAIiB,QAAQF,GACZ,MACF,KAAK,EACCA,EAAQ,IAAI/C,aAAa20B,cAAcC,IAAIC,MAAMC,MACrDryB,EAAOoD,YAAY9C,EAAM/C,aAAa20B,cAAcC,IAAIC,MAAMC,MAAMnyB,6BACpEX,EAAIs2B,UAAUv1B,GACd,MACF,KAAK,EACCA,EAAQ,IAAI/C,aAAa20B,cAAcC,IAAIC,MAAMC,MACrDryB,EAAOoD,YAAY9C,EAAM/C,aAAa20B,cAAcC,IAAIC,MAAMC,MAAMnyB,6BACpEX,EAAIu2B,WAAWx1B,GACf,MACF,KAAK,EACCA,EAAwEN,EAAOyD,WACnFlE,EAAImL,QAAQpK,GACZ,MACF,KAAK,EACCA,EAAgCN,EAAOoL,WAC3C7L,EAAIw2B,WAAWz1B,GACf,MACF,KAAK,EACCA,EAAkFN,EAAOyD,WAC7FlE,EAAIy2B,mBAAmB11B,GACvB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAa20B,cAAcC,IAAIC,MAAMjzB,UAAUwB,gBAAkB,WAC/D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAa20B,cAAcC,IAAIC,MAAMtxB,wBAAwB/D,KAAM6D,GAC5DA,EAAOG,iBAChB,EAUAxD,aAAa20B,cAAcC,IAAIC,MAAMtxB,wBAA0B,SAASE,EAASJ,GAC/E,IAAIK,OAAIC,GACRD,EAAID,EAAQi1B,iBAEVr1B,EAAOuM,UACL,EACAlM,IAGJA,EAAID,EAAQk1B,gBAEVt1B,EAAOuM,UACL,EACAlM,IAGJA,EAAID,EAAQO,WACNH,OAAS,GACbR,EAAOgM,YACL,EACA3L,IAGJA,EAAID,EAAQs0B,iBACNl0B,OAAS,GACbR,EAAO+L,qBACL,EACA1L,EACA1D,aAAa20B,cAAcC,IAAIC,MAAMC,MAAMvxB,0BAG/CG,EAAID,EAAQw0B,kBACNp0B,OAAS,GACbR,EAAO+L,qBACL,EACA1L,EACA1D,aAAa20B,cAAcC,IAAIC,MAAMC,MAAMvxB,yBAIrC,KADVG,EAAID,EAAQyL,YAEV7L,EAAOuD,UACL,EACAlD,IAGJA,EAAID,EAAQm1B,eAEVv1B,EAAOuM,UACL,EACAlM,GAIM,KADVA,EAAID,EAAQo1B,uBAEVx1B,EAAOuD,UACL,EACAlD,EAGN,EAMA1D,aAAa20B,cAAcC,IAAIC,MAAMiE,UAAY,CAC/CC,iBAAkB,EAClBC,YAAa,EACbC,SAAU,EACVC,MAAO,EACPC,SAAU,EACVC,QAAS,EACTC,MAAO,GAMTr5B,aAAa20B,cAAcC,IAAIC,MAAMyE,oBAAsB,CACzDC,sBAAuB,EACvBC,KAAM,EACNC,KAAM,EACNC,WAAY,EACZC,QAAS,GAMP16B,EAAKkB,QAAQwB,qBAajB3B,aAAa20B,cAAcC,IAAIC,MAAMC,MAAMlzB,UAAUC,SAAW,SAASC,GACvE,OAAO9B,aAAa20B,cAAcC,IAAIC,MAAMC,MAAMjzB,SAASC,EAAqBtC,KAClF,EAYAQ,aAAa20B,cAAcC,IAAIC,MAAMC,MAAMjzB,SAAW,SAASE,EAAiBC,GAC9E,IAAOC,EAAM,CACX23B,QAAS36B,EAAKkB,QAAQ0K,2BAA2B7I,EAAK,GAAG,GACzDE,KAAMjD,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAC/C2H,KAAM1K,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,KAMjD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAa20B,cAAcC,IAAIC,MAAMC,MAAMvyB,kBAAoB,SAASC,GACtE,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAa20B,cAAcC,IAAIC,MAAMC,MACnD,OAAO90B,aAAa20B,cAAcC,IAAIC,MAAMC,MAAMnyB,4BAA4BX,EAAKS,EACrF,EAUAzC,aAAa20B,cAAcC,IAAIC,MAAMC,MAAMnyB,4BAA8B,SAASX,EAAKS,GACrF,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAgCN,EAAOoL,WAC3C7L,EAAI63B,WAAW92B,GACf,MACF,KAAK,EACCA,EAA+BN,EAAO6K,aAC1CtL,EAAIiB,QAAQF,GACZ,MACF,KAAK,EACCA,EAA+BN,EAAO6K,aAC1CtL,EAAImL,QAAQpK,GACZ,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAa20B,cAAcC,IAAIC,MAAMC,MAAMlzB,UAAUwB,gBAAkB,WACrE,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAa20B,cAAcC,IAAIC,MAAMC,MAAMvxB,wBAAwB/D,KAAM6D,GAClEA,EAAOG,iBAChB,EAUAxD,aAAa20B,cAAcC,IAAIC,MAAMC,MAAMvxB,wBAA0B,SAASE,EAASJ,GACrF,IAAIK,OAAIC,GACRD,EAAID,EAAQq2B,eAEVz2B,EAAOuM,UACL,EACAlM,IAGJA,EAAID,EAAQO,WACNH,OAAS,GACbR,EAAOgM,YACL,EACA3L,IAGJA,EAAID,EAAQyL,WACNrL,OAAS,GACbR,EAAOgM,YACL,EACA3L,EAGN,EAOA1D,aAAa20B,cAAcC,IAAIC,MAAMC,MAAMlzB,UAAUk4B,WAAa,WAChE,OAA+B76B,EAAKkB,QAAQ0K,2BAA2BrL,KAAM,GAAG,EAClF,EAOAQ,aAAa20B,cAAcC,IAAIC,MAAMC,MAAMlzB,UAAUi4B,WAAa,SAAS92B,GACzE,OAAO9D,EAAKkB,QAAQuT,sBAAsBlU,KAAM,EAAGuD,EACrD,EAOA/C,aAAa20B,cAAcC,IAAIC,MAAMC,MAAMlzB,UAAUoC,QAAU,WAC7D,OAA8B/E,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GAC1E,EAOAQ,aAAa20B,cAAcC,IAAIC,MAAMC,MAAMlzB,UAAUqB,QAAU,SAASF,GACtE,OAAO9D,EAAKkB,QAAQiY,qBAAqB5Y,KAAM,EAAGuD,EACpD,EAOA/C,aAAa20B,cAAcC,IAAIC,MAAMC,MAAMlzB,UAAUsN,QAAU,WAC7D,OAA8BjQ,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GAC1E,EAOAQ,aAAa20B,cAAcC,IAAIC,MAAMC,MAAMlzB,UAAUuL,QAAU,SAASpK,GACtE,OAAO9D,EAAKkB,QAAQiY,qBAAqB5Y,KAAM,EAAGuD,EACpD,EAOA/C,aAAa20B,cAAcC,IAAIC,MAAMjzB,UAAU82B,aAAe,WAC5D,OAA+Bz5B,EAAKkB,QAAQ0K,2BAA2BrL,KAAM,GAAG,EAClF,EAOAQ,aAAa20B,cAAcC,IAAIC,MAAMjzB,UAAUw2B,aAAe,SAASr1B,GACrE,OAAO9D,EAAKkB,QAAQuT,sBAAsBlU,KAAM,EAAGuD,EACrD,EAOA/C,aAAa20B,cAAcC,IAAIC,MAAMjzB,UAAU+2B,YAAc,WAC3D,OAA+B15B,EAAKkB,QAAQ0K,2BAA2BrL,KAAM,GAAG,EAClF,EAOAQ,aAAa20B,cAAcC,IAAIC,MAAMjzB,UAAUy2B,YAAc,SAASt1B,GACpE,OAAO9D,EAAKkB,QAAQuT,sBAAsBlU,KAAM,EAAGuD,EACrD,EAOA/C,aAAa20B,cAAcC,IAAIC,MAAMjzB,UAAUoC,QAAU,WACvD,OAA8B/E,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GAC1E,EAOAQ,aAAa20B,cAAcC,IAAIC,MAAMjzB,UAAUqB,QAAU,SAASF,GAChE,OAAO9D,EAAKkB,QAAQiY,qBAAqB5Y,KAAM,EAAGuD,EACpD,EAOA/C,aAAa20B,cAAcC,IAAIC,MAAMjzB,UAAUm2B,cAAgB,WAC7D,OACE94B,EAAKkB,QAAQ2S,wBAAwBtT,KAAMQ,aAAa20B,cAAcC,IAAIC,MAAMC,MAAO,EAC3F,EAOA90B,aAAa20B,cAAcC,IAAIC,MAAMjzB,UAAUm4B,cAAgB,SAASh3B,GACtE,OAAO9D,EAAKkB,QAAQ6S,wBAAwBxT,KAAM,EAAGuD,EACvD,EAQA/C,aAAa20B,cAAcC,IAAIC,MAAMjzB,UAAU02B,UAAY,SAASrlB,EAAWpL,GAC7E,OAAO5I,EAAKkB,QAAQ+S,0BAA0B1T,KAAM,EAAGyT,EAAWjT,aAAa20B,cAAcC,IAAIC,MAAMC,MAAOjtB,EAChH,EAOA7H,aAAa20B,cAAcC,IAAIC,MAAMjzB,UAAUo4B,gBAAkB,WAC/D,OAAOx6B,KAAKu6B,cAAc,GAC5B,EAOA/5B,aAAa20B,cAAcC,IAAIC,MAAMjzB,UAAUq2B,eAAiB,WAC9D,OACEh5B,EAAKkB,QAAQ2S,wBAAwBtT,KAAMQ,aAAa20B,cAAcC,IAAIC,MAAMC,MAAO,EAC3F,EAOA90B,aAAa20B,cAAcC,IAAIC,MAAMjzB,UAAUq4B,eAAiB,SAASl3B,GACvE,OAAO9D,EAAKkB,QAAQ6S,wBAAwBxT,KAAM,EAAGuD,EACvD,EAQA/C,aAAa20B,cAAcC,IAAIC,MAAMjzB,UAAU22B,WAAa,SAAStlB,EAAWpL,GAC9E,OAAO5I,EAAKkB,QAAQ+S,0BAA0B1T,KAAM,EAAGyT,EAAWjT,aAAa20B,cAAcC,IAAIC,MAAMC,MAAOjtB,EAChH,EAOA7H,aAAa20B,cAAcC,IAAIC,MAAMjzB,UAAUs4B,iBAAmB,WAChE,OAAO16B,KAAKy6B,eAAe,GAC7B,EAOAj6B,aAAa20B,cAAcC,IAAIC,MAAMjzB,UAAUsN,QAAU,WACvD,OAAuEjQ,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EACnH,EAOAQ,aAAa20B,cAAcC,IAAIC,MAAMjzB,UAAUuL,QAAU,SAASpK,GAChE,OAAO9D,EAAKkB,QAAQ6H,mBAAmBxI,KAAM,EAAGuD,EAClD,EAOA/C,aAAa20B,cAAcC,IAAIC,MAAMjzB,UAAUg3B,WAAa,WAC1D,OAA+B35B,EAAKkB,QAAQ0K,2BAA2BrL,KAAM,GAAG,EAClF,EAOAQ,aAAa20B,cAAcC,IAAIC,MAAMjzB,UAAU42B,WAAa,SAASz1B,GACnE,OAAO9D,EAAKkB,QAAQuT,sBAAsBlU,KAAM,EAAGuD,EACrD,EAOA/C,aAAa20B,cAAcC,IAAIC,MAAMjzB,UAAUi3B,mBAAqB,WAClE,OAAiF55B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC7H,EAOAQ,aAAa20B,cAAcC,IAAIC,MAAMjzB,UAAU62B,mBAAqB,SAAS11B,GAC3E,OAAO9D,EAAKkB,QAAQ6H,mBAAmBxI,KAAM,EAAGuD,EAClD,EAOA/C,aAAa20B,cAAcC,IAAIhzB,UAAU81B,cAAgB,WACvD,OACEz4B,EAAKkB,QAAQ2S,wBAAwBtT,KAAMQ,aAAa20B,cAAcC,IAAIC,MAAO,EACrF,EAOA70B,aAAa20B,cAAcC,IAAIhzB,UAAUu4B,cAAgB,SAASp3B,GAChE,OAAO9D,EAAKkB,QAAQ6S,wBAAwBxT,KAAM,EAAGuD,EACvD,EAQA/C,aAAa20B,cAAcC,IAAIhzB,UAAU+1B,UAAY,SAAS1kB,EAAWpL,GACvE,OAAO5I,EAAKkB,QAAQ+S,0BAA0B1T,KAAM,EAAGyT,EAAWjT,aAAa20B,cAAcC,IAAIC,MAAOhtB,EAC1G,EAOA7H,aAAa20B,cAAcC,IAAIhzB,UAAUw4B,gBAAkB,WACzD,OAAO56B,KAAK26B,cAAc,GAC5B,EAOAn6B,aAAa20B,cAAc/yB,UAAUy4B,iBAAmB,WACtD,OAA4Cp7B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAa20B,cAAc/yB,UAAU2zB,uBAAyB,WAC5D,OAA8Bt2B,EAAKkB,QAAQ+D,WACvC1E,KAAK66B,mBACX,EAUAr6B,aAAa20B,cAAc/yB,UAAUo1B,sBAAwB,WAC3D,OAAmC/3B,EAAKkB,QAAQgE,UAC5C3E,KAAK66B,mBACX,EAOAr6B,aAAa20B,cAAc/yB,UAAU00B,iBAAmB,SAASvzB,GAC/D,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAa20B,cAAc/yB,UAAU04B,mBAAqB,WACxD,OAA4Cr7B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAa20B,cAAc/yB,UAAU6zB,yBAA2B,WAC9D,OAA8Bx2B,EAAKkB,QAAQ+D,WACvC1E,KAAK86B,qBACX,EAUAt6B,aAAa20B,cAAc/yB,UAAUq1B,wBAA0B,WAC7D,OAAmCh4B,EAAKkB,QAAQgE,UAC5C3E,KAAK86B,qBACX,EAOAt6B,aAAa20B,cAAc/yB,UAAU20B,mBAAqB,SAASxzB,GACjE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAa20B,cAAc/yB,UAAU+zB,OAAS,WAC5C,OACE12B,EAAKkB,QAAQqS,gBAAgBhT,KAAMQ,aAAa20B,cAAcC,IAAK,EACvE,EAOA50B,aAAa20B,cAAc/yB,UAAU40B,OAAS,SAASzzB,GACrD,OAAO9D,EAAKkB,QAAQsS,gBAAgBjT,KAAM,EAAGuD,EAC/C,EAOA/C,aAAa20B,cAAc/yB,UAAU24B,SAAW,WAC9C,OAAO/6B,KAAKg3B,YAAO7yB,EACrB,EAOA3D,aAAa20B,cAAc/yB,UAAU44B,OAAS,WAC5C,OAAyC,MAAlCv7B,EAAKkB,QAAQyS,SAASpT,KAAM,EACrC,EAOAQ,aAAa20B,cAAc/yB,UAAU64B,YAAc,WACjD,OAA4Cx7B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAa20B,cAAc/yB,UAAUi0B,kBAAoB,WACvD,OAA8B52B,EAAKkB,QAAQ+D,WACvC1E,KAAKi7B,cACX,EAUAz6B,aAAa20B,cAAc/yB,UAAUs1B,iBAAmB,WACtD,OAAmCj4B,EAAKkB,QAAQgE,UAC5C3E,KAAKi7B,cACX,EAOAz6B,aAAa20B,cAAc/yB,UAAU60B,YAAc,SAAS1zB,GAC1D,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAa20B,cAAc/yB,UAAUu1B,aAAe,WAClD,OAA8Bl4B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAa20B,cAAc/yB,UAAU80B,aAAe,SAAS3zB,GAC3D,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAa20B,cAAc/yB,UAAUw1B,8BAAgC,WACnE,OAA8Bn4B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAa20B,cAAc/yB,UAAU+0B,8BAAgC,SAAS5zB,GAC5E,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAa20B,cAAc/yB,UAAUoC,QAAU,WAC7C,OAA8B/E,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GAC1E,EAOAQ,aAAa20B,cAAc/yB,UAAUqB,QAAU,SAASF,GACtD,OAAO9D,EAAKkB,QAAQiY,qBAAqB5Y,KAAM,EAAGuD,EACpD,EAOA/C,aAAa20B,cAAc/yB,UAAUy1B,qBAAuB,WAC1D,OAA8Bp4B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAa20B,cAAc/yB,UAAUg1B,qBAAuB,SAAS7zB,GACnE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAa20B,cAAc/yB,UAAU84B,YAAc,WACjD,OAA4Cz7B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAa20B,cAAc/yB,UAAUs0B,kBAAoB,WACvD,OAA8Bj3B,EAAKkB,QAAQ+D,WACvC1E,KAAKk7B,cACX,EAUA16B,aAAa20B,cAAc/yB,UAAU01B,iBAAmB,WACtD,OAAmCr4B,EAAKkB,QAAQgE,UAC5C3E,KAAKk7B,cACX,EAOA16B,aAAa20B,cAAc/yB,UAAUi1B,YAAc,SAAS9zB,GAC1D,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAa20B,cAAc/yB,UAAU+4B,WAAa,WAChD,OAA4C17B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,GACzF,EAQAQ,aAAa20B,cAAc/yB,UAAUw0B,iBAAmB,WACtD,OAA8Bn3B,EAAKkB,QAAQ+D,WACvC1E,KAAKm7B,aACX,EAUA36B,aAAa20B,cAAc/yB,UAAU21B,gBAAkB,WACrD,OAAmCt4B,EAAKkB,QAAQgE,UAC5C3E,KAAKm7B,aACX,EAOA36B,aAAa20B,cAAc/yB,UAAUk1B,WAAa,SAAS/zB,GACzD,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,GAAIuD,EACpD,EAOA/C,aAAa20B,cAAc/yB,UAAU41B,WAAa,WAChD,OAA8Bv4B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,EAC3E,EAOAQ,aAAa20B,cAAc/yB,UAAUm1B,WAAa,SAASh0B,GACzD,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,GAAIuD,EAClD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAa+0B,cAAcnzB,UAAUC,SAAW,SAASC,GACvD,OAAO9B,aAAa+0B,cAAclzB,SAASC,EAAqBtC,KAClE,EAYAQ,aAAa+0B,cAAclzB,SAAW,SAASE,EAAiBC,GAC9D,IAAOC,EAAM,CACX+O,YAAa/R,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACtD44B,aAAc37B,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACvD64B,YAAa57B,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAMxD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAa+0B,cAAcxyB,kBAAoB,SAASC,GACtD,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAa+0B,cAC3B,OAAO/0B,aAAa+0B,cAAcpyB,4BAA4BX,EAAKS,EACrE,EAUAzC,aAAa+0B,cAAcpyB,4BAA8B,SAASX,EAAKS,GACrE,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAA+BN,EAAOiC,YAC1C1C,EAAIyP,eAAe1O,GACnB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI84B,gBAAgB/3B,GACpB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI+4B,eAAeh4B,GACnB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAa+0B,cAAcnzB,UAAUwB,gBAAkB,WACrD,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAa+0B,cAAcxxB,wBAAwB/D,KAAM6D,GAClDA,EAAOG,iBAChB,EAUAxD,aAAa+0B,cAAcxxB,wBAA0B,SAASE,EAASJ,GACrE,IAAIK,OAAIC,EAEE,KADVD,EAAID,EAAQwO,mBAEV5O,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQu3B,oBAEV33B,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQw3B,mBAEV53B,EAAOyB,WACL,EACApB,EAGN,EAOA1D,aAAa+0B,cAAcnzB,UAAUqQ,eAAiB,WACpD,OAA8BhT,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAa+0B,cAAcnzB,UAAU6P,eAAiB,SAAS1O,GAC7D,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAa+0B,cAAcnzB,UAAUo5B,gBAAkB,WACrD,OAA8B/7B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAa+0B,cAAcnzB,UAAUk5B,gBAAkB,SAAS/3B,GAC9D,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAa+0B,cAAcnzB,UAAUq5B,eAAiB,WACpD,OAA8Bh8B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAa+0B,cAAcnzB,UAAUm5B,eAAiB,SAASh4B,GAC7D,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAag1B,oBAAoBpzB,UAAUC,SAAW,SAASC,GAC7D,OAAO9B,aAAag1B,oBAAoBnzB,SAASC,EAAqBtC,KACxE,EAYAQ,aAAag1B,oBAAoBnzB,SAAW,SAASE,EAAiBC,GACpE,IAAI0B,EAAGzB,EAAM,CACXwlB,aAAczlB,EAAI0lB,wBAClBwT,aAAcx3B,EAAI1B,EAAIm5B,mBAAqBn7B,aAAa20B,cAAc9yB,SAASE,EAAiB2B,GAChG03B,eAAgBn8B,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACzD0xB,QAASz0B,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAMpD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAag1B,oBAAoBzyB,kBAAoB,SAASC,GAC5D,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAag1B,oBAC3B,OAAOh1B,aAAag1B,oBAAoBryB,4BAA4BX,EAAKS,EAC3E,EAUAzC,aAAag1B,oBAAoBryB,4BAA8B,SAASX,EAAKS,GAC3E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,EACCA,EAAQ,IAAI/C,aAAa20B,cAC7BlyB,EAAOoD,YAAY9C,EAAM/C,aAAa20B,cAAchyB,6BACpDX,EAAIq5B,eAAet4B,GACnB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIs5B,kBAAkBv4B,GACtB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI6xB,WAAW9wB,GACf,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAag1B,oBAAoBpzB,UAAUwB,gBAAkB,WAC3D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAag1B,oBAAoBzxB,wBAAwB/D,KAAM6D,GACxDA,EAAOG,iBAChB,EAUAxD,aAAag1B,oBAAoBzxB,wBAA0B,SAASE,EAASJ,GAC3E,IAAIK,OAAIC,GACRD,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIK,OADTA,EAAID,EAAQ03B,mBAEV93B,EAAOqM,aACL,EACAhM,EACA1D,aAAa20B,cAAcpxB,yBAIrB,KADVG,EAAID,EAAQ83B,sBAEVl4B,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQwwB,eAEV5wB,EAAOyB,WACL,EACApB,EAGN,EAOA1D,aAAag1B,oBAAoBpzB,UAAUqmB,gBAAkB,WAC3D,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAag1B,oBAAoBpzB,UAAU8lB,sBAAwB,WACjE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAag1B,oBAAoBpzB,UAAUmmB,qBAAuB,WAChE,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAag1B,oBAAoBpzB,UAAUimB,gBAAkB,SAAS9kB,GACpE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAag1B,oBAAoBpzB,UAAUu5B,eAAiB,WAC1D,OACEl8B,EAAKkB,QAAQqS,gBAAgBhT,KAAMQ,aAAa20B,cAAe,EACnE,EAOA30B,aAAag1B,oBAAoBpzB,UAAUy5B,eAAiB,SAASt4B,GACnE,OAAO9D,EAAKkB,QAAQsS,gBAAgBjT,KAAM,EAAGuD,EAC/C,EAOA/C,aAAag1B,oBAAoBpzB,UAAU45B,iBAAmB,WAC5D,OAAOh8B,KAAK67B,oBAAe13B,EAC7B,EAOA3D,aAAag1B,oBAAoBpzB,UAAU65B,eAAiB,WAC1D,OAAyC,MAAlCx8B,EAAKkB,QAAQyS,SAASpT,KAAM,EACrC,EAOAQ,aAAag1B,oBAAoBpzB,UAAU25B,kBAAoB,WAC7D,OAA8Bt8B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAag1B,oBAAoBpzB,UAAU05B,kBAAoB,SAASv4B,GACtE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAag1B,oBAAoBpzB,UAAUqyB,WAAa,WACtD,OAA8Bh1B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAag1B,oBAAoBpzB,UAAUiyB,WAAa,SAAS9wB,GAC/D,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAai1B,qBAAqBrzB,UAAUC,SAAW,SAASC,GAC9D,OAAO9B,aAAai1B,qBAAqBpzB,SAASC,EAAqBtC,KACzE,EAYAQ,aAAai1B,qBAAqBpzB,SAAW,SAASE,EAAiBC,GACrE,IAAOC,EAAM,CACXwlB,aAAczlB,EAAI0lB,wBAClB8N,gBAAiBxzB,EAAIyzB,2BACrBK,UAAW72B,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACpDsiB,KAAMtiB,EAAIuiB,gBACV6W,eAAgBn8B,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,GACzD0xB,QAASz0B,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAMpD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAai1B,qBAAqB1yB,kBAAoB,SAASC,GAC7D,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAai1B,qBAC3B,OAAOj1B,aAAai1B,qBAAqBtyB,4BAA4BX,EAAKS,EAC5E,EAUAzC,aAAai1B,qBAAqBtyB,4BAA8B,SAASX,EAAKS,GAC5E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAIu0B,mBAAmBxzB,GACvB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI00B,aAAa3zB,GACjB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAImjB,QAAQpiB,GACZ,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIs5B,kBAAkBv4B,GACtB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI6xB,WAAW9wB,GACf,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAai1B,qBAAqBrzB,UAAUwB,gBAAkB,WAC5D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAai1B,qBAAqB1xB,wBAAwB/D,KAAM6D,GACzDA,EAAOG,iBAChB,EAUAxD,aAAai1B,qBAAqB1xB,wBAA0B,SAASE,EAASJ,GAC5E,IAAIK,OAAIC,GACRD,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQwzB,2BACNpzB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQ0zB,iBAEV9zB,EAAOyB,WACL,EACApB,IAGJA,EAAID,EAAQmiB,gBACN/hB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQ83B,sBAEVl4B,EAAOyB,WACL,EACApB,GAIM,KADVA,EAAID,EAAQwwB,eAEV5wB,EAAOyB,WACL,EACApB,EAGN,EAOA1D,aAAai1B,qBAAqBrzB,UAAUqmB,gBAAkB,WAC5D,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAai1B,qBAAqBrzB,UAAU8lB,sBAAwB,WAClE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAai1B,qBAAqBrzB,UAAUmmB,qBAAuB,WACjE,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAai1B,qBAAqBrzB,UAAUimB,gBAAkB,SAAS9kB,GACrE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAai1B,qBAAqBrzB,UAAU04B,mBAAqB,WAC/D,OAA4Cr7B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAai1B,qBAAqBrzB,UAAU6zB,yBAA2B,WACrE,OAA8Bx2B,EAAKkB,QAAQ+D,WACvC1E,KAAK86B,qBACX,EAUAt6B,aAAai1B,qBAAqBrzB,UAAUq1B,wBAA0B,WACpE,OAAmCh4B,EAAKkB,QAAQgE,UAC5C3E,KAAK86B,qBACX,EAOAt6B,aAAai1B,qBAAqBrzB,UAAU20B,mBAAqB,SAASxzB,GACxE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAai1B,qBAAqBrzB,UAAUu1B,aAAe,WACzD,OAA8Bl4B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAai1B,qBAAqBrzB,UAAU80B,aAAe,SAAS3zB,GAClE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAai1B,qBAAqBrzB,UAAUwkB,QAAU,WACpD,OAA4CnnB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAai1B,qBAAqBrzB,UAAU2iB,cAAgB,WAC1D,OAA8BtlB,EAAKkB,QAAQ+D,WACvC1E,KAAK4mB,UACX,EAUApmB,aAAai1B,qBAAqBrzB,UAAUgkB,aAAe,WACzD,OAAmC3mB,EAAKkB,QAAQgE,UAC5C3E,KAAK4mB,UACX,EAOApmB,aAAai1B,qBAAqBrzB,UAAUujB,QAAU,SAASpiB,GAC7D,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAai1B,qBAAqBrzB,UAAU25B,kBAAoB,WAC9D,OAA8Bt8B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAai1B,qBAAqBrzB,UAAU05B,kBAAoB,SAASv4B,GACvE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAai1B,qBAAqBrzB,UAAUqyB,WAAa,WACvD,OAA8Bh1B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAai1B,qBAAqBrzB,UAAUiyB,WAAa,SAAS9wB,GAChE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAak1B,iBAAiBtzB,UAAUC,SAAW,SAASC,GAC1D,OAAO9B,aAAak1B,iBAAiBrzB,SAASC,EAAqBtC,KACrE,EAYAQ,aAAak1B,iBAAiBrzB,SAAW,SAASE,EAAiBC,GACjE,IAAOC,EAAM,CACXwlB,aAAczlB,EAAI0lB,wBAClB8N,gBAAiBxzB,EAAIyzB,4BAMvB,OAHI1zB,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAak1B,iBAAiB3yB,kBAAoB,SAASC,GACzD,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAak1B,iBAC3B,OAAOl1B,aAAak1B,iBAAiBvyB,4BAA4BX,EAAKS,EACxE,EAUAzC,aAAak1B,iBAAiBvyB,4BAA8B,SAASX,EAAKS,GACxE,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAIu0B,mBAAmBxzB,GACvB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAak1B,iBAAiBtzB,UAAUwB,gBAAkB,WACxD,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAak1B,iBAAiB3xB,wBAAwB/D,KAAM6D,GACrDA,EAAOG,iBAChB,EAUAxD,aAAak1B,iBAAiB3xB,wBAA0B,SAASE,EAASJ,GACxE,IAAIK,OAAIC,GACRD,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQwzB,2BACNpzB,OAAS,GACbR,EAAOS,WACL,EACAJ,EAGN,EAOA1D,aAAak1B,iBAAiBtzB,UAAUqmB,gBAAkB,WACxD,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAak1B,iBAAiBtzB,UAAU8lB,sBAAwB,WAC9D,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAak1B,iBAAiBtzB,UAAUmmB,qBAAuB,WAC7D,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAak1B,iBAAiBtzB,UAAUimB,gBAAkB,SAAS9kB,GACjE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAak1B,iBAAiBtzB,UAAU04B,mBAAqB,WAC3D,OAA4Cr7B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAak1B,iBAAiBtzB,UAAU6zB,yBAA2B,WACjE,OAA8Bx2B,EAAKkB,QAAQ+D,WACvC1E,KAAK86B,qBACX,EAUAt6B,aAAak1B,iBAAiBtzB,UAAUq1B,wBAA0B,WAChE,OAAmCh4B,EAAKkB,QAAQgE,UAC5C3E,KAAK86B,qBACX,EAOAt6B,aAAak1B,iBAAiBtzB,UAAU20B,mBAAqB,SAASxzB,GACpE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAam1B,sBAAsBvzB,UAAUC,SAAW,SAASC,GAC/D,OAAO9B,aAAam1B,sBAAsBtzB,SAASC,EAAqBtC,KAC1E,EAYAQ,aAAam1B,sBAAsBtzB,SAAW,SAASE,EAAiBC,GACtE,IAAOC,EAAM,CACXwlB,aAAczlB,EAAI0lB,wBAClB8N,gBAAiBxzB,EAAIyzB,2BACrBM,2BAA4B92B,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAMvE,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAam1B,sBAAsB5yB,kBAAoB,SAASC,GAC9D,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAam1B,sBAC3B,OAAOn1B,aAAam1B,sBAAsBxyB,4BAA4BX,EAAKS,EAC7E,EAUAzC,aAAam1B,sBAAsBxyB,4BAA8B,SAASX,EAAKS,GAC7E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAIu0B,mBAAmBxzB,GACvB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI20B,8BAA8B5zB,GAClC,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAam1B,sBAAsBvzB,UAAUwB,gBAAkB,WAC7D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAam1B,sBAAsB5xB,wBAAwB/D,KAAM6D,GAC1DA,EAAOG,iBAChB,EAUAxD,aAAam1B,sBAAsB5xB,wBAA0B,SAASE,EAASJ,GAC7E,IAAIK,OAAIC,GACRD,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQwzB,2BACNpzB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQ2zB,kCAEV/zB,EAAOyB,WACL,EACApB,EAGN,EAOA1D,aAAam1B,sBAAsBvzB,UAAUqmB,gBAAkB,WAC7D,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAam1B,sBAAsBvzB,UAAU8lB,sBAAwB,WACnE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAam1B,sBAAsBvzB,UAAUmmB,qBAAuB,WAClE,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAam1B,sBAAsBvzB,UAAUimB,gBAAkB,SAAS9kB,GACtE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAam1B,sBAAsBvzB,UAAU04B,mBAAqB,WAChE,OAA4Cr7B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAam1B,sBAAsBvzB,UAAU6zB,yBAA2B,WACtE,OAA8Bx2B,EAAKkB,QAAQ+D,WACvC1E,KAAK86B,qBACX,EAUAt6B,aAAam1B,sBAAsBvzB,UAAUq1B,wBAA0B,WACrE,OAAmCh4B,EAAKkB,QAAQgE,UAC5C3E,KAAK86B,qBACX,EAOAt6B,aAAam1B,sBAAsBvzB,UAAU20B,mBAAqB,SAASxzB,GACzE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAam1B,sBAAsBvzB,UAAUw1B,8BAAgC,WAC3E,OAA8Bn4B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAam1B,sBAAsBvzB,UAAU+0B,8BAAgC,SAAS5zB,GACpF,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAao1B,0BAA0BxzB,UAAUC,SAAW,SAASC,GACnE,OAAO9B,aAAao1B,0BAA0BvzB,SAASC,EAAqBtC,KAC9E,EAYAQ,aAAao1B,0BAA0BvzB,SAAW,SAASE,EAAiBC,GAC1E,IAAOC,EAAM,CACXwlB,aAAczlB,EAAI0lB,wBAClB8N,gBAAiBxzB,EAAIyzB,2BACrBO,kBAAmB/2B,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAM9D,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAao1B,0BAA0B7yB,kBAAoB,SAASC,GAClE,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAao1B,0BAC3B,OAAOp1B,aAAao1B,0BAA0BzyB,4BAA4BX,EAAKS,EACjF,EAUAzC,aAAao1B,0BAA0BzyB,4BAA8B,SAASX,EAAKS,GACjF,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAIu0B,mBAAmBxzB,GACvB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI40B,qBAAqB7zB,GACzB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAao1B,0BAA0BxzB,UAAUwB,gBAAkB,WACjE,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAao1B,0BAA0B7xB,wBAAwB/D,KAAM6D,GAC9DA,EAAOG,iBAChB,EAUAxD,aAAao1B,0BAA0B7xB,wBAA0B,SAASE,EAASJ,GACjF,IAAIK,OAAIC,GACRD,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQwzB,2BACNpzB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQ4zB,yBAEVh0B,EAAOyB,WACL,EACApB,EAGN,EAOA1D,aAAao1B,0BAA0BxzB,UAAUqmB,gBAAkB,WACjE,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAao1B,0BAA0BxzB,UAAU8lB,sBAAwB,WACvE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAao1B,0BAA0BxzB,UAAUmmB,qBAAuB,WACtE,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAao1B,0BAA0BxzB,UAAUimB,gBAAkB,SAAS9kB,GAC1E,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAao1B,0BAA0BxzB,UAAU04B,mBAAqB,WACpE,OAA4Cr7B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAao1B,0BAA0BxzB,UAAU6zB,yBAA2B,WAC1E,OAA8Bx2B,EAAKkB,QAAQ+D,WACvC1E,KAAK86B,qBACX,EAUAt6B,aAAao1B,0BAA0BxzB,UAAUq1B,wBAA0B,WACzE,OAAmCh4B,EAAKkB,QAAQgE,UAC5C3E,KAAK86B,qBACX,EAOAt6B,aAAao1B,0BAA0BxzB,UAAU20B,mBAAqB,SAASxzB,GAC7E,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAao1B,0BAA0BxzB,UAAUy1B,qBAAuB,WACtE,OAA8Bp4B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAao1B,0BAA0BxzB,UAAUg1B,qBAAuB,SAAS7zB,GAC/E,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAaq1B,yBAAyBzzB,UAAUC,SAAW,SAASC,GAClE,OAAO9B,aAAaq1B,yBAAyBxzB,SAASC,EAAqBtC,KAC7E,EAYAQ,aAAaq1B,yBAAyBxzB,SAAW,SAASE,EAAiBC,GACzE,IAAI0B,EAAGzB,EAAM,CACXy5B,eAAgBh4B,EAAI1B,EAAI25B,qBAAuB37B,aAAa20B,cAAc9yB,SAASE,EAAiB2B,GACpGk4B,YAAa55B,EAAI65B,uBACjBC,eAAgBp4B,EAAI1B,EAAI+5B,qBAAuB/7B,aAAa+0B,cAAclzB,SAASE,EAAiB2B,IAMtG,OAHI3B,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAaq1B,yBAAyB9yB,kBAAoB,SAASC,GACjE,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAaq1B,yBAC3B,OAAOr1B,aAAaq1B,yBAAyB1yB,4BAA4BX,EAAKS,EAChF,EAUAzC,aAAaq1B,yBAAyB1yB,4BAA8B,SAASX,EAAKS,GAChF,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAQ,IAAI/C,aAAa20B,cAC7BlyB,EAAOoD,YAAY9C,EAAM/C,aAAa20B,cAAchyB,6BACpDX,EAAIg6B,iBAAiBj5B,GACrB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAIi6B,eAAel5B,GACnB,MACF,KAAK,EACCA,EAAQ,IAAI/C,aAAa+0B,cAC7BtyB,EAAOoD,YAAY9C,EAAM/C,aAAa+0B,cAAcpyB,6BACpDX,EAAIk6B,iBAAiBn5B,GACrB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAaq1B,yBAAyBzzB,UAAUwB,gBAAkB,WAChE,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAaq1B,yBAAyB9xB,wBAAwB/D,KAAM6D,GAC7DA,EAAOG,iBAChB,EAUAxD,aAAaq1B,yBAAyB9xB,wBAA0B,SAASE,EAASJ,GAChF,IAAIK,OAAIC,EAEC,OADTD,EAAID,EAAQk4B,qBAEVt4B,EAAOqM,aACL,EACAhM,EACA1D,aAAa20B,cAAcpxB,0BAG/BG,EAAID,EAAQ04B,uBACNt4B,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIK,OADTA,EAAID,EAAQs4B,qBAEV14B,EAAOqM,aACL,EACAhM,EACA1D,aAAa+0B,cAAcxxB,wBAGjC,EAOAvD,aAAaq1B,yBAAyBzzB,UAAU+5B,iBAAmB,WACjE,OACE18B,EAAKkB,QAAQqS,gBAAgBhT,KAAMQ,aAAa20B,cAAe,EACnE,EAOA30B,aAAaq1B,yBAAyBzzB,UAAUo6B,iBAAmB,SAASj5B,GAC1E,OAAO9D,EAAKkB,QAAQsS,gBAAgBjT,KAAM,EAAGuD,EAC/C,EAOA/C,aAAaq1B,yBAAyBzzB,UAAUw6B,mBAAqB,WACnE,OAAO58B,KAAKw8B,sBAAiBr4B,EAC/B,EAOA3D,aAAaq1B,yBAAyBzzB,UAAUy6B,iBAAmB,WACjE,OAAyC,MAAlCp9B,EAAKkB,QAAQyS,SAASpT,KAAM,EACrC,EAOAQ,aAAaq1B,yBAAyBzzB,UAAU06B,eAAiB,WAC/D,OAA4Cr9B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaq1B,yBAAyBzzB,UAAUi6B,qBAAuB,WACrE,OAA8B58B,EAAKkB,QAAQ+D,WACvC1E,KAAK88B,iBACX,EAUAt8B,aAAaq1B,yBAAyBzzB,UAAUu6B,oBAAsB,WACpE,OAAmCl9B,EAAKkB,QAAQgE,UAC5C3E,KAAK88B,iBACX,EAOAt8B,aAAaq1B,yBAAyBzzB,UAAUq6B,eAAiB,SAASl5B,GACxE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaq1B,yBAAyBzzB,UAAUm6B,iBAAmB,WACjE,OACE98B,EAAKkB,QAAQqS,gBAAgBhT,KAAMQ,aAAa+0B,cAAe,EACnE,EAOA/0B,aAAaq1B,yBAAyBzzB,UAAUs6B,iBAAmB,SAASn5B,GAC1E,OAAO9D,EAAKkB,QAAQsS,gBAAgBjT,KAAM,EAAGuD,EAC/C,EAOA/C,aAAaq1B,yBAAyBzzB,UAAU26B,mBAAqB,WACnE,OAAO/8B,KAAK08B,sBAAiBv4B,EAC/B,EAOA3D,aAAaq1B,yBAAyBzzB,UAAU46B,iBAAmB,WACjE,OAAyC,MAAlCv9B,EAAKkB,QAAQyS,SAASpT,KAAM,EACrC,EAGAL,EAAKS,OAAOC,OAAOsnB,EAASnnB,a,gBC7wG5B,IAAIf,EAAOC,EAAQ,KACfC,EAAOF,EACPG,EACqB,oBAAfC,YAA8BA,YACnB,oBAAXC,QAA0BA,aACf,IAAXF,GAA0BA,GACjB,oBAATG,MAAwBA,MAC/B,WAAc,OAAOC,IAAM,EAAGC,KAAK,OACpCC,SAAS,cAATA,GAEFP,EAAKY,aAAa,uCAAwC,KAAMX,GAChED,EAAKY,aAAa,kCAAmC,KAAMX,GAC3DD,EAAKY,aAAa,mCAAoC,KAAMX,GAC5DD,EAAKY,aAAa,uCAAwC,KAAMX,GAWhEY,aAAay8B,wBAA0B,SAASv8B,GAC9CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAay8B,wBAAyBx9B,EAAKkB,SACrDhB,EAAKmB,QAAUC,WAKjBP,aAAay8B,wBAAwBj8B,YAAc,wCAYrDR,aAAa08B,mBAAqB,SAASx8B,GACzCjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAa08B,mBAAoBz9B,EAAKkB,SAChDhB,EAAKmB,QAAUC,WAKjBP,aAAa08B,mBAAmBl8B,YAAc,mCAYhDR,aAAa28B,oBAAsB,SAASz8B,GAC1CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAa28B,oBAAqB19B,EAAKkB,SACjDhB,EAAKmB,QAAUC,WAKjBP,aAAa28B,oBAAoBn8B,YAAc,oCAYjDR,aAAa48B,wBAA0B,SAAS18B,GAC9CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAa48B,wBAAyB39B,EAAKkB,SACrDhB,EAAKmB,QAAUC,WAKjBP,aAAa48B,wBAAwBp8B,YAAc,wCAKjDvB,EAAKkB,QAAQwB,qBAajB3B,aAAay8B,wBAAwB76B,UAAUC,SAAW,SAASC,GACjE,OAAO9B,aAAay8B,wBAAwB56B,SAASC,EAAqBtC,KAC5E,EAYAQ,aAAay8B,wBAAwB56B,SAAW,SAASE,EAAiBC,GACxE,IAAOC,EAAM,CACXwlB,aAAczlB,EAAI0lB,wBAClBllB,MAAOvD,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAMlD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAay8B,wBAAwBl6B,kBAAoB,SAASC,GAChE,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAay8B,wBAC3B,OAAOz8B,aAAay8B,wBAAwB95B,4BAA4BX,EAAKS,EAC/E,EAUAzC,aAAay8B,wBAAwB95B,4BAA8B,SAASX,EAAKS,GAC/E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI66B,SAAS95B,GACb,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAay8B,wBAAwB76B,UAAUwB,gBAAkB,WAC/D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAay8B,wBAAwBl5B,wBAAwB/D,KAAM6D,GAC5DA,EAAOG,iBAChB,EAUAxD,aAAay8B,wBAAwBl5B,wBAA0B,SAASE,EAASJ,GAC/E,IAAIK,OAAIC,GACRD,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQq5B,aAEVz5B,EAAOyB,WACL,EACApB,EAGN,EAOA1D,aAAay8B,wBAAwB76B,UAAUqmB,gBAAkB,WAC/D,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAay8B,wBAAwB76B,UAAU8lB,sBAAwB,WACrE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAay8B,wBAAwB76B,UAAUmmB,qBAAuB,WACpE,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAay8B,wBAAwB76B,UAAUimB,gBAAkB,SAAS9kB,GACxE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAay8B,wBAAwB76B,UAAUk7B,SAAW,WACxD,OAA8B79B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAay8B,wBAAwB76B,UAAUi7B,SAAW,SAAS95B,GACjE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAa08B,mBAAmB96B,UAAUC,SAAW,SAASC,GAC5D,OAAO9B,aAAa08B,mBAAmB76B,SAASC,EAAqBtC,KACvE,EAYAQ,aAAa08B,mBAAmB76B,SAAW,SAASE,EAAiBC,GACnE,IAAOC,EAAM,CACXwlB,aAAczlB,EAAI0lB,wBAClBkM,MAAO30B,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAMlD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAa08B,mBAAmBn6B,kBAAoB,SAASC,GAC3D,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAa08B,mBAC3B,OAAO18B,aAAa08B,mBAAmB/5B,4BAA4BX,EAAKS,EAC1E,EAUAzC,aAAa08B,mBAAmB/5B,4BAA8B,SAASX,EAAKS,GAC1E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI8xB,SAAS/wB,GACb,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAa08B,mBAAmB96B,UAAUwB,gBAAkB,WAC1D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAa08B,mBAAmBn5B,wBAAwB/D,KAAM6D,GACvDA,EAAOG,iBAChB,EAUAxD,aAAa08B,mBAAmBn5B,wBAA0B,SAASE,EAASJ,GAC1E,IAAIK,OAAIC,GACRD,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQuwB,aAEV3wB,EAAOyB,WACL,EACApB,EAGN,EAOA1D,aAAa08B,mBAAmB96B,UAAUqmB,gBAAkB,WAC1D,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAa08B,mBAAmB96B,UAAU8lB,sBAAwB,WAChE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAa08B,mBAAmB96B,UAAUmmB,qBAAuB,WAC/D,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAa08B,mBAAmB96B,UAAUimB,gBAAkB,SAAS9kB,GACnE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAa08B,mBAAmB96B,UAAUoyB,SAAW,WACnD,OAA8B/0B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAa08B,mBAAmB96B,UAAUkyB,SAAW,SAAS/wB,GAC5D,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAa28B,oBAAoB/6B,UAAUC,SAAW,SAASC,GAC7D,OAAO9B,aAAa28B,oBAAoB96B,SAASC,EAAqBtC,KACxE,EAYAQ,aAAa28B,oBAAoB96B,SAAW,SAASE,EAAiBC,GACpE,IAAOC,EAAM,CACXwlB,aAAczlB,EAAI0lB,wBAClBqV,aAAc99B,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAMzD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAa28B,oBAAoBp6B,kBAAoB,SAASC,GAC5D,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAa28B,oBAC3B,OAAO38B,aAAa28B,oBAAoBh6B,4BAA4BX,EAAKS,EAC3E,EAUAzC,aAAa28B,oBAAoBh6B,4BAA8B,SAASX,EAAKS,GAC3E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAIg7B,gBAAgBj6B,GACpB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAa28B,oBAAoB/6B,UAAUwB,gBAAkB,WAC3D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAa28B,oBAAoBp5B,wBAAwB/D,KAAM6D,GACxDA,EAAOG,iBAChB,EAUAxD,aAAa28B,oBAAoBp5B,wBAA0B,SAASE,EAASJ,GAC3E,IAAIK,OAAIC,GACRD,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQw5B,oBAEV55B,EAAOyB,WACL,EACApB,EAGN,EAOA1D,aAAa28B,oBAAoB/6B,UAAUqmB,gBAAkB,WAC3D,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAa28B,oBAAoB/6B,UAAU8lB,sBAAwB,WACjE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAa28B,oBAAoB/6B,UAAUmmB,qBAAuB,WAChE,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAa28B,oBAAoB/6B,UAAUimB,gBAAkB,SAAS9kB,GACpE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAa28B,oBAAoB/6B,UAAUq7B,gBAAkB,WAC3D,OAA8Bh+B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAa28B,oBAAoB/6B,UAAUo7B,gBAAkB,SAASj6B,GACpE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAa48B,wBAAwBh7B,UAAUC,SAAW,SAASC,GACjE,OAAO9B,aAAa48B,wBAAwB/6B,SAASC,EAAqBtC,KAC5E,EAYAQ,aAAa48B,wBAAwB/6B,SAAW,SAASE,EAAiBC,GACxE,IAAOC,EAAM,CACXwlB,aAAczlB,EAAI0lB,wBAClBwV,UAAWj+B,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAMtD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAa48B,wBAAwBr6B,kBAAoB,SAASC,GAChE,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAa48B,wBAC3B,OAAO58B,aAAa48B,wBAAwBj6B,4BAA4BX,EAAKS,EAC/E,EAUAzC,aAAa48B,wBAAwBj6B,4BAA8B,SAASX,EAAKS,GAC/E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,EACCA,EAA+BN,EAAO4U,YAC1CrV,EAAIm7B,aAAap6B,GACjB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAa48B,wBAAwBh7B,UAAUwB,gBAAkB,WAC/D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAa48B,wBAAwBr5B,wBAAwB/D,KAAM6D,GAC5DA,EAAOG,iBAChB,EAUAxD,aAAa48B,wBAAwBr5B,wBAA0B,SAASE,EAASJ,GAC/E,IAAIK,OAAIC,GACRD,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQ25B,iBAEV/5B,EAAOuU,WACL,EACAlU,EAGN,EAOA1D,aAAa48B,wBAAwBh7B,UAAUqmB,gBAAkB,WAC/D,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAa48B,wBAAwBh7B,UAAU8lB,sBAAwB,WACrE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAa48B,wBAAwBh7B,UAAUmmB,qBAAuB,WACpE,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAa48B,wBAAwBh7B,UAAUimB,gBAAkB,SAAS9kB,GACxE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAa48B,wBAAwBh7B,UAAUw7B,aAAe,WAC5D,OAA8Bn+B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAa48B,wBAAwBh7B,UAAUu7B,aAAe,SAASp6B,GACrE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAGA5D,EAAKS,OAAOC,OAAOsnB,EAASnnB,a,eCl0B5B,IAAIf,EAAOC,EAAQ,KACfC,EAAOF,EACPG,EACqB,oBAAfC,YAA8BA,YACnB,oBAAXC,QAA0BA,aACf,IAAXF,GAA0BA,GACjB,oBAATG,MAAwBA,MAC/B,WAAc,OAAOC,IAAM,EAAGC,KAAK,OACpCC,SAAS,cAATA,GAEFP,EAAKY,aAAa,mCAAoC,KAAMX,GAC5DD,EAAKY,aAAa,wCAAyC,KAAMX,GACjED,EAAKY,aAAa,qCAAsC,KAAMX,GAC9DD,EAAKY,aAAa,qCAAsC,KAAMX,GAW9DY,aAAaq9B,sBAAwB,SAASn9B,GAC5CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAaq9B,sBAAuBp+B,EAAKkB,SACnDhB,EAAKmB,QAAUC,WAKjBP,aAAaq9B,sBAAsB78B,YAAc,sCAYnDR,aAAas9B,sBAAwB,SAASp9B,GAC5CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAas9B,sBAAuBr+B,EAAKkB,SACnDhB,EAAKmB,QAAUC,WAKjBP,aAAas9B,sBAAsB98B,YAAc,sCAYnDR,aAAau9B,oBAAsB,SAASr9B,GAC1CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAGF,aAAau9B,oBAAoB58B,gBAAiB,KACnG,EACAxB,EAAKkB,SAASL,aAAau9B,oBAAqBt+B,EAAKkB,SACjDhB,EAAKmB,QAAUC,WAKjBP,aAAau9B,oBAAoB/8B,YAAc,oCAYjDR,aAAau9B,oBAAoB98B,KAAO,SAASP,GAC/CjB,EAAKkB,QAAQC,WAAWZ,KAAMU,EAAU,GAAI,EAAG,KAAM,KACvD,EACAf,EAAKkB,SAASL,aAAau9B,oBAAoB98B,KAAMxB,EAAKkB,SACtDhB,EAAKmB,QAAUC,WAKjBP,aAAau9B,oBAAoB98B,KAAKD,YAAc,yCAKlDvB,EAAKkB,QAAQwB,qBAajB3B,aAAaq9B,sBAAsBz7B,UAAUC,SAAW,SAASC,GAC/D,OAAO9B,aAAaq9B,sBAAsBx7B,SAASC,EAAqBtC,KAC1E,EAYAQ,aAAaq9B,sBAAsBx7B,SAAW,SAASE,EAAiBC,GACtE,IAAOC,EAAM,CACXwlB,aAAczlB,EAAI0lB,wBAClB/O,IAAK3W,EAAIooB,gBAMX,OAHIroB,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAaq9B,sBAAsB96B,kBAAoB,SAASC,GAC9D,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAaq9B,sBAC3B,OAAOr9B,aAAaq9B,sBAAsB16B,4BAA4BX,EAAKS,EAC7E,EAUAzC,aAAaq9B,sBAAsB16B,4BAA8B,SAASX,EAAKS,GAC7E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,EACCA,EAAoCN,EAAOO,YAC/ChB,EAAImX,OAAOpW,GACX,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAaq9B,sBAAsBz7B,UAAUwB,gBAAkB,WAC7D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAaq9B,sBAAsB95B,wBAAwB/D,KAAM6D,GAC1DA,EAAOG,iBAChB,EAUAxD,aAAaq9B,sBAAsB95B,wBAA0B,SAASE,EAASJ,GAC7E,IAAIK,OAAIC,GACRD,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQwoB,eACNpoB,OAAS,GACbR,EAAOS,WACL,EACAJ,EAGN,EAOA1D,aAAaq9B,sBAAsBz7B,UAAUqmB,gBAAkB,WAC7D,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaq9B,sBAAsBz7B,UAAU8lB,sBAAwB,WACnE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAaq9B,sBAAsBz7B,UAAUmmB,qBAAuB,WAClE,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAaq9B,sBAAsBz7B,UAAUimB,gBAAkB,SAAS9kB,GACtE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAaq9B,sBAAsBz7B,UAAU+X,OAAS,WACpD,OAA4C1a,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAaq9B,sBAAsBz7B,UAAUwoB,aAAe,WAC1D,OAA8BnrB,EAAKkB,QAAQ+D,WACvC1E,KAAKma,SACX,EAUA3Z,aAAaq9B,sBAAsBz7B,UAAUqqB,YAAc,WACzD,OAAmChtB,EAAKkB,QAAQgE,UAC5C3E,KAAKma,SACX,EAOA3Z,aAAaq9B,sBAAsBz7B,UAAUuX,OAAS,SAASpW,GAC7D,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAMI9D,EAAKkB,QAAQwB,qBAajB3B,aAAas9B,sBAAsB17B,UAAUC,SAAW,SAASC,GAC/D,OAAO9B,aAAas9B,sBAAsBz7B,SAASC,EAAqBtC,KAC1E,EAYAQ,aAAas9B,sBAAsBz7B,SAAW,SAASE,EAAiBC,GACtE,IAAOC,EAAM,CACXwlB,aAAczlB,EAAI0lB,wBAClB8V,UAAWx7B,EAAIy7B,sBAMjB,OAHI17B,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAas9B,sBAAsB/6B,kBAAoB,SAASC,GAC9D,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAas9B,sBAC3B,OAAOt9B,aAAas9B,sBAAsB36B,4BAA4BX,EAAKS,EAC7E,EAUAzC,aAAas9B,sBAAsB36B,4BAA8B,SAASX,EAAKS,GAC7E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,GACCA,EAAoCN,EAAOO,YAC/ChB,EAAI07B,aAAa36B,GACjB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAas9B,sBAAsB17B,UAAUwB,gBAAkB,WAC7D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAas9B,sBAAsB/5B,wBAAwB/D,KAAM6D,GAC1DA,EAAOG,iBAChB,EAUAxD,aAAas9B,sBAAsB/5B,wBAA0B,SAASE,EAASJ,GAC7E,IAAIK,OAAIC,GACRD,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQk6B,qBACN95B,OAAS,GACbR,EAAOS,WACL,GACAJ,EAGN,EAOA1D,aAAas9B,sBAAsB17B,UAAUqmB,gBAAkB,WAC7D,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAas9B,sBAAsB17B,UAAU8lB,sBAAwB,WACnE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAas9B,sBAAsB17B,UAAUmmB,qBAAuB,WAClE,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAas9B,sBAAsB17B,UAAUimB,gBAAkB,SAAS9kB,GACtE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAas9B,sBAAsB17B,UAAUg8B,aAAe,WAC1D,OAA4C3+B,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,GAAI,GACzF,EAQAQ,aAAas9B,sBAAsB17B,UAAU67B,mBAAqB,WAChE,OAA8Bx+B,EAAKkB,QAAQ+D,WACvC1E,KAAKo+B,eACX,EAUA59B,aAAas9B,sBAAsB17B,UAAU+7B,kBAAoB,WAC/D,OAAmC1+B,EAAKkB,QAAQgE,UAC5C3E,KAAKo+B,eACX,EAOA59B,aAAas9B,sBAAsB17B,UAAU87B,aAAe,SAAS36B,GACnE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,GAAIuD,EACpD,EASA/C,aAAau9B,oBAAoB58B,gBAAkB,CAAC,GAIhD1B,EAAKkB,QAAQwB,qBAajB3B,aAAau9B,oBAAoB37B,UAAUC,SAAW,SAASC,GAC7D,OAAO9B,aAAau9B,oBAAoB17B,SAASC,EAAqBtC,KACxE,EAYAQ,aAAau9B,oBAAoB17B,SAAW,SAASE,EAAiBC,GACpE,IAAOC,EAAM,CACXwlB,aAAczlB,EAAI0lB,wBAClB7d,UAAW5K,EAAKkB,QAAQ2J,aAAa9H,EAAI+H,eACzC/J,aAAau9B,oBAAoB98B,KAAKoB,SAAUE,GAChD87B,QAAS5+B,EAAKkB,QAAQ0K,2BAA2B7I,EAAK,GAAG,IAM3D,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAau9B,oBAAoBh7B,kBAAoB,SAASC,GAC5D,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAau9B,oBAC3B,OAAOv9B,aAAau9B,oBAAoB56B,4BAA4BX,EAAKS,EAC3E,EAUAzC,aAAau9B,oBAAoB56B,4BAA8B,SAASX,EAAKS,GAC3E,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAI6lB,gBAAgB9kB,GACpB,MACF,KAAK,EACCA,EAAQ,IAAI/C,aAAau9B,oBAAoB98B,KACjDgC,EAAOoD,YAAY9C,EAAM/C,aAAau9B,oBAAoB98B,KAAKkC,6BAC/DX,EAAIqL,SAAStK,GACb,MACF,KAAK,EACCA,EAAgCN,EAAOoL,WAC3C7L,EAAI87B,WAAW/6B,GACf,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAau9B,oBAAoB37B,UAAUwB,gBAAkB,WAC3D,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAau9B,oBAAoBh6B,wBAAwB/D,KAAM6D,GACxDA,EAAOG,iBAChB,EAUAxD,aAAau9B,oBAAoBh6B,wBAA0B,SAASE,EAASJ,GAC3E,IAAIK,OAAIC,GACRD,EAAID,EAAQskB,wBACNlkB,OAAS,GACbR,EAAOS,WACL,EACAJ,IAGJA,EAAID,EAAQsG,gBACNlG,OAAS,GACbR,EAAO+L,qBACL,EACA1L,EACA1D,aAAau9B,oBAAoB98B,KAAK8C,0BAG1CG,EAAID,EAAQs6B,eAEV16B,EAAOuM,UACL,EACAlM,EAGN,EAMIzE,EAAKkB,QAAQwB,qBAajB3B,aAAau9B,oBAAoB98B,KAAKmB,UAAUC,SAAW,SAASC,GAClE,OAAO9B,aAAau9B,oBAAoB98B,KAAKoB,SAASC,EAAqBtC,KAC7E,EAYAQ,aAAau9B,oBAAoB98B,KAAKoB,SAAW,SAASE,EAAiBC,GACzE,IAAOC,EAAM,CACXqC,YAAatC,EAAIuC,uBACjBC,UAAWvF,EAAKkB,QAAQ8D,oBAAoBjC,EAAK,EAAG,IAMtD,OAHID,IACFE,EAAIK,qBAAuBN,GAEtBC,CACT,GASAjC,aAAau9B,oBAAoB98B,KAAK8B,kBAAoB,SAASC,GACjE,IAAIC,EAAS,IAAIxD,EAAKyD,aAAaF,GAC/BR,EAAM,IAAIhC,aAAau9B,oBAAoB98B,KAC/C,OAAOT,aAAau9B,oBAAoB98B,KAAKkC,4BAA4BX,EAAKS,EAChF,EAUAzC,aAAau9B,oBAAoB98B,KAAKkC,4BAA8B,SAASX,EAAKS,GAChF,KAAOA,EAAOG,cACRH,EAAOI,cAIX,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIC,EAAoCN,EAAOO,YAC/ChB,EAAIyC,eAAe1B,GACnB,MACF,KAAK,EACCA,EAA+BN,EAAOiC,YAC1C1C,EAAI2C,aAAa5B,GACjB,MACF,QACEN,EAAOU,YAIX,OAAOnB,CACT,EAOAhC,aAAau9B,oBAAoB98B,KAAKmB,UAAUwB,gBAAkB,WAChE,IAAIC,EAAS,IAAIpE,EAAKqE,aAEtB,OADAtD,aAAau9B,oBAAoB98B,KAAK8C,wBAAwB/D,KAAM6D,GAC7DA,EAAOG,iBAChB,EAUAxD,aAAau9B,oBAAoB98B,KAAK8C,wBAA0B,SAASE,EAASJ,GAChF,IAAIK,OAAIC,GACRD,EAAID,EAAQmB,uBACNf,OAAS,GACbR,EAAOS,WACL,EACAJ,GAIM,KADVA,EAAID,EAAQoB,iBAEVxB,EAAOyB,WACL,EACApB,EAGN,EAOA1D,aAAau9B,oBAAoB98B,KAAKmB,UAAUmD,eAAiB,WAC/D,OAA4C9F,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAau9B,oBAAoB98B,KAAKmB,UAAU2C,qBAAuB,WACrE,OAA8BtF,EAAKkB,QAAQ+D,WACvC1E,KAAKuF,iBACX,EAUA/E,aAAau9B,oBAAoB98B,KAAKmB,UAAUgD,oBAAsB,WACpE,OAAmC3F,EAAKkB,QAAQgE,UAC5C3E,KAAKuF,iBACX,EAOA/E,aAAau9B,oBAAoB98B,KAAKmB,UAAU6C,eAAiB,SAAS1B,GACxE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAau9B,oBAAoB98B,KAAKmB,UAAUiD,aAAe,WAC7D,OAA8B5F,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,EAC1E,EAOAQ,aAAau9B,oBAAoB98B,KAAKmB,UAAU+C,aAAe,SAAS5B,GACtE,OAAO9D,EAAKkB,QAAQ6E,kBAAkBxF,KAAM,EAAGuD,EACjD,EAOA/C,aAAau9B,oBAAoB37B,UAAUqmB,gBAAkB,WAC3D,OAA4ChpB,EAAKkB,QAAQ8D,oBAAoBzE,KAAM,EAAG,GACxF,EAQAQ,aAAau9B,oBAAoB37B,UAAU8lB,sBAAwB,WACjE,OAA8BzoB,EAAKkB,QAAQ+D,WACvC1E,KAAKyoB,kBACX,EAUAjoB,aAAau9B,oBAAoB37B,UAAUmmB,qBAAuB,WAChE,OAAmC9oB,EAAKkB,QAAQgE,UAC5C3E,KAAKyoB,kBACX,EAOAjoB,aAAau9B,oBAAoB37B,UAAUimB,gBAAkB,SAAS9kB,GACpE,OAAO9D,EAAKkB,QAAQiE,oBAAoB5E,KAAM,EAAGuD,EACnD,EAOA/C,aAAau9B,oBAAoB37B,UAAUmI,aAAe,WACxD,OACE9K,EAAKkB,QAAQ2S,wBAAwBtT,KAAMQ,aAAau9B,oBAAoB98B,KAAM,EACtF,EAOAT,aAAau9B,oBAAoB37B,UAAUmR,aAAe,SAAShQ,GACjE,OAAO9D,EAAKkB,QAAQ6S,wBAAwBxT,KAAM,EAAGuD,EACvD,EAQA/C,aAAau9B,oBAAoB37B,UAAUyL,SAAW,SAAS4F,EAAWpL,GACxE,OAAO5I,EAAKkB,QAAQ+S,0BAA0B1T,KAAM,EAAGyT,EAAWjT,aAAau9B,oBAAoB98B,KAAMoH,EAC3G,EAOA7H,aAAau9B,oBAAoB37B,UAAUuR,eAAiB,WAC1D,OAAO3T,KAAKuT,aAAa,GAC3B,EAOA/S,aAAau9B,oBAAoB37B,UAAUm8B,WAAa,WACtD,OAA+B9+B,EAAKkB,QAAQ0K,2BAA2BrL,KAAM,GAAG,EAClF,EAOAQ,aAAau9B,oBAAoB37B,UAAUk8B,WAAa,SAAS/6B,GAC/D,OAAO9D,EAAKkB,QAAQuT,sBAAsBlU,KAAM,EAAGuD,EACrD,EAGA5D,EAAKS,OAAOC,OAAOsnB,EAASnnB,a,uBC37B5Bg+B,EAAO7W,QAAUjoB,QAAQ,4B,uBCAzB8+B,EAAO7W,QAAUjoB,QAAQ,mD,uBCAzB8+B,EAAO7W,QAAUjoB,QAAQ,sD,GCCrB++B,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBx6B,IAAjBy6B,EACH,OAAOA,EAAajX,QAGrB,IAAI6W,EAASC,EAAyBE,GAAY,CAGjDhX,QAAS,CAAC,GAOX,OAHAkX,EAAoBF,GAAUH,EAAQA,EAAO7W,QAAS+W,GAG/CF,EAAO7W,OACf,CCrBA+W,EAAoBI,EAAKN,IACxB,IAAIO,EAASP,GAAUA,EAAOQ,WAC7B,IAAOR,EAAiB,QACxB,IAAM,EAEP,OADAE,EAAoBO,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdL,EAAoBO,EAAI,CAACtX,EAASwX,KACjC,IAAI,IAAIC,KAAOD,EACXT,EAAoBW,EAAEF,EAAYC,KAASV,EAAoBW,EAAE1X,EAASyX,IAC5EE,OAAOC,eAAe5X,EAASyX,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDV,EAAoBW,EAAI,CAAC58B,EAAKi9B,IAAUJ,OAAOl9B,UAAUu9B,eAAe1/B,KAAKwC,EAAKi9B,GCClFhB,EAAoBkB,EAAKjY,IACH,oBAAXkY,QAA0BA,OAAOC,aAC1CR,OAAOC,eAAe5X,EAASkY,OAAOC,YAAa,CAAEv8B,MAAO,WAE7D+7B,OAAOC,eAAe5X,EAAS,aAAc,CAAEpkB,OAAO,GAAO,E,0+DCL9D,MAAM,EAA+B7D,QAAQ,2C,aCA7C,MAAM,EAA+BA,QAAQ,iC,aCA7C,MAAM,EAA+BA,QAAQ,yC,aCA7C,MAAM,EAA+BA,QAAQ,sC,aCA7C,MAAM,EAA+BA,QAAQ,gD,aCA7C,MAAM,EAA+BA,QAAQ,mC,aCA7C,MAAM,EAA+BA,QAAQ,oD,aCA7C,MAAM,EAA+BA,QAAQ,yC,aCA7C,MAAM,EAA+BA,QAAQ,yC,aCA7C,MAAM,EAA+BA,QAAQ,8B,aCA7C,MAAM,EAA+BA,QAAQ,S,aCAtC,SAASqgC,IAAS,IAAAC,EAAA,KACrBhgC,KAAKigC,QAAU,oEAEfjgC,KAAKkgC,OAAS,SAAAC,GAWV,IAVA,IACIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAPAC,EAAS,GAQTC,EAAI,EAEDA,EAAIT,EAAM97B,QAKbk8B,GAJAH,EAAOD,EAAMU,WAAWD,OAIT,EACfJ,GAAgB,EAAPJ,IAAa,GAJtBC,EAAOF,EAAMU,WAAWD,OAIY,EACpCH,GAAgB,GAAPJ,IAAc,GAJvBC,EAAOH,EAAMU,WAAWD,OAIa,EACrCF,EAAc,GAAPJ,EAEHQ,MAAMT,GACNI,EAAOC,EAAO,GACTI,MAAMR,KACXI,EAAO,IAEXC,EAASA,EACLX,EAAKC,QAAQc,OAAOR,GAAQP,EAAKC,QAAQc,OAAOP,GAChDR,EAAKC,QAAQc,OAAON,GAAQT,EAAKC,QAAQc,OAAOL,GAGxD,OAAOC,CACX,EAEA3gC,KAAKghC,iBAAmB,SAAAC,GAWpB,IAVA,IACIb,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAPAC,EAAS,GAQTC,EAAI,EAEDA,EAAIK,EAAW58B,QAKlBk8B,GAJAH,EAAOa,EAAWL,OAIH,EACfJ,GAAgB,EAAPJ,IAAa,GAJtBC,EAAOY,EAAWL,OAIkB,EACpCH,GAAgB,GAAPJ,IAAc,GAJvBC,EAAOW,EAAWL,OAImB,EACrCF,EAAc,GAAPJ,EAEHQ,MAAMT,GACNI,EAAOC,EAAO,GACTI,MAAMR,KACXI,EAAO,IAEXC,EAASA,EACLX,EAAKC,QAAQc,OAAOR,GAAQP,EAAKC,QAAQc,OAAOP,GAChDR,EAAKC,QAAQc,OAAON,GAAQT,EAAKC,QAAQc,OAAOL,GAGxD,OAAOC,CACX,EAEA3gC,KAAKkhC,OAAS,SAAAf,GACV,IACIC,EACAC,EACAC,EAEAE,EACAC,EACAC,EAPAC,EAAS,GAQTC,EAAI,EAIR,IAFAT,EAAQA,EAAMgB,QAAQ,sBAAuB,IAEtCP,EAAIT,EAAM97B,QAMb+7B,EALOJ,EAAKC,QAAQmB,QAAQjB,EAAMY,OAAOH,OAKzB,GAJhBJ,EAAOR,EAAKC,QAAQmB,QAAQjB,EAAMY,OAAOH,QAIX,EAC9BP,GAAgB,GAAPG,IAAc,GAJvBC,EAAOT,EAAKC,QAAQmB,QAAQjB,EAAMY,OAAOH,QAIJ,EACrCN,GAAgB,EAAPG,IAAa,GAJtBC,EAAOV,EAAKC,QAAQmB,QAAQjB,EAAMY,OAAOH,OAMzCD,GAAkBU,OAAOC,aAAalB,GAE1B,IAARK,IACAE,GAAkBU,OAAOC,aAAajB,IAE9B,IAARK,IACAC,GAAkBU,OAAOC,aAAahB,IAG9C,OAAON,EAAKuB,aAAaZ,EAC7B,EAEA3gC,KAAKwhC,kBAAoB,SAAArB,GACrB,IACIC,EACAC,EACAC,EAEAE,EACAC,EACAC,EAPAC,EAAS,GAQTC,EAAI,EAIR,IAFAT,EAAQA,EAAMgB,QAAQ,sBAAuB,IAEtCP,EAAIT,EAAM97B,QAMb+7B,EALOJ,EAAKC,QAAQmB,QAAQjB,EAAMY,OAAOH,OAKzB,GAJhBJ,EAAOR,EAAKC,QAAQmB,QAAQjB,EAAMY,OAAOH,QAIX,EAC9BP,GAAgB,GAAPG,IAAc,GAJvBC,EAAOT,EAAKC,QAAQmB,QAAQjB,EAAMY,OAAOH,QAIJ,EACrCN,GAAgB,EAAPG,IAAa,GAJtBC,EAAOV,EAAKC,QAAQmB,QAAQjB,EAAMY,OAAOH,OAMzCD,GAAkBU,OAAOC,aAAalB,GAE1B,IAARK,IACAE,GAAkBU,OAAOC,aAAajB,IAE9B,IAARK,IACAC,GAAkBU,OAAOC,aAAahB,IAG9C,OAAON,EAAKyB,eAAed,EAC/B,EAEA3gC,KAAKyhC,eAAiB,SAAAC,GAMlB,IALA,IAAMC,EAAY,IAAIC,MAAMF,EAAQr9B,QAEhCu8B,EAAI,EACJiB,EAAI,EAEDjB,EAAIc,EAAQr9B,QACfw9B,EAAIH,EAAQb,WAAWD,GACvBe,EAAUf,GAAKiB,EACfjB,IAGJ,OAAOe,CACX,EAEA3hC,KAAK8hC,aAAe,SAAAC,GAChBA,EAASA,EAAOZ,QAAQ,QAAS,MAGjC,IAFA,IAAIO,EAAU,GAEL5C,EAAI,EAAGA,EAAIiD,EAAO19B,OAAQy6B,IAAK,CACpC,IAAM+C,EAAIE,EAAOlB,WAAW/B,GAExB+C,EAAI,IACJH,GAAWL,OAAOC,aAAaO,GACvBA,EAAI,KAASA,EAAI,MACzBH,GAAWL,OAAOC,aAAcO,GAAK,EAAK,KAC1CH,GAAWL,OAAOC,aAAkB,GAAJO,EAAU,OAE1CH,GAAWL,OAAOC,aAAcO,GAAK,GAAM,KAC3CH,GAAWL,OAAOC,aAAeO,GAAK,EAAK,GAAM,KACjDH,GAAWL,OAAOC,aAAkB,GAAJO,EAAU,KAElD,CAEA,OAAOH,CACX,EAEA1hC,KAAKuhC,aAAe,SAAAG,GAOhB,IANA,IAAIK,EAAS,GACTnB,EAAI,EACJiB,EAAI,EACJG,EAAK,EACLC,EAAK,EAEFrB,EAAIc,EAAQr9B,SACfw9B,EAAIH,EAAQb,WAAWD,IAEf,KACJmB,GAAUV,OAAOC,aAAaO,GAC9BjB,KACQiB,EAAI,KAASA,EAAI,KACzBG,EAAKN,EAAQb,WAAWD,EAAI,GAC5BmB,GAAUV,OAAOC,cAAmB,GAAJO,IAAW,EAAW,GAALG,GACjDpB,GAAK,IAELoB,EAAKN,EAAQb,WAAWD,EAAI,GAC5BqB,EAAKP,EAAQb,WAAWD,EAAI,GAE5BmB,GAAUV,OAAOC,cAAmB,GAAJO,IAAW,IAAa,GAALG,IAAY,EAAW,GAALC,GAErErB,GAAK,GAIb,OAAOmB,CACX,CACJ,CC7MO,SAASG,EAAYC,GACxB,GAAoB,iBAATA,EACP,MAAM,IAAIC,MAAM,0BAEpB,GAAID,EAAO,GAAKA,EAAO,IACnB,MAAM,IAAIC,MAAM,wBAEpB,IAAMC,EAAa,mBAEfC,EAAM,GAIV,OAHAA,GAAOD,EAAWtB,OAAOoB,GAAQ,IAC1BE,EAAWtB,OAAc,GAAPoB,EAG7B,CAEO,SAASI,EAAcC,GAC1B,GAAmB,iBAARA,EACP,OAAOA,EAIX,IAFA,IAAIF,EAAM,GAED1B,EAAI,EAAGA,EAAI4B,EAAIn+B,OAAQu8B,IAAK,CACjC,IAAM6B,EAAMD,EAAI5B,GAAG8B,SAAS,GACtBC,EAAIF,EAAIG,MAAM,aAEpB,GAAID,GAAoB,IAAfF,EAAIp+B,OAAc,CAIvB,IAHA,IAAMw+B,EAAcF,EAAE,GAAGt+B,OACrBy+B,EAAQN,EAAI5B,GAAG8B,SAAS,GAAGK,MAAM,EAAIF,GAEhCG,EAAK,EAAGA,EAAKH,EAAaG,IAC/BF,GAASN,EAAIQ,EAAKpC,GAAG8B,SAAS,GAAGK,MAAM,GAE3CT,GAAOjB,OAAOC,aAAa2B,SAASH,EAAO,IAC3ClC,GAAKiC,EAAc,CACvB,MACIP,GAAOjB,OAAOC,aAAakB,EAAI5B,GAEvC,CAEA,OAAO0B,CACX,CAEO,SAASY,EAAYC,GAIxB,IAHA,IAAMX,EAAMW,EAAIhC,QAAQ,MAAO,IAAIiC,MAAM,IACrCC,EAAM,GAEDzC,EAAI,EAAGA,EAAI4B,EAAIn+B,OAAS,EAAGu8B,IAAK,CACrC,IAAI0C,EAAM,KAAHC,OAAQf,EAAQ,EAAJ5B,IAAM2C,OAAGf,EAAQ,EAAJ5B,EAAQ,IACxCyC,GAAOhC,OAAOC,aAAagC,EAC/B,CAEA,OAAOD,CACX,CAEO,SAASG,EAAiB7B,GAG7B,IAFA,IAAIW,EAAM,GAED1B,EAAI,EAAGA,EAAKe,EAAUt9B,OAASu8B,IACpC0B,GAAOJ,EAAYP,EAAUf,IAEjC,OAAO0B,CACX,CAEO,SAASmB,EAAuBC,GACnC,OAAO,IAAI3D,GAASyB,kBAAkBkC,EAC1C,CAEO,SAASC,EAAqB3gC,GAIjC,OAHU,IAAI+8B,GACKiB,iBAAiBh+B,EAGxC,CC3EA,MAAM,EAA+BtD,QAAQ,4C,aCAhCkkC,EAAe,GACfC,EAAiB,KACjBC,EAAsB,GACtBC,EAAuB,QAGvBC,EAA0BC,oBCGhC,SAASC,EAAWC,GAEvB,OAAO5B,EAAc4B,EACzB,CAEO,SAASC,EAAYC,EAAQC,EAAQC,GACxC,GAAIF,EAAOhgC,QAAUigC,EAAOjgC,OACxB,OAAO,EAEX,IAAIu8B,EAEJ,IAAKA,EAAI,EAAGA,EAAIyD,EAAOhgC,OAAQu8B,IAC3B,GAAI2D,GACA,GAAIF,EAAOzD,IAAM0D,EAAO1D,GACpB,OAAO,OACR,GAAI4D,KAAKC,UAAUJ,EAAOzD,KAAO4D,KAAKC,UAAUH,EAAO1D,IAC1D,OAAO,EAGf,OAAO,CACX,CAEO,SAAS8D,EAAcpC,GAE1B,GAAmB,iBAARA,EACP,MAAM,IAAIF,MAAM,qCAEpB,IACIuC,EACA9C,EAFE7+B,EAAQ,IAAI4+B,MAIlB+C,EAAMrC,EAAIj+B,OAEV,IAAK,IAAIu8B,EAAI,EAAGA,EAAI+D,EAAK/D,KACrBiB,EAAIS,EAAIzB,WAAWD,KAEV,OAAYiB,GAAK,SACtB7+B,EAAM4hC,KAAO/C,GAAK,GAAM,EAAQ,KAChC7+B,EAAM4hC,KAAO/C,GAAK,GAAM,GAAQ,KAChC7+B,EAAM4hC,KAAO/C,GAAK,EAAK,GAAQ,KAC/B7+B,EAAM4hC,KAAU,GAAJ/C,EAAY,MACjBA,GAAK,MAAYA,GAAK,OAC7B7+B,EAAM4hC,KAAO/C,GAAK,GAAM,GAAQ,KAChC7+B,EAAM4hC,KAAO/C,GAAK,EAAK,GAAQ,KAC/B7+B,EAAM4hC,KAAU,GAAJ/C,EAAY,MACjBA,GAAK,KAAYA,GAAK,MAC7B7+B,EAAM4hC,KAAO/C,GAAK,EAAK,GAAQ,KAC/B7+B,EAAM4hC,KAAU,GAAJ/C,EAAY,MACrB7+B,EAAM4hC,KAAS,IAAJ/C,GAGtB,OAAO7+B,CACX,CAIO,SAAS6hC,EAAahD,GACzB,IAAI5C,EASJ,GAPI4C,GAAK,KAAOA,GAAK,IACjB5C,EAAI4C,EAAEhB,WAAW,GAAK,IAAIA,WAAW,GAAK,GACrCgB,GAAK,KAAOA,GAAK,IACtB5C,EAAI4C,EAAEhB,WAAW,GAAK,IAAIA,WAAW,GAAK,GACrCgB,GAAK,KAAOA,GAAK,MACtB5C,EAAI4C,EAAEhB,WAAW,GAAK,IAAIA,WAAW,IAExB,iBAAN5B,EACP,OAAOA,EAEP,MAAM,IAAImD,MAAM,8CACxB,CAEO,SAAS0C,EAAUjD,GACtB,OAAKA,GAAK,KAAOA,GAAK,KACjBA,GAAK,KAAOA,GAAK,KACjBA,GAAK,KAAOA,GAAK,IACX,EAGJ,CACX,CAGO,SAASkD,EAAiBzC,GAAqB,IAAhBiC,EAAMS,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GACxC,GAAmB,iBAAR1C,EACP,MAAM,IAAIF,MAAM,qCAEpB,IAAIuC,EAAMrC,EAAIj+B,OAEVkgC,GACII,EAAM,IACNrC,EAAM,IAAHiB,OAAOjB,GACVqC,KAQR,IALA,IAAMhD,EAAYC,QACd3C,EAAI,EACJgG,EAAI,EACJC,EAAI,EAECtE,EAAI,EAAGA,EAAI+D,EAAK/D,IAAK,CAC1B,IAAMiB,EAAIS,EAAIvB,OAAOH,GAErB,IAAIkE,EAAUjD,GAUV,MAAM,IAAIO,MAAM,iDAThBnD,IAAM,EACNA,GAAK4F,EAAahD,GAGd,KAFJoD,EAEe,IACXtD,EAAUuD,KAAOjG,EACjBA,EAAI,EAIhB,CAEA,OAAO0C,CACX,CAGO,SAASwD,EAAU7C,GAEtB,IAAK,0CAA0C8C,KAAK9C,GAChD,MAAM,IAAIF,MAAM,uCAEpB,IAAMiD,EAAW/C,EAAIc,MAAM,KACrBkC,EAAWD,EAAS,GAAGjC,MAAM,KAC7BmC,EAAOtC,SAASqC,EAAS,GAAI,IAC7BE,EAAQvC,SAASqC,EAAS,GAAI,IAAM,EACpCG,EAAMxC,SAASqC,EAAS,GAAI,IAElC,GAAID,EAAShhC,OAAS,EAAG,CACrB,IAAMqhC,EAAWL,EAAS,GAAGjC,MAAM,KAC7BuC,EAAO1C,SAASyC,EAAS,GAAI,IAC7BE,EAAS3C,SAASyC,EAAS,GAAI,IAC/BG,EAAS5C,SAASyC,EAAS,GAAI,IAErC,OAAO,IAAII,KAAKP,EAAMC,EAAOC,EAAKE,EAAMC,EAAQC,EACpD,CAEA,OAAO,IAAIC,KAAKP,EAAMC,EAAOC,EACjC,CAEO,SAASM,GAASlE,GACrB,OAAIA,GAAK,KAAOA,GAAK,IACV,EAEJ,CACX,CAMO,SAASmE,GAAc1D,GAC1B,GAAI,MAAQA,EACR,OAAQ,EAEZ,GAAoB,iBAARA,EACR,OAAQ,EAEZ,GAAkB,GAAdA,EAAIj+B,QAAsB,IAAPi+B,EACnB,OAAQ,EAEZ,IAAI1B,EAAI,EAWR,GAAkB,IAAd0B,EAAIj+B,OACJ,KAAOu8B,EAAI,IAGFkE,EAFGxC,EAAIvB,OAAOH,IADRA,KAQnB,GAAS,IAALA,EACA,OAAO,EAEX,IAAKA,EAAI,EAAGA,EAAI0B,EAAIj+B,QAGX0hC,GAFGzD,EAAIvB,OAAOH,IADKA,KAO5B,GAAIA,GAAK0B,EAAIj+B,OACT,OAAO,EAEX,IAAKu8B,EAAI,EAAGA,EAAI0B,EAAIj+B,OAAQu8B,IAGxB,GAFQ0B,EAAIvB,OAAOH,GAEX,IACJ,OAAO,EAGf,OAAQ,CACZ,CCnNA,IAHA,IAAMqF,GAAW,6DACXC,GAAe,CAAC,EAEbtF,GAAI,EAAGA,GAAIqF,GAAS5hC,OAAQu8B,KACjCsF,GAAaD,GAASlF,OAAOH,KAAMA,GAEvC,IAAMuF,GAAO,GAEN,SAASC,GAASC,GACrB,GAAsB,IAAlBA,EAAOhiC,OACP,MAAO,GAEX,IAAIu8B,EACAqE,EAEEqB,EAAS,CAAC,GAEhB,IAAK1F,EAAI,EAAGA,EAAIyF,EAAOhiC,OAAQu8B,IAAK,CAChC,IAAKqE,EAAI,EAAGA,EAAIqB,EAAOjiC,OAAQ4gC,IAC3BqB,EAAOrB,KAAO,EAElBqB,EAAO,IAAMD,EAAOzF,GACpB,IAAI2F,EAAQ,EAEZ,IAAKtB,EAAI,EAAGA,EAAIqB,EAAOjiC,SAAU4gC,EAC7BqB,EAAOrB,IAAMsB,EACbA,EAASD,EAAOrB,GAAKkB,GAAQ,EAC7BG,EAAOrB,IAAMkB,GAGjB,KAAOI,GACHD,EAAO1B,KAAK2B,EAAQJ,IACpBI,EAASA,EAAQJ,GAAQ,CAEjC,CAEA,IAAKvF,EAAI,EAAiB,IAAdyF,EAAOzF,IAAYA,EAAIyF,EAAOhiC,OAAS,EAAGu8B,IAClD0F,EAAO1B,KAAK,GAEhB,OAAO0B,EAAOE,UAAUC,KAAI,SAAAC,GAAK,OAAIT,GAASS,EAAM,IAAEC,KAAK,GAC/D,CAEO,SAASC,GAAS7E,GACrB,GAAsB,IAAlBA,EAAO19B,OACP,MAAO,GAEX,IAAIu8B,EACAqE,EAEEjiC,EAAQ,CAAC,GAEf,IAAK49B,EAAI,EAAGA,EAAImB,EAAO19B,OAAQu8B,IAAK,CAChC,IAAMiB,EAAIE,EAAOnB,GAEjB,KAAMiB,KAAKqE,IACP,MAAM,IAAI9D,MAAM,wBAEpB,IAAK6C,EAAI,EAAGA,EAAIjiC,EAAMqB,OAAQ4gC,IAC1BjiC,EAAMiiC,IAAMkB,GAEhBnjC,EAAM,IAAMkjC,GAAarE,GACzB,IAAI0E,EAAQ,EAEZ,IAAKtB,EAAI,EAAGA,EAAIjiC,EAAMqB,SAAU4gC,EAC5BjiC,EAAMiiC,IAAMsB,EACZA,EAAQvjC,EAAMiiC,IAAM,EACpBjiC,EAAMiiC,IAAM,IAGhB,KAAOsB,GACHvjC,EAAM4hC,KAAa,IAAR2B,GACXA,IAAU,CAElB,CAEA,IAAK3F,EAAI,EAAiB,MAAdmB,EAAOnB,IAAcA,EAAImB,EAAO19B,OAAS,EAAGu8B,IACpD59B,EAAM4hC,KAAK,GAEf,OAAO5hC,EAAMwjC,SACjB,CC/EA,MAAM,GAA+B9mC,QAAQ,+C,eCA7C,MAAM,GAA+BA,QAAQ,+C,eCKhCmnC,GAAmB,qECAnBhQ,GAAkB,QCC/B,SAASiQ,GAAUvjC,EAAY4G,EAAczH,GAEzC,IADA,IAAMqkC,EAAQ58B,EAAKi5B,MAAM,KAAKqD,KAAI,SAAAO,GAAC,OAAIA,EAAEC,MAAM,IACtCrG,EAAI,EAAGA,EAAImG,EAAM1iC,OAAQu8B,IAC9B,OAAQz2B,GACJ,IAAK,MACD,OACJ,IAAK,SACL,IAAK,UACL,IAAK,SACL,IAAK,SACD,GAAI+8B,EAAO3jC,KAAW4G,EAAQ,OAI1C,IAAMg9B,EAAa,IAAI/E,MAAK,0BAAAmB,OAA4Bp5B,IAKxD,MAJAg9B,EAAM17B,KAAO,mBACb07B,EAAMC,SAAQ,SAAA7D,OAAa7gC,GAC3BykC,EAAM5jC,MAAQA,EAER4jC,CACV,CAMA,SAAsBE,GAAiBC,GAAA,OAAAC,GAAAC,MAAA,KAAAxC,UAAA,CASvC,SAAAuC,KAFC,OAEDA,GAAAE,EAAAC,EAAAA,MATO,SAAAC,EAAoCpkC,GAAgD,IAAAqkC,EAAAC,EAAA,OAAAH,EAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACxD,OAAzBJ,EAAOtI,OAAOsI,KAAKrkC,GAAMukC,EAAAE,KAAA,EACTC,QAAQC,IAAIN,EAAKnB,KAAI,SAACvB,GAAC,OAAK+C,QAAQE,QAAQ5kC,EAAe2hC,GAAG,KAAE,OAAzE,OAAP2C,EAAOC,EAAAM,KAAAN,EAAAO,OAAA,SACNR,EAAQS,QAAO,SAACC,EAAY5F,EAAG6F,GAElC,OADAD,EAAMX,EAAKY,IAAU7F,EACd4F,CACX,GAA8B,KAAI,wBAAAT,EAAAW,OAAA,GAAAd,EAAA,MACrCH,MAAA,KAAAxC,UAAA,CAOK,SAAU0D,GACfC,EACAC,EACA7B,GAEG,IAAK,IAAI3H,KAAOwJ,EAAQ,CACpB,IAAIrlC,EAAQqlC,EAAOxJ,GAEbj1B,EAAQ48B,EAAQA,EAAM3H,GAAM,KAC9Bj1B,GAAQ28B,GAAUvjC,EAAO4G,EAAMi1B,GAEnCE,OAAOC,eAAeoJ,EAAQvJ,EAAK,CAAEI,YAAY,EAAMj8B,MAAAA,EAAOslC,UAAU,G,CAEhF,CChCA,SAASpE,GAAUlhC,GACf,GAAa,MAATA,EAAiB,MAAO,OAE5B,GAAIq+B,MAAMkH,QAAQvlC,GACd,MAAO,KAAQA,EAAMkjC,IAAIhC,IAAYkC,KAAK,MAAQ,KAGtD,GAAIpjC,aAAiBwlC,WAAY,CAG7B,IAFA,IAAMC,EAAM,mBACRC,EAAS,KACJrI,EAAI,EAAGA,EAAIr9B,EAAMc,OAAQu8B,IAC9BqI,GAAUD,EAAIzlC,EAAMq9B,IAAM,GAC1BqI,GAAUD,EAAe,GAAXzlC,EAAMq9B,IAExB,OAAOqI,C,CAGX,GAAsB,WAAlB/B,EAAO3jC,IAAgD,mBAAlBA,EAAM2lC,OAC3C,OAAOzE,GAAUlhC,EAAM2lC,UAG3B,OAAAhC,EAAe3jC,IACX,IAAK,UAAW,IAAK,SAIrB,IAAK,SACD,OAAQA,EAAOm/B,WAHnB,IAAK,SACD,OAAOyG,OAAO5lC,GAAOm/B,WAGzB,IAAK,SACD,OAAO8B,KAAKC,UAAUlhC,GAC1B,IAAK,SACD,IAAMqkC,EAAOtI,OAAOsI,KAAKrkC,GAEzB,OADAqkC,EAAKwB,OACE,KAAOxB,EAAKnB,KAAI,SAACvB,GAAC,SAAA3B,OAASkB,GAAUS,GAAG,MAAA3B,OAAMkB,GAAUlhC,EAAM2hC,IAAI,IAAIyB,KAAK,MAAQ,KAIlG,+BACJ,CA2iBM,SAAU0C,GAA4DlC,EAAY17B,GACpF,OAAQ07B,GAAuBA,EAAO17B,OAASA,CACnD,CAmBM,SAAU69B,GAA8DrlC,EAAiBwH,EAAS89B,GAEhG,IAuBApC,EAvBMqC,EAAyB,GAC/B,GAAID,EAAM,CACN,GAAI,YAAaA,GAAQ,SAAUA,GAAQ,SAAUA,EACjD,MAAM,IAAInH,MAAK,0CAAAmB,OAA4CkB,GAAU8E,KAEzE,IAAK,IAAMnK,KAAOmK,EAAM,CACpB,IAAMhmC,EAAcgmC,EAAyBnK,GAEzCoK,EAAQ5E,KAAKxF,EAAM,IAAMqF,GAAUlhC,G,EAgBnD,OATIimC,EAAQ5E,KAAI,QAAArB,OAAU93B,IACtB+9B,EAAQ5E,KAAI,WAAArB,OAAa1M,KAErB2S,EAAQnlC,SACRJ,GAAW,KAAOulC,EAAQ7C,KAAK,MAAQ,KAKvCl7B,GACJ,IAAK,mBACD07B,EAAQ,IAAIsC,UAAUxlC,GACtB,MACJ,IAAK,gBACL,IAAK,iBACDkjC,EAAQ,IAAIuC,WAAWzlC,GACvB,MACJ,QACIkjC,EAAQ,IAAI/E,MAAMn+B,GAO1B,OAJAykC,GAA2CvB,EAAO,CAAE17B,KAAAA,IAEhD89B,GAAQjK,OAAOqK,OAAOxC,EAAOoC,GAEvBpC,CACd,CAQM,SAAUyC,GAA2DC,EAAgB5lC,EAAiBwH,EAAS89B,GACjH,IAAKM,EAAS,MAAMP,GAAUrlC,EAASwH,EAAM89B,EACjD,CAUM,SAAUO,GAAeD,EAAgB5lC,EAAiBvB,EAAca,GAC1EqmC,GAAOC,EAAO5lC,EAAS,mBAAoB,CAAEmjC,SAAU1kC,EAAMa,MAAOA,GACxE,CAEM,SAAUwmC,GAAoBC,EAAeC,EAAuBhmC,GACvD,MAAXA,IAAmBA,EAAU,IAC7BA,IAAWA,EAAU,KAAOA,GAEhC2lC,GAAOI,GAASC,EAAe,mBAAqBhmC,EAAS,mBAAoB,CAC7E+lC,MAAOA,EACPC,cAAeA,IAGnBL,GAAOI,GAASC,EAAe,qBAAuBhmC,EAAS,sBAAuB,CAClF+lC,MAAOA,EACPC,cAAeA,GAEvB,CAEA,IAAMC,GAAkB,CAAC,MAAO,MAAO,OAAQ,QAAQ5B,QAAO,SAACC,EAAO4B,GAClE,IAGI,GAA+B,SAA3B,OAAOC,UAAUD,GAAoB,MAAM,IAAI/H,MAAM,OAGzD,GAAa,QAAT+H,GACc9I,OAAOC,aAAa,KAAM8I,UAAU,SACjC/I,OAAOC,aAAa,IAAM,KAEjB,MAAM,IAAIc,MAAM,UAI9CmG,EAAM3D,KAAKuF,E,CACb,MAAMhD,GAAO,CAEf,OAAOoB,CACX,GAAkB,IAKZ,SAAU8B,GAAgBF,GAC5BP,GAAOM,GAAgB9I,QAAQ+I,IAAS,EAAG,8CAA+C,wBAAyB,CAC/GG,UAAW,6BAA8Bf,KAAM,CAAEY,KAAAA,IAEzD,CAQM,SAAUI,GAAcC,EAAiBC,EAAYC,GAEvD,GADiB,MAAbA,IAAqBA,EAAY,IACjCF,IAAeC,EAAO,CACtB,IAAIE,EAASD,EAAWJ,EAAY,MAChCI,IACAC,GAAU,IACVL,GAAa,IAAMI,GAEvBd,IAAO,EAAK,4BAAArG,OAA+BoH,EAAO,iBAAiB,wBAAyB,CACxFL,UAAAA,G,CAGZ,CCxuBA,SAASM,GAAUrnC,EAAkBb,EAAemoC,GAChD,GAAItnC,aAAiBwlC,WACjB,OAAI8B,EAAe,IAAI9B,WAAWxlC,GAC3BA,EAGX,GAAsB,iBAAXA,GAAuBA,EAAMq/B,MAAM,4BAA6B,CAGvE,IAFA,IAAMqG,EAAS,IAAIF,YAAYxlC,EAAMc,OAAS,GAAK,GAC/CymC,EAAS,EACJlK,EAAI,EAAGA,EAAIqI,EAAO5kC,OAAQu8B,IAC/BqI,EAAOrI,GAAKqC,SAAS1/B,EAAMwnC,UAAUD,EAAQA,EAAS,GAAI,IAC1DA,GAAU,EAEd,OAAO7B,C,CAGXa,IAAe,EAAO,0BAA2BpnC,GAAQ,QAASa,EACtE,CASM,SAAU+5B,GAAS/5B,EAAkBb,GACvC,OAAOkoC,GAAUrnC,EAAOb,GAAM,EAClC,CASM,SAAUsoC,GAAaznC,EAAkBb,GAC3C,OAAOkoC,GAAUrnC,EAAOb,GAAM,EAClC,CAUM,SAAUuoC,GAAY1nC,EAAYc,GACpC,QAAsB,iBAAXd,IAAwBA,EAAMq/B,MAAM,qBAIxB,iBAAZv+B,GAAwBd,EAAMc,SAAW,EAAI,EAAIA,IAC7C,IAAXA,GAAoBd,EAAMc,OAAS,GAAO,EAGlD,CAMM,SAAU6mC,GAAY3nC,GACxB,OAAQ0nC,GAAY1nC,GAAO,IAAUA,aAAiBwlC,UAC1D,CAEA,IAAMoC,GAAwB,mBAKxB,SAAUC,GAAQtmB,GAIpB,IAHA,IAAM9hB,EAAQs6B,GAASxY,GAEnBmkB,EAAS,KACJrI,EAAI,EAAGA,EAAI59B,EAAMqB,OAAQu8B,IAAK,CACnC,IAAM+B,EAAI3/B,EAAM49B,GAChBqI,GAAUkC,IAAmB,IAAJxI,IAAa,GAAKwI,GAAkB,GAAJxI,E,CAE7D,OAAOsG,CACX,CAMM,SAAU1F,GAAO8H,GACnB,MAAO,KAAOA,EAAM5E,KAAI,SAACxH,GAAC,OAAKmM,GAAQnM,GAAG8L,UAAU,EAAE,IAAEpE,KAAK,GACjE,CAKM,SAAU2E,GAAWxmB,GACvB,OAAImmB,GAAYnmB,GAAM,IAAiBA,EAAKzgB,OAAS,GAAK,EACnDi5B,GAASxY,GAAMzgB,MAC1B,CAQM,SAAUknC,GAAUzmB,EAAiB0mB,EAAgBC,GACvD,IAAMzoC,EAAQs6B,GAASxY,GAMvB,OALW,MAAP2mB,GAAeA,EAAMzoC,EAAMqB,QAC3BulC,IAAO,EAAO,kCAAmC,iBAAkB,CAC/DvD,OAAQrjC,EAAOqB,OAAQrB,EAAMqB,OAAQymC,OAAQW,IAG9CL,GAAQpoC,EAAM+/B,MAAgB,MAATyI,EAAiB,EAAGA,EAAe,MAAPC,EAAezoC,EAAMqB,OAAQonC,GACzF,CAyCM,SAAUC,GAAa5mB,EAAiBzgB,GAC1C,OA9BJ,SAAiBygB,EAAiBzgB,EAAgBsnC,GAC9C,IAAM3oC,EAAQs6B,GAASxY,GACvB8kB,GAAOvlC,GAAUrB,EAAMqB,OAAQ,8BAA+B,iBAAkB,CAC5EgiC,OAAQ,IAAI0C,WAAW/lC,GACvBqB,OAAQA,EACRymC,OAAQzmC,EAAS,IAGrB,IAAM4kC,EAAS,IAAIF,WAAW1kC,GAQ9B,OAPA4kC,EAAO2C,KAAK,GACRD,EACA1C,EAAO4C,IAAI7oC,EAAOqB,EAASrB,EAAMqB,QAEjC4kC,EAAO4C,IAAI7oC,EAAO,GAGfooC,GAAQnC,EACnB,CAaW6C,CAAQhnB,EAAMzgB,GAAQ,EACjC,C,2GCnKA,IAAM0nC,GAAO5C,OAAO,GACd6C,GAAO7C,OAAO,GAMd8C,GAAW,iBA+BX,SAAUC,GAAOC,EAAsBC,GACzC,IAAI7oC,EAAQ8oC,GAAUF,EAAQ,SACxBG,EAAQnD,OAAOhX,GAAUia,EAAQ,UAEjCG,EAASP,IAASM,EAAQN,GAEhC,OAAIzoC,EAAQwoC,IAERnC,IADArmC,GAASA,IACOgpC,EAAO,UAAW,gBAAiB,CAC/CjC,UAAW,SAAUkC,MAAO,WAAYjpC,MAAO4oC,MAGzC5oC,GADIyoC,IAAQM,GAASN,IACJA,KAE3BpC,GAAOrmC,EAAQgpC,EAAO,WAAY,gBAAiB,CAC/CjC,UAAW,SAAUkC,MAAO,WAAYjpC,MAAO4oC,IAIhD5oC,EACX,CAKM,SAAUkpC,GAAKN,EAAsBO,GACvC,IAAMnpC,EAAQopC,GAAQR,EAAQ,SACxBS,EAAOzD,OAAOhX,GAAUua,EAAO,SACrC,OAAOnpC,GAAUyoC,IAAQY,GAAQZ,EACrC,CAMM,SAAUK,GAAU9oC,EAAqBb,GAC3C,OAAAwkC,EAAe3jC,IACX,IAAK,SAAU,OAAOA,EACtB,IAAK,SAGD,OAFAumC,GAAe+C,OAAOC,UAAUvpC,GAAQ,YAAab,GAAQ,QAASa,GACtEumC,GAAevmC,IAAU0oC,IAAY1oC,GAAS0oC,GAAU,WAAYvpC,GAAQ,QAASa,GAC9E4lC,OAAO5lC,GAClB,IAAK,SACD,IACI,GAAc,KAAVA,EAAgB,MAAM,IAAI6+B,MAAM,gBACpC,MAAiB,MAAb7+B,EAAM,IAA2B,MAAbA,EAAM,IAClB4lC,OAAO5lC,EAAMwnC,UAAU,IAE5B5B,OAAO5lC,E,CAChB,MAAMwpC,GACJjD,IAAe,EAAK,gCAAAvG,OAAmCwJ,EAAE9oC,SAAYvB,GAAQ,QAASa,E,EAGlGumC,IAAe,EAAO,6BAA8BpnC,GAAQ,QAASa,EACzE,CAMM,SAAUopC,GAAQppC,EAAqBb,GACzC,IAAMumC,EAASoD,GAAU9oC,EAAOb,GAIhC,OAHAknC,GAAOX,GAAU8C,GAAM,oCAAqC,gBAAiB,CACzES,MAAO,WAAYlC,UAAW,UAAW/mC,MAAAA,IAEtC0lC,CACX,CAEA,I,GAAM+D,GAAU,mBAMV,SAAUC,GAAS1pC,GACrB,GAAIA,aAAiBwlC,WAAY,CAC7B,IACqBmE,EADjBjE,EAAS,MAAMkE,E,65BAAAC,CACH7pC,GAAK,IAArB,IAAA4pC,EAAAE,MAAAH,EAAAC,EAAArO,KAAAwO,MAAuB,KAAZ3K,EAACuK,EAAA3pC,MACR0lC,GAAU+D,GAAQrK,GAAK,GACvBsG,GAAU+D,GAAY,GAAJrK,E,CACrB,OAAA4K,GAAAJ,EAAAJ,EAAAQ,EAAA,SAAAJ,EAAAjpC,GAAA,CACD,OAAOilC,OAAOF,E,CAGlB,OAAOoD,GAAU9oC,EACrB,CAMM,SAAU4uB,GAAU5uB,EAAqBb,GAC3C,OAAAwkC,EAAe3jC,IACX,IAAK,SAED,OADAumC,GAAevmC,IAAU0oC,IAAY1oC,GAAS0oC,GAAU,WAAYvpC,GAAQ,QAASa,GAC9EspC,OAAOtpC,GAClB,IAAK,SAGD,OAFAumC,GAAe+C,OAAOC,UAAUvpC,GAAQ,YAAab,GAAQ,QAASa,GACtEumC,GAAevmC,IAAU0oC,IAAY1oC,GAAS0oC,GAAU,WAAYvpC,GAAQ,QAASa,GAC9EA,EACX,IAAK,SACD,IACI,GAAc,KAAVA,EAAgB,MAAM,IAAI6+B,MAAM,gBACpC,OAAOjQ,GAAUgX,OAAO5lC,GAAQb,E,CAClC,MAAMqqC,GACJjD,IAAe,EAAK,2BAAAvG,OAA8BwJ,EAAE9oC,SAAYvB,GAAQ,QAASa,E,EAG7FumC,IAAe,EAAO,wBAAyBpnC,GAAQ,QAASa,EACpE,CAeM,SAAUiqC,GAAQrB,EAAsBC,GAC1C,IAEInD,EAFU0D,GAAQR,EAAQ,SAEXzJ,SAAS,IAE5B,GAAc,MAAV0J,EAEInD,EAAO5kC,OAAS,IAAK4kC,EAAS,IAAMA,OACrC,CACH,IAAMqD,EAAQna,GAAUia,EAAQ,SAQhC,IAPAxC,GAAe,EAAR0C,GAAarD,EAAO5kC,OAAM,wBAAAk/B,OAA2B+I,EAAM,UAAU,gBAAiB,CACzFhC,UAAW,UACXkC,MAAO,WACPjpC,MAAO4oC,IAIJlD,EAAO5kC,OAAkB,EAARioC,GAAcrD,EAAS,IAAMA,C,CAIzD,MAAO,KAAOA,CAClB,CAKM,SAAUwE,GAAUtB,GACtB,IAAM5oC,EAAQopC,GAAQR,EAAQ,SAE9B,GAAI5oC,IAAUwoC,GAAQ,OAAO,IAAIhD,WAAW,IAE5C,IAAI5F,EAAM5/B,EAAMm/B,SAAS,IACrBS,EAAI9+B,OAAS,IAAK8+B,EAAM,IAAMA,GAGlC,IADA,IAAM8F,EAAS,IAAIF,WAAW5F,EAAI9+B,OAAS,GAClCu8B,EAAI,EAAGA,EAAIqI,EAAO5kC,OAAQu8B,IAAK,CACpC,IAAMkK,EAAa,EAAJlK,EACfqI,EAAOrI,GAAKqC,SAASE,EAAI4H,UAAUD,EAAQA,EAAS,GAAI,G,CAG5D,OAAO7B,CACX,C,qJCnNA,IAAM8C,GAAO5C,OAAO,GACd6C,GAAO7C,OAAO,GACduE,GAAOvE,OAAO,GACdwE,GAAQxE,OAAO,IACfyE,GAAQzE,OAAO,IACf0E,GAAQ1E,OAAO,IAGf2E,GAAS,GA6Bf,SAASC,GAAUxqC,GACf,OAAOmoC,GAAa+B,GAAUlqC,GAAQ,GAC1C,CAEA,IAAAyqC,GAAA,IAAAC,QAAAC,GAAA,IAAAD,QAAAE,GAAA,IAAAF,QAAAG,GAAA,IAAAH,QAAAI,GAiHKxO,OAAM,IAAK,8BA3GhB,IAAayO,GAAS,WAmGlB,SAAAA,EAAY7D,EAAY7K,EAAWyN,EAAW1K,GAAU4L,EAAA,KAAAD,GAAAE,GAAA,KAAAR,GAAA,CAAAnF,UAAA,EAAAtlC,WAAA,IAAAirC,GAAA,KAAAN,GAAA,CAAArF,UAAA,EAAAtlC,WAAA,IAAAirC,GAAA,KAAAL,GAAA,CAAAtF,UAAA,EAAAtlC,WAAA,IAAAirC,GAAA,KAAAJ,GAAA,CAAAvF,UAAA,EAAAtlC,WAAA,IACpDgnC,GAAcE,EAAOqD,GAAQ,aAC7BW,GAAA,KAAIT,GAAMpO,GACV6O,GAAA,KAAIP,GAAMb,GACVoB,GAAA,KAAIN,GAAMxL,GACV8L,GAAA,KAAIL,GAAa,KACrB,CAkMC,OAlMAM,EAAAJ,EAAA,EAAAlP,IAAA,IAAAK,IA7FD,WAAkB,OAAAkP,GAAO,KAAIX,GAAK,EAACnC,IACnC,SAAMtoC,GACFumC,GAAqC,KAAtBwB,GAAW/nC,GAAe,YAAa,QAASA,GAC/DkrC,GAAA,KAAIT,GAAM5C,GAAQ7nC,GACtB,GAEA,CAAA67B,IAAA,IAAAK,IAGA,WAAkB,OAAAkP,GAAO,KAAIT,GAAK,EAACrC,IACnC,SAAMM,GACFrC,GAAsC,KAAvBwB,GAAWa,GAAgB,YAAa,QAASA,GAChE,IAAM5oC,EAAQ6nC,GAAQe,GACtBrC,GAAe7G,SAAS1/B,EAAMwnC,UAAU,EAAG,IAAM,EAAG,kBAAmB,QAASxnC,GAChFkrC,GAAA,KAAIP,GAAM3qC,EACd,GAEA,CAAA67B,IAAA,IAAAK,IAUA,WAAmB,OAAAkP,GAAO,KAAIR,GAAK,EAACtC,IACpC,SAAMtoC,GACF,IAAMo/B,EAAIxQ,GAAU5uB,EAAO,SAC3BumC,GAAqB,KAANnH,GAAkB,KAANA,EAAU,YAAa,IAAKp/B,GACvDkrC,GAAA,KAAIN,GAAMxL,EACd,GAEA,CAAAvD,IAAA,WAAAK,IAIA,WAAgC,OAAAkP,GAAO,KAAIP,GAAY,GAEvD,CAAAhP,IAAA,gBAAAK,IAIA,WACI,IAAMkD,EAAI,KAAKiM,SACf,OAAS,MAALjM,EAAoB,KACjB2L,EAAUO,WAAWlM,EAChC,GAEA,CAAAvD,IAAA,UAAAK,IAKA,WACI,OAAmB,KAAX,KAAKkD,EAAY,EAAG,CAChC,GAEA,CAAAvD,IAAA,cAAAK,IAIA,WAEI,IAAMqP,EAAcxR,GAAS,KAAK+P,GAElC,OADI,KAAK0B,UAAWD,EAAY,IAAM,KAC/B1D,GAAQ0D,EACnB,GAEA,CAAA1P,IAAA,oBAAAK,IAGA,WACI,OAAO8D,GAAO,CAAE,KAAK3D,EAAG,KAAKkP,aACjC,GAEA,CAAA1P,IAAA,aAAAK,IAGA,WACI,OAAO8D,GAAO,CAAE,KAAK3D,EAAG,KAAKyN,EAAI,KAAK0B,QAAU,OAAQ,QAC5D,GAAC,CAAA3P,IAAAiP,GAAA9qC,MAaD,WACI,yBAAAggC,OAA2B,KAAK3D,EAAE,WAAA2D,OAAW,KAAK8J,EAAE,gBAAA9J,OAAgB,KAAKwL,QAAQ,gBAAAxL,OAAgB,KAAKqL,SAAS,KACnH,GAEA,CAAAxP,IAAA,QAAA77B,MAGA,WACI,IAAMyrC,EAAQ,IAAIV,EAAUR,GAAQ,KAAKlO,EAAG,KAAKyN,EAAG,KAAK1K,GAEzD,OADI,KAAKiM,UAAYH,GAAAO,EAAKZ,GAAa,KAAKQ,UACrCI,CACX,GAEA,CAAA5P,IAAA,SAAA77B,MAGA,WACI,IAAMqrC,EAAW,KAAKA,SACtB,MAAO,CACHK,MAAO,YACPL,SAAwB,MAAZA,EAAoBA,EAASlM,WAAY,KACrD9C,EAAG,KAAKA,EAAGyN,EAAG,KAAKA,EAAG1K,EAAG,KAAKA,EAEtC,IAEA,EAAAvD,IAAA,aAAA77B,MAUA,SAAkBo/B,GACd,IAAMuM,EAAK7C,GAAU1J,EAAG,KAGxB,OAAKuM,GAAMvB,IAAWuB,GAAMtB,GAAiB7B,IAG7CjC,GAAeoF,GAAMrB,GAAO,oBAAqB,IAAKlL,IAE9CuM,EAAKrB,IAASH,GAC1B,GAEA,CAAAtO,IAAA,cAAA77B,MAcA,SAAmB4rC,EAAuBxM,GACtC,OAAQ0J,GAAU8C,GAAWzB,GAAQvE,OAAO,GAAKxG,EAAI,GACzD,GAEA,CAAAvD,IAAA,iBAAA77B,MAqBA,SAAsBo/B,GAClB,IAAMuM,EAAK7C,GAAU1J,GAErB,OAAIuM,IAAOnD,IAAQmD,IAAOvB,GAAgB,GACtCuB,IAAOlD,IAAQkD,IAAOtB,GAAgB,IAE1C9D,GAAeoF,GAAMrB,GAAO,YAAa,IAAKlL,GAGtCuM,EAAKlD,GAAQ,GAAI,GAC7B,GAEA,CAAA5M,IAAA,OAAA77B,MAQA,SAAY6rC,GACR,SAASC,EAAYxF,EAAgB5lC,GACjC6lC,GAAeD,EAAO5lC,EAAS,YAAamrC,EAChD,CAEA,GAAW,MAAPA,EACA,OAAO,IAAId,EAAUR,GAAQjH,GAAUA,GAAU,IAGrD,GAAoB,iBAATuI,EAAmB,CAC1B,IAAMpsC,EAAQs6B,GAAS8R,EAAK,aAC5B,GAAqB,KAAjBpsC,EAAMqB,OAAe,CACrB,IAAMu7B,EAAIwL,GAAQpoC,EAAM+/B,MAAM,EAAG,KAC3BsK,EAAIrqC,EAAM+/B,MAAM,GAAI,IACpBJ,EAAY,IAAP0K,EAAE,GAAa,GAAI,GAE9B,OADAA,EAAE,IAAM,IACD,IAAIiB,EAAUR,GAAQlO,EAAGwL,GAAQiC,GAAI1K,E,CAGhD,GAAqB,KAAjB3/B,EAAMqB,OAAe,CACrB,IAAMu7B,EAAIwL,GAAQpoC,EAAM+/B,MAAM,EAAG,KAC3BsK,EAAIrqC,EAAM+/B,MAAM,GAAI,IAC1BsM,EAA8B,IAAV,IAAPhC,EAAE,IAAkB,mBACjC,IAAM1K,EAAI2L,EAAUgB,eAAetsC,EAAM,KACzC,OAAO,IAAIsrC,EAAUR,GAAQlO,EAAGwL,GAAQiC,GAAI1K,E,CAGhD0M,GAAY,EAAO,+B,CAGvB,GAAID,aAAed,EAAa,OAAOc,EAAIJ,QAG3C,IAAMO,EAAKH,EAAIxP,EACfyP,EAAkB,MAANE,EAAY,aACxB,IAAM3P,EAAImO,GAAUwB,GAGdlC,EAAK,SAASA,EAAYyB,GAC5B,GAAS,MAALzB,EAAa,OAAOU,GAAUV,GAElC,GAAmB,MAAfyB,EAAqB,CACrBO,EAAYpE,GAAY6D,EAAa,IAAK,uBAC1C,IAAM9rC,EAAQs6B,GAASwR,GAEvB,OADA9rC,EAAM,IAAM,IACLooC,GAAQpoC,E,CAGnBqsC,GAAY,EAAO,YACvB,CAXW,CAWRD,EAAI/B,EAAG+B,EAAIN,aACdO,EAAuC,IAAT,IAAjB/R,GAAS+P,GAAG,IAAiB,mBAG1C,IAAAmC,EAAyB,SAASC,EAAmBX,EAAsBC,GACvE,GAAU,MAANU,EAAY,CACZ,IAAM9M,EAAI0J,GAAUoD,GACpB,MAAO,CACHb,SAAYjM,GAAKkL,GAASlL,OAAGx+B,EAC7Bw+B,EAAG2L,EAAUgB,eAAe3M,G,CAIpC,GAAmB,MAAfmM,EAEA,OADAO,EAAYpE,GAAY6D,EAAa,IAAK,uBACnC,CAAEnM,EAAgC,IAA3BrF,GAASwR,GAAa,GAAa,GAAI,IAGzD,GAAe,MAAXC,EAAiB,CACjB,OAAQA,GACJ,KAAK,EAAG,MAAO,CAAEpM,EAAG,IACpB,KAAK,EAAG,MAAO,CAAEA,EAAG,IAExB0M,GAAY,EAAO,kB,CAGvBA,GAAY,EAAO,YACvB,CAvByB,CAuBtBD,EAAIzM,EAAGyM,EAAIN,YAAaM,EAAIL,SAvBvBH,EAAQY,EAARZ,SAAUjM,EAAC6M,EAAD7M,EAyBZsG,EAAS,IAAIqF,EAAUR,GAAQlO,EAAGyN,EAAG1K,GAO3C,OANIiM,GAAYH,GAAAxF,EAAMmF,GAAcQ,GAGpCS,IAAc,YAAaD,GAAOA,EAAIL,UAAY9F,EAAO8F,SAAU,oBACnEM,IAAc,gBAAiBD,GAAOA,EAAIN,cAAgB7F,EAAO6F,aAAc,wBAExE7F,CACX,KAACqF,CAAA,CA3SiB,GC7DtB,MAAM,GAA+B5uC,QAAQ,UCO7C,IAAMgwC,GAAU,SAAS5qB,GACrB,OAAO6qB,EAAAA,GAAAA,YAAW,UAAUC,OAAO9qB,GAAM+qB,QAC7C,EAEMC,GAAU,SAAShrB,GACrB,OAAO6qB,EAAAA,GAAAA,YAAW,UAAUC,OAAO9qB,GAAM+qB,QAC7C,EAEIE,GAA4CL,GAC5CM,GAA4CF,GAE5CG,IAAY,EAAOC,IAAY,EAoB7B,SAAUC,GAAOC,GACnB,IAAMtrB,EAAOwY,GAAS8S,EAAO,QAC7B,OAAOhF,GAAQ2E,GAASjrB,GAC5B,CA0BM,SAAUurB,GAAOD,GACnB,IAAMtrB,EAAOwY,GAAS8S,EAAO,QAC7B,OAAOhF,GAAQ4E,GAASlrB,GAC5B,CA5BAqrB,GAAOG,EAAIZ,GACXS,GAAO/c,KAAO,WAAmB6c,IAAY,CAAM,EACnDE,GAAOI,SAAW,SAASC,GACvB,GAAIP,GAAa,MAAM,IAAI7N,MAAM,oBACjC2N,GAAWS,CACf,EACAlR,OAAOmR,OAAON,IAuBdE,GAAOC,EAAIR,GACXO,GAAOjd,KAAO,WAAmB8c,IAAY,CAAM,EACnDG,GAAOE,SAAW,SAASC,GACvB,GAAIN,GAAa,MAAM,IAAI9N,MAAM,oBACjC4N,GAAWQ,CACf,EACAlR,OAAOmR,OAAON,IC9Dd,IAAIO,IAAS,EAEPC,GAAU,SAASC,EAAsBC,EAAkBC,EAAoBC,EAAgBC,GACjG,OAAOC,EAAAA,GAAAA,YAAWL,EAAUC,EAAMC,EAAYC,EAAQC,EAC1D,EAEIE,GAAWP,GAsBT,SAAUQ,GAAOC,EAAsBC,EAAkBP,EAAoBC,EAAgBC,GAC/F,IAAMJ,EAAWtT,GAAS8T,EAAW,YAC/BP,EAAOvT,GAAS+T,EAAO,QAC7B,OAAOjG,GAAQ8F,GAASN,EAAUC,EAAMC,EAAYC,EAAQC,GAChE,CCqCA,SAASM,GAAWC,EAAyBzG,EAAgB9nC,EAAmB29B,EAAuB6Q,GAGnG,GAAe,eAAXD,GAAsC,wBAAXA,EAAkC,CAE7D,IADA,IAAI3Q,EAAI,EACCvB,EAAIyL,EAAS,EAAGzL,EAAIr8B,EAAMqB,QAC3BrB,EAAMq8B,IAAM,GAAM,EADiBA,IAEvCuB,IAEJ,OAAOA,C,CAKX,MAAe,YAAX2Q,EACOvuC,EAAMqB,OAASymC,EAAS,EAI5B,CACX,CDxDAqG,GAAOb,EAAIK,GACXQ,GAAO/d,KAAO,WAAmBsd,IAAS,CAAM,EAChDS,GAAOZ,SAAW,SAASC,GACvB,GAAIE,GAAU,MAAM,IAAItO,MAAM,oBAC9B8O,GAAWV,CACf,EACAlR,OAAOmR,OAAOU,ICmFP,IAAMM,GAAkFnS,OAAOmR,OAAO,CACzGtJ,MA1DJ,SAAmBoK,EAAyBzG,EAAgB9nC,EAAmB29B,EAAuB6Q,GAClG1H,IAAe,EAAK,+BAAAvG,OAAkCuH,EAAO,MAAAvH,OAAMgO,GAAW,QAASvuC,EAC3F,EAyDI0uC,OAAQJ,GACRnQ,QAlCJ,SAAqBoQ,EAAyBzG,EAAgB9nC,EAAmB29B,EAAuB6Q,GAGpG,MAAe,aAAXD,GACAzH,GAAwC,iBAAlB0H,EAA4B,yCAA0C,eAAgBA,GAC5G7Q,EAAOiE,KAAK4M,GACL,IAIX7Q,EAAOiE,KAAK,OAGL0M,GAAWC,EAAQzG,EAAQ9nC,GACtC,IAgIM,SAAU2uC,GAAYrP,EAAa6H,GAEzB,MAARA,IACAE,GAAgBF,GAChB7H,EAAMA,EAAI8H,UAAUD,IAIxB,IADA,IAAIlB,EAAS,GACJrI,EAAI,EAAGA,EAAI0B,EAAIj+B,OAAQu8B,IAAK,CACjC,IAAMiB,EAAIS,EAAIzB,WAAWD,GAEzB,GAAIiB,EAAI,IACJoH,EAAOrE,KAAK/C,QAET,GAAIA,EAAI,KACXoH,EAAOrE,KAAM/C,GAAK,EAAK,KACvBoH,EAAOrE,KAAU,GAAJ/C,EAAY,UAEtB,GAAoB,QAAX,MAAJA,GAAuB,CAC/BjB,IACA,IAAMoB,EAAKM,EAAIzB,WAAWD,GAE1BkJ,GAAelJ,EAAI0B,EAAIj+B,QAA6B,QAAZ,MAAL29B,GAC/B,yBAA0B,MAAOM,GAGrC,IAAMsP,EAAO,QAAgB,KAAJ/P,IAAe,KAAY,KAALG,GAC/CiH,EAAOrE,KAAMgN,GAAQ,GAAM,KAC3B3I,EAAOrE,KAAOgN,GAAQ,GAAM,GAAQ,KACpC3I,EAAOrE,KAAOgN,GAAQ,EAAK,GAAQ,KACnC3I,EAAOrE,KAAa,GAAPgN,EAAe,I,MAG5B3I,EAAOrE,KAAM/C,GAAK,GAAM,KACxBoH,EAAOrE,KAAO/C,GAAK,EAAK,GAAQ,KAChCoH,EAAOrE,KAAU,GAAJ/C,EAAY,I,CAIjC,OAAO,IAAIkH,WAAWE,EAC1B,CAuBM,SAAU4I,GAAa7uC,EAAkB8uC,GAC3C,OAxKJ,SAA2BC,EAAmBD,GAC3B,MAAXA,IAAmBA,EAAUL,GAAetK,OAQhD,IANA,IAAMnkC,EAAQs6B,GAASyU,EAAQ,SAEzB9I,EAAwB,GAC1BrI,EAAI,EAGFA,EAAI59B,EAAMqB,QAAQ,CAEpB,IAAMw9B,EAAI7+B,EAAM49B,KAGhB,GAAIiB,GAAK,GAAM,EAAf,CAMA,IAAImQ,EAAc,KACdC,EAAe,KAGnB,GAAmB,MAAV,IAAJpQ,GACDmQ,EAAc,EACdC,EAAe,SAGZ,GAAmB,MAAV,IAAJpQ,GACRmQ,EAAc,EACdC,EAAe,SAGZ,IAAmB,MAAV,IAAJpQ,GAIL,CAECjB,GAAKkR,EADU,MAAV,IAAJjQ,GACY,sBAEA,aAFuBjB,EAAI,EAAG59B,EAAOimC,GAItD,Q,CATA+I,EAAc,EACdC,EAAe,K,CAYnB,GAAIrR,EAAI,EAAIoR,GAAehvC,EAAMqB,OAC7Bu8B,GAAKkR,EAAQ,UAAWlR,EAAI,EAAG59B,EAAOimC,OAD1C,CAQA,IAFA,IAAIiJ,EAAqBrQ,GAAM,GAAM,EAAImQ,EAAc,GAAM,EAEpD/M,EAAI,EAAGA,EAAI+M,EAAa/M,IAAK,CAClC,IAAIkN,EAAWnvC,EAAM49B,GAGrB,GAAyB,MAAT,IAAXuR,GAA0B,CAC3BvR,GAAKkR,EAAQ,mBAAoBlR,EAAG59B,EAAOimC,GAC3CiJ,EAAM,KACN,K,CAGJA,EAAOA,GAAO,EAAiB,GAAXC,EACpBvR,G,CAIQ,OAARsR,IAGAA,EAAM,QACNtR,GAAKkR,EAAQ,eAAgBlR,EAAI,EAAIoR,EAAahvC,EAAOimC,EAAQiJ,GAKjEA,GAAO,OAAUA,GAAO,MACxBtR,GAAKkR,EAAQ,kBAAmBlR,EAAI,EAAIoR,EAAahvC,EAAOimC,EAAQiJ,GAKpEA,GAAOD,EACPrR,GAAKkR,EAAQ,WAAYlR,EAAI,EAAIoR,EAAahvC,EAAOimC,EAAQiJ,GAIjEjJ,EAAOrE,KAAKsN,G,OA5ERjJ,EAAOrE,KAAK/C,E,CA+EpB,OAAOoH,CACX,CAyEyBmJ,CAAkBpvC,EAAO8uC,GApB5BrL,KAAI,SAAC4L,GACnB,OAAIA,GAAa,MACNhR,OAAOC,aAAa+Q,IAE/BA,GAAa,MACNhR,OAAOC,aACqB,OAA5B+Q,GAAa,GAAM,MACC,OAAT,KAAZA,IAEV,IAAG1L,KAAK,GAYZ,CCzTA,MAAM,GAA+BjnC,QAAQ,sBCa7C,IAAIgxC,IAAS,EAEP4B,GAAa,SAASxtB,GACxB,OAAOytB,EAAAA,GAAAA,YAAWztB,EACtB,EAEI0tB,GAA+CF,GAwB7C,SAAUG,GAAUrC,GACtB,IAAMtrB,EAAOwY,GAAS8S,EAAO,QAC7B,OAAOhF,GAAQoH,GAAY1tB,GAC/B,CChCM,SAAUxN,GAAG/T,GACf,OAAOkvC,GAAUd,GAAYpuC,GACjC,CD+BAkvC,GAAUnC,EAAIgC,GACdG,GAAUrf,KAAO,WAAmBsd,IAAS,CAAM,EACnD+B,GAAUlC,SAAW,SAASC,GAC1B,GAAIE,GAAU,MAAM,IAAIjH,UAAU,uBAClC+I,GAAchC,CAClB,EACAlR,OAAOmR,OAAOgC,IElDd,IAAMC,GAAW,gCACXC,GAAO,YAEb,SAASC,GAAOC,EAAsBC,GAClC,IAAIC,EAAU,GACd,OAAOF,EAAMvK,QAAO,SAACC,EAAOyK,GASxB,OARIA,IAASF,EACTC,IACOC,EAAKpQ,MAAM+P,IAClBpK,EAAM3D,KAAKvD,OAAOC,aAAayR,GAAWC,IAE1CD,EAAU,GACVxK,EAAM3D,KAAKoO,IAERzK,CACX,GAAkB,GACtB,CAgCM,SAAU0K,GAAUnuB,GAGtB,OAFAglB,GAA2B,MAAZhlB,EAAK,GAAY,wBAAyB,OAAQA,GA5B/D,SAAiBA,EAAcouB,GAGjC,IAAK,IAAItS,EAAI8R,GAASruC,OAAS,EAAGu8B,GAAK,EAAGA,IACtC9b,EAAOA,EAAKse,MAAMsP,GAAS9R,IAAI+F,KAAKuM,EAAKnI,UAAU,EAAInK,EAAG,EAAIA,EAAI,IAItE,IAAMuS,EAAwB,GACxBC,EAAWtuB,EAAKqc,QAAQ,8BAA8B,SAAC+G,EAAKmL,EAAMC,EAAMN,GAC1E,GAAIM,EACA,IAAK,IAAI1S,EAAIqC,SAASqQ,GAAO1S,GAAK,EAAGA,IAAOuS,EAAOvO,KAAK,UAExDuO,EAAOvO,KAAKyO,EAAKE,eAErB,MAAO,EACX,IAEA,GAAIH,EAAY,MAAM,IAAIhR,MAAK,cAAAmB,OAAgBiB,KAAKC,UAAU2O,KAG9D,OAAOR,GAAOA,GAAOO,EAAQ,KAAM,IACvC,CAQWjS,CACHpc,EAAKimB,UAAU,EAAI,EAAI2H,GAASruC,QAChCygB,EAAKimB,UAAU,EAAG,EAAI,EAAI2H,GAASruC,QAC3C,CClDA,IAAsBmvC,GAAQ,WAa1B,SAAAA,EAAYC,GAAclF,EAAA,KAAAiF,GAAAE,EAAA,sBACtBhL,GAA2B,KAAM,CAAE+K,OAAAA,GACvC,CAqBC,OAnBD/E,EAAA8E,EAAA,EAAApU,IAAA,QAAA77B,MAOA,SAAMowC,GACF,OAAOA,EAAOJ,cAAcnQ,MAAM,OACtC,GAEA,CAAAhE,IAAA,OAAA77B,MAMA,SAAKsvC,GACD,OAAOA,EAAMlM,KAAK,IACtB,KAAC6M,CAAA,CApCyB,G,wQCG9B,IAAApD,GAAA,IAAAnC,QAAA2F,GAAA,IAAA3F,QAAA4F,GAAA,IAAA5F,QAAA6F,GAAA,IAAAC,QAYaC,GAAY,SAAAC,GAAAC,EAAAF,EAAAC,GAAA,I,IAAAE,G,EAAAH,E,+YAQrB,SAAAA,EAAYP,EAAgB3uB,EAAcsvB,GAAgB,IAAApU,E,IAInC,OAJmCuO,EAAA,KAAAyF,GACtDhU,EAAAmU,EAAAl0C,KAAA,KAAMwzC,G,KAAQY,EAAArU,G,EAAA8T,I,SAAAtF,GAAA6F,EAAArU,GAAAoQ,GAAA,CAAAvH,UAAA,EAAAtlC,WAAA,IAAAirC,GAAA6F,EAAArU,GAAA4T,GAAA,CAAA/K,UAAA,EAAAtlC,WAAA,IAAAirC,GAAA6F,EAAArU,GAAA6T,GAAA,CAAAhL,UAAA,EAAAtlC,WAAA,IACdkrC,GAAA4F,EAAArU,GAAAoQ,GAAatrB,GACb2pB,GAAA4F,EAAArU,GAAA4T,GAAiBQ,GACjB3F,GAAA4F,EAAArU,GAAA6T,GAAc,MAAK7T,CACvB,CAwCC,OAtCD0O,EAAAsF,EAAA,EAAA5U,IAAA,QAAAK,IAGA,WAAsB,OAAAkP,GAAO,KAAIyB,GAAQ,GAEzC,CAAAhR,IAAA,eAAA77B,MAGA,WACI,OAAO0vC,GAAStE,GAAC,KAAIyB,IACzB,GAAC,CAAAhR,IAAA,UAAA77B,MAoBD,SAAQilC,GACJ,IAAMqK,EAAKyB,GAAG,KAAIR,GAAAS,IAAAt0C,KAAJ,MAEd,OADA6pC,GAAetB,GAAS,GAAKA,EAAQqK,EAAMxuC,OAAM,uBAAAk/B,OAA0BiF,GAAU,QAASA,GACvFqK,EAAMrK,EACjB,GAAC,CAAApJ,IAAA,eAAA77B,MAED,SAAayvC,GACT,OAAOsB,GAAA,KAAIR,GAAAS,IAAAt0C,KAAJ,MAAkBmhC,QAAQ4R,EACrC,KAACgB,CAAA,CArDoB,CAAQR,IAsDhC,SAAAe,KAzBO,GAAmB,MAAf5F,GAAA,KAAIkF,IAAiB,CACrB,IAAMhB,EAAQ,KAAK2B,eAKnB,GAFiBl9B,GAAGu7B,EAAMlM,KAAK,MAAQ,QAE3BgI,GAAK,KAAIiF,IACjB,MAAM,IAAIxR,MAAK,sBAAAmB,OAAwB,KAAKkQ,OAAO,YAIvDhF,GAAA,KAAIoF,GAAUhB,E,CAElB,OAAAlE,GAAO,KAAIkF,GACf,CC/DJ,IAAMhB,GAAQ,w3LACRuB,GAAW,qEAEbK,GAA0B,KAOjBC,GAAO,SAAAC,GAAAT,EAAAQ,EAAAC,GAAA,I,IAAAR,G,EAAAO,E,+YAUhB,SAAAA,IAAA,OAAAnG,EAAA,KAAAmG,GAAAP,EAAAl0C,KAAA,KAAsB,KAAM4yC,GAAOuB,GAAW,CAS7C,OAPD1F,EAAAgG,EAAA,OAAAtV,IAAA,WAAA77B,MAIA,WAEI,OADgB,MAAZkxC,KAAoBA,GAAW,IAAIC,GAChCD,EACX,KAACC,CAAA,CAnBe,CAAQV,ICD5B,SAASY,GAAahI,GACnB,OAAS,GAAKA,GAAQ,GAAO,EAAIA,EAAQ,GAC5C,CAQA,SAASiI,GAAkBC,EAAkBL,GACzCpK,GAAgB,QAEA,MAAZoK,IAAoBA,EAAWC,GAAAA,YAEnC,IAAM7B,EAAQ4B,EAASrR,MAAM0R,GAC7BhL,GAAgB+I,EAAMxuC,OAAS,GAAO,GAAKwuC,EAAMxuC,QAAU,IAAMwuC,EAAMxuC,QAAU,GAC7E,0BAA2B,WAAY,gBAK3C,IAHA,IAAM0wC,EAAU,IAAIhM,WAAWiM,KAAKC,KAAK,GAAKpC,EAAMxuC,OAAS,IAEzDymC,EAAS,EACJlK,EAAI,EAAGA,EAAIiS,EAAMxuC,OAAQu8B,IAAK,CACnC,IAAI4H,EAAQiM,EAASS,aAAarC,EAAMjS,GAAGwJ,UAAU,SACrDN,GAAetB,GAAS,EAAC,kCAAAjF,OAAqC3C,GAAM,WAAY,gBAEhF,IAAK,IAAIuU,EAAM,EAAGA,EAAM,GAAIA,IACpB3M,EAAS,GAAM,GAAK2M,IACpBJ,EAAQjK,GAAU,IAAO,GAAM,EAAKA,EAAS,GAEjDA,G,CAIR,IAAMsK,EAAc,GAAKvC,EAAMxuC,OAAS,EAIlCgxC,EAAeT,GADA/B,EAAMxuC,OAAS,GAQpC,OAHAylC,IAFiBxM,GAAS6S,GAAO4E,EAAQhS,MAAM,EAAGqS,EAAc,KAAK,GAAKC,KAE7CN,EAAQA,EAAQ1wC,OAAS,GAAKgxC,GACvD,4BAA6B,WAAY,gBAEtCjK,GAAQ2J,EAAQhS,MAAM,EAAGqS,EAAc,GAClD,CAEA,SAASE,GAAkBP,EAAqBN,GAE5C3K,GAAgBiL,EAAQ1wC,OAAS,GAAO,GAAK0wC,EAAQ1wC,QAAU,IAAM0wC,EAAQ1wC,QAAU,GACnF,uBAAwB,UAAW,gBAEvB,MAAZowC,IAAoBA,EAAWC,GAAAA,YAKnC,IAHA,IAAMa,EAAyB,CAAE,GAE7BC,EAAgB,GACX5U,EAAI,EAAGA,EAAImU,EAAQ1wC,OAAQu8B,IAG5B4U,EAAgB,GAChBD,EAAQA,EAAQlxC,OAAS,KAAO,EAChCkxC,EAAQA,EAAQlxC,OAAS,IAAM0wC,EAAQnU,GAEvC4U,GAAiB,IAIjBD,EAAQA,EAAQlxC,OAAS,KAAOmxC,EAChCD,EAAQA,EAAQlxC,OAAS,IAAM0wC,EAAQnU,IAAO,EAAI4U,EAGlDD,EAAQ3Q,KAAKmQ,EAAQnU,IAnErB,GAmEuC,EAAI4U,GAnE9B,EAAK,KAqElBA,GAAiB,GAKzB,IAAMC,EAAeV,EAAQ1wC,OAAS,EAChC+vC,EAAWnR,SAASkN,GAAO4E,GAAShK,UAAU,EAAG,GAAI,IAAM6J,GAAaa,GAM9E,OAHAF,EAAQA,EAAQlxC,OAAS,KAAOoxC,EAChCF,EAAQA,EAAQlxC,OAAS,IAAO+vC,GAAa,EAAIqB,EAE1ChB,EAAS9N,KAAK4O,EAAQ9O,KAAI,SAAC+B,GAAK,OAAgBiM,EAAUiB,QAAQlN,EAAM,IACnF,CAEA,IAAMsF,GAAS,GAMF6H,GAAQ,WA2BjB,SAAAA,EAAYlL,EAAYsK,EAAiBpB,EAAgB/C,EAA0B6D,GAA0BlG,EAAA,KAAAoH,GAAAjC,EAAA,sBAAAA,EAAA,wBAAAA,EAAA,wBAAAA,EAAA,uBACzF,MAAZ9C,IAAoBA,EAAW,IACnB,MAAZ6D,IAAoBA,EAAWC,GAAAA,YACnCnK,GAAcE,EAAOqD,GAAQ,YAC7BpF,GAA2B,KAAM,CAAEiL,OAAAA,EAAQ/C,SAAAA,EAAU6D,SAAAA,EAAUM,QAAAA,GACnE,CA8DC,OA5DDrG,EAAAiH,EAAA,EAAAvW,IAAA,cAAA77B,MAGA,WACI,IAAMstC,EAAOc,GAAY,WAAa,KAAKf,SAAU,QACrD,OAAOO,GAAOQ,GAAY,KAAKgC,OAAQ,QAAS9C,EAAM,KAAM,GAAI,SACpE,IAEA,EAAAzR,IAAA,aAAA77B,MAMA,SAAkBowC,EAAgB/C,EAA0B6D,GAExD,IAAMM,EAAUF,GAAkBlB,EAAQc,GAE1C,OADAd,EAAS2B,GAAkBhY,GAASyX,GAAUN,GACvC,IAAIkB,EAAS7H,GAAQiH,EAASpB,EAAQ/C,EAAU6D,EAC3D,GAEA,CAAArV,IAAA,cAAA77B,MAMA,SAAmBqyC,EAAqBhF,EAA0B6D,GAC9D,IAAMM,EAAUzX,GAASsY,EAAU,WAC7BjC,EAAS2B,GAAkBP,EAASN,GAC1C,OAAO,IAAIkB,EAAS7H,GAAQ1C,GAAQ2J,GAAUpB,EAAQ/C,EAAU6D,EACpE,GAEA,CAAArV,IAAA,kBAAA77B,MAGA,SAAuBqyC,EAAqBnB,GAExC,OAAOa,GADShY,GAASsY,EAAU,WACDnB,EACtC,GAEA,CAAArV,IAAA,kBAAA77B,MAGA,SAAuBowC,EAAgBc,GACnC,OAAOI,GAAkBlB,EAAQc,EACrC,GAEA,CAAArV,IAAA,kBAAA77B,MAMA,SAAuBowC,EAAgBc,GACnC,IAEI,OADAI,GAAkBlB,EAAQc,IACnB,C,CACT,MAAOtN,GAAO,CAChB,OAAO,CACX,KAACwO,CAAA,CA9FgB,GC7FjBjF,IAAS,EAEPmF,GAAe,SAASC,EAAgC1W,EAAiBta,GAC3E,OAAOixB,EAAAA,GAAAA,YAAWD,EAAW1W,GAAKwQ,OAAO9qB,GAAM+qB,QACnD,EAEImG,GAAgBH,GAmBd,SAAUI,GAAYH,EAAgCI,EAAiB9F,GACzE,IAAMhR,EAAM9B,GAAS4Y,EAAM,OACrBpxB,EAAOwY,GAAS8S,EAAO,QAC7B,OAAOhF,GAAQ4K,GAAcF,EAAW1W,EAAKta,GACjD,CACAmxB,GAAY3F,EAAIuF,GAChBI,GAAY7iB,KAAQ,WAAasd,IAAS,CAAM,EAChDuF,GAAY1F,SAAW,SAASC,GAC5B,GAAIE,GAAU,MAAM,IAAItO,MAAM,yBAC9B4T,GAAgBxF,CACpB,EACAlR,OAAOmR,OAAOwF,IC9Cd,IAAMlK,GAAO5C,OAAO,GACdgN,GAAQhN,OAAO,IAErB,SAASiN,GAAmBxzC,GAUxB,IAHA,IAAMyzC,GAFNzzC,EAAUA,EAAQ2wC,eAEIxI,UAAU,GAAG3H,MAAM,IAEnCkT,EAAW,IAAIvN,WAAW,IACvBnI,EAAI,EAAGA,EAAI,GAAIA,IACpB0V,EAAS1V,GAAKyV,EAAMzV,GAAGC,WAAW,GAKtC,IAFA,IAAM0V,EAASjZ,GAASmV,GAAU6D,IAEzB1V,EAAI,EAAGA,EAAI,GAAIA,GAAK,EACpB2V,EAAO3V,GAAK,IAAM,GAAM,IACzByV,EAAMzV,GAAKyV,EAAMzV,GAAG4V,gBAEF,GAAjBD,EAAO3V,GAAK,KAAc,IAC3ByV,EAAMzV,EAAI,GAAKyV,EAAMzV,EAAI,GAAG4V,eAIpC,MAAO,KAAOH,EAAM1P,KAAK,GAC7B,CAMA,IADA,IAAM8P,GAA8C,GAC3C7V,GAAI,EAAGA,GAAI,GAAIA,KAAO6V,GAAWpV,OAAOT,KAAMS,OAAOT,IAC9D,IAAK,IAAIA,GAAI,EAAGA,GAAI,GAAIA,KAAO6V,GAAWpV,OAAOC,aAAa,GAAKV,KAAMS,OAAO,GAAKT,IAIrF,IAAM8V,GAAa,GAoBnB,IAAMC,GAAU,WAEZ,IADA,IAAM1N,EAAiC,GAC9BrI,EAAI,EAAGA,EAAI,GAAIA,IAEpBqI,EADY,uCAAuCrI,IACrCuI,OAAOvI,GAEzB,OAAOqI,CACX,CAPgB,GAsDV,SAAUpkC,GAAWjC,GAIvB,GAFAknC,GAAmC,iBAAblnC,EAAuB,kBAAmB,UAAWA,GAEvEA,EAAQggC,MAAM,0BAA2B,CAGpChgC,EAAQg0C,WAAW,QAASh0C,EAAU,KAAOA,GAElD,IAAMqmC,EAASmN,GAAmBxzC,GAMlC,OAHAknC,IAAgBlnC,EAAQggC,MAAM,kCAAoCqG,IAAWrmC,EACzE,uBAAwB,UAAWA,GAEhCqmC,C,CAIX,GAAIrmC,EAAQggC,MAAM,kCAAmC,CAEjDkH,GAAelnC,EAAQmoC,UAAU,EAAG,KA7F5C,SAAsBnoC,GAOlB,IAHA,IAAI0zC,GAFJ1zC,GADAA,EAAUA,EAAQ4zC,eACAzL,UAAU,GAAKnoC,EAAQmoC,UAAU,EAAG,GAAK,MAEpC3H,MAAM,IAAIqD,KAAI,SAAC5E,GAAQ,OAAO4U,GAAW5U,EAAI,IAAG8E,KAAK,IAGrE2P,EAASjyC,QAAUqyC,IAAW,CACjC,IAAIG,EAAQP,EAASvL,UAAU,EAAG2L,IAClCJ,EAAWrT,SAAS4T,EAAO,IAAM,GAAKP,EAASvL,UAAU8L,EAAMxyC,O,CAInE,IADA,IAAI+vC,EAAW/S,OAAO,GAAM4B,SAASqT,EAAU,IAAM,IAC9ClC,EAAS/vC,OAAS,GAAK+vC,EAAW,IAAMA,EAE/C,OAAOA,CACX,CA6EmD0C,CAAal0C,GAAU,oBAAqB,UAAWA,GAGlG,IADA,IAAIqmC,EApEZ,SAAoB1lC,GAChBA,EAAQA,EAAMgwC,cAGd,IADA,IAAItK,EAAS8C,GACJnL,EAAI,EAAGA,EAAIr9B,EAAMc,OAAQu8B,IAC9BqI,EAASA,EAASkN,GAAQQ,GAAOpzC,EAAMq9B,IAE3C,OAAOqI,CACX,CA4DqB8N,CAAWn0C,EAAQmoC,UAAU,IAAIrI,SAAS,IAChDuG,EAAO5kC,OAAS,IAAM4kC,EAAS,IAAMA,EAC5C,OAAQmN,GAAmB,KAAOnN,E,CAGtCa,IAAe,EAAO,kBAAmB,UAAWlnC,EACxD,CCnJA,MAAM,GAA+BlD,QAAQ,wC,eCA7C,MAAM,GAA+BA,QAAQ,oBCwB7Cs3C,GAAAA,MAAAA,eAAiC,SAAS5X,GAA+C,QAAA6X,EAAAjS,UAAA3gC,OAA3B6yC,EAA2B,IAAAtV,MAAAqV,EAAA,EAAAA,EAAA,KAAAf,EAAA,EAAAA,EAAAe,EAAAf,IAA3BgB,EAA2BhB,EAAA,GAAAlR,UAAAkR,GACrF,OAAO5Y,GAAS2Y,GAAY,SAAU7W,EAAKmE,GAAO2T,IACtD,EAEA,IAAAC,GAAA,IAAAlJ,QAIamJ,GAAU,WAMnB,SAAAA,EAAYC,G,UAAqB9I,EAAA,KAAA6I,G,EAAA,CAAAvO,UAAA,EAAAtlC,WAAA,G,mHAAA,K,EAAA4zC,I,WAC7BrN,GAA0C,KAA3BwB,GAAW+L,GAAoB,sBAAuB,aAAc,cACnF5I,GAAA,KAAI0I,GAAe/L,GAAQiM,GAC/B,CAgKC,OA9JD3I,EAAA0I,EAAA,EAAAhY,IAAA,aAAAK,IAGA,WAA2B,OAAAkP,GAAO,KAAIwI,GAAc,GAEpD,CAAA/X,IAAA,YAAAK,IAMA,WAA0B,OAAO2X,EAAWE,iBAAgB3I,GAAC,KAAIwI,IAAe,GAEhF,CAAA/X,IAAA,sBAAAK,IAOA,WAAoC,OAAO2X,EAAWE,iBAAgB3I,GAAC,KAAIwI,KAAc,EAAO,GAEhG,CAAA/X,IAAA,OAAA77B,MAGA,SAAKssC,GACD/F,GAAsC,KAAvBwB,GAAWuE,GAAgB,wBAAyB,SAAUA,GAE7E,IAAA0H,EAA0BP,GAAAA,SAAmBhM,GAAa6E,GAAS7E,GAAY2D,GAAC,KAAIwI,KAAe,CAC/FK,WAAW,EACXC,WAAW,IACbC,EAAAC,GAAAJ,EAAA,GAHMK,EAAMF,EAAA,GAAEG,EAAKH,EAAA,GAKftI,EAAM4H,GAAAA,UAAAA,QAA4BY,GACxC,OAAOtJ,GAAAA,KAAe,CAClB1O,EAAG4N,GAAQ,KAAO4B,EAAIxP,EAAE8C,SAAS,IAAK,IACtC2K,EAAGG,GAAQ,KAAO4B,EAAI/B,EAAE3K,SAAS,IAAK,IACtCC,EAAIkV,EAAQ,GAAM,IAE1B,GAEA,CAAAzY,IAAA,sBAAA77B,MAsBA,SAAoBu0C,GAChB,IAAMC,EAASX,EAAWE,iBAAiBQ,GAC3C,OAAO1M,GAAQ4L,GAAAA,gBAA0BhM,GAAY2D,GAAC,KAAIwI,KAAe7Z,GAASya,IACtF,IAEA,EAAA3Y,IAAA,mBAAA77B,MAyBA,SAAwB67B,EAAgB4Y,GACpC,IAAIh1C,EAAQs6B,GAAS8B,EAAK,OAG1B,GAAqB,KAAjBp8B,EAAMqB,OAEN,OAAO+mC,GADQ4L,GAAAA,aAAuBh0C,IAASg1C,IAKnD,GAAqB,KAAjBh1C,EAAMqB,OAAe,CACrB,IAAM4zC,EAAM,IAAIlP,WAAW,IAC3BkP,EAAI,GAAK,EACTA,EAAIpM,IAAI7oC,EAAO,GACfA,EAAQi1C,C,CAIZ,OAAO7M,GADO4L,GAAAA,MAAAA,QAAwBh0C,GACjBk1C,WAAWF,GACpC,GAEA,CAAA5Y,IAAA,mBAAA77B,MAkBA,SAAwBssC,EAAmBsI,GACvCrO,GAAsC,KAAvBwB,GAAWuE,GAAgB,wBAAyB,SAAUA,GAE7E,IAAMT,EAAMd,GAAAA,KAAe6J,GACrBC,EAAMpB,GAAAA,UAAAA,YAAgChM,GAAazH,GAAO,CAAE6L,EAAIxP,EAAGwP,EAAI/B,MAAOgL,gBAE9EN,EAASf,GAAAA,iBAA2BhM,GAAa6E,GAASuI,EAAKhJ,EAAIL,SAGzE,OAFAjF,GAAyB,MAAViO,EAAgB,+BAAgC,YAAaI,GAErE/M,GAAQ2M,EACnB,GAEA,CAAA3Y,IAAA,YAAA77B,MAUA,SAAiB+0C,EAAeC,EAAeP,GAC3C,IAAMQ,EAAOxB,GAAAA,MAAAA,QAAwBI,EAAWE,iBAAiBgB,GAAIvN,UAAU,IACzE0N,EAAOzB,GAAAA,MAAAA,QAAwBI,EAAWE,iBAAiBiB,GAAIxN,UAAU,IAC/E,MAAO,KAAOyN,EAAKE,IAAID,GAAME,QAAQX,EACzC,KAACZ,CAAA,CAzKkB,GCrBjB,SAAUwB,GAAexZ,GAO3B,OAAOv6B,GAAW4tC,GAAU,MALR,iBAATrT,EACEgY,GAAAA,iBAA4BhY,GAAK,GAEjCA,EAAIyZ,WAEyB9N,UAAU,IAAIA,UAAU,IACtE,CAMM,SAAU+N,GAAejJ,EAAmBsI,GAC9C,OAAOS,GAAexB,GAAAA,iBAA4BvH,EAAQsI,GAC9D,CC3BA,MAAM,GAA+Bz4C,QAAQ,0C,0SCYtC,IAAMq5C,GAAmB,GAC1BC,GAAU,IAAIjQ,WAAWgQ,IAIzBE,GAAiB,CAAE,QAEnBnL,GAAS,GAEf,SAASoL,GAAWx2C,EAAcykC,GAC9B,IAAMgS,EAAU,IAAI/W,MAAK,0DAAAmB,OAA4D7gC,IAErF,MADMy2C,EAAShS,MAAQA,EACjBgS,CACV,CAEA,IAAAC,GAAA,IAAAnL,QAOahsC,GAAO,SAAAo3C,GAAAnF,EAAAjyC,EAAAo3C,GAAA,I,IAAAlF,G,EAAAlyC,E,+YAQhB,SAAAA,IAA+B,IAAA+9B,EAAAuO,EAAA,KAAAtsC,GAAA,QAAAg1C,EAAAjS,UAAA3gC,OAAhBi1C,EAAgB,IAAA1X,MAAAqV,GAAAf,EAAA,EAAAA,EAAAe,EAAAf,IAAhBoD,EAAgBpD,GAAAlR,UAAAkR,GAQ3B,IAAMzL,EAAQ6O,EAAK,GACfC,EAAoBD,EAAK,GACzBE,GAA+BF,EAAK,IAAM,IAAKvW,QAE/C0W,GAAO,EACPhP,IAAUqD,KACVyL,EAAQD,EACRE,EAAQ,GACRC,GAAO,GAKXzZ,EAAAmU,EAAAl0C,KAAA,KAAMs5C,EAAMl1C,QAAQmqC,GAAA6F,EAAArU,GAAAoZ,GAAA,CAAAvQ,UAAA,EAAAtlC,WAAA,IACpBg2C,EAAMG,SAAQ,SAACrG,EAAM7K,GAAYxI,EAAKwI,GAAS6K,CAAM,IAGrD,IAAMsG,EAAaH,EAAMlR,QAAO,SAACC,EAAO7lC,GAIpC,MAHqB,iBAAVA,GACP6lC,EAAMsD,IAAInpC,GAAO6lC,EAAM9I,IAAI/8B,IAAS,GAAK,GAEtC6lC,CACX,GAAyB,IAAIjiC,KAW7B,OARAmoC,GAAA4F,EAAArU,GAAAoZ,GAAc9Z,OAAOmR,OAAO8I,EAAM9S,KAAI,SAAC4M,EAAM7K,GACzC,IAAM9lC,EAAO82C,EAAMhR,GACnB,OAAY,MAAR9lC,GAAyC,IAAzBi3C,EAAWla,IAAI/8B,GACxBA,EAEJ,IACX,MAEK+2C,GAGLna,OAAOmR,OAAM4D,EAAArU,IAGb4Z,EAAA5Z,EAAO,IAAI6Z,MAAKxF,EAAArU,GAAO,CACnBP,IAAK,SAACkJ,EAAQjJ,EAAMoa,GAChB,GAAqB,iBAAVpa,EAAoB,CAG3B,GAAIA,EAAKkD,MAAM,YAAa,CACxB,IAAM4F,EAAQrW,GAAUuN,EAAM,UAC9B,GAAI8I,EAAQ,GAAKA,GAASxI,EAAK37B,OAC3B,MAAM,IAAIqlC,WAAW,uBAGzB,IAAM2J,EAAO1K,EAAOH,GAIpB,OAHI6K,aAAgBjR,OAChB8W,GAAU,SAAA3V,OAAWiF,GAAU6K,GAE5BA,C,CAIX,GAAI4F,GAAe7X,QAAQ1B,IAAS,EAChC,OAAOqa,QAAQta,IAAIkJ,EAAQjJ,EAAMoa,GAGrC,IAAMv2C,EAAQolC,EAAOjJ,GACrB,GAAIn8B,aAAiBrD,SAGjB,OAAO,WAAuC,QAAA85C,EAAAhV,UAAA3gC,OAAhBi1C,EAAgB,IAAA1X,MAAAoY,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAhBX,EAAgBW,GAAAjV,UAAAiV,GAC1C,OAAO12C,EAAMikC,MAAO,OAASsS,EAAYnR,EAAQ,KAAM2Q,EAC3D,EAEG,KAAM5Z,KAAQiJ,GAEjB,OAAOA,EAAOuR,SAAS1S,MAAO6M,EAAArU,KAAS8Z,EAAYnR,EAAM0L,EAAArU,GAAQ,CAAEN,G,CAI3E,OAAOqa,QAAQta,IAAIkJ,EAAQjJ,EAAMoa,EACrC,MA5CSF,EAAA5Z,EA8CjB,CAiIC,OA/HD0O,EAAAzsC,EAAA,EAAAm9B,IAAA,UAAA77B,MAMA,WACI,IAAM0lC,EAAqB,GAK3B,OAJA,KAAKyQ,SAAQ,SAACrG,EAAM7K,GACZ6K,aAAgBjR,OAAS8W,GAAU,SAAA3V,OAAWiF,GAAU6K,GAC5DpK,EAAOrE,KAAKyO,EAChB,IACOpK,CACX,GAEA,CAAA7J,IAAA,WAAA77B,MAMA,WAAQ,IAAA42C,EAAA,KACJ,OAAOxL,GAAA,KAAIyK,IAAQ9Q,QAAO,SAACC,EAAO7lC,EAAM8lC,GAUpC,OATAoB,GAAe,MAARlnC,EAAc,oCAAqC,wBAAyB,CAC/E4nC,UAAW,eAIT5nC,KAAQ6lC,IACVA,EAAM7lC,GAAQy3C,EAAKD,SAASx3C,IAGzB6lC,CACX,GAAwB,GAC5B,GAEA,CAAAnJ,IAAA,QAAA77B,MAGA,SAAMioC,EAA4BC,GACjB,MAATD,IAAiBA,EAAQ,GACzBA,EAAQ,IACRA,GAAS,KAAKnnC,QACF,IAAKmnC,EAAQ,GAGlB,MAAPC,IAAeA,EAAM,KAAKpnC,QAC1BonC,EAAM,IACNA,GAAO,KAAKpnC,QACF,IAAKonC,EAAM,GAErBA,EAAM,KAAKpnC,SAAUonC,EAAM,KAAKpnC,QAGpC,IADA,IAAM4kC,EAAS,GAAKuQ,EAAQ,GACnB5Y,EAAI4K,EAAO5K,EAAI6K,EAAK7K,IACzBqI,EAAOrE,KAAK,KAAKhE,IACjB4Y,EAAM5U,KAAK+J,GAAA,KAAIyK,IAAQxY,IAG3B,OAAO,IAAI3+B,EAAO6rC,GAAQ7E,EAAQuQ,EACtC,GAEA,CAAApa,IAAA,SAAA77B,MAGA,SAAO62C,EAA8DC,GAEjE,IADA,IAAMpR,EAAS,GAAKuQ,EAAQ,GACnB5Y,EAAI,EAAGA,EAAI,KAAKv8B,OAAQu8B,IAAK,CAClC,IAAMyS,EAAO,KAAKzS,GACdyS,aAAgBjR,OAChB8W,GAAU,SAAA3V,OAAW3C,GAAMyS,GAG3B+G,EAASn6C,KAAKo6C,EAAShH,EAAMzS,EAAG,QAChCqI,EAAOrE,KAAKyO,GACZmG,EAAM5U,KAAK+J,GAAA,KAAIyK,IAAQxY,I,CAI/B,OAAO,IAAI3+B,EAAO6rC,GAAQ7E,EAAQuQ,EACtC,GAEA,CAAApa,IAAA,MAAA77B,MAGA,SAAyB62C,EAAwDC,GAE7E,IADA,IAAMpR,EAAmB,GAChBrI,EAAI,EAAGA,EAAI,KAAKv8B,OAAQu8B,IAAK,CAClC,IAAMyS,EAAO,KAAKzS,GACdyS,aAAgBjR,OAChB8W,GAAU,SAAA3V,OAAW3C,GAAMyS,GAG/BpK,EAAOrE,KAAKwV,EAASn6C,KAAKo6C,EAAShH,EAAMzS,EAAG,M,CAGhD,OAAOqI,CACX,GAGA,CAAA7J,IAAA,WAAA77B,MAQA,SAASb,GACL,IAAM8lC,EAAQmG,GAAA,KAAIyK,IAAQhY,QAAQ1+B,GAClC,IAAe,IAAX8lC,EAAJ,CAEA,IAAMjlC,EAAQ,KAAKilC,GAMnB,OAJIjlC,aAAiB6+B,OACjB8W,GAAU,YAAA3V,OAAciB,KAAKC,UAAU/hC,IAAgBa,EAAO4jC,OAG3D5jC,C,CACX,IAEA,EAAA67B,IAAA,YAAA77B,MAIA,SAAiBg2C,EAAmB3R,GAChC,OAAO,IAAI3lC,EAAO6rC,GAAQyL,EAAO3R,EACrC,KAAC3lC,CAAA,CAhOe,CAgOfq4C,GAhOuB1Y,QAuQ5B,SAASsY,GAAS32C,GACd,IAAIP,EAAQyqC,GAAUlqC,GAStB,OAPAqmC,GAAQ5mC,EAAMqB,QAAU00C,GAAU,sBAC9B,iBAAkB,CAAE1S,OAAQrjC,EAAOqB,OAAQ00C,GAAUjO,OAAQ9nC,EAAMqB,SAEnErB,EAAMqB,SAAW00C,KACjB/1C,EAAQgoC,GAAazH,GAAO,CAAEyV,GAAQjW,MAAM//B,EAAMqB,OAAS00C,IAAW/1C,MAGnEA,CACX,CAKA,IAAsBu3C,GAAK,WAmBvB,SAAAA,EAAY73C,EAAcyH,EAAcqwC,EAAmBC,GAAgBlM,EAAA,KAAAgM,GAAA7G,EAAA,oBAAAA,EAAA,oBAAAA,EAAA,yBAAAA,EAAA,uBACvEhL,GAAwB,KAAM,CAAEhmC,KAAAA,EAAMyH,KAAAA,EAAMqwC,UAAAA,EAAWC,QAAAA,GAAW,CAC9D/3C,KAAM,SAAUyH,KAAM,SAAUqwC,UAAW,SAAUC,QAAS,WAEtE,CAIC,OAJA/L,EAAA6L,EAAA,EAAAnb,IAAA,cAAA77B,MAED,SAAYU,EAAiBV,GACzBumC,IAAe,EAAO7lC,EAAS,KAAKu2C,UAAWj3C,EACnD,KAACg3C,CAAA,CA3BsB,GAmC3BnK,GAAA,IAAAnC,QAAAyM,GAAA,IAAAzM,QAAA0M,GAAA,IAAA5G,QAGa6G,GAAM,WAKf,SAAAA,IAAArM,EAAA,KAAAqM,GAAAC,GAAA,KAAAF,IAAAnM,GAAA,KAAA4B,GAAA,CAAAvH,UAAA,EAAAtlC,WAAA,IAAAirC,GAAA,KAAAkM,GAAA,CAAA7R,UAAA,EAAAtlC,WAAA,IACIkrC,GAAA,KAAI2B,GAAS,IACb3B,GAAA,KAAIiM,GAAe,EACvB,CAyCC,OAzCAhM,EAAAkM,EAAA,EAAAxb,IAAA,OAAAK,IAED,WACI,OAAO8D,GAAMoL,GAAC,KAAIyB,IACtB,GAAC,CAAAhR,IAAA,SAAAK,IACD,WAAuB,OAAAkP,GAAO,KAAI+L,GAAc,GAAC,CAAAtb,IAAA,eAAA77B,MAQjD,SAAaM,GACT,OAAAywC,GAAO,KAAIqG,GAAAG,IAAA76C,KAAJ,KAAgB+qC,GAAannC,EAAOihB,MAC/C,GAEA,CAAAsa,IAAA,aAAA77B,MACA,SAAWA,GACP,IAAIP,EAAQgoC,GAAaznC,GACnBw3C,EAAgB/3C,EAAMqB,OAAS00C,GAIrC,OAHIgC,IACA/3C,EAAQgoC,GAAazH,GAAO,CAAEvgC,EAAOg2C,GAAQjW,MAAMgY,OAEvDzG,GAAO,KAAIqG,GAAAG,IAAA76C,KAAJ,KAAgB+C,EAC3B,GAEA,CAAAo8B,IAAA,aAAA77B,MACA,SAAWA,GACP,OAAA+wC,GAAO,KAAIqG,GAAAG,IAAA76C,KAAJ,KAAgBi6C,GAAS32C,GACpC,GAGA,CAAA67B,IAAA,sBAAA77B,MACA,WAAmB,IAAAy3C,EAAA,KACTlQ,EAAS6D,GAAA,KAAIyB,IAAO/rC,OAG1B,OAFAsqC,GAAA,KAAIyB,IAAOxL,KAAKoU,IAChBvK,GAAA,KAAIiM,GAAA/L,GAAJ,KAAI+L,IAAgB3B,IACb,SAACx1C,GACJorC,GAAAqM,EAAI5K,IAAOtF,GAAUoP,GAAS32C,EAClC,CACJ,KAACq3C,CAAA,CAjDc,GAoDnB,SAAAE,GArCeh2B,GAGP,OAFA6pB,GAAA,KAAIyB,IAAOxL,KAAK9f,GAChB2pB,GAAA,KAAIiM,GAAA/L,GAAJ,KAAI+L,IAAgB51B,EAAKzgB,QAClBygB,EAAKzgB,MAChB,CAAC,IAAA42C,GAAA,IAAAhN,QAAAiN,GAAA,IAAAjN,QAAAkN,GAAA,IAAApH,QAoCQqH,GAAM,WAUf,SAAAA,EAAYt2B,EAAiBu2B,GAAoB9M,EAAA,KAAA6M,GAAAP,GAAA,KAAAM,IAAAzH,EAAA,0BAAAlF,GAAA,KAAAyM,GAAA,CAAApS,UAAA,EAAAtlC,WAAA,IAAAirC,GAAA,KAAA0M,GAAA,CAAArS,UAAA,EAAAtlC,WAAA,IAC7CmlC,GAAyB,KAAM,CAAE2S,aAAcA,IAE/C5M,GAAA,KAAIwM,GAASjQ,GAAalmB,IAE1B2pB,GAAA,KAAIyM,GAAW,EACnB,CA2CC,OA3CAxM,EAAA0M,EAAA,EAAAhc,IAAA,OAAAK,IAED,WAAqB,OAAO2L,GAAOuD,GAAC,KAAIsM,IAAS,GAAC,CAAA7b,IAAA,aAAAK,IAClD,WAA2B,OAAOkP,GAAA,KAAIsM,IAAO52C,MAAQ,GAAC,CAAA+6B,IAAA,WAAAK,IACtD,WAAyB,OAAAkP,GAAO,KAAIuM,GAAU,GAAC,CAAA9b,IAAA,QAAAK,IAC/C,WAA0B,OAAO,IAAIsJ,WAAU4F,GAAC,KAAIsM,IAAS,GAAC,CAAA7b,IAAA,YAAA77B,MAmB9D,SAAUunC,GACN,OAAO,IAAIsQ,EAAOzM,GAAA,KAAIsM,IAAOlY,MAAM4L,GAAA,KAAIuM,IAAWpQ,GAAS,KAAKuQ,WACpE,GAEA,CAAAjc,IAAA,YAAA77B,MACA,SAAUc,EAAgBi3C,GACtB,IAAIt4C,EAAKsxC,GAAG,KAAI6G,GAAAI,IAAAt7C,KAAJ,KAAgB,EAAGoE,IAAUi3C,GAGzC,OAFA7M,GAAA,KAAIyM,GAAAvM,GAAJ,KAAIuM,IAAYl4C,EAAMqB,QAEfrB,EAAM+/B,MAAM,EAAG1+B,EAC1B,GAEA,CAAA+6B,IAAA,YAAA77B,MACA,WACI,OAAO0pC,GAAS,KAAKzpC,UAAUu1C,IACnC,GAAC,CAAA3Z,IAAA,YAAA77B,MAED,WACI,OrBhSG4uB,GAAU8a,GqBgSG,KAAKzpC,UAAUu1C,KACnC,KAACqC,CAAA,CA3Dc,GA4DlB,SAAAG,GArCczQ,EAAgBzmC,EAAgBi3C,GACvC,IAAIE,EAAgBxG,KAAKC,KAAK5wC,EAAS00C,IAAYA,GAYnD,OAXIpK,GAAA,KAAIuM,IAAWM,EAAgB7M,GAAA,KAAIsM,IAAO52C,SACtC,KAAKg3C,YAAcC,GAAS3M,GAAA,KAAIuM,IAAW72C,GAAUsqC,GAAA,KAAIsM,IAAO52C,OAChEm3C,EAAgBn3C,EAEhBulC,IAAO,EAAO,qBAAsB,iBAAkB,CAClDvD,OAAQ2E,GAAY2D,GAAC,KAAIsM,KACzB52C,OAAQsqC,GAAA,KAAIsM,IAAO52C,OACnBymC,OAAQ6D,GAAA,KAAIuM,IAAWM,KAI5B7M,GAAA,KAAIsM,IAAOlY,MAAK4L,GAAC,KAAIuM,IAAUvM,GAAA,KAAIuM,IAAWM,EACzD,CCraJ,IAAMC,GAAS,GAEf,SAAS3c,GAAEv7B,EAAqB+oC,GAC5B,IAAIoP,GAAS,EAOb,OANIpP,EAAQ,IACRoP,GAAS,EACTpP,IAAU,GAIP,IAAIqP,GAAMF,GAAM,GAAAlY,OAAMmY,EAAS,GAAI,IAAI,OAAAnY,OAAO+I,GAAU/oC,EAAO,CAAEm4C,OAAAA,EAAQpP,MAAAA,GACpF,CAEA,SAASsP,GAAEr4C,EAAkBs4C,GAEzB,OAAO,IAAIF,GAAMF,GAAM,QAAAlY,OAAYsY,GAAc,IAAOt4C,EAAO,CAAEs4C,KAAAA,GACrE,CAoEA,IAAMC,GAAejc,OAAM,IAAK,iBAEhCkc,GAAA,IAAA9N,QAGa0N,GAAK,WAsBd,SAAAA,EAAYK,EAAY7xC,EAAc5G,EAAY04C,GAAa1N,EAAA,KAAAoN,GAAAjI,EAAA,oBAAAA,EAAA,qB,kJAAAlF,CAAA,KAAAuN,GAAA,CAAAlT,UAAA,EAAAtlC,WAAA,IAAAmwC,EAAA,4BAC5C,MAAXuI,IAAmBA,EAAU,MACjC1R,GAAckR,GAAQO,EAAO,SAC7BtT,GAAwB,KAAM,CAAEoT,aAAAA,GAAc3xC,KAAAA,EAAM5G,MAAAA,IACpDkrC,GAAA,KAAIsN,GAAYE,GAGhB,KAAKC,QACT,CA6oBC,OA3oBDxN,EAAAiN,EAAA,EAAAvc,IAAA,SAAA77B,MAGA,WACI,GAAkB,UAAd,KAAK4G,KACL,MAAM,IAAIi4B,MAAM,IACb,GAAkB,iBAAd,KAAKj4B,KACZ,MAAM,IAAIi4B,MAAM,IACb,MAAkB,UAAd,KAAKj4B,KACZ,SAAAo5B,OAAiB,KAAKhgC,MAAMkjC,KAAI,SAAC9D,GAAQ,OAAKA,EAAEuZ,QAAQ,IAAEvV,KAAK,KAAK,KAGjE,KAAKx8B,IAChB,GAEA,CAAAi1B,IAAA,eAAA77B,MAGA,WACI,OAAO,CACX,GAEA,CAAA67B,IAAA,WAAA77B,MAGA,WACI,OAAO,CACX,GAEA,CAAA67B,IAAA,WAAA77B,MAGA,WACI,OAAO,CACX,GAEA,CAAA67B,IAAA,WAAA77B,MAGA,WACI,QAAU,KAAK4G,KAAKy4B,MAAM,gBAC9B,GAEA,CAAAxD,IAAA,SAAA77B,MAGA,WACI,OAAO,KAAK4G,KAAKysC,WAAW,QAChC,GAEA,CAAAxX,IAAA,WAAA77B,MAGA,WACI,MAAsB,WAAd,KAAK4G,IACjB,GAEA,CAAAi1B,IAAA,YAAAK,IAGA,WACI,GAAkB,UAAd,KAAKt1B,KAAoB,MAAMs/B,UAAU,eAC7C,OAAAkF,GAAO,KAAIoN,GACf,GAOA,CAAA3c,IAAA,cAAAK,IAKA,WACI,GAAkB,UAAd,KAAKt1B,KAAoB,MAAMs/B,UAAU,gBAC7C,OAAsB,IAAlBkF,GAAA,KAAIoN,KAA8B,GAChB,IAAlBpN,GAAA,KAAIoN,IAA4C,KAAKx4C,MAAQc,OAC1D,IACX,IAEA,EAAA+6B,IAAA,OAAA77B,MAGA,SAAY4G,EAAc5G,GACtB,OAAO,IAAIo4C,EAAMF,GAAQtxC,EAAM5G,EACnC,GAEA,CAAA67B,IAAA,QAAA77B,MAGA,SAAao/B,GAA0B,OAAO7D,GAAE6D,EAAG,EAAI,GAEvD,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAA0B,OAAO7D,GAAE6D,EAAG,GAAK,GAEzD,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAA0B,OAAO7D,GAAE6D,EAAG,GAAK,GAEzD,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAA0B,OAAO7D,GAAE6D,EAAG,GAAK,GAEzD,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAA0B,OAAO7D,GAAE6D,EAAG,GAAK,GAEzD,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAA0B,OAAO7D,GAAE6D,EAAG,GAAK,GAEzD,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAA0B,OAAO7D,GAAE6D,EAAG,GAAK,GAEzD,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAA0B,OAAO7D,GAAE6D,EAAG,GAAK,GAEzD,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAA0B,OAAO7D,GAAE6D,EAAG,GAAK,GAEzD,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAA0B,OAAO7D,GAAE6D,EAAG,GAAK,GAEzD,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAA0B,OAAO7D,GAAE6D,EAAG,GAAK,GAEzD,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAA0B,OAAO7D,GAAE6D,EAAG,GAAK,GAEzD,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAA0B,OAAO7D,GAAE6D,EAAG,IAAM,GAE3D,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAA0B,OAAO7D,GAAE6D,EAAG,IAAM,GAE3D,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAA0B,OAAO7D,GAAE6D,EAAG,IAAM,GAE3D,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAA0B,OAAO7D,GAAE6D,EAAG,IAAM,GAE3D,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAA0B,OAAO7D,GAAE6D,EAAG,IAAM,GAE3D,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAA0B,OAAO7D,GAAE6D,EAAG,IAAM,GAE3D,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAA0B,OAAO7D,GAAE6D,EAAG,IAAM,GAE3D,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAA0B,OAAO7D,GAAE6D,EAAG,IAAM,GAE3D,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAA0B,OAAO7D,GAAE6D,EAAG,IAAM,GAE3D,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAA0B,OAAO7D,GAAE6D,EAAG,IAAM,GAE3D,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAA0B,OAAO7D,GAAE6D,EAAG,IAAM,GAE3D,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAA0B,OAAO7D,GAAE6D,EAAG,IAAM,GAE3D,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAA0B,OAAO7D,GAAE6D,EAAG,IAAM,GAE3D,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAA0B,OAAO7D,GAAE6D,EAAG,IAAM,GAE3D,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAA0B,OAAO7D,GAAE6D,EAAG,IAAM,GAE3D,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAA0B,OAAO7D,GAAE6D,EAAG,IAAM,GAE3D,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAA0B,OAAO7D,GAAE6D,EAAG,IAAM,GAE3D,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAA0B,OAAO7D,GAAE6D,EAAG,IAAM,GAE3D,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAA0B,OAAO7D,GAAE6D,EAAG,IAAM,GAE3D,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAA0B,OAAO7D,GAAE6D,EAAG,IAAM,GAE3D,CAAAvD,IAAA,OAAA77B,MAGA,SAAYo/B,GAA0B,OAAO7D,GAAE6D,EAAG,IAAM,GAExD,CAAAvD,IAAA,OAAA77B,MAGA,SAAYo/B,GAA0B,OAAO7D,GAAE6D,GAAI,EAAI,GAEvD,CAAAvD,IAAA,QAAA77B,MAGA,SAAao/B,GAA0B,OAAO7D,GAAE6D,GAAI,GAAK,GAEzD,CAAAvD,IAAA,QAAA77B,MAGA,SAAao/B,GAA0B,OAAO7D,GAAE6D,GAAI,GAAK,GAEzD,CAAAvD,IAAA,QAAA77B,MAGA,SAAao/B,GAA0B,OAAO7D,GAAE6D,GAAI,GAAK,GAEzD,CAAAvD,IAAA,QAAA77B,MAGA,SAAao/B,GAA0B,OAAO7D,GAAE6D,GAAI,GAAK,GAEzD,CAAAvD,IAAA,QAAA77B,MAGA,SAAao/B,GAA0B,OAAO7D,GAAE6D,GAAI,GAAK,GAEzD,CAAAvD,IAAA,QAAA77B,MAGA,SAAao/B,GAA0B,OAAO7D,GAAE6D,GAAI,GAAK,GAEzD,CAAAvD,IAAA,QAAA77B,MAGA,SAAao/B,GAA0B,OAAO7D,GAAE6D,GAAI,GAAK,GAEzD,CAAAvD,IAAA,QAAA77B,MAGA,SAAao/B,GAA0B,OAAO7D,GAAE6D,GAAI,GAAK,GAEzD,CAAAvD,IAAA,QAAA77B,MAGA,SAAao/B,GAA0B,OAAO7D,GAAE6D,GAAI,GAAK,GAEzD,CAAAvD,IAAA,QAAA77B,MAGA,SAAao/B,GAA0B,OAAO7D,GAAE6D,GAAI,GAAK,GAEzD,CAAAvD,IAAA,QAAA77B,MAGA,SAAao/B,GAA0B,OAAO7D,GAAE6D,GAAI,GAAK,GAEzD,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAA0B,OAAO7D,GAAE6D,GAAI,IAAM,GAE3D,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAA0B,OAAO7D,GAAE6D,GAAI,IAAM,GAE3D,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAA0B,OAAO7D,GAAE6D,GAAI,IAAM,GAE3D,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAA0B,OAAO7D,GAAE6D,GAAI,IAAM,GAE3D,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAA0B,OAAO7D,GAAE6D,GAAI,IAAM,GAE3D,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAA0B,OAAO7D,GAAE6D,GAAI,IAAM,GAE3D,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAA0B,OAAO7D,GAAE6D,GAAI,IAAM,GAE3D,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAA0B,OAAO7D,GAAE6D,GAAI,IAAM,GAE3D,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAA0B,OAAO7D,GAAE6D,GAAI,IAAM,GAE3D,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAA0B,OAAO7D,GAAE6D,GAAI,IAAM,GAE3D,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAA0B,OAAO7D,GAAE6D,GAAI,IAAM,GAE3D,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAA0B,OAAO7D,GAAE6D,GAAI,IAAM,GAE3D,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAA0B,OAAO7D,GAAE6D,GAAI,IAAM,GAE3D,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAA0B,OAAO7D,GAAE6D,GAAI,IAAM,GAE3D,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAA0B,OAAO7D,GAAE6D,GAAI,IAAM,GAE3D,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAA0B,OAAO7D,GAAE6D,GAAI,IAAM,GAE3D,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAA0B,OAAO7D,GAAE6D,GAAI,IAAM,GAE3D,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAA0B,OAAO7D,GAAE6D,GAAI,IAAM,GAE3D,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAA0B,OAAO7D,GAAE6D,GAAI,IAAM,GAE3D,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAA0B,OAAO7D,GAAE6D,GAAI,IAAM,GAE3D,CAAAvD,IAAA,MAAA77B,MAGA,SAAWo/B,GAA0B,OAAO7D,GAAE6D,GAAI,IAAM,GAExD,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,EAAI,GAErD,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,EAAI,GAErD,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,EAAI,GAErD,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,EAAI,GAErD,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,EAAI,GAErD,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,EAAI,GAErD,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,EAAI,GAErD,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,EAAI,GAErD,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,EAAI,GAErD,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,GAAK,GAEvD,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,GAAK,GAEvD,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,GAAK,GAEvD,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,GAAK,GAEvD,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,GAAK,GAEvD,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,GAAK,GAEvD,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,GAAK,GAEvD,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,GAAK,GAEvD,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,GAAK,GAEvD,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,GAAK,GAEvD,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,GAAK,GAEvD,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,GAAK,GAEvD,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,GAAK,GAEvD,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,GAAK,GAEvD,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,GAAK,GAEvD,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,GAAK,GAEvD,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,GAAK,GAEvD,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,GAAK,GAEvD,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,GAAK,GAEvD,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,GAAK,GAEvD,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,GAAK,GAEvD,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,GAAK,GAEvD,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAAuB,OAAOiZ,GAAEjZ,EAAG,GAAK,GAGvD,CAAAvD,IAAA,UAAA77B,MAGA,SAAeo/B,GAAkC,OAAO,IAAIgZ,EAAMF,GAAQ,UAAW9Y,EAAI,GAEzF,CAAAvD,IAAA,OAAA77B,MAGA,SAAYo/B,GAAiB,OAAO,IAAIgZ,EAAMF,GAAQ,SAAU9Y,EAAI,GAEpE,CAAAvD,IAAA,QAAA77B,MAGA,SAAao/B,GAAuB,OAAO,IAAIgZ,EAAMF,GAAQ,QAAS9Y,EAAI,GAE1E,CAAAvD,IAAA,SAAA77B,MAGA,SAAco/B,GAAoB,OAAO,IAAIgZ,EAAMF,GAAQ,SAAU9Y,EAAI,GAGzE,CAAAvD,IAAA,QAAA77B,MAGA,SAAao/B,EAAuB8X,GAChC,MAAM,IAAIrY,MAAM,sBAEpB,GAGA,CAAAhD,IAAA,QAAA77B,MAGA,SAAao/B,EAAqDjgC,GAC9D,MAAM,IAAI0/B,MAAM,sBAEpB,GAGA,CAAAhD,IAAA,YAAA77B,MAGA,SAAiBo/B,GACb,OAAO,IAAIgZ,EAAMF,GAAQ,YAAanc,OAAOqK,OAAO,GAAKhH,GAC7D,GAEA,CAAAvD,IAAA,UAAA77B,MAGA,SAAeA,GACX,OAAQA,GACiB,WAAlB2jC,EAAO3jC,IACP,iBAAkBA,GAClBA,EAAMu4C,eAAiBA,EAClC,GAEA,CAAA1c,IAAA,cAAA77B,MAOA,SAAsBA,EAAkB4G,GACpC,GAAIwxC,EAAMQ,QAAQ54C,GAAQ,CACtB,GAAIA,EAAM4G,OAASA,EACf,MAAM,IAAIi4B,MAAK,0BAAAmB,OAA4Bp5B,EAAK,UAAAo5B,OAAUhgC,EAAM4G,OAEpE,OAAO5G,EAAMA,K,CAEjB,OAAOA,CACX,KAACo4C,CAAA,CA3qBa,GCnGlB,IAAaS,GAAa,SAAAC,GAAAnI,EAAAkI,EAAAC,GAAA,I,IAAAlI,G,EAAAiI,E,+YAEtB,SAAAA,EAAY5B,GAAiB,OAAAjM,EAAA,KAAA6N,GAAAjI,EAAAl0C,KAAA,KACnB,UAAW,UAAWu6C,GAAW,EAC3C,CAkBC,OAlBA9L,EAAA0N,EAAA,EAAAhd,IAAA,eAAA77B,MAED,WACI,MAAO,4CACX,GAAC,CAAA67B,IAAA,SAAA77B,MAED,SAAOM,EAAgBsoC,GACnB,IAAI5oC,EAAQo4C,GAAAA,YAAkBxP,EAAQ,UACtC,IACI5oC,EAAQsB,GAAWtB,E,CACrB,MAAO4jC,GACL,OAAO,KAAKmV,YAAYnV,EAAMljC,QAASkoC,E,CAE3C,OAAOtoC,EAAO04C,WAAWh5C,EAC7B,GAAC,CAAA67B,IAAA,SAAA77B,MAED,SAAON,GACH,OAAO4B,GAAW2oC,GAAQvqC,EAAOu5C,YAAa,IAClD,KAACJ,CAAA,CAtBqB,CAAQ7B,ICHlC,IAAakC,GAAe,SAAAJ,GAAAnI,EAAAuI,EAAAJ,GAAA,I,IAAAlI,G,EAAAsI,E,+YAGxB,SAAAA,EAAYC,GAAY,IAAA1c,EAED,OAFCuO,EAAA,KAAAkO,GACpBzc,EAAAmU,EAAAl0C,KAAA,KAAMy8C,EAAMh6C,KAAMg6C,EAAMvyC,KAAM,IAAKuyC,EAAMjC,SAAS/G,EAAAW,EAAArU,GAAA,gBAClDA,EAAK0c,MAAQA,EAAM1c,CACvB,CAYC,OAZA0O,EAAA+N,EAAA,EAAArd,IAAA,eAAA77B,MAED,WACI,OAAO,KAAKm5C,MAAMC,cACtB,GAAC,CAAAvd,IAAA,SAAA77B,MAED,SAAOM,EAAgBN,GACnB,OAAO,KAAKm5C,MAAMxc,OAAOr8B,EAAQN,EACrC,GAAC,CAAA67B,IAAA,SAAA77B,MAED,SAAON,GACH,OAAO,KAAKy5C,MAAMxb,OAAOj+B,EAC7B,KAACw5C,CAAA,CAlBuB,CAAQlC,ICK9B,SAAUqC,GAAK/4C,EAAgBg5C,EAA8BjU,GAC/D,IAAIkU,EAA0B,GAE9B,GAAIlb,MAAMkH,QAAQF,GACfkU,EAAclU,OAEV,GAAIA,GAA6B,WAAnB1B,EAAO0B,GAAsB,CAC9C,IAAImU,EAAwC,GAE5CD,EAAcD,EAAOpW,KAAI,SAACiW,GACtB,IAAMh6C,EAAOg6C,EAAMlC,UASnB,OARA5Q,GAAOlnC,EAAM,wDACT,mBAAoB,CAAE0kC,SAAU,SAAUmC,KAAM,CAAEmT,MAAAA,GAASn5C,MAAOqlC,IAEtEgB,IAAQmT,EAAOr6C,GAAO,0DAClB,mBAAoB,CAAE0kC,SAAU,SAAUmC,KAAM,CAAEmT,MAAAA,GAASn5C,MAAOqlC,IAEtEmU,EAAOr6C,IAAQ,EAERkmC,EAAOlmC,EAClB,G,MAGAonC,IAAe,EAAO,sBAAuB,QAASlB,GAG1DkB,GAAe+S,EAAOx4C,SAAWy4C,EAAYz4C,OAAQ,8BAA+B,QAASukC,GAE7F,IAAIoU,EAAe,IAAIpC,GACnBqC,EAAgB,IAAIrC,GAEpBsC,EAAmD,GA2BvD,OA1BAL,EAAOnD,SAAQ,SAACgD,EAAOlU,GACnB,IAAIjlC,EAAQu5C,EAAYtU,GAExB,GAAIkU,EAAMjC,QAAS,CAEf,IAAI0C,EAAgBF,EAAc54C,OAGlCq4C,EAAMxc,OAAO+c,EAAe15C,GAG5B,IAAI65C,EAAaJ,EAAaK,sBAC9BH,EAAYtY,MAAK,SAAC0Y,GACdF,EAAWE,EAAaH,EAC5B,G,MAGAT,EAAMxc,OAAO8c,EAAcz5C,EAEnC,IAGA25C,EAAYxD,SAAQ,SAAClJ,GAAWA,EAAKwM,EAAa34C,OAAS,IAE9CR,EAAO05C,aAAaP,GACvBn5C,EAAO05C,aAAaN,EAElC,CAKM,SAAUO,GAAOv6C,EAAgB45C,GACnC,IAAIjU,EAAqB,GACrBhB,EAA6B,GAG7B6V,EAAax6C,EAAOy6C,UAAU,GA8ClC,OA5CAb,EAAOnD,SAAQ,SAACgD,GACZ,IAAIn5C,EAAa,KAEjB,GAAIm5C,EAAMjC,QAAS,CACf,IAAI3P,EAAS7nC,EAAO06C,YAChBC,EAAeH,EAAWC,UAAU5S,GACxC,IACIvnC,EAAQm5C,EAAMxb,OAAO0c,E,CACvB,MAAOzW,GAEL,GAAIkC,GAAQlC,EAAO,kBACf,MAAMA,GAGV5jC,EAAQ4jC,GACF0W,SAAWnB,EAAMh6C,KACvBa,EAAMb,KAAOg6C,EAAMlC,UACnBj3C,EAAM4G,KAAOuyC,EAAMvyC,I,OAIvB,IACI5G,EAAQm5C,EAAMxb,OAAOj+B,E,CACvB,MAAOkkC,GAEL,GAAIkC,GAAQlC,EAAO,kBACf,MAAMA,GAGV5jC,EAAQ4jC,GACF0W,SAAWnB,EAAMh6C,KACvBa,EAAMb,KAAOg6C,EAAMlC,UACnBj3C,EAAM4G,KAAOuyC,EAAMvyC,I,CAI3B,GAAahG,MAATZ,EACA,MAAM,IAAI6+B,MAAM,eAGpBwG,EAAOhE,KAAKrhC,GACZqkC,EAAKhD,KAAK8X,EAAMlC,WAAa,KACjC,IAEOv4C,GAAAA,UAAiB2mC,EAAQhB,EACpC,CAKA,IAAakW,GAAW,SAAAzB,GAAAnI,EAAA4J,EAAAzB,GAAA,I,IAAAlI,G,EAAA2J,E,+YAIpB,SAAAA,EAAYpB,EAAcr4C,EAAgBm2C,GAAiB,IAAAxa,EAAAuO,EAAA,KAAAuP,GACvD,IAAM3zC,EAAQuyC,EAAMvyC,KAAO,KAAO9F,GAAU,EAAIA,EAAQ,IAAM,IACxDo2C,GAAuB,IAAZp2C,GAAiBq4C,EAAMjC,QAEc,OADtDza,EAAAmU,EAAAl0C,KAAA,KAAM,QAASkK,EAAMqwC,EAAWC,GAAS/G,EAAAW,EAAArU,GAAA,gBAAA0T,EAAAW,EAAArU,GAAA,iBACzC0I,GAAgB2L,EAAArU,GAAmB,CAAE0c,MAAAA,EAAOr4C,OAAAA,IAAU27B,CAC1D,CAoDC,OApDA0O,EAAAoP,EAAA,EAAA1e,IAAA,eAAA77B,MAED,WAKI,IAHA,IAAMw6C,EAAe,KAAKrB,MAAMC,eAE1B1T,EAAqB,GAClBrI,EAAI,EAAGA,EAAI,KAAKv8B,OAAQu8B,IAC7BqI,EAAOrE,KAAKmZ,GAEhB,OAAO9U,CACX,GAAC,CAAA7J,IAAA,SAAA77B,MAED,SAAOM,EAAgBsoC,GACnB,IAAM5oC,EAAQo4C,GAAAA,YAAkBxP,EAAQ,SAEpCvK,MAAMkH,QAAQvlC,IACd,KAAK+4C,YAAY,uBAAwB/4C,GAG7C,IAAIymC,EAAQ,KAAK3lC,QAEF,IAAX2lC,IACAA,EAAQzmC,EAAMc,OACdR,EAAO04C,WAAWh5C,EAAMc,SAG5B0lC,GAAoBxmC,EAAMc,OAAQ2lC,EAAO,eAAiB,KAAKwQ,UAAY,IAAK,KAAKA,UAAY,KAGjG,IADA,IAAIqC,EAAS,GACJjc,EAAI,EAAGA,EAAIr9B,EAAMc,OAAQu8B,IAAOic,EAAOjY,KAAK,KAAK8X,OAE1D,OAAOE,GAAK/4C,EAAQg5C,EAAQt5C,EAChC,GAAC,CAAA67B,IAAA,SAAA77B,MAED,SAAON,GACH,IAAI+mC,EAAQ,KAAK3lC,QACF,IAAX2lC,GAQAJ,IAPAI,EAAQ/mC,EAAO06C,aAOA5E,IAAY91C,EAAOqoC,WAAY,2BAC1C,iBAAkB,CAAEjF,OAAQpjC,EAAOD,MAAO8nC,OAAQd,EAAQ+O,GAAU10C,OAAQpB,EAAOqoC,aAG3F,IADA,IAAIuR,EAAS,GACJjc,EAAI,EAAGA,EAAIoJ,EAAOpJ,IAAOic,EAAOjY,KAAK,IAAI6X,GAAe,KAAKC,QAEtE,OAAOc,GAAOv6C,EAAQ45C,EAC1B,KAACiB,CAAA,CA7DmB,CAAQvD,IC/HhC,IAAayD,GAAa,SAAA3B,GAAAnI,EAAA8J,EAAA3B,GAAA,I,IAAAlI,G,EAAA6J,E,+YAEtB,SAAAA,EAAYxD,GAAiB,OAAAjM,EAAA,KAAAyP,GAAA7J,EAAAl0C,KAAA,KACnB,OAAQ,OAAQu6C,GAAW,EACrC,CAaC,OAbA9L,EAAAsP,EAAA,EAAA5e,IAAA,eAAA77B,MAED,WACI,OAAO,CACX,GAAC,CAAA67B,IAAA,SAAA77B,MAED,SAAOM,EAAgBsoC,GACnB,IAAM5oC,EAAQo4C,GAAAA,YAAkBxP,EAAQ,QACxC,OAAOtoC,EAAO04C,WAAWh5C,EAAQ,EAAG,EACxC,GAAC,CAAA67B,IAAA,SAAA77B,MAED,SAAON,GACH,QAASA,EAAOu5C,WACpB,KAACwB,CAAA,CAjBqB,CAAQzD,ICRlC,MAAM,GAA+B76C,QAAQ,8B,waCU7C,IAAau+C,GAAkB,SAAA5B,GAAAnI,EAAA+J,EAAA5B,GAAA,IAAAlI,EAAA+J,GAAAD,GAC3B,SAAAA,EAAY9zC,EAAcqwC,GAAiB,OAAAjM,EAAA,KAAA0P,GAAA9J,EAAAl0C,KAAA,KAClCkK,EAAMA,EAAMqwC,GAAW,EAChC,CAeC,OAfA9L,EAAAuP,EAAA,EAAA7e,IAAA,eAAA77B,MAED,WACI,MAAO,IACX,GAAC,CAAA67B,IAAA,SAAA77B,MAED,SAAOM,EAAgBN,GAInB,OAHAA,EAAQynC,GAAaznC,GACRM,EAAO04C,WAAWh5C,EAAMc,QAC3BR,EAAOS,WAAWf,EAEhC,GAAC,CAAA67B,IAAA,SAAA77B,MAED,SAAON,GACH,OAAOA,EAAOO,UAAUP,EAAO06C,aAAa,EAChD,KAACM,CAAA,CAlB0B,CAAQ1D,IAwB1B4D,GAAW,SAAAC,GAAAlK,EAAAiK,EAAAC,GAAA,IAAAC,EAAAH,GAAAC,GACpB,SAAAA,EAAY3D,GAAiB,OAAAjM,EAAA,KAAA4P,GAAAE,EAAAp+C,KAAA,KACnB,QAASu6C,EACnB,CAIC,OAJA9L,EAAAyP,EAAA,EAAA/e,IAAA,SAAA77B,MAED,SAAON,GACH,OAAOmoC,GAAOkT,GAAAC,EAAAJ,EAAA/7C,WAAA,eAAAnC,KAAA,KAAcgD,GAChC,KAACk7C,CAAA,CAPmB,CAAQF,ICpBhC,IAAaO,GAAgB,SAAAnC,GAAAnI,EAAAsK,EAAAnC,GAAA,I,IAAAlI,G,EAAAqK,E,+YAGzB,SAAAA,EAAY3C,EAAcrB,GAAiB,IAAAxa,EAAAuO,EAAA,KAAAiQ,GACvC,IAAI97C,EAAO,QAAU2+B,OAAOwa,GAE0C,OADtE7b,EAAAmU,EAAAl0C,KAAA,KAAMyC,EAAMA,EAAM83C,GAAW,GAAO9G,EAAAW,EAAArU,GAAA,eACpC0I,GAAgB2L,EAAArU,GAAwB,CAAE6b,KAAAA,GAAQ,CAAEA,KAAM,WAAY7b,CAC1E,CAcC,OAdA0O,EAAA8P,EAAA,EAAApf,IAAA,eAAA77B,MAED,WACI,MAAQ,qEAAsEwnC,UAAU,EAAG,EAAgB,EAAZ,KAAK8Q,KACxG,GAAC,CAAAzc,IAAA,SAAA77B,MAED,SAAOM,EAAgBsoC,GACnB,IAAIrnB,EAAOkmB,GAAa2Q,GAAAA,YAAkBxP,EAAQ,KAAKhiC,OAEvD,OADI2a,EAAKzgB,SAAW,KAAKw3C,MAAQ,KAAKS,YAAY,wBAAyBnQ,GACpEtoC,EAAOS,WAAWwgB,EAC7B,GAAC,CAAAsa,IAAA,SAAA77B,MAED,SAAON,GACH,OAAOmoC,GAAQnoC,EAAOO,UAAU,KAAKq4C,MACzC,KAAC2C,CAAA,CArBwB,CAAQjE,ICXrC,IAAMkE,GAAQ,IAAI1V,WAAW,IAKhB2V,GAAU,SAAArC,GAAAnI,EAAAwK,EAAArC,GAAA,I,IAAAlI,G,EAAAuK,E,+YAEnB,SAAAA,EAAYlE,GAAiB,OAAAjM,EAAA,KAAAmQ,GAAAvK,EAAAl0C,KAAA,KACnB,OAAQ,GAAIu6C,GAAW,EACjC,CAcC,OAdA9L,EAAAgQ,EAAA,EAAAtf,IAAA,eAAA77B,MAED,WACI,OAAO,IACX,GAAC,CAAA67B,IAAA,SAAA77B,MAED,SAAOM,EAAgBN,GAEnB,OADa,MAATA,GAAiB,KAAK+4C,YAAY,WAAY/4C,GAC3CM,EAAOS,WAAWm6C,GAC7B,GAAC,CAAArf,IAAA,SAAA77B,MAED,SAAON,GAEH,OADAA,EAAOO,UAAU,GACV,IACX,KAACk7C,CAAA,CAlBkB,CAAQnE,ICI/B,IAAMxO,GAAO5C,OAAO,GACd6C,GAAO7C,OAAO,GACdwV,GAAiBxV,OAAO,sEAKjByV,GAAY,SAAAvC,GAAAnI,EAAA0K,EAAAvC,GAAA,I,IAAAlI,G,EAAAyK,E,+YAIrB,SAAAA,EAAY/C,EAAcH,EAAiBlB,GAAiB,IAAAxa,EAAAuO,EAAA,KAAAqQ,GACxD,IAAMl8C,GAASg5C,EAAS,MAAO,QAAkB,EAAPG,EAGmD,OAF7F7b,EAAAmU,EAAAl0C,KAAA,KAAMyC,EAAMA,EAAM83C,GAAW,GAAO9G,EAAAW,EAAArU,GAAA,eAAA0T,EAAAW,EAAArU,GAAA,iBAEpC0I,GAAgB2L,EAAArU,GAAoB,CAAE6b,KAAAA,EAAMH,OAAAA,GAAU,CAAEG,KAAM,SAAUH,OAAQ,YAAa1b,CACjG,CAgCC,OAhCA0O,EAAAkQ,EAAA,EAAAxf,IAAA,eAAA77B,MAED,WACI,OAAO,CACX,GAAC,CAAA67B,IAAA,SAAA77B,MAED,SAAOM,EAAgBsoC,GACnB,IAAI5oC,EAAQ8oC,GAAUsP,GAAAA,YAAkBxP,EAAQ,KAAKhiC,OAGjD00C,EAAepS,GAAKkS,GAA2B,EAAX5F,IACxC,GAAI,KAAK2C,OAAQ,CACb,IAAIoD,EAASrS,GAAKoS,EAA2B,EAAZ,KAAKhD,KAAY,IAC9Ct4C,EAAQu7C,GAAUv7C,IAAUu7C,EAAS9S,MACrC,KAAKsQ,YAAY,sBAAuBnQ,GAE5C5oC,EAAQ2oC,GAAO3oC,EAAO,EAAIw1C,G,MACnBx1C,EAAQwoC,IAAQxoC,EAAQkpC,GAAKoS,EAA0B,EAAZ,KAAKhD,QACvD,KAAKS,YAAY,sBAAuBnQ,GAG5C,OAAOtoC,EAAO04C,WAAWh5C,EAC7B,GAAC,CAAA67B,IAAA,SAAA77B,MAED,SAAON,GACH,IAAIM,EAAQkpC,GAAKxpC,EAAOu5C,YAAyB,EAAZ,KAAKX,MAM1C,OAJI,KAAKH,SACLn4C,E/BpBN,SAAmB4oC,EAAsBC,GAC3C,IAAM7oC,EAAQopC,GAAQR,EAAQ,SACxBG,EAAQnD,OAAOhX,GAAUia,EAAQ,UAOvC,OALAxC,GAAQrmC,GAAS+oC,IAAWP,GAAM,WAAY,gBAAiB,CAC3DzB,UAAW,WAAYkC,MAAO,WAAYjpC,MAAO4oC,IAIjD5oC,GAAU+oC,EAAQN,OAENzoC,GADEyoC,IAAQM,GAASN,IACFA,IAG1BzoC,CACX,C+BKoBw7C,CAASx7C,EAAmB,EAAZ,KAAKs4C,OAG1Bt4C,CACX,KAACq7C,CAAA,CAzCoB,CAAQrE,ICRjC,IAAayE,GAAY,SAAAZ,GAAAlK,EAAA8K,EAAAZ,GAAA,I,IAAAjK,G,EAAA6K,E,+YAErB,SAAAA,EAAYxE,GAAiB,OAAAjM,EAAA,KAAAyQ,GAAA7K,EAAAl0C,KAAA,KACnB,SAAUu6C,EACpB,CAYC,OAZA9L,EAAAsQ,EAAA,EAAA5f,IAAA,eAAA77B,MAED,WACI,MAAO,EACX,GAAC,CAAA67B,IAAA,SAAA77B,MAED,SAAOM,EAAgBsoC,GACnB,OAAAmS,GAAAC,EAAAS,EAAA58C,WAAA,eAAAnC,KAAA,KAAoB4D,EAAQ8tC,GAAYgK,GAAAA,YAAkBxP,EAAQ,WACtE,GAAC,CAAA/M,IAAA,SAAA77B,MAED,SAAON,GACH,OAAO4uC,GAAYyM,GAAAC,EAAAS,EAAA58C,WAAA,eAAAnC,KAAA,KAAcgD,GACrC,KAAC+7C,CAAA,CAhBoB,CAAQf,ICCjC,IAAagB,GAAW,SAAA5C,GAAAnI,EAAA+K,EAAA5C,GAAA,I,IAAAlI,G,EAAA8K,E,+YAGpB,SAAAA,EAAYpC,EAAsBrC,GAAiB,IAAAxa,EAAAuO,EAAA,KAAA0Q,GAC/C,IAAIxE,GAAU,EACR1T,EAAuB,GAC7B8V,EAAOnD,SAAQ,SAACgD,GACRA,EAAMjC,UAAWA,GAAU,GAC/B1T,EAAMnC,KAAK8X,EAAMvyC,KACrB,IACA,IAAMA,EAAQ,SAAW48B,EAAMJ,KAAK,KAAO,IAGmC,OAD9E3G,EAAAmU,EAAAl0C,KAAA,KAAM,QAASkK,EAAMqwC,EAAWC,GAAS/G,EAAAW,EAAArU,GAAA,iBACzC0I,GAAgB2L,EAAArU,GAAmB,CAAE6c,OAAQvd,OAAOmR,OAAOoM,EAAO9Z,WAAY/C,CAClF,CAwCC,OAxCA0O,EAAAuQ,EAAA,EAAA7f,IAAA,eAAA77B,MAED,WACI,IAAMqlC,EAAc,GACpB,KAAKiU,OAAOnD,SAAQ,SAACgD,GACjB9T,EAAOhE,KAAK8X,EAAMC,eACtB,IAGA,IAAMuC,EAAc,KAAKrC,OAAOvU,QAAO,SAACC,EAAOmU,GAC3C,IAAMh6C,EAAOg6C,EAAMlC,UAKnB,OAJI93C,IACK6lC,EAAM7lC,KAAS6lC,EAAM7lC,GAAQ,GAClC6lC,EAAM7lC,MAEH6lC,CACX,GAAiC,IAcjC,OAXA,KAAKsU,OAAOnD,SAAQ,SAACgD,EAAclU,GAC/B,IAAI9lC,EAAOg6C,EAAMlC,UACZ93C,GAA8B,IAAtBw8C,EAAYx8C,KAEZ,WAATA,IAAqBA,EAAO,WAEZ,MAAhBkmC,EAAOlmC,KAEXkmC,EAAOlmC,GAAQkmC,EAAOJ,IAC1B,IAEOlJ,OAAOmR,OAAO7H,EACzB,GAAC,CAAAxJ,IAAA,SAAA77B,MAED,SAAOM,EAAgBsoC,GACnB,IAAM5oC,EAAQo4C,GAAAA,YAAkBxP,EAAQ,SACxC,OAAOyQ,GAAK/4C,EAAQ,KAAKg5C,OAAQt5C,EACrC,GAAC,CAAA67B,IAAA,SAAA77B,MAED,SAAON,GACH,OAAOu6C,GAAOv6C,EAAQ,KAAK45C,OAC/B,KAACoC,CAAA,CAtDmB,CAAQ1E,I,0SCyGhC,SAAS4E,GAAO5F,GACZ,IAAMtQ,EAAsB,IAAImW,IAEhC,OADA7F,EAAMG,SAAQ,SAACxU,GAAC,OAAK+D,EAAOyP,IAAIxT,EAAE,IAC3B5F,OAAOmR,OAAOxH,EACzB,CAGA,IAAMoW,GAAW,8DAGXC,IAFUH,GAAOE,GAASjc,MAAM,MAErB,4DAGXmc,IAFUJ,GAAOG,GAASlc,MAAM,MAEjB,2CACfoc,GAAcL,GAAOI,GAAanc,MAAM,MAMxCqc,GAAWN,GADC,CAAEG,GAAUC,GAHb,gBAGqCF,IAAW1Y,KAAK,KACpCvD,MAAM,MAGlCsc,GAAuC,CAC3C,IAAK,aAAc,IAAK,cACxB,IAAK,eAAgB,IAAK,gBAC1B,IAAK,QAAS,IAAK,MAIfC,GAAwB,IAAIC,OAAO,WACnCC,GAAoB,IAAID,OAAO,aAC/BE,GAAgB,IAAIF,OAAO,+BAG3BG,GAAU,IAAIH,OAAO,gCACrBI,GAAY,IAAIJ,OAAO,uDAAuD1E,GAAA,IAAAjN,QAAAgS,GAAA,IAAAhS,QAAAiS,GAAA,IAAAnM,QA8B9EoM,GAAW,WAOb,SAAAA,EAAYC,GAA4B7R,EAAA,KAAA4R,GAAAtF,GAAA,KAAAqF,IAAA1R,GAAA,KAAA0M,GAAA,CAAArS,UAAA,EAAAtlC,WAAA,IAAAirC,GAAA,KAAAyR,GAAA,CAAApX,UAAA,EAAAtlC,WAAA,IACpCkrC,GAAA,KAAIyM,GAAW,GACfzM,GAAA,KAAIwR,GAAWG,EAAOrd,QAC1B,CA2FC,OA3FA2L,EAAAyR,EAAA,EAAA/gB,IAAA,SAAAK,IAND,WAAuB,OAAAkP,GAAO,KAAIuM,GAAU,GAAC,CAAA9b,IAAA,SAAAK,IAC7C,WAAuB,OAAOkP,GAAA,KAAIsR,IAAS57C,OAAMsqC,GAAG,KAAIuM,GAAU,GAAC,CAAA9b,IAAA,QAAA77B,MAOnE,WAAuB,OAAO,IAAI48C,EAAWxR,GAAC,KAAIsR,IAAW,GAAC,CAAA7gB,IAAA,QAAA77B,MAC9D,WAAgBkrC,GAAA,KAAIyM,GAAW,EAAG,GAAC,CAAA9b,IAAA,aAAA77B,MAanC,SAAW88C,GACP,IAAMC,EAAM,KAAKC,OACjB,GAAiB,YAAbD,EAAIn2C,OAAuBk2C,EAAQG,IAAIF,EAAIG,MAAS,MAAM,IAAIre,MAAK,oBAAAmB,OAAsB+c,EAAIG,OACjG,OAAO,KAAKC,MAAMD,IACtB,GAEA,CAAArhB,IAAA,UAAA77B,MACA,SAAQ4G,GACJ,GAAI,KAAKo2C,OAAOp2C,OAASA,EAAQ,MAAM,IAAIi4B,MAAK,YAAAmB,OAAcp5B,EAAK,UAAAo5B,OAAUiB,KAAKC,UAAU,KAAK8b,UACjG,OAAO,KAAKG,MAAMD,IACtB,GAEA,CAAArhB,IAAA,WAAA77B,MACA,WACI,IAAM+8C,EAAM,KAAKC,OACjB,GAAiB,eAAbD,EAAIn2C,KAAyB,MAAM,IAAIi4B,MAAM,aACjD,IAAM6G,EAAMqL,GAAG,KAAI4L,GAAAS,IAAA1gD,KAAJ,KAAqB0uC,GAAA,KAAIuM,IAAW,EAAGoF,EAAI1d,MAAQ,GAElE,OADA6L,GAAA,KAAIyM,GAAWoF,EAAI1d,MAAQ,GACpBqG,CACX,GAEA,CAAA7J,IAAA,YAAA77B,MACA,WACI,IAAM+8C,EAAM,KAAKC,OAEjB,GAAiB,eAAbD,EAAIn2C,KAAyB,MAAM,IAAIi4B,MAAM,aAIjD,IAFA,IAAM6G,EAA6B,GAE7B0F,GAAA,KAAIuM,IAAWoF,EAAI1d,MAAQ,GAAG,CAChC,IAAMge,EAAO,KAAKL,OAAOM,SACzB5X,EAAOrE,KAAI0P,GAAC,KAAI4L,GAAAS,IAAA1gD,KAAJ,KAAqB0uC,GAAA,KAAIuM,IAAW,EAAG0F,IACnDnS,GAAA,KAAIyM,GAAW0F,E,CAKnB,OAFAnS,GAAA,KAAIyM,GAAWoF,EAAI1d,MAAQ,GAEpBqG,CACX,GAEA,CAAA7J,IAAA,OAAA77B,MACA,WACI,GAAIorC,GAAA,KAAIuM,KAAYvM,GAAA,KAAIsR,IAAS57C,OAC7B,MAAM,IAAI+9B,MAAM,iBAEpB,OAAOuM,GAAA,KAAIsR,IAAAtR,GAAS,KAAIuM,IAC5B,GAEA,CAAA9b,IAAA,cAAA77B,MACA,SAAY88C,GACR,IAAMC,EAAM,KAAKQ,SAAS,WAC1B,OAAe,MAAPR,GAAeD,EAAQG,IAAIF,GAAQA,EAAK,IACpD,GAEA,CAAAlhB,IAAA,WAAA77B,MACA,SAAS4G,GACL,GAAoB,IAAhB,KAAK9F,OAAgB,OAAO,KAChC,IAAMi8C,EAAM,KAAKC,OACjB,OAAQD,EAAIn2C,OAASA,EAAQm2C,EAAIG,KAAM,IAC3C,GAEA,CAAArhB,IAAA,MAAA77B,MACA,WAAG,IAAAw9C,EACO9X,EAAS,KAAKsX,OAEpB,OADA9R,GAAA,KAAIyM,IAAA6F,EAAApS,GAAJ,KAAIuM,MAAA6F,IACG9X,CACX,GAAC,CAAA7J,IAAA,WAAA77B,MAED,WAEI,IADA,IAAM68C,EAAwB,GACrBxf,EAAC+N,GAAG,KAAIuM,IAAUta,EAAI+N,GAAA,KAAIsR,IAAS57C,OAAQu8B,IAAK,CACrD,IAAMogB,EAAQrS,GAAA,KAAIsR,IAASrf,GAC3Bwf,EAAOxb,KAAI,GAAArB,OAAKyd,EAAM72C,KAAK,KAAAo5B,OAAKyd,EAAMP,M,CAE1C,sBAAAld,OAAwB6c,EAAOzZ,KAAK,KAAK,IAC7C,KAACwZ,CAAA,CArGY,GAqGZ,SAAAQ,KAtF+C,IAAhClrC,EAAAuvB,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAe,EAAGrvB,EAAAqvB,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAa,EAC3C,OAAO,IAAImb,GAAYxR,GAAA,KAAIsR,IAASld,MAAMttB,EAAME,GAAI8wB,KAAI,SAACO,GACrD,OAAO1H,OAAOmR,OAAOnR,OAAOqK,OAAO,GAAK3C,EAAG,CACvCpE,MAAQoE,EAAEpE,MAAQntB,EAClBwrC,SAAWja,EAAEia,SAAWxrC,EACxBorC,SAAW7Z,EAAE6Z,SAAWprC,IAEhC,IACJ,CAkNJ,SAASyrC,GAAgBd,EAAqBC,GAE1C,IADA,IAAMc,EAAwB,IAAI/B,MACrB,CACT,IAAMgC,EAAUhB,EAAOU,SAAS,WAEhC,GAAe,MAAXM,GAAoBf,IAAYA,EAAQG,IAAIY,GAAa,MAG7D,GAFAhB,EAAOM,MAEHS,EAASX,IAAIY,GAAY,MAAM,IAAIhf,MAAK,uBAAAmB,OAAyBiB,KAAKC,UAAU2c,KACpFD,EAASzI,IAAI0I,E,CAGjB,OAAO9hB,OAAOmR,OAAO0Q,EACzB,CA6CA,IAAME,GAAiB,IAAIzB,OAAO,sBAElC,SAAS0B,GAAgBn3C,GACrB,IAAMy4B,EAAQz4B,EAAKy4B,MAAMod,IAEzB,GADAlW,GAAelH,EAAO,eAAgB,OAAQz4B,GACjC,SAATA,EAAmB,MAAO,UAC9B,GAAa,QAATA,EAAkB,MAAO,SAE7B,GAAIy4B,EAAM,GAAI,CAEV,IAAMv+B,EAAS4+B,SAASL,EAAM,IAC9BkH,GAA0B,IAAXzlC,GAAgBA,GAAU,GAAI,uBAAwB,OAAQ8F,E,MAE1E,GAAIy4B,EAAM,GAAI,CAEjB,IAAMiZ,EAAO5Y,SAASL,EAAM,IAC5BkH,GAAwB,IAAT+R,GAAcA,GAAQ,KAAQA,EAAO,GAAO,EAAG,wBAAyB,OAAQ1xC,E,CAGnG,OAAOA,CACX,CAGA,IAAM2jC,GAAS,GAeTyT,GAAW1hB,OAAM,IAAK,oBAEtB2hB,GAAoB,qBAQ1BC,GAAA,IAAA1N,QAGa2N,GAAS,WAkDlB,SAAAA,EAAYjX,EAAY/nC,EAAcyH,EAAc0zC,EAAkBzjB,EAAyBunB,EAA6CC,EAA4BC,GAMpK,GANmMtT,EAAA,KAAAmT,GAAA7G,GAAA,KAAA4G,IAAA/N,EAAA,oBAAAA,EAAA,oBAAAA,EAAA,wBAAAA,EAAA,uBAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,6BACnMnJ,GAAcE,EAAOqD,GAAQ,aAC7BxO,OAAOC,eAAe,KAAMgiB,GAAU,CAAEh+C,MAAOi+C,KAE3CG,IAAcA,EAAariB,OAAOmR,OAAOkR,EAAW5e,UAEvC,UAAb8a,GACA,GAAmB,MAAf+D,GAAwC,MAAjBC,EACvB,MAAM,IAAIzf,MAAM,SAEjB,GAAmB,MAAfwf,GAAwC,MAAjBC,EAC9B,MAAM,IAAIzf,MAAM,IAGpB,GAAiB,UAAbyb,GACA,GAAkB,MAAd8D,EAAsB,MAAM,IAAIvf,MAAM,SACvC,GAAkB,MAAduf,EACP,MAAM,IAAIvf,MAAM,IAGpBsG,GAA4B,KAAM,CAC9BhmC,KAAAA,EAAMyH,KAAAA,EAAM0zC,SAAAA,EAAUzjB,QAAAA,EAASunB,WAAAA,EAAYC,YAAAA,EAAaC,cAAAA,GAEhE,CA4KA,IAAAC,EA+GC,OAzRDpT,EAAAgT,EAAA,EAAAtiB,IAAA,SAAA77B,MAWA,SAAO24C,GAEH,GADc,MAAVA,IAAkBA,EAAS,WAChB,SAAXA,EAAmB,CACnB,IAAIjT,EAAc,CACd9+B,KAA0B,UAAlB,KAAK0zC,SAAwB,QAAS,KAAK1zC,KACnDzH,KAAO,KAAKA,WAAQyB,GAMxB,MAJ6B,kBAAlB,KAAKi2B,UAA0B6O,EAAO7O,QAAU,KAAKA,SAC5D,KAAK2nB,YACL9Y,EAAO0Y,WAAa,KAAKA,WAAWlb,KAAI,SAAC5E,GAAC,OAAK2C,KAAKwd,MAAMngB,EAAEqa,OAAOA,GAAQ,KAExE1X,KAAKC,UAAUwE,E,CAG1B,IAAIA,EAAS,GAwBb,OArBI,KAAKH,WACLG,GAAU,KAAK4Y,cAAc3F,OAAOA,GACpCjT,GAAM,IAAA1F,OAAU,KAAKqe,YAAc,EAAI,GAAIvgB,OAAO,KAAKugB,aAAY,MAE/D,KAAKG,WACU,YAAX7F,IAAwBjT,GAAU,KAAK9+B,MAC3C8+B,GAAU,IAAM,KAAK0Y,WAAWlb,KAC5B,SAACwb,GAAI,OAAKA,EAAK/F,OAAOA,EAAO,IAC/BvV,KAAiB,SAAXuV,EAAqB,KAAM,KAAO,KAE1CjT,GAAU,KAAK9+B,KAIR,YAAX+xC,KACqB,IAAjB,KAAK9hB,UAAoB6O,GAAU,YACxB,SAAXiT,GAAqB,KAAKx5C,OAC1BumC,GAAU,IAAM,KAAKvmC,OAItBumC,CACX,GAEA,CAAA7J,IAAA,UAAA77B,MAMA,WACI,MAA0B,UAAlB,KAAKs6C,QACjB,GAEA,CAAAze,IAAA,UAAA77B,MAMA,WACI,MAA0B,UAAlB,KAAKs6C,QACjB,GAEA,CAAAze,IAAA,cAAA77B,MAMA,WACI,OAAwB,MAAhB,KAAK62B,OACjB,GAEA,CAAAgF,IAAA,OAAA77B,MAIA,SAAKA,EAAY2+C,GACb,GAAI,KAAKpZ,UAAW,CAChB,IAAKlH,MAAMkH,QAAQvlC,GAAU,MAAM,IAAI6+B,MAAM,uBAC7C,IAA0B,IAAtB,KAAKwf,aAAsBr+C,EAAMc,SAAW,KAAKu9C,YACjD,MAAM,IAAIxf,MAAM,yBAEpB,IAAMpC,EAAQ,KACd,OAAOz8B,EAAMkjC,KAAI,SAAC9D,GAAC,OAAM3C,EAAM6hB,cAAcM,KAAKxf,EAAGuf,EAAQ,G,CAGjE,GAAI,KAAKH,UAAW,CAChB,IAAKngB,MAAMkH,QAAQvlC,GAAU,MAAM,IAAI6+B,MAAM,uBAC7C,GAAI7+B,EAAMc,SAAW,KAAKs9C,WAAWt9C,OACjC,MAAM,IAAI+9B,MAAM,yBAEpB,IAAMpC,EAAQ,KACd,OAAOz8B,EAAMkjC,KAAI,SAAC9D,EAAG/B,GAAC,OAAMZ,EAAM2hB,WAAW/gB,GAAGuhB,KAAKxf,EAAGuf,EAAQ,G,CAGpE,OAAOA,EAAQ,KAAK/3C,KAAM5G,EAC9B,GAAC,CAAA67B,IAAA,YAAA77B,OAgEDu+C,EAAAra,EAAAC,EAAAA,MAOA,SAAAC,EAAgBpkC,EAAY2+C,GAA+B,IAAAE,EAAAnZ,EAAA,OAAAvB,EAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAKpD,GAJGoa,EAAiC,GACjCnZ,EAAkB,CAAE1lC,GAC1B+wC,GAAA,KAAImN,GAAAY,IAAApiD,KAAJ,KAAgBmiD,EAAU7+C,EAAO2+C,GAAS,SAAC3+C,GACvC0lC,EAAO,GAAK1lC,CAChB,KACI6+C,EAAS/9C,OAAM,CAAAyjC,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAAUC,QAAQC,IAAIka,GAAS,cAAAta,EAAAO,OAAA,SAC3CY,EAAO,IAAE,wBAAAnB,EAAAW,OAAA,GAAAd,EAAA,UACnB,SAAAL,EAAAgb,GAAA,OAAAR,EAAAta,MAAA,KAAAxC,UAAA,KAED,EAAA5F,IAAA,OAAA77B,MAMA,SAAYd,EAAU8/C,GAClB,GAAIb,EAAUc,YAAY//C,GAAQ,OAAOA,EAEzC,GAAoB,iBAATA,EACP,OAAOi/C,EAAUjsC,KA5f7B,SAAagrC,GAYT,IAXA,IAAML,EAAuB,GAEvBlH,EAAa,SAACj1C,GAChB,IAAM+8C,EAASlW,EAAS2V,EAAKp8C,OAAUmgC,KAAKC,UAAUgc,EAAK3V,IAAU,OACrE,MAAM,IAAI1I,MAAK,iBAAAmB,OAAmByd,EAAM,QAAAzd,OAAQuH,EAAO,MAAAvH,OAAMt/B,GACjE,EAEIw+C,EAA0B,GAC1BC,EAAwB,GAExB5X,EAAS,EACNA,EAAS2V,EAAKp8C,QAAQ,CAGzB,IAAIs+C,EAAMlC,EAAK1V,UAAUD,GACrBlI,EAAQ+f,EAAI/f,MAAM+c,IAClB/c,IACAkI,GAAUlI,EAAM,GAAGv+B,OACnBs+C,EAAMlC,EAAK1V,UAAUD,IAGzB,IAAMkW,EAAQ,CAAE4B,MAAOH,EAASp+C,OAAQ48C,UAAW,EAAGJ,UAAW,EAAGje,OAAQ,EAAGz4B,KAAM,GAAIs2C,KAAM,GAAI3V,OAAAA,EAAQvnC,OAAQ,GACnH68C,EAAOxb,KAAKoc,GAEZ,IAAI72C,EAAQu1C,GAAaiD,EAAI,KAAO,GACpC,GAAIx4C,GAKA,GAJA62C,EAAM72C,KAAOA,EACb62C,EAAMP,KAAOkC,EAAI,GACjB7X,IAEa,eAAT3gC,EACAs4C,EAAS7d,KAAKwb,EAAO/7C,OAAS,GAC9Bq+C,EAAO9d,KAAKwb,EAAO/7C,OAAS,QAEzB,GAAY,eAAR8F,EACiB,IAApBs4C,EAASp+C,QAAgB60C,EAAW,4BAExC8H,EAAMpe,MAAQ6f,EAAS/B,MACHN,EAAOY,EAAMpe,OAASA,MAAQwd,EAAO/7C,OAAS,EAClE28C,EAAM4B,QAEN5B,EAAMC,SAAWyB,EAAOhC,MACJN,EAAOY,EAAMC,UAAYJ,SAAWT,EAAO/7C,OAAS,OAErE,GAAa,UAAT8F,EACP62C,EAAMC,SAAWyB,EAAOhC,MACJN,EAAOY,EAAMC,UAAYJ,SAAWT,EAAO/7C,OAAS,EACxEq+C,EAAO9d,KAAKwb,EAAO/7C,OAAS,QAEzB,GAAa,iBAAT8F,EACP62C,EAAM72C,KAAO,eAEV,GAAa,kBAATA,EAA0B,CAEjC,IAAI04C,EAAUzC,EAAOM,MAAgBD,KACrC,GAAIL,EAAO/7C,OAAS,GAAwC,WAAnC+7C,EAAOA,EAAO/7C,OAAS,GAAG8F,KAAmB,CAClE,IAAM5G,EAAS68C,EAAOM,MAAgBD,KACtCoC,EAASt/C,EAAQs/C,EACGzC,EAAOA,EAAO/7C,OAAS,GAAKd,MAAQ4uB,GAAU5uB,E,CAEtE,GAAsB,IAAlB68C,EAAO/7C,QAAmD,YAAnC+7C,EAAOA,EAAO/7C,OAAS,GAAG8F,KACjD,MAAM,IAAIi4B,MAAM,2BAEAge,EAAOA,EAAO/7C,OAAS,GAAKo8C,MAAQoC,C,OAOhE,GADAjgB,EAAQ+f,EAAI/f,MAAMkd,IAClB,CAII,GAHAkB,EAAMP,KAAO7d,EAAM,GACnBkI,GAAUkW,EAAMP,KAAKp8C,OAEjBo7C,GAASe,IAAIQ,EAAMP,MAAO,CAC1BO,EAAM72C,KAAO,UACb,Q,CAGJ,GAAI62C,EAAMP,KAAK7d,MAAMod,IAAY,CAC7BgB,EAAM72C,KAAO,OACb,Q,CAGJ62C,EAAM72C,KAAO,I,KAdjB,CAmBA,KADAy4B,EAAQ+f,EAAI/f,MAAMid,KAQlB,MAAM,IAAIzd,MAAK,oBAAAmB,OAAsBiB,KAAKC,UAAUke,EAAI,IAAI,iBAAApf,OAAiBuH,IANzEkW,EAAMP,KAAO7d,EAAM,GACnBoe,EAAM72C,KAAO,SACb2gC,GAAUkW,EAAMP,KAAKp8C,M,EAO7B,OAAO,IAAI87C,GAAYC,EAAO3Z,KAAI,SAACO,GAAC,OAAK1H,OAAOmR,OAAOzJ,EAAE,IAC7D,CAuZkC8b,CAAIrgD,GAAM8/C,GAE7B,GAAI9/C,aAAe09C,GAAa,CACnC,IAAIh2C,EAAO,GAAI0zC,EAAW,GACtBkF,EAAiC,KAEjC7B,GAAgBz+C,EAAK08C,GAAO,CAAE,WAAYqB,IAAI,UAAY/9C,EAAIq+C,SAAS,eAEvEjD,EAAW,QACXkF,EAAQtgD,EAAIugD,YAAYvc,KAAI,SAACO,GAAC,OAAK0a,EAAUjsC,KAAKuxB,EAAE,IACpD78B,EAAI,SAAAo5B,OAAawf,EAAMtc,KAAI,SAAC5E,GAAC,OAAKA,EAAEqa,QAAQ,IAAEvV,KAAK,KAAK,MAIxDkX,EADA1zC,EAAOm3C,GAAgB7+C,EAAIwgD,QAAQ,SAQvC,IAHA,IAAIpB,EAAmC,KACnCD,EAA6B,KAE1Bn/C,EAAI4B,QAAU5B,EAAIq+C,SAAS,YAAY,CAC1C,IAAMoC,EAAUzgD,EAAIi+C,MACpBmB,EAAgB,IAAIH,EAAU5T,GAAQ,GAAI3jC,EAAM0zC,EAAU,KAAMkF,EAAOnB,EAAaC,GACpFD,EAAcsB,EAAQ3/C,MACtB4G,GAAQ+4C,EAAQzC,KAChB5C,EAAW,QACXkF,EAAQ,I,CAGZ,IAAI3oB,EAAU,KAEd,GADiB8mB,GAAgBz+C,EAAK+8C,IACzBgB,IAAI,WAAY,CACzB,IAAK+B,EAAgB,MAAM,IAAIngB,MAAM,IACrChI,GAAU,C,CAGd,IAAM13B,EAAQD,EAAIq+C,SAAS,MAAQr+C,EAAIi+C,MAAMD,KAAM,GAEnD,GAAIh+C,EAAI4B,OAAU,MAAM,IAAI+9B,MAAM,mBAElC,OAAO,IAAIsf,EAAU5T,GAAQprC,EAAMyH,EAAM0zC,EAAUzjB,EAAS2oB,EAAOnB,EAAaC,E,CAGpF,IAAMn/C,EAAOD,EAAIC,KACjBonC,IAAgBpnC,GAA0B,iBAAVA,GAAsBA,EAAKkgC,MAAMmd,IAC7D,eAAgB,WAAYr9C,GAEhC,IAAI03B,EAAU33B,EAAI23B,QACH,MAAXA,IACA0P,GAAeyY,EAAc,8BAA+B,cAAe9/C,EAAI23B,SAC/EA,IAAYA,GAGhB,IAAIjwB,EAAO1H,EAAI0H,KAEXg5C,EAAah5C,EAAKy4B,MAAMye,IAC5B,GAAI8B,EAAY,CACZ,IAAMvB,EAAc3e,SAASkgB,EAAW,IAAM,MACxCtB,EAAgBH,EAAUjsC,KAAK,CACjCtL,KAAMg5C,EAAW,GACjBxB,WAAYl/C,EAAIk/C,aAGpB,OAAO,IAAID,EAAU5T,GAAQprC,GAAQ,GAAIyH,EAAM,QAASiwB,EAAS,KAAMwnB,EAAaC,E,CAGxF,GAAa,UAAT13C,GAAoBA,EAAKysC,WAAW,WAAyBzsC,EAAKysC,WAAW,KAAmB,CAChG,IAAMmM,EAA2B,MAAlBtgD,EAAIk/C,WAAsBl/C,EAAIk/C,WAAWlb,KAAI,SAAC5E,GAAM,OAAK6f,EAAUjsC,KAAKosB,EAAE,IAAG,KAG5F,OAFc,IAAI6f,EAAU5T,GAAQprC,GAAQ,GAAIyH,EAAM,QAASiwB,EAAS2oB,EAAO,KAAM,K,CAOzF,OAFA54C,EAAOm3C,GAAgB7+C,EAAI0H,MAEpB,IAAIu3C,EAAU5T,GAAQprC,GAAQ,GAAIyH,EAAMA,EAAMiwB,EAAS,KAAM,KAAM,KAC9E,GAEA,CAAAgF,IAAA,cAAA77B,MAGA,SAAmBA,GACf,OAAQA,GAASA,EAAMg+C,MAAcC,EACzC,KAACE,CAAA,CApWiB,GA4WtB,SAAAW,GArLeD,EAAgC7+C,EAAY2+C,EAAiCkB,GAEpF,GAAI,KAAKta,UAAW,CAChB,IAAKlH,MAAMkH,QAAQvlC,GAAU,MAAM,IAAI6+B,MAAM,uBAC7C,IAA0B,IAAtB,KAAKwf,aAAsBr+C,EAAMc,SAAW,KAAKu9C,YACjD,MAAM,IAAIxf,MAAM,yBAEpB,IAAMihB,EAAY,KAAKxB,cAEjB5Y,EAAS1lC,EAAMw/B,QAOrB,OANAkG,EAAOyQ,SAAQ,SAACn2C,EAAOilC,GACnB8L,GAAA+O,EAAS5B,GAAAY,IAAApiD,KAATojD,EAAqBjB,EAAU7+C,EAAO2+C,GAAS,SAAC3+C,GAC5C0lC,EAAOT,GAASjlC,CACpB,GACJ,SACA6/C,EAASna,E,CAIb,GAAI,KAAK8Y,UAAW,CAChB,IAGI9Y,EAHE0Y,EAAa,KAAKA,WAIxB,GAAI/f,MAAMkH,QAAQvlC,GACd0lC,EAAS1lC,EAAMw/B,YAEZ,CACH,GAAa,MAATx/B,GAAmC,WAAlB2jC,EAAO3jC,GACxB,MAAM,IAAI6+B,MAAM,uBAGpB6G,EAAS0Y,EAAWlb,KAAI,SAAC6c,GACrB,IAAKA,EAAM5gD,KAAQ,MAAM,IAAI0/B,MAAM,mDACnC,KAAMkhB,EAAM5gD,QAAQa,GAChB,MAAM,IAAI6+B,MAAK,+BAAAmB,OAAiC+f,EAAM5gD,OAE1D,OAAOa,EAAM+/C,EAAM5gD,KACvB,G,CAGJ,GAAIumC,EAAO5kC,SAAW,KAAKs9C,WAAWt9C,OAClC,MAAM,IAAI+9B,MAAM,yBASpB,OANA6G,EAAOyQ,SAAQ,SAACn2C,EAAOilC,GAAS,IAAA+a,EAC5BjP,GAAAiP,EAAA5B,EAAWnZ,GAAMiZ,GAAAY,IAAApiD,KAAAsjD,EAAYnB,EAAU7+C,EAAO2+C,GAAS,SAAC3+C,GACpD0lC,EAAOT,GAASjlC,CACpB,GACJ,SACA6/C,EAASna,E,CAIb,IAAMA,EAASiZ,EAAQ,KAAK/3C,KAAM5G,GAC9B0lC,EAAOua,KACPpB,EAASxd,KAAK6C,EAAAC,EAAAA,MAAC,SAAA+b,IAAA,OAAA/b,EAAAA,MAAA,SAAAgc,GAAA,cAAAA,EAAA3b,KAAA2b,EAAA1b,MAAA,OAA2B,OAA3B0b,EAAAC,GAAmBP,EAAQM,EAAA1b,KAAA,EAAOiB,EAAM,OAAAya,EAAAE,GAAAF,EAAAtb,MAAA,EAAAsb,EAAAC,IAAAD,EAAAE,IAAA,wBAAAF,EAAAjb,OAAA,GAAAgb,EAAA,IAAzChc,IAEd2b,EAASna,EAEjB,C,+GC1tBJ,IAAM4a,GAAoC,IAAIv9C,IAC9Cu9C,GAAahY,IAAI,EAAM,iBACvBgY,GAAahY,IAAI,EAAM,gBACvBgY,GAAahY,IAAI,GAAM,YACvBgY,GAAahY,IAAI,GAAM,kBACvBgY,GAAahY,IAAI,GAAM,oBACvBgY,GAAahY,IAAI,GAAM,oBACvBgY,GAAahY,IAAI,GAAM,mBACvBgY,GAAahY,IAAI,GAAM,qBACvBgY,GAAahY,IAAI,GAAM,iBACvBgY,GAAahY,IAAI,GAAM,+BAEvB,IAAMiY,GAAiB,IAAIlE,OAAO,mBAC5BmE,GAAkB,IAAInE,OAAO,qBAG/BoE,GAAgC,KAoEpCC,GAAA,IAAAlQ,QAIamQ,GAAQ,oBAAAA,I,QAAA3V,EAAA,KAAA2V,G,mHAAA,K,EAAAD,I,QAAA,CAwGhB,OAxGgBvV,EAAAwV,EAAA,EAAA9kB,IAAA,kBAAA77B,MAkDjB,SAAgBwjC,GAAwC,IAAA/G,EAAA,KAC9C6c,EAAuB9V,EAAMN,KAAI,SAACt8B,GAAI,OAAAmqC,GAAKtU,EAAIikB,GAAAE,IAAAlkD,KAAJ+/B,EAAe0hB,GAAAA,KAAev3C,GAAK,IAEpF,OADc,IAAI80C,GAAWpC,EAAQ,KACxBF,cACjB,GAEA,CAAAvd,IAAA,SAAA77B,MAKA,SAAOwjC,EAA0C6B,GAA0B,IAAAuR,EAAA,KACvEpQ,GAAoBnB,EAAOvkC,OAAQ0iC,EAAM1iC,OAAQ,gCAEjD,IAAMw4C,EAAS9V,EAAMN,KAAI,SAACt8B,GAAI,OAAAmqC,GAAK6F,EAAI8J,GAAAE,IAAAlkD,KAAJk6C,EAAeuH,GAAAA,KAAev3C,GAAK,IAChEuyC,EAAS,IAAIuC,GAAWpC,EAAQ,KAEhCh5C,EAAS,IAAI+2C,GAEnB,OADA8B,EAAMxc,OAAOr8B,EAAQ+kC,GACd/kC,EAAOihB,IAClB,GAEA,CAAAsa,IAAA,SAAA77B,MAOA,SAAOwjC,EAA0CjiB,EAAiBw2B,GAAe,IAAAN,EAAA,KACvE6B,EAAuB9V,EAAMN,KAAI,SAACt8B,GAAI,OAAAmqC,GAAK0G,EAAIiJ,GAAAE,IAAAlkD,KAAJ+6C,EAAe0G,GAAAA,KAAev3C,GAAK,IAEpF,OADc,IAAI80C,GAAWpC,EAAQ,KACxB3b,OAAO,IAAIka,GAAOt2B,EAAMw2B,GACzC,IAEA,EAAAlc,IAAA,kBAAA77B,MAKA,WAII,OAHoB,MAAhBygD,KACAA,GAAe,IAAIE,GAEhBF,EACX,GAEA,CAAA5kB,IAAA,0BAAA77B,MAKA,SAA+B6gD,EAA6BC,EAAiEv/B,GACzH,OA5KR,SAAiCs/B,EAA6BC,EAAiEv/B,EAAwBw/B,GACnJ,IAAIrgD,EAAU,sBAEVstC,EAAwB,KAExBgT,EAAuE,KAE3E,GAAIz/B,EAAM,CACN7gB,EAAU,qBAEV,IAAMjB,EAAQs6B,GAASxY,GAGvB,GAFAA,EAAOsmB,GAAQtmB,GAEM,IAAjB9hB,EAAMqB,OACNJ,GAAW,oDACXstC,EAAS,sBAEN,GAAIvuC,EAAMqB,OAAS,IAAO,EAC7BJ,GAAW,uDAER,GAAmC,eAA/BmnC,GAAQpoC,EAAM+/B,MAAM,EAAG,IAE9B,IAEIwhB,EAAS,CACLpM,UAAW,gBACXz1C,KAAM,QACN42C,KAAM,CAJV/H,EAAS+S,EAASpjB,OAAO,CAAE,UAAYl+B,EAAM+/B,MAAM,IAAI,KAMvD9+B,GAAO,KAAAs/B,OAAUiB,KAAKC,UAAU8M,G,CAElC,MAAOpK,GACLljC,GAAW,iD,MAGZ,GAAmC,eAA/BmnC,GAAQpoC,EAAM+/B,MAAM,EAAG,IAE9B,IACI,IAAMt3B,EAAOohC,OAAOyX,EAASpjB,OAAO,CAAE,WAAal+B,EAAM+/B,MAAM,IAAI,IACnEwhB,EAAS,CACLpM,UAAW,iBACXz1C,KAAM,QACN42C,KAAM,CAAE7tC,IAEZ8lC,EAAM,gBAAAhO,OAAoBsgB,GAAapkB,IAAIh0B,IAAS,UAAU,KAAA83B,OAAK93B,EAAK,KACxExH,GAAO,KAAAs/B,OAAUgO,E,CACnB,MAAOpK,GACLljC,GAAW,gC,MAGfA,GAAW,yB,CAInB,IAAMugD,EAAwC,CAC1C7uC,GAAK0uC,EAAG1uC,GAAK9Q,GAAWw/C,EAAG1uC,IAAK,KAChCmP,KAAOu/B,EAAGv/B,MAAQ,MAItB,OAFIu/B,EAAG5uC,OAAQ+uC,EAAY/uC,KAAO5Q,GAAWw/C,EAAG5uC,OAEzC6zB,GAAUrlC,EAAS,iBAAkB,CACxCmgD,OAAAA,EAAQt/B,KAAAA,EAAMysB,OAAAA,EAAQiT,YAAAA,EAAaC,WAzDpB,KAyDgCF,OAAAA,GAEvD,CA6GeG,CAAwBN,EAAQC,EAAIv/B,EAAMo/B,EAASS,kBAC9D,KAACT,CAAA,CAxGgB,GAyGpB,SAAAC,GAvGab,GAAgB,IAAAsB,EAAA,KACtB,GAAItB,EAAMxa,UACN,OAAO,IAAIgV,GAAUxJ,GAAC,KAAI2P,GAAAE,IAAAlkD,KAAJ,KAAeqjD,EAAMzB,eAAgByB,EAAM1B,YAAa0B,EAAM5gD,MAGxF,GAAI4gD,EAAMvB,UACN,OAAO,IAAI9C,GAAWqE,EAAM3B,WAAWlb,KAAI,SAAC5E,GAAC,OAAAyS,GAAKsQ,EAAIX,GAAAE,IAAAlkD,KAAJ2kD,EAAe/iB,EAAC,IAAIyhB,EAAM5gD,MAGhF,OAAQ4gD,EAAMzF,UACV,IAAK,UACD,OAAO,IAAIzB,GAAakH,EAAM5gD,MAClC,IAAK,OACD,OAAO,IAAIs7C,GAAasF,EAAM5gD,MAClC,IAAK,SACD,OAAO,IAAIs8C,GAAYsE,EAAM5gD,MACjC,IAAK,QACD,OAAO,IAAIy7C,GAAWmF,EAAM5gD,MAChC,IAAK,GACD,OAAO,IAAIg8C,GAAU4E,EAAM5gD,MAInC,IAAIkgC,EAAQ0gB,EAAMn5C,KAAKy4B,MAAMmhB,IAC7B,GAAInhB,EAAO,CACP,IAAIiZ,EAAO5Y,SAASL,EAAM,IAAM,OAGhC,OAFAkH,GAAwB,IAAT+R,GAAcA,GAAQ,KAAQA,EAAO,GAAO,EACvD,WAAajZ,EAAM,GAAK,cAAe,QAAS0gB,GAC7C,IAAI1E,GAAY/C,EAAO,EAAiB,QAAbjZ,EAAM,GAAe0gB,EAAM5gD,K,CAKjE,GADAkgC,EAAQ0gB,EAAMn5C,KAAKy4B,MAAMkhB,IACd,CACP,IAAIjI,EAAO5Y,SAASL,EAAM,IAE1B,OADAkH,GAAwB,IAAT+R,GAAcA,GAAQ,GAAI,uBAAwB,QAASyH,GACnE,IAAI9E,GAAgB3C,EAAMyH,EAAM5gD,K,CAG3ConC,IAAe,EAAO,eAAgB,OAAQwZ,EAAMn5C,KACxD,CChHH,SAEc06C,GAAYvd,EAAAgb,GAAA,OAAAwC,GAAAtd,MAAA,KAAAxC,UAAA,CAS3B,SAAA8f,KAFC,OAEDA,GAAArd,EAAAC,EAAAA,MATA,SAAAC,EAA4BgB,EAAaoc,GAA+B,IAAA9b,EAAA,OAAAvB,EAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC/C+c,EAAO,OAI3B,OAHa,OADR9b,EAAMnB,EAAAM,OACqB,+CAAXa,IAClBW,GAA0B,iBAAZjB,EAAsB,oBAAqB,oBAAqB,CAAEplC,MAAOolC,IACvFmB,IAAe,EAAO,gEAAiE,SAAUnB,IACpGb,EAAAO,OAAA,SACMxjC,GAAWokC,IAAO,wBAAAnB,EAAAW,OAAA,GAAAd,EAAA,MAC5BH,MAAA,KAAAxC,UAAA,CAuCK,SAAUggB,GAAerc,EAAqBsc,GAEhD,MAAuB,iBAAZtc,EACHA,EAAO/F,MAAM,qBAA+B/9B,GAAW8jC,IAE3DiB,GAAmB,MAAZqb,EAAkB,qCACrB,wBAAyB,CAAE3a,UAAW,gBAEnCua,GAAalc,EAAQsc,EAASC,YAAYvc,MA3F3BplC,EA6FDolC,IA5FqB,mBAAtBplC,EAAMsB,WA6FnBggD,GAAalc,EAAQA,EAAO9jC,cAE5B8jC,GAAkC,mBAAjBA,EAAO6a,KACxBqB,GAAalc,EAAQA,QAGhCmB,IAAe,EAAO,gCAAiC,SAAUnB,GApG/D,IAAwBplC,CAqG9B,CCnHO,IAQM4hD,GAAwB,8B,oqCCArC,IAAMC,GAAU,IAAIrc,WAAW,IAC/Bqc,GAAQxZ,KAAK,GAEb,IAAMyZ,GAAQlc,QAAQ,GAChB4C,GAAO5C,OAAO,GACd6C,GAAO7C,OAAO,GACdwV,GAAiBxV,OAAO,sEA0DxBmc,GAAU9X,GAAQxB,GAAM,IACxBuZ,GAAW/X,GAAQzB,GAAM,IAEzByZ,GAA2C,CAC7C9iD,KAAM,SACNm0B,QAAS,SACTsY,QAAS,UACTsW,kBAAmB,UACnB5U,KAAM,WAGJ6U,GAAkC,CACpC,OAAQ,UAAW,UAAW,oBAAqB,QAGvD,SAASC,GAAYvmB,GACjB,OAAO,SAAU77B,GAEb,OADAumC,GAAiC,iBAAXvmC,EAAmB,4BAAAggC,OAA+BiB,KAAKC,UAAUrF,IAAK,UAAAmE,OAAenE,GAAQ77B,GAC5GA,CACX,CACJ,CAEA,IAAMqiD,GAAoD,CACtDljD,KAAMijD,GAAY,QAClB9uB,QAAS8uB,GAAY,WACrBxW,QAAS,SAAShD,GACd,IAAM5oC,EAAQ8oC,GAAUF,EAAQ,kBAEhC,OADArC,GAAevmC,GAAS,EAAG,mBAAoB,iBAAkB4oC,GAC7DU,OAAOgZ,cAActiD,GAAiBspC,OAAOtpC,GtC+HnD,SAAqBA,GAEvB,IADA,IAAI0lC,EAASmC,GAAQF,GAAY3nC,GAASA,EAAOkqC,GAAUlqC,IAAQwnC,UAAU,GACtE9B,EAAO2N,WAAW,MAAQ3N,EAASA,EAAO8B,UAAU,GAE3D,MADe,KAAX9B,IAAiBA,EAAS,KACvB,KAAOA,CAClB,CsCnIe6c,CAAWviD,EACtB,EACAkiD,kBAAmB,SAASliD,GACxB,IACI,OAAOsB,GAAWtB,GAAOgwC,a,CAC3B,MAAOpM,GAAO,CAChB2C,IAAe,EAAK,2CAA8C,2BAA4BvmC,EAClG,EACAstC,KAAM,SAASttC,GACX,IAAMP,EAAQs6B,GAAS/5B,EAAO,eAE9B,OADAumC,GAAgC,KAAjB9mC,EAAMqB,OAAa,8BAAiC,cAAed,GAC3E6nC,GAAQpoC,EACnB,GAGJ,SAAS+iD,GAAe57C,GAGhB,IAAMy4B,EAAQz4B,EAAKy4B,MAAM,kBACzB,GAAIA,EAAO,CACP,IAAM8Y,EAAuB,KAAb9Y,EAAM,GAEhB0J,EAAQrJ,SAASL,EAAM,IAAM,OACnCkH,GAAewC,EAAQ,GAAM,GAAe,IAAVA,GAAeA,GAAS,MAAoB,MAAZ1J,EAAM,IAAcA,EAAM,KAAOvB,OAAOiL,IAAS,wBAAyB,OAAQniC,GAEpJ,IAAM67C,EAAcvZ,GAAKkS,GAAgBjD,EAAUpP,EAAQ,EAAIA,GACzD2Z,EAAcvK,GAAWsK,EAAcha,IAAQqZ,GAAQtZ,GAE7D,OAAO,SAASI,GACZ,IAAM5oC,EAAQ8oC,GAAUF,EAAQ,SAIhC,OAFArC,GAAevmC,GAAS0iD,GAAe1iD,GAASyiD,EAAW,2BAAAziB,OAA8Bp5B,GAAS,QAAS5G,GAEpGiqC,GAAQkO,EAASxP,GAAO3oC,EAAO,KAAMA,EAAO,GACvD,C,CAMJ,IAAMq/B,EAAQz4B,EAAKy4B,MAAM,gBACzB,GAAIA,EAAO,CACP,IAAM0J,EAAQrJ,SAASL,EAAM,IAG7B,OAFAkH,GAAyB,IAAVwC,GAAeA,GAAS,IAAM1J,EAAM,KAAOvB,OAAOiL,GAAQ,sBAAuB,OAAQniC,GAEjG,SAAS5G,GAGZ,OADAumC,GADcxM,GAAS/5B,GACFc,SAAWioC,EAAK,sBAAA/I,OAAyBp5B,GAAS,QAAS5G,GArFhG,SAAqBA,GACjB,IAAMP,EAAQs6B,GAAS/5B,GACjB2iD,EAAYljD,EAAMqB,OAAS,GACjC,OAAI6hD,EACO3iB,GAAO,CAAEvgC,EAAOoiD,GAAQriB,MAAMmjB,KAElC9a,GAAQpoC,EACnB,CA+EuBmjD,CAAY5iD,EACvB,C,CAIR,OAAQ4G,GACJ,IAAK,UAAW,OAAO,SAAS5G,GAC5B,OAAOmoC,GAAa7mC,GAAWtB,GAAQ,GAC3C,EACA,IAAK,OAAQ,OAAO,SAASA,GACzB,OAAUA,EAAmB+hD,GAAVC,EACvB,EACA,IAAK,QAAS,OAAO,SAAShiD,GAC1B,OAAOkvC,GAAUlvC,EACrB,EACA,IAAK,SAAU,OAAO,SAASA,GAC3B,OAAO+T,GAAG/T,EACd,EAGJ,OAAO,IACX,CAEA,SAAS6iD,GAAW1jD,EAAc2jD,GAC9B,SAAA9iB,OAAW7gC,EAAK,KAAA6gC,OAAK8iB,EAAO5f,KAAI,SAAA+I,GAAA,IAAG9sC,EAAI8sC,EAAJ9sC,KAAU,OAAA8sC,EAAJrlC,KAAmB,IAAMzH,CAAI,IAAGikC,KAAK,KAAK,IACvF,CAEA,IAAA2f,GAAA,IAAArY,QAAAsY,GAAA,IAAAtY,QAAAuY,GAAA,IAAAvY,QAAAwY,GAAA,IAAA1S,QAQa2S,GAAgB,WA+BzB,SAAAA,EAAY3f,G,MAA4CwH,EAAA,KAAAmY,G,GAAA,K,EAAAD,I,MAAA,MA9BxD/S,EAAA,2BAAAlF,GAAA,KAAA8X,GAAA,CAAAzd,UAAA,EAAAtlC,WAAA,IAAAirC,GAAA,KAAA+X,GAAA,CAAA1d,UAAA,EAAAtlC,WAAA,IAAAirC,GAAA,KAAAgY,GAAA,CAAA3d,UAAA,EAAAtlC,WAAA,IA+BIkrC,GAAA,KAAI6X,GAAU9hB,KAAKC,UAAUsC,IAC7B0H,GAAA,KAAI8X,GAAc,IAAIjgD,KACtBmoC,GAAA,KAAI+X,GAAiB,IAAIlgD,KAGzB,IAAMqgD,EAAkC,IAAIrgD,IAGtCsgD,EAAsC,IAAItgD,IAG1CugD,EAAqC,IAAIvgD,IAQ/C,IAAK,IAAM5D,KANX48B,OAAOsI,KAAKb,GAAO2S,SAAQ,SAACvvC,GACxBw8C,EAAM9a,IAAI1hC,EAAM,IAAIi1C,KACpBwH,EAAQ/a,IAAI1hC,EAAM,IAClB08C,EAAShb,IAAI1hC,EAAM,IAAIi1C,IAC3B,IAEmBrY,EAAO,CACtB,IAE+BmG,EAFzBgS,EAA2B,IAAIE,IAAMjS,EAAAC,GAEvBrG,EAAMrkC,IAAK,IAA/B,IAAAyqC,EAAAE,MAAAH,EAAAC,EAAArO,KAAAwO,MAAiC,KAAtBwZ,EAAK5Z,EAAA3pC,MAGZumC,IAAgBoV,EAAYsB,IAAIsG,EAAMpkD,MAAK,2BAAA6gC,OAA8BiB,KAAKC,UAAUqiB,EAAMpkD,MAAM,QAAA6gC,OAAQiB,KAAKC,UAAU/hC,IAAU,QAASqkC,GAC9ImY,EAAYxG,IAAIoO,EAAMpkD,MAGtB,IAAMm7C,EAAkBiJ,EAAM38C,KAAKy4B,MAAM,uBAAyB,IAAM,KACxEkH,GAAe+T,IAAan7C,EAAI,8BAAA6gC,OAAiCiB,KAAKC,UAAUoZ,IAAc,QAAS9W,GAGvFgf,GAAelI,KAG/B/T,GAAe8c,EAAQpG,IAAI3C,GAAS,gBAAAta,OAAmBiB,KAAKC,UAAUoZ,IAAc,QAAS9W,GAG5F6f,EAAQnnB,IAAIoe,GAA4BjZ,KAAKliC,GAC7CikD,EAAMlnB,IAAI/8B,GAAsBg2C,IAAImF,G,CACxC,OAAAtQ,GAAAJ,EAAAJ,EAAAQ,EAAA,SAAAJ,EAAAjpC,GAAA,C,CAIL,IAAM6iD,EAAenlB,MAAMnsB,KAAKmxC,EAAQhf,QAAQof,QAAO,SAACloB,GAAC,OAAmD,IAA5C8nB,EAAQnnB,IAAIX,GAAqBz6B,MAAY,IAC7GylC,GAAuC,IAAxBid,EAAa1iD,OAAc,uBAAwB,QAAS0iC,GAC3E+C,GAAuC,IAAxBid,EAAa1iD,OAAY,4CAAAk/B,OAA+CwjB,EAAatgB,KAAI,SAACO,GAAC,OAAMxC,KAAKC,UAAUuC,EAAE,IAAGL,KAAK,OAAU,QAASI,GAE5J2B,GAAmC,KAAM,CAAEue,YAAaF,EAAa,KAGrE,SAASG,EAAc/8C,EAAcg9C,GACjCrd,IAAgBqd,EAAM3G,IAAIr2C,GAAK,8BAAAo5B,OAAiCiB,KAAKC,UAAUt6B,IAAU,QAAS48B,GAElGogB,EAAMzO,IAAIvuC,GAAM,IAEoCi9C,EAFpCC,EAAAja,GAEKuZ,EAAMlnB,IAAIt1B,IAAqB,IAApD,IAAAk9C,EAAAha,MAAA+Z,EAAAC,EAAAvoB,KAAAwO,MAAsD,KAA3Cga,EAAKF,EAAA7jD,MACZ,GAAKqjD,EAAQpG,IAAI8G,GAAjB,CAGAJ,EAAcI,EAAOH,GAErB,IAC2BI,EAD3BC,EAAApa,GACsB+Z,GAAK,IAA3B,IAAAK,EAAAna,MAAAka,EAAAC,EAAA1oB,KAAAwO,MAA6B,KAAlBma,EAAOF,EAAAhkD,MACbsjD,EAASpnB,IAAIgoB,GAAyB/O,IAAI4O,E,CAC9C,OAAA/Z,GAAAia,EAAAza,EAAAQ,EAAA,SAAAia,EAAAtjD,GAAA,C,EACJ,OAAAqpC,GAAA8Z,EAAAta,EAAAQ,EAAA,SAAA8Z,EAAAnjD,GAAA,CAEDijD,EAAK,OAAQh9C,EACjB,CACA+8C,CAAc,KAAKD,YAAa,IAAI7H,KAEpC,IACoCsI,EADpCC,EAAAva,GAC4ByZ,GAAQ,IAApC,IAAAc,EAAAta,MAAAqa,EAAAC,EAAA7oB,KAAAwO,MAAsC,KAAAsa,EAAAjQ,GAAA+P,EAAAnkD,MAAA,GAAzBb,EAAIklD,EAAA,GAAE/b,EAAG+b,EAAA,GACZ5kB,EAAKpB,MAAMnsB,KAAKo2B,GACtB7I,EAAGoG,OACHuF,GAAA,KAAI4X,IAAY1a,IAAInpC,EAAM0jD,GAAW1jD,EAAMqkC,EAAMrkC,IAASsgC,EAAGyD,KAAI,SAACO,GAAC,OAAKof,GAAWpf,EAAGD,EAAMC,GAAG,IAAEL,KAAK,I,CACzG,OAAA4G,GAAAoa,EAAA5a,EAAAQ,EAAA,SAAAoa,EAAAzjD,GAAA,CACL,CAiMA,IAAA2jD,EA+GC,OA9SDnZ,EAAAgY,EAAA,EAAAtnB,IAAA,QAAAK,IAjGA,WACI,OAAO+E,KAAKwd,MAAKrT,GAAC,KAAI2X,IAC1B,GAAC,CAAAlnB,IAAA,aAAA77B,MAkGD,SAAW4G,GACP,IAAI29C,EAAUnZ,GAAA,KAAI6X,IAAe/mB,IAAIt1B,GAKrC,OAJK29C,IACDA,E,4GAAOxT,CAAG,KAAImS,GAAAsB,IAAA9nD,KAAJ,KAAiBkK,GAC3BwkC,GAAA,KAAI6X,IAAe3a,IAAI1hC,EAAM29C,IAE1BA,CACX,GAAC,CAAA1oB,IAAA,aAAA77B,MAgDD,SAAWb,GACP,IAAMumC,EAAS0F,GAAA,KAAI4X,IAAY9mB,IAAI/8B,GAEnC,OADAonC,GAAeb,EAAM,iBAAA1F,OAAoBiB,KAAKC,UAAU/hC,IAAU,OAAQA,GACnEumC,CACX,GAEA,CAAA7J,IAAA,aAAA77B,MAGA,SAAW4G,EAAc5G,GACrB,OAAO,KAAKykD,WAAW79C,EAAhB,CAAsB5G,EACjC,GAEA,CAAA67B,IAAA,aAAA77B,MAGA,SAAWb,EAAca,GACrB,OAAOkvC,GAAU,KAAKwV,WAAWvlD,EAAMa,GAC3C,GAEA,CAAA67B,IAAA,SAAA77B,MAGA,SAAOA,GACH,OAAO,KAAK0kD,WAAW,KAAKhB,YAAa1jD,EAC7C,GAEA,CAAA67B,IAAA,OAAA77B,MAGA,SAAKA,GACD,OAAO,KAAK2kD,WAAW,KAAKjB,YAAa1jD,EAC7C,GAEA,CAAA67B,IAAA,SAAA77B,MAGA,SAAO4G,EAAc5G,EAAY62C,GAA0C,IAAApa,EAAA,KAInE,GADgB+lB,GAAe57C,GAChB,OAAOiwC,EAASjwC,EAAM5G,GAIzC,IAAMq/B,EAAQz4B,EAAKy4B,MAAM,yBACzB,GAAIA,EAEA,OADAkH,IAAgBlH,EAAM,IAAMK,SAASL,EAAM,MAAQr/B,EAAMc,OAAM,0CAAAk/B,OAA6CN,SAASL,EAAM,KAAQ,QAASr/B,GACrIA,EAAMkjC,KAAI,SAAC9D,GAAM,OAAK3C,EAAKmoB,OAAOvlB,EAAM,GAAID,EAAGyX,EAAS,IAInE,IAAMiM,EAAS,KAAKtf,MAAM58B,GAC1B,GAAIk8C,EACA,OAAOA,EAAO/d,QAAO,SAACC,EAAK6f,GAAoB,IAAhB1lD,EAAI0lD,EAAJ1lD,KAAMyH,EAAIi+C,EAAJj+C,KAEjC,OADAo+B,EAAM7lC,GAAQs9B,EAAKmoB,OAAOh+C,EAAM5G,EAAMb,GAAO03C,GACtC7R,CACX,GAAwB,IAG5BuB,IAAe,EAAK,iBAAAvG,OAAoBp5B,GAAS,OAAQA,EAC7D,GAEA,CAAAi1B,IAAA,QAAA77B,MAOA,SAAMA,EAA4B62C,GAC9B,OAAO,KAAK+N,OAAO,KAAKlB,YAAa1jD,EAAO62C,EAChD,IAEA,EAAAhb,IAAA,OAAA77B,MAGA,SAAYwjC,GACR,OAAO,IAAI2f,EAAiB3f,EAChC,GAEA,CAAA3H,IAAA,iBAAA77B,MAGA,SAAsBwjC,GAClB,OAAO2f,EAAiBjxC,KAAKsxB,GAAOkgB,WACxC,GAEA,CAAA7nB,IAAA,aAAA77B,MAGA,SAAkBb,EAAcqkC,EAA8CxjC,GAC1E,OAAOmjD,EAAiBjxC,KAAKsxB,GAAOmhB,WAAWxlD,EAAMa,EACzD,GAEA,CAAA67B,IAAA,aAAA77B,MAGA,SAAkB8kD,GACd,IAAMC,EAAsC,GAC5C,IAAK,IAAM5lD,KAAQ2lD,EACf,GAA2C,MAAjBA,EAAQ3lD,GAAlC,CACA,IAAMyH,EAAOq7C,GAAiB9iD,GAC9BonC,GAAe3/B,EAAI,kCAAAo5B,OAAqCiB,KAAKC,UAAU/hC,IAAU,SAAU2lD,GAC3FC,EAAa1jB,KAAK,CAAEliC,KAAAA,EAAMyH,KAAAA,G,CAO9B,OAJAm+C,EAAalf,MAAK,SAAClK,EAAG0c,GAClB,OAAO8J,GAAiBtkB,QAAQlC,EAAEx8B,MAAQgjD,GAAiBtkB,QAAQwa,EAAEl5C,KACzE,IAEOgkD,EAAiBwB,WAAW,eAAgB,CAAEK,aAAcD,GAAgBD,EACvF,GAEA,CAAAjpB,IAAA,SAAA77B,MAGA,SAAc8kD,EAAyBthB,EAA8CxjC,GACjF,OAAOggC,GAAO,CACV,SACAmjB,EAAiB8B,WAAWH,GAC5B3B,EAAiBjxC,KAAKsxB,GAAOlV,KAAKtuB,IAE1C,GAEA,CAAA67B,IAAA,OAAA77B,MAGA,SAAY8kD,EAAyBthB,EAA8CxjC,GAC/E,OAAOkvC,GAAUiU,EAAiBxmB,OAAOmoB,EAAQthB,EAAOxjC,GAC5D,GAGA,CAAA67B,IAAA,eAAA77B,OAAAskD,EAAApgB,EAAAC,EAAAA,MAIA,SAAAC,EAA0B0gB,EAAyBthB,EAA8CxjC,EAA4B2hD,GAA8C,IAAA9lB,EAAAqpB,EAAAX,EAAAplD,EAAA,OAAAglC,EAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAKvK,IAAW5I,KAHXipB,EAAS/oB,OAAOqK,OAAO,GAAK0e,GAIkB,MAAhBA,EAAQjpB,WACDipB,EAAQjpB,GAKvCqpB,EAAmC,GAGrCJ,EAAO5C,oBAAsBxa,GAAYod,EAAO5C,kBAAmB,MACnEgD,EAASJ,EAAO5C,mBAAqB,OAInCqC,EAAUpB,EAAiBjxC,KAAKsxB,IAG9B2hB,MAAMnlD,GAAO,SAAC4G,EAAc5G,GAIhC,MAHa,YAAT4G,GAAuB8gC,GAAY1nC,EAAO,MAC1CklD,EAASllD,GAAS,MAEfA,CACX,IAEAukC,EAAA6b,GAAAjc,EAAAA,KACmB+gB,GAAQ,WAAA3gB,EAAA8b,GAAA9b,EAAA6b,MAAArW,KAAA,CAAAxF,EAAAE,KAAA,SAAZ,OAAJtlC,EAAIolC,EAAA8b,GAAArgD,MAAAukC,EAAAE,KAAA,GACYkd,EAAYxiD,GAAK,QAAxC+lD,EAAS/lD,GAAKolC,EAAAM,KAAAN,EAAAE,KAAA,gBAYf,OARCqgB,EAAO5C,mBAAqBgD,EAASJ,EAAO5C,qBAC5C4C,EAAO5C,kBAAoBgD,EAASJ,EAAO5C,oBAI/CliD,EAAQukD,EAAQY,MAAMnlD,GAAO,SAAC4G,EAAc5G,GACxC,MAAa,YAAT4G,GAAsBs+C,EAASllD,GAAiBklD,EAASllD,GACtDA,CACX,IAAGukC,EAAAO,OAAA,SAEI,CAAEggB,OAAAA,EAAQ9kD,MAAAA,IAAO,yBAAAukC,EAAAW,OAAA,GAAAd,EAAA,KAC3B,SAAAL,EAAAgb,EAAAqG,EAAAC,GAAA,OAAAf,EAAArgB,MAAA,KAAAxC,UAAA,IAED,CAAA5F,IAAA,aAAA77B,MAIA,SAAkB8kD,EAAyBthB,EAA8CxjC,GAErFmjD,EAAiB8B,WAAWH,GAG5B,IAAMQ,EAAoC,GACpCC,EAAoD,GAE1DpD,GAAiBhM,SAAQ,SAACh3C,GACtB,IAAMa,EAAc8kD,EAAQ3lD,GACf,MAATa,IACJslD,EAAanmD,GAAQkjD,GAAaljD,GAAMa,GACxCulD,EAAYlkB,KAAK,CAAEliC,KAAAA,EAAMyH,KAAMq7C,GAAiB9iD,KACpD,IAEA,IAAMolD,EAAUpB,EAAiBjxC,KAAKsxB,GAEhCgiB,EAAkBzpB,OAAOqK,OAAO,GAAK5C,GAQ3C,OAPA+C,GAA+C,MAAhCif,EAAgBR,aAAsB,2CAA4C,qBAAsBxhB,GAEvHgiB,EAAgBR,aAAeO,EAG/BhB,EAAQ5nB,OAAO38B,GAER,CACHwjC,MAAOgiB,EACPV,OAAQQ,EACR5B,YAAaa,EAAQb,YACrBhjD,QAAS6jD,EAAQY,MAAMnlD,GAAO,SAAC4G,EAAc5G,GAGzC,GAAI4G,EAAKy4B,MAAM,eACX,OAAOwI,GAAQ9N,GAAS/5B,IAI5B,GAAI4G,EAAKy4B,MAAM,UACX,OAAOyJ,GAAU9oC,GAAOm/B,WAG5B,OAAQv4B,GACJ,IAAK,UACD,OAAO5G,EAAMgwC,cACjB,IAAK,OACD,QAAShwC,EACb,IAAK,SAED,OADAumC,GAAiC,iBAAXvmC,EAAqB,iBAAkB,QAASA,GAC/DA,EAGfumC,IAAe,EAAO,mBAAoB,OAAQ3/B,EACtD,IAER,KAACu8C,CAAA,CA/ZwB,GAka7B,SAAAqB,GArSgB59C,GAAY,IAAAgwC,EAAA,KAIV2N,EAAU/B,GAAe57C,GAC/B,GAAI29C,EAAW,OAAOA,EAI1B,IAAMllB,EAAQz4B,EAAKy4B,MAAM,yBACzB,GAAIA,EAAO,CACP,IAAM6kB,EAAU7kB,EAAM,GAChBomB,EAAa,KAAKhB,WAAWP,GACnC,OAAO,SAAClkD,GACJumC,IAAgBlH,EAAM,IAAMK,SAASL,EAAM,MAAQr/B,EAAMc,OAAM,0CAAAk/B,OAA6CN,SAASL,EAAM,KAAQ,QAASr/B,GAE5I,IAAI0lC,EAAS1lC,EAAMkjC,IAAIuiB,GAKvB,OAJIra,GAAAwL,EAAIoM,IAAY/F,IAAIiH,KACpBxe,EAASA,EAAOxC,IAAIgM,KAGjBA,GAAUlP,GAAO0F,GAC5B,C,CAIJ,IAAMod,EAAS,KAAKtf,MAAM58B,GAC1B,GAAIk8C,EAAQ,CACR,IAAM4C,EAAc3xC,GAAGq3B,GAAA,KAAI4X,IAAY9mB,IAAIt1B,IAC3C,OAAO,SAAC5G,GACJ,IAAMqlC,EAASyd,EAAO5f,KAAI,SAAAyiB,GAAmB,IAAhBxmD,EAAIwmD,EAAJxmD,KAAMyH,EAAI++C,EAAJ/+C,KACzB8+B,EAASkR,EAAK6N,WAAW79C,EAAhBgwC,CAAsB52C,EAAMb,IAC3C,OAAIisC,GAAAwL,EAAIoM,IAAY/F,IAAIr2C,GAAgBsoC,GAAUxJ,GAC3CA,CACX,IAEA,OADAL,EAAOugB,QAAQF,GACR1lB,GAAOqF,EAClB,C,CAGJkB,IAAe,EAAK,iBAAAvG,OAAoBp5B,GAAS,OAAQA,EAC7D,CC5VJ,SAASi/C,GAAY7lD,GAEjB,IADA,IAAI0lC,EAAS1lC,EAAMm/B,SAAS,IACrBuG,EAAO5kC,OAAS,GAAK4kC,EAAS,IAAMA,EAC3C,MAAO,KAAOA,CAClB,CAEA,SAASogB,GAAkBvkC,EAAkBgmB,EAAgBzmC,GAEzD,IADA,IAAI4kC,EAAS,EACJrI,EAAI,EAAGA,EAAIv8B,EAAQu8B,IACxBqI,EAAmB,IAATA,EAAgBnkB,EAAKgmB,EAASlK,GAE5C,OAAOqI,CACX,CAOA,SAASqgB,GAAgBxkC,EAAkBgmB,EAAgBye,EAAqBllD,GAG5E,IAFA,IAAM4kC,EAAS,GAERsgB,EAAcze,EAAS,EAAIzmC,GAAQ,CACtC,IAAMmlD,EAAUC,GAAQ3kC,EAAMykC,GAE9BtgB,EAAOrE,KAAK4kB,EAAQvgB,QAGpBW,IADA2f,GAAeC,EAAQE,WACD5e,EAAS,EAAIzmC,EAAQ,uBAAwB,iBAAkB,CACjFgiC,OAAQvhB,EAAMzgB,OAAAA,EAAQymC,OAAAA,G,CAI9B,MAAO,CAAC4e,SAAW,EAAIrlD,EAAS4kC,OAAQA,EAC5C,CAGA,SAASwgB,GAAQ3kC,EAAkBgmB,GAC/BlB,GAAuB,IAAhB9kB,EAAKzgB,OAAc,iBAAkB,iBAAkB,CAC1DgiC,OAAQvhB,EAAMzgB,OAAQ,EAAGymC,OAAQ,IAGrC,IAAM6e,EAAc,SAAC7e,GACjBlB,GAAOkB,GAAUhmB,EAAKzgB,OAAQ,+BAAgC,iBAAkB,CAC5EgiC,OAAQvhB,EAAMzgB,OAAQygB,EAAKzgB,OAAQymC,OAAAA,GAE3C,EAGA,GAAIhmB,EAAKgmB,IAAW,IAAM,CACtB,IAAM8e,EAAe9kC,EAAKgmB,GAAU,IACpC6e,EAAY7e,EAAS,EAAI8e,GAEzB,IAAMvlD,EAASglD,GAAkBvkC,EAAMgmB,EAAS,EAAG8e,GAGnD,OAFAD,EAAY7e,EAAS,EAAI8e,EAAevlD,GAEjCilD,GAAgBxkC,EAAMgmB,EAAQA,EAAS,EAAI8e,EAAcA,EAAevlD,E,CAE5E,GAAIygB,EAAKgmB,IAAW,IAAM,CAC7B,IAAMzmC,EAASygB,EAAKgmB,GAAU,IAG9B,OAFA6e,EAAY7e,EAAS,EAAIzmC,GAElBilD,GAAgBxkC,EAAMgmB,EAAQA,EAAS,EAAGzmC,E,CAE9C,GAAIygB,EAAKgmB,IAAW,IAAM,CAC7B,IAAM8e,EAAe9kC,EAAKgmB,GAAU,IACpC6e,EAAY7e,EAAS,EAAI8e,GAEzB,IAAMvlD,EAASglD,GAAkBvkC,EAAMgmB,EAAS,EAAG8e,GAInD,OAHAD,EAAY7e,EAAS,EAAI8e,EAAevlD,GAGjC,CAAEqlD,SAAW,EAAIE,EAAevlD,EAAS4kC,OADjCmC,GAAQtmB,EAAKie,MAAM+H,EAAS,EAAI8e,EAAc9e,EAAS,EAAI8e,EAAevlD,I,CAGtF,GAAIygB,EAAKgmB,IAAW,IAAM,CAC7B,IAAMzmC,EAASygB,EAAKgmB,GAAU,IAI9B,OAHA6e,EAAY7e,EAAS,EAAIzmC,GAGlB,CAAEqlD,SAAW,EAAIrlD,EAAS4kC,OADlBmC,GAAQtmB,EAAKie,MAAM+H,EAAS,EAAGA,EAAS,EAAIzmC,I,CAI/D,MAAO,CAAEqlD,SAAU,EAAGzgB,OAAQmgB,GAAYtkC,EAAKgmB,IACnD,CAKM,SAAU+e,GAAUzZ,GACtB,IAAMtrB,EAAOwY,GAAS8S,EAAO,QACvBoZ,EAAUC,GAAQ3kC,EAAM,GAE9B,OADAglB,GAAe0f,EAAQE,WAAa5kC,EAAKzgB,OAAQ,oCAAqC,OAAQ+rC,GACvFoZ,EAAQvgB,MACnB,C,2GC/FA,SAAS6gB,GAAgBvmD,GAErB,IADA,IAAM0lC,EAAS,GACR1lC,GACH0lC,EAAOkgB,QAAgB,IAAR5lD,GACfA,IAAU,EAEd,OAAO0lC,CACX,CAEA,SAAS8gB,GAAQ3pD,GACb,GAAIwhC,MAAMkH,QAAQ1oC,GAAS,CACvB,IAAI4pD,EAAyB,GAK7B,GAJA5pD,EAAOs5C,SAAQ,SAAS4N,GACpB0C,EAAUA,EAAQzmB,OAAOwmB,GAAQzC,GACrC,IAEI0C,EAAQ3lD,QAAU,GAElB,OADA2lD,EAAQb,QAAQ,IAAOa,EAAQ3lD,QACxB2lD,EAGX,IAAM3lD,EAASylD,GAAgBE,EAAQ3lD,QAGvC,OAFAA,EAAO8kD,QAAQ,IAAO9kD,EAAOA,QAEtBA,EAAOk/B,OAAOymB,E,CAIzB,IAAMllC,EAAsB8c,MAAMx/B,UAAU2gC,MAAM9iC,KAAKq9B,GAASl9B,EAAQ,WAExE,GAAoB,IAAhB0kB,EAAKzgB,QAAgBygB,EAAK,IAAM,IAChC,OAAOA,EAEJ,GAAIA,EAAKzgB,QAAU,GAEtB,OADAygB,EAAKqkC,QAAQ,IAAOrkC,EAAKzgB,QAClBygB,EAGX,IAAMzgB,EAASylD,GAAgBhlC,EAAKzgB,QAGpC,OAFAA,EAAO8kD,QAAQ,IAAO9kD,EAAOA,QAEtBA,EAAOk/B,OAAOze,EACzB,CAEA,IAAMmlC,GAAU,mBAKV,SAAUC,GAAU9pD,GACtB,IAC+B8sC,EAD3BjE,EAAS,KAAKkE,E,65BAAAC,CACF2c,GAAQ3pD,IAAO,IAA/B,IAAA+sC,EAAAE,MAAAH,EAAAC,EAAArO,KAAAwO,MAAiC,KAAtB3K,EAACuK,EAAA3pC,MACR0lC,GAAUghB,GAAQtnB,GAAK,GACvBsG,GAAUghB,GAAY,GAAJtnB,E,CACrB,OAAA4K,GAAAJ,EAAAJ,EAAAQ,EAAA,SAAAJ,EAAAjpC,GAAA,CACD,OAAO+kC,CACX,CCzDA,SAASkhB,GAAaC,EAAcC,GAChC,MAAO,CACHznD,QAASiC,GAAWulD,GACpBC,YAAaA,EAAY5jB,KAAI,SAAC6jB,EAAY9hB,GAEtC,OADAsB,GAAemB,GAAYqf,EAAY,IAAK,eAAc,eAAA/mB,OAAkBiF,EAAM,KAAK8hB,GAChFA,EAAW/W,aACtB,IAER,CAKM,SAAUgX,GAAchnD,GAC1B,GAAIq+B,MAAMkH,QAAQvlC,GACd,OAA0FA,EAAOkjC,KAAI,SAACoF,EAAKrD,GACvG,OAAI5G,MAAMkH,QAAQ+C,IACd/B,GAA8B,IAAf+B,EAAIxnC,OAAc,mBAAkB,SAAAk/B,OAAYiF,EAAM,KAAKqD,GACnEse,GAAate,EAAI,GAAIA,EAAI,MAEpC/B,GAAsB,MAAP+B,GAA+B,WAAhB3E,EAAO2E,GAAmB,2BAA4B,QAAStoC,GACtF4mD,GAAate,EAAIjpC,QAASipC,EAAIwe,aACzC,IAGJvgB,GAAwB,MAATvmC,GAAmC,WAAlB2jC,EAAO3jC,GAAqB,sBAAuB,QAASA,GAE5F,IAAM0lC,EAAiE3J,OAAOsI,KAAKrkC,GAAOkjC,KAAI,SAAC2jB,GAC3F,IAAMC,EAAoC9mD,EAAM6mD,GAAM9hB,QAAO,SAACC,EAAO+hB,GAEjE,OADA/hB,EAAM+hB,IAAc,EACb/hB,CACX,GAAyB,IACzB,OAAO4hB,GAAaC,EAAM9qB,OAAOsI,KAAKyiB,GAAajhB,OACvD,IAEA,OADAH,EAAOG,MAAK,SAAClK,EAAG0c,GAAC,OAAM1c,EAAEt8B,QAAQ4nD,cAAc5O,EAAEh5C,QAAQ,IAClDqmC,CACX,C,qJCzBA,IAAM8C,GAAO5C,OAAO,GACduE,GAAOvE,OAAO,GACdwE,GAAQxE,OAAO,IACfyE,GAAQzE,OAAO,IACf0E,GAAQ1E,OAAO,IACfshB,GAActhB,OAAO,sEA+E3B,SAASuhB,GAAcnnD,GACnB,MAAc,OAAVA,EAAyB,KACtBsB,GAAWtB,EACtB,CAEA,SAASonD,GAAiBpnD,EAAY+/C,GAClC,IACI,OAAOiH,GAAchnD,E,CACvB,MAAO4jC,GACL2C,IAAe,EAAO3C,EAAMljC,QAASq/C,EAAO//C,E,CAEpD,CAEA,SAASqnD,GAAaze,EAAgBmX,GAClC,MAAe,OAAXnX,EAA0B,EACvBha,GAAUga,EAAQmX,EAC7B,CAEA,SAASuH,GAAW1e,EAAgBmX,GAChC,GAAe,OAAXnX,EAAmB,OAAOJ,GAC9B,IAAMxoC,EAAQ8oC,GAAUF,EAAQmX,GAEhC,OADAxZ,GAAevmC,GAASknD,GAAa,0BAA2BnH,EAAO//C,GAChEA,CACX,CAEA,SAASunD,GAAa3e,EAAsBzpC,GACxC,IAAMa,EAAQ8oC,GAAUF,EAAQ,SAC1BlD,EAASwE,GAAUlqC,GAEzB,OADAumC,GAAeb,EAAO5kC,QAAU,GAAE,wBAAAk/B,OAA4B7gC,GAASa,GAChE0lC,CACX,CAEA,SAAS8hB,GAAiBxnD,GACtB,OAAOgnD,GAAchnD,GAAOkjC,KAAI,SAACoF,GAAG,MAAK,CAAEA,EAAIjpC,QAASipC,EAAIwe,YAAa,GAC7E,CAoDA,SAASW,GAAiB3G,EAAiBjV,GACvC,IAAMiX,EAAqB,CACvByE,GAAazG,EAAG4G,OAAS,EAAG,SAC5BH,GAAazG,EAAG6G,UAAY,EAAG,YAC/BJ,GAAazG,EAAG8G,UAAY,EAAG,YACpB,MAAT9G,EAAG1uC,GAAc9Q,GAAWw/C,EAAG1uC,IAAK,KACtCm1C,GAAazG,EAAG9gD,OAAS,EAAG,SAC3B8gD,EAAGv/B,MAAQ,MAGZqqB,EAAUpD,GACd,GAAIsY,EAAGlV,SAAWpD,GAEdoD,EAAU9C,GAAUgY,EAAGlV,QAAS,cAIhCrF,IAAgBsF,GAAuB,MAAhBA,EAAIR,UAAoBQ,EAAIgc,gBAAkBjc,EAChE,4BAA6B,MAAOC,QAEtC,GAAIiV,EAAGlM,UAAW,CAErB,IAAMkT,EAAShH,EAAGlM,UAAUiT,cACd,MAAVC,IAAkBlc,EAAUkc,E,CAIpC,IAAKjc,EAQD,OANID,IAAYpD,KACZsa,EAAOzhB,KAAK6I,GAAU0B,IACtBkX,EAAOzhB,KAAK,MACZyhB,EAAOzhB,KAAK,OAGTslB,GAAU7D,GAQrB,IAAI1jB,EAAIwG,OAAO,GAAKiG,EAAIL,SAYxB,OAXII,IAAYpD,GACZpJ,EAAI2L,GAAAA,YAAsBa,EAASC,EAAIzM,GAChCwG,OAAOiG,EAAIzM,KAAOA,GACzBmH,IAAe,EAAO,4BAA6B,MAAOsF,GAI9DiX,EAAOzhB,KAAK6I,GAAU9K,IACtB0jB,EAAOzhB,KAAK6I,GAAU2B,EAAIxP,IAC1BymB,EAAOzhB,KAAK6I,GAAU2B,EAAI/B,IAEnB6c,GAAU7D,EACrB,CAEA,SAASiF,GAAmBjH,EAAqBgC,GAC7C,IAAItX,EACJ,IAEI,GAAgB,KADhBA,EAAU6b,GAAavE,EAAO,GAAI,aACD,IAAZtX,EAAiB,MAAM,IAAI3M,MAAM,c,CACxD,MAAO+E,GACL2C,IAAe,EAAO,kBAAmB,UAAWuc,EAAO,G,CAG/D,IAAMzmB,EAAI8L,GAAa2a,EAAO,GAAI,IAC5BhZ,EAAI3B,GAAa2a,EAAO,GAAI,IAE5BlO,EAAY7J,GAAAA,KAAe,CAAE1O,EAAAA,EAAGyN,EAAAA,EAAG0B,QAAAA,IACzCsV,EAAGlM,UAAYA,CACnB,CAkCA,SAASoT,GAAkBlH,EAAqBjV,GAC5C,IAAMiX,EAAqB,CACvByE,GAAazG,EAAGlV,SAAW,EAAG,WAC9B2b,GAAazG,EAAG4G,OAAS,EAAG,SAC5BH,GAAazG,EAAGmH,sBAAwB,EAAG,wBAC3CV,GAAazG,EAAGoH,cAAgB,EAAG,gBACnCX,GAAazG,EAAG8G,UAAY,EAAG,YACpB,MAAT9G,EAAG1uC,GAAc9Q,GAAWw/C,EAAG1uC,IAAK,KACtCm1C,GAAazG,EAAG9gD,OAAS,EAAG,SAC3B8gD,EAAGv/B,MAAQ,KACXimC,GAAiB1G,EAAGqH,YAAc,KASvC,OANItc,IACAiX,EAAOzhB,KAAKkmB,GAAa1b,EAAIL,QAAS,YACtCsX,EAAOzhB,KAAK6I,GAAU2B,EAAIxP,IAC1BymB,EAAOzhB,KAAK6I,GAAU2B,EAAI/B,KAGvB9J,GAAO,CAAE,OAAQ2mB,GAAU7D,IACtC,CA8BA,SAASsF,GAAkBtH,EAAqBjV,GAC5C,IAAMiX,EAAc,CAChByE,GAAazG,EAAGlV,SAAW,EAAG,WAC9B2b,GAAazG,EAAG4G,OAAS,EAAG,SAC5BH,GAAazG,EAAG6G,UAAY,EAAG,YAC/BJ,GAAazG,EAAG8G,UAAY,EAAG,YACpB,MAAT9G,EAAG1uC,GAAc9Q,GAAWw/C,EAAG1uC,IAAK,KACtCm1C,GAAazG,EAAG9gD,OAAS,EAAG,SAC3B8gD,EAAGv/B,MAAQ,KACXimC,GAAiB1G,EAAGqH,YAAc,KASvC,OANItc,IACAiX,EAAOzhB,KAAKkmB,GAAa1b,EAAIL,QAAS,kBACtCsX,EAAOzhB,KAAK6I,GAAU2B,EAAIxP,IAC1BymB,EAAOzhB,KAAK6I,GAAU2B,EAAI/B,KAGvB9J,GAAO,CAAE,OAAQ2mB,GAAU7D,IACtC,CAEA,IAAApX,GAAA,IAAAhB,QAAA2d,GAAA,IAAA3d,QAAAmC,GAAA,IAAAnC,QAAA4d,GAAA,IAAA5d,QAAA6d,GAAA,IAAA7d,QAAA8d,GAAA,IAAA9d,QAAA+d,GAAA,IAAA/d,QAAAge,GAAA,IAAAhe,QAAAie,GAAA,IAAAje,QAAAke,GAAA,IAAAle,QAAAme,GAAA,IAAAne,QAAAoe,GAAA,IAAApe,QAaalsC,GAAW,WA2KpB,SAAAA,IAAAwsC,EAAA,KAAAxsC,GAAAysC,GAAA,KAAAS,GAAA,CAAApG,UAAA,EAAAtlC,WAAA,IAAAirC,GAAA,KAAAod,GAAA,CAAA/iB,UAAA,EAAAtlC,WAAA,IAAAirC,GAAA,KAAA4B,GAAA,CAAAvH,UAAA,EAAAtlC,WAAA,IAAAirC,GAAA,KAAAqd,GAAA,CAAAhjB,UAAA,EAAAtlC,WAAA,IAAAirC,GAAA,KAAAsd,GAAA,CAAAjjB,UAAA,EAAAtlC,WAAA,IAAAirC,GAAA,KAAAud,GAAA,CAAAljB,UAAA,EAAAtlC,WAAA,IAAAirC,GAAA,KAAAwd,GAAA,CAAAnjB,UAAA,EAAAtlC,WAAA,IAAAirC,GAAA,KAAAyd,GAAA,CAAApjB,UAAA,EAAAtlC,WAAA,IAAAirC,GAAA,KAAA0d,GAAA,CAAArjB,UAAA,EAAAtlC,WAAA,IAAAirC,GAAA,KAAA2d,GAAA,CAAAtjB,UAAA,EAAAtlC,WAAA,IAAAirC,GAAA,KAAA4d,GAAA,CAAAvjB,UAAA,EAAAtlC,WAAA,IAAAirC,GAAA,KAAA6d,GAAA,CAAAxjB,UAAA,EAAAtlC,WAAA,IACIkrC,GAAA,KAAIQ,GAAS,MACbR,GAAA,KAAImd,GAAO,MACXnd,GAAA,KAAIod,GAAU,GACdpd,GAAA,KAAIqd,GAAa3iB,OAAO,IACxBsF,GAAA,KAAIsd,GAAa,MACjBtd,GAAA,KAAIud,GAAyB,MAC7Bvd,GAAA,KAAIwd,GAAiB,MACrBxd,GAAA,KAAI2B,GAAS,MACb3B,GAAA,KAAIyd,GAAU/iB,OAAO,IACrBsF,GAAA,KAAI0d,GAAYhjB,OAAO,IACvBsF,GAAA,KAAI2d,GAAQ,MACZ3d,GAAA,KAAI4d,GAAe,KACvB,CAoQC,OAlQD3d,EAAA3sC,EAAA,EAAAq9B,IAAA,OAAAK,IAtKA,WAA4B,OAAAkP,GAAO,KAAIM,GAAQ,EAACpD,IAChD,SAAStoC,GACL,OAAQA,GACJ,KAAK,KACDkrC,GAAA,KAAIQ,GAAS,MACb,MACJ,KAAK,EAAG,IAAK,SACTR,GAAA,KAAIQ,GAAS,GACb,MACJ,KAAK,EAAG,IAAK,SAAU,IAAK,WACxBR,GAAA,KAAIQ,GAAS,GACb,MACJ,KAAK,EAAG,IAAK,SAAU,IAAK,WACxBR,GAAA,KAAIQ,GAAS,GACb,MACJ,QACInF,IAAe,EAAO,+BAAgC,OAAQvmC,GAE1E,GAEA,CAAA67B,IAAA,WAAAK,IAGA,WACI,OAAQ,KAAKt1B,MACT,KAAK,EAAG,MAAO,SACf,KAAK,EAAG,MAAO,WACf,KAAK,EAAG,MAAO,WAGnB,OAAO,IACX,GAEA,CAAAi1B,IAAA,KAAAK,IAIA,WAA0B,OAAAkP,GAAO,KAAIid,GAAM,EAAC/f,IAC5C,SAAOtoC,GACHkrC,GAAA,KAAImd,GAAiB,MAATroD,EAAiB,KAAMsB,GAAWtB,GAClD,GAEA,CAAA67B,IAAA,QAAAK,IAGA,WAAsB,OAAAkP,GAAO,KAAIkd,GAAS,EAAChgB,IAC3C,SAAUtoC,GAAuBkrC,GAAA,KAAIod,GAAU15B,GAAU5uB,EAAO,SAAU,GAE1E,CAAA67B,IAAA,WAAAK,IAGA,WAAyB,OAAAkP,GAAO,KAAImd,GAAY,EAACjgB,IACjD,SAAatoC,GAAuBkrC,GAAA,KAAIqd,GAAazf,GAAU9oC,GAAQ,GAEvE,CAAA67B,IAAA,WAAAK,IAMA,WACI,IAAMl8B,EAAKorC,GAAG,KAAIod,IAClB,OAAa,MAATxoD,GAAgC,IAAd,KAAK4G,MAA4B,IAAd,KAAKA,KACvC5G,EAD6DwoC,EAExE,EAACF,IACD,SAAatoC,GACTkrC,GAAA,KAAIsd,GAAuB,MAATxoD,EAAiB,KAAM8oC,GAAU9oC,EAAO,YAC9D,GAEA,CAAA67B,IAAA,uBAAAK,IAIA,WACI,IAAMl8B,EAAKorC,GAAG,KAAIqd,IAClB,OAAa,MAATzoD,EACkB,IAAd,KAAK4G,KAAqB4hC,GACvB,KAEJxoC,CACX,EAACsoC,IACD,SAAyBtoC,GACrBkrC,GAAA,KAAIud,GAAmC,MAATzoD,EAAiB,KAAM8oC,GAAU9oC,EAAO,wBAC1E,GAEA,CAAA67B,IAAA,eAAAK,IAIA,WACI,IAAMl8B,EAAKorC,GAAG,KAAIsd,IAClB,OAAa,MAAT1oD,EACkB,IAAd,KAAK4G,KAAqB4hC,GACvB,KAEJxoC,CACX,EAACsoC,IACD,SAAiBtoC,GACbkrC,GAAA,KAAIwd,GAA2B,MAAT1oD,EAAiB,KAAM8oC,GAAU9oC,EAAO,gBAClE,GAEA,CAAA67B,IAAA,OAAAK,IAIA,WAAqB,OAAAkP,GAAO,KAAIyB,GAAQ,EAACvE,IACzC,SAAStoC,GAAoBkrC,GAAA,KAAI2B,GAAShF,GAAQ7nC,GAAQ,GAE1D,CAAA67B,IAAA,QAAAK,IAGA,WAAsB,OAAAkP,GAAO,KAAIud,GAAS,EAACrgB,IAC3C,SAAUtoC,GACNkrC,GAAA,KAAIyd,GAAU7f,GAAU9oC,EAAO,SACnC,GAEA,CAAA67B,IAAA,UAAAK,IAGA,WAAwB,OAAAkP,GAAO,KAAIwd,GAAW,EAACtgB,IAC/C,SAAYtoC,GAAuBkrC,GAAA,KAAI0d,GAAY9f,GAAU9oC,GAAQ,GAErE,CAAA67B,IAAA,YAAAK,IAGA,WAAoC,OAAOkP,GAAA,KAAIyd,KAAS,IAAM,EAACvgB,IAC/D,SAActoC,GACVkrC,GAAA,KAAI2d,GAAkB,MAAT7oD,EAAiB,KAAM+qC,GAAAA,KAAe/qC,GACvD,GAEA,CAAA67B,IAAA,aAAAK,IAMA,WACI,IAAMl8B,EAAQorC,GAAA,KAAI0d,KAAgB,KAClC,OAAa,MAAT9oD,EACkB,IAAd,KAAK4G,MAA4B,IAAd,KAAKA,KAAqB,GAC1C,KAEJ5G,CACX,EAACsoC,IACD,SAAetoC,GACXkrC,GAAA,KAAI4d,GAAyB,MAAT9oD,EAAiB,KAAMgnD,GAAchnD,GAC7D,GAAC,CAAA67B,IAAA,OAAAK,IAuBD,WACI,OAAsB,MAAlB,KAAK0Y,UAA4B,KAC9B1F,GAAU,KAAK6Z,WAC1B,GAEA,CAAAltB,IAAA,eAAAK,IAMA,WACI,OAAOgT,GAAU,KAAK8Z,mBAC1B,GAEA,CAAAntB,IAAA,OAAAK,IAGA,WACI,OAAsB,MAAlB,KAAK0Y,UAA4B,KAC9BW,GAAe,KAAK0T,aAAc,KAAKrU,UAClD,GAEA,CAAA/Y,IAAA,gBAAAK,IAGA,WACI,OAAsB,MAAlB,KAAK0Y,UAA4B,KAC9Bf,GAAAA,iBAA4B,KAAKoV,aAAc,KAAKrU,UAC/D,GAEA,CAAA/Y,IAAA,WAAA77B,MAMA,WAEI,OAAyB,MAAlB,KAAK40C,SAChB,GAEA,CAAA/Y,IAAA,aAAAK,IAMA,WAGI,OAFAmK,GAAyB,MAAlB,KAAKuO,UAAmB,6EAA8E,wBAAyB,CAAE7N,UAAW,gBAE3I,KAAKmiB,aACT,KAAK,EACD,OAAOzB,GAAiB,KAAM,KAAK7S,WACvC,KAAK,EACD,OAAOwT,GAAkB,KAAM,KAAKxT,WACxC,KAAK,EACD,OAAOoT,GAAkB,KAAM,KAAKpT,WAG5CvO,IAAO,EAAO,+BAAgC,wBAAyB,CAAEU,UAAW,eACxF,GAEA,CAAAlL,IAAA,qBAAAK,IAMA,WACI,OAAQ,KAAKgtB,aACT,KAAK,EACD,OAAOzB,GAAiB,MAC5B,KAAK,EACD,OAAOW,GAAkB,MAC7B,KAAK,EACD,OAAOJ,GAAkB,MAGjC3hB,IAAO,EAAO,+BAAgC,wBAAyB,CAAEU,UAAW,uBACxF,GAEA,CAAAlL,IAAA,YAAA77B,MAIA,WACI,OAAgB,KAAKmpD,aAAahM,KACtC,GAEA,CAAAthB,IAAA,aAAA77B,MAIA,WAGI,IAAMopD,EAA+B,MAAjB,KAAKzB,SACnB0B,EAA+B,MAArB,KAAKnB,cAAqD,MAA7B,KAAKD,qBAC5CqB,EAAoC,MAAnB,KAAKnB,WAMH,MAArB,KAAKD,cAAqD,MAA7B,KAAKD,sBAClC5hB,GAAO,KAAK6hB,cAAgB,KAAKD,qBAAsB,yCAA0C,WAAY,CAAEjoD,MAAO,OAO1HqmC,IAAQgjB,GAAyB,IAAd,KAAKziD,MAA4B,IAAd,KAAKA,KAAa,oEAAqE,WAAY,CAAE5G,MAAO,OAClJqmC,GAAqB,IAAd,KAAKz/B,OAAe0iD,EAAe,4CAA6C,WAAY,CAAEtpD,MAAO,OAE5G,IAAMwjC,EAAuB,GAwB7B,OArBiB,MAAb,KAAK58B,KACL48B,EAAMnC,KAAK,KAAKz6B,MAGZyiD,EACA7lB,EAAMnC,KAAK,GACJ+nB,GACP5lB,EAAMnC,KAAK,GACNioB,GAAiB9lB,EAAMnC,KAAK,IAC1BioB,GACP9lB,EAAMnC,KAAK,GACXmC,EAAMnC,KAAK,KAEXmC,EAAMnC,KAAK,GACXmC,EAAMnC,KAAK,GACXmC,EAAMnC,KAAK,IAInBmC,EAAMqC,OAECrC,CACX,GAEA,CAAA3H,IAAA,WAAA77B,MAOA,WACI,OAAsB,IAAd,KAAK4G,IACjB,GAEA,CAAAi1B,IAAA,WAAA77B,MAOA,WACI,OAAsB,IAAd,KAAK4G,IACjB,GAEA,CAAAi1B,IAAA,WAAA77B,MAOA,WACI,OAAsB,IAAd,KAAK4G,IACjB,GAEA,CAAAi1B,IAAA,QAAA77B,MAGA,WACI,OAAOxB,EAAY0T,KAAK,KAC5B,GAEA,CAAA2pB,IAAA,SAAA77B,MAGA,WACI,IAAM8pC,EAAI,SAAC1K,GACP,OAAS,MAALA,EAAoB,KACjBA,EAAED,UACb,EAEA,MAAO,CACHv4B,KAAM,KAAKA,KACXwL,GAAI,KAAKA,GAETmP,KAAM,KAAKA,KACXmmC,MAAO,KAAKA,MACZE,SAAU9d,EAAE,KAAK8d,UACjBD,SAAU7d,EAAE,KAAK6d,UACjBM,qBAAsBne,EAAE,KAAKme,sBAC7BC,aAAcpe,EAAE,KAAKoe,cACrBloD,MAAO8pC,EAAE,KAAK9pC,OACd4rC,QAAS9B,EAAE,KAAK8B,SAChBC,IAAK,KAAK+I,UAAY,KAAKA,UAAUjP,SAAU,KAC/CwiB,WAAY,KAAKA,WAEzB,IAEA,EAAAtsB,IAAA,OAAA77B,MAIA,SAAY8gD,GACR,GAAU,MAANA,EAAc,OAAO,IAAItiD,EAE7B,GAAmB,iBAARsiD,EAAkB,CACzB,IAAM2F,EAAU1sB,GAAS+mB,GAEzB,GAAI2F,EAAQ,IAAM,IACd,OAAOjoD,EAAY0T,KAzoBnC,SAAsBqP,GAClB,IAAMuhC,EAAcwD,GAAU/kC,GAE9BglB,GAAelI,MAAMkH,QAAQud,KAA8B,IAAlBA,EAAOhiD,QAAkC,IAAlBgiD,EAAOhiD,QACnE,6CAA8C,OAAQygB,GAE1D,IAAMu/B,EAAsB,CACxBl6C,KAAU,EACV8gD,MAAUL,GAAavE,EAAO,GAAI,SAClC6E,SAAUL,GAAWxE,EAAO,GAAI,YAChC8E,SAAUN,GAAWxE,EAAO,GAAI,YAChC1wC,GAAU+0C,GAAcrE,EAAO,IAC/B9iD,MAAUsnD,GAAWxE,EAAO,GAAI,SAChCvhC,KAAUsmB,GAAQib,EAAO,IACzBlX,QAAUpD,IAId,GAAsB,IAAlBsa,EAAOhiD,OAAgB,OAAOggD,EAElC,IAAM1hB,EAAIkoB,GAAWxE,EAAO,GAAI,KAC1BzmB,EAAIirB,GAAWxE,EAAO,GAAI,KAC1BhZ,EAAIwd,GAAWxE,EAAO,GAAI,KAEhC,GAAIzmB,IAAMmM,IAAQsB,IAAMtB,GAEpBsY,EAAGlV,QAAUxM,MAEV,CAGH,IAAIwM,GAAWxM,EAAIkL,IAASH,GACxByB,EAAUpD,KAAQoD,EAAUpD,IAChCsY,EAAGlV,QAAUA,EAGbrF,GAAeqF,IAAYpD,IAASpJ,IAAMgL,IAAShL,IAAMiL,GAAQ,yBAA0B,IAAKyY,EAAO,IAEvGhC,EAAGlM,UAAY7J,GAAAA,KAAe,CAC1B1O,EAAG8L,GAAa2a,EAAO,GAAI,IAC3BhZ,EAAG3B,GAAa2a,EAAO,GAAI,IAC3B1jB,EAAAA,IAGJ0hB,EAAGxyB,KAAO4gB,GAAU3tB,E,CAGxB,OAAOu/B,CACX,CAylBwCyI,CAAa9C,IAGzC,OAAOA,EAAQ,IACX,KAAK,EAAG,OAAOjoD,EAAY0T,KA3d3C,SAAuBqP,GACnB,IAAMuhC,EAAcwD,GAAUvsB,GAASxY,GAAMie,MAAM,IAEnD+G,GAAelI,MAAMkH,QAAQud,KAA8B,IAAlBA,EAAOhiD,QAAkC,KAAlBgiD,EAAOhiD,QACnE,8CAA+C,OAAQ+mC,GAAQtmB,IAEnE,IAAMu/B,EAAsB,CACxBl6C,KAAY,EACZglC,QAAY0b,GAAWxE,EAAO,GAAI,WAClC4E,MAAYL,GAAavE,EAAO,GAAI,SACpC6E,SAAYL,GAAWxE,EAAO,GAAI,YAClC8E,SAAYN,GAAWxE,EAAO,GAAI,YAClC1wC,GAAY+0C,GAAcrE,EAAO,IACjC9iD,MAAYsnD,GAAWxE,EAAO,GAAI,SAClCvhC,KAAYsmB,GAAQib,EAAO,IAC3BqF,WAAYf,GAAiBtE,EAAO,GAAI,eAI5C,OAAsB,IAAlBA,EAAOhiD,SAEXggD,EAAGxyB,KAAO4gB,GAAU3tB,GAEpBwmC,GAAmBjH,EAAIgC,EAAOtjB,MAAM,KAJFshB,CAOtC,CAicgD0I,CAAc/C,IAC9C,KAAK,EAAG,OAAOjoD,EAAY0T,KAlhB3C,SAAuBqP,GACnB,IAAMuhC,EAAcwD,GAAUvsB,GAASxY,GAAMie,MAAM,IAEnD+G,GAAelI,MAAMkH,QAAQud,KAA8B,IAAlBA,EAAOhiD,QAAkC,KAAlBgiD,EAAOhiD,QACnE,8CAA+C,OAAQ+mC,GAAQtmB,IAEnE,IAAM0mC,EAAuBX,GAAWxE,EAAO,GAAI,wBAC7CoF,EAAeZ,GAAWxE,EAAO,GAAI,gBACrChC,EAAsB,CACxBl6C,KAAuB,EACvBglC,QAAuB0b,GAAWxE,EAAO,GAAI,WAC7C4E,MAAuBL,GAAavE,EAAO,GAAI,SAC/CmF,qBAAuBA,EACvBC,aAAuBA,EACvBP,SAAuB,KACvBC,SAAuBN,GAAWxE,EAAO,GAAI,YAC7C1wC,GAAuB+0C,GAAcrE,EAAO,IAC5C9iD,MAAuBsnD,GAAWxE,EAAO,GAAI,SAC7CvhC,KAAuBsmB,GAAQib,EAAO,IACtCqF,WAAuBf,GAAiBtE,EAAO,GAAI,eAIvD,OAAsB,IAAlBA,EAAOhiD,SAEXggD,EAAGxyB,KAAO4gB,GAAU3tB,GAEpBwmC,GAAmBjH,EAAIgC,EAAOtjB,MAAM,KAJFshB,CAOtC,CAofgD2I,CAAchD,IAElDpgB,IAAO,EAAO,+BAAgC,wBAAyB,CAAEU,UAAW,Q,CAGxF,IAAMrB,EAAS,IAAIlnC,EAwBnB,OAvBe,MAAXsiD,EAAGl6C,OAAgB8+B,EAAO9+B,KAAOk6C,EAAGl6C,MAC3B,MAATk6C,EAAG1uC,KAAcszB,EAAOtzB,GAAK0uC,EAAG1uC,IACpB,MAAZ0uC,EAAG4G,QAAiBhiB,EAAOgiB,MAAQ5G,EAAG4G,OACvB,MAAf5G,EAAG8G,WAAoBliB,EAAOkiB,SAAW9G,EAAG8G,UAC7B,MAAf9G,EAAG6G,WAAoBjiB,EAAOiiB,SAAW7G,EAAG6G,UACjB,MAA3B7G,EAAGmH,uBAAgCviB,EAAOuiB,qBAAuBnH,EAAGmH,sBACjD,MAAnBnH,EAAGoH,eAAwBxiB,EAAOwiB,aAAepH,EAAGoH,cACzC,MAAXpH,EAAGv/B,OAAgBmkB,EAAOnkB,KAAOu/B,EAAGv/B,MACxB,MAAZu/B,EAAG9gD,QAAiB0lC,EAAO1lC,MAAQ8gD,EAAG9gD,OACxB,MAAd8gD,EAAGlV,UAAmBlG,EAAOkG,QAAUkV,EAAGlV,SAC1B,MAAhBkV,EAAGlM,YAAqBlP,EAAOkP,UAAY7J,GAAAA,KAAe+V,EAAGlM,YAC5C,MAAjBkM,EAAGqH,aAAsBziB,EAAOyiB,WAAarH,EAAGqH,YAErC,MAAXrH,EAAGxyB,OACHiY,GAAeb,EAAOgkB,WAAY,0CAA2C,KAAM5I,GACnFva,GAAeb,EAAOpX,OAASwyB,EAAGxyB,KAAM,gBAAiB,KAAMwyB,IAGpD,MAAXA,EAAG5uC,OACHq0B,GAAeb,EAAOgkB,WAAY,0CAA2C,KAAM5I,GACnFva,GAAeb,EAAOxzB,KAAK89B,iBAAmB8Q,EAAG5uC,MAAQ,IAAI89B,cAAe,gBAAiB,KAAM8Q,IAGhGpb,CACX,KAAClnC,CAAA,CA5bmB,G,2gCCpDlB,SAAUmrD,GAAYC,GACxB,IAAMlkB,EAAc,GAGhBkkB,EAAIx3C,KAAMszB,EAAOtzB,GAAKw3C,EAAIx3C,IAC1Bw3C,EAAI13C,OAAQwzB,EAAOxzB,KAAO03C,EAAI13C,MAE9B03C,EAAIroC,OAAQmkB,EAAOnkB,KAAOsmB,GAAQ+hB,EAAIroC,OAE1C,IAC4BooB,EADsEC,EAAAC,GAA/E,oEAAoEhK,MAAM,MACjE,IAA5B,IAAA+J,EAAAE,MAAAH,EAAAC,EAAArO,KAAAwO,MAA8B,KAAnBlO,EAAG8N,EAAA3pC,MACJ67B,KAAO+tB,GAA2B,MAAbA,EAAK/tB,KAChC6J,EAAO7J,GAAOiN,GAAgB8gB,EAAK/tB,GAAI,WAAAmE,OAAcnE,I,CACxD,OAAAmO,GAAAJ,EAAAJ,EAAAQ,EAAA,SAAAJ,EAAAjpC,GAAA,CAED,IAC4BkjD,EADeC,EAAAja,GAAxB,aAAahK,MAAM,MACV,IAA5B,IAAAikB,EAAAha,MAAA+Z,EAAAC,EAAAvoB,KAAAwO,MAA8B,KAAnBlO,EAAGgoB,EAAA7jD,MACJ67B,KAAO+tB,GAA2B,MAAbA,EAAK/tB,KAChC6J,EAAO7J,GAAOjN,GAAgBg7B,EAAK/tB,GAAI,WAAAmE,OAAcnE,I,CACxD,OAAAmO,GAAA8Z,EAAAta,EAAAQ,EAAA,SAAA8Z,EAAAnjD,GAAA,CAgBD,OAdIipD,EAAIzB,aACJziB,EAAOyiB,WAAanB,GAAc4C,EAAIzB,aAGtC,aAAcyB,IAAOlkB,EAAOmkB,SAAWD,EAAIC,UAE3C,mBAAoBD,IACpBlkB,EAAOokB,wBAA0BF,EAAIG,gBAGrC,eAAgBH,IAChBlkB,EAAOskB,WAAaJ,EAAII,YAGrBtkB,CACX,C,+GChVA,SAASukB,GAAcC,EAAwBnjB,GAC3C,GAAImjB,EAAOxwC,SAAY,OAAOwwC,EAAOxwC,SACrC2sB,IAAO,EAAO,mBAAoB,wBAAyB,CAAEU,UAAAA,GACjE,CAAC,SAEcojB,GAAQpmB,EAAAgb,GAAA,OAAAqL,GAAAnmB,MAAA,KAAAxC,UAAA,CAuBvB,SAAA2oB,KAHC,OAGDA,GAAAlmB,EAAAC,EAAAA,MAvBA,SAAAkmB,EAAwBH,EAAwBpJ,GAAsB,IAAA3D,EAAAjrC,EAAA,OAAAiyB,EAAAA,MAAA,SAAAmmB,GAAA,cAAAA,EAAA9lB,KAAA8lB,EAAA7lB,MAAA,OAiBjE,OAda,OAFV0Y,EAAWwM,GAAY7I,IAEnB1uC,KAAc+qC,EAAI/qC,GAAKqvC,GAAetE,EAAI/qC,GAAI83C,IAEtC,MAAZ/M,EAAIjrC,MACEA,EAAOirC,EAAIjrC,KACjBirC,EAAIjrC,KAAOwyB,QAAQC,IAAI,CACnBulB,EAAO5oD,aACPmgD,GAAevvC,EAAMg4C,KACtBjK,MAAK,SAAAhU,GAAsB,IAAA4Y,EAAAzQ,GAAAnI,EAAA,GAAnB5sC,EAAOwlD,EAAA,GAAE3yC,EAAI2yC,EAAA,GAGpB,OAFAte,GAAelnC,EAAQ2wC,gBAAkB99B,EAAK89B,cAC1C,4BAA6B,UAAW99B,GACrC7S,CACX,KAEA89C,EAAIjrC,KAAOg4C,EAAO5oD,aACrBgpD,EAAA7lB,KAAA,EAEYX,GAAkBqZ,GAAI,cAAAmN,EAAAxlB,OAAA,SAAAwlB,EAAAzlB,MAAA,wBAAAylB,EAAAplB,OAAA,GAAAmlB,EAAA,MACtCpmB,MAAA,KAAAxC,UAAA,CDlCYmE,OAAO,GAijBftJ,OAAOiuB,SAocPjuB,OAAOiuB,SC18BZ,IAAsBC,GAAc,WAShC,SAAAA,EAAY9wC,GAAYsxB,EAAA,KAAAwf,GAAAra,EAAA,wBACpBhL,GAAiC,KAAM,CAAEzrB,SAAWA,GAAY,MACpE,CA4JC,IAAA+wC,EALAC,EAJAC,EAJAC,EAzHAC,EALAC,EAjBAC,EAqKA,OArKA5f,EAAAqf,EAAA,EAAA3uB,IAAA,WAAA77B,OAAA+qD,EAAA7mB,EAAAC,EAAAA,MAeD,SAAAC,EAAeylB,GAAmB,OAAA1lB,EAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACmB,OADnBF,EAAA6b,GACvB6J,GAAc,KAAM,uBAAsB1lB,EAAAE,KAAA,EAA2B,KAAKnjC,aAAY,OAAU,OAAVijC,EAAA8b,GAAA9b,EAAAM,KAAAN,EAAAymB,GAAEnB,EAAQtlB,EAAAO,OAAA,SAAAP,EAAA6b,GAArD6K,oBAAmBvuD,KAAA6nC,EAAA6b,GAAA7b,EAAA8b,GAAA9b,EAAAymB,KAAA,wBAAAzmB,EAAAW,OAAA,GAAAd,EAAA,UACxE,SAAAghB,GAAA,OAAA2F,EAAA9mB,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,eAAA77B,OAAA8qD,EAAA5mB,EAAAC,EAAAA,MAED,SAAA+b,EAAmBY,GAAsB,IAAA3D,EAAA,OAAAhZ,EAAAA,MAAA,SAAAgc,GAAA,cAAAA,EAAA3b,KAAA2b,EAAA1b,MAAA,cAAA0b,EAAA1b,KAAA,EACnB0lB,GAAS,KAAMrJ,GAAG,OAA3B,OAAH3D,EAAGgD,EAAAtb,KAAAsb,EAAArb,OAAA,SACFqY,GAAG,wBAAAgD,EAAAjb,OAAA,GAAAgb,EAAA,UACb,SAAAmF,GAAA,OAAAyF,EAAA7mB,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,sBAAA77B,OAAA6qD,EAAA3mB,EAAAC,EAAAA,MAED,SAAA+mB,EAA0BpK,GAAsB,IAAApnC,EAAAyjC,EAAAgO,EAAAC,EAAAC,EAAAC,EAAA3D,EAAA,OAAAxjB,EAAAA,MAAA,SAAAonB,GAAA,cAAAA,EAAA/mB,KAAA+mB,EAAA9mB,MAAA,OACe,OAArD/qB,EAAWuwC,GAAc,KAAM,uBAAsBsB,EAAA9mB,KAAA,EAEzC0lB,GAAS,KAAMrJ,GAAG,OAA3B,GAEQ,OAFX3D,EAAGoO,EAAA1mB,MAED6iB,MAAa,CAAA6D,EAAA9mB,KAAA,eAAA8mB,EAAA9mB,KAAA,EACC,KAAK+mB,SAAS,WAAU,OAA1CrO,EAAIuK,MAAK6D,EAAA1mB,KAAA,UAGO,MAAhBsY,EAAIyK,SAAgB,CAAA2D,EAAA9mB,KAAA,gBAAA8mB,EAAA9mB,KAAA,GACC,KAAKgnB,YAAYtO,GAAI,QAA1CA,EAAIyK,SAAQ2D,EAAA1mB,KAAA,eAAA0mB,EAAA9mB,KAAA,GAIkB,KAAK/qB,SAAWgyC,aAAY,QAc7D,GAdKP,EAAOI,EAAA1mB,KACM,MAAfsY,EAAIvR,QAEJrF,GADgBuC,GAAUqU,EAAIvR,WACHuf,EAAQvf,QAAS,+BAAgC,aAAckV,EAAGlV,SAE7FuR,EAAIvR,QAAUuf,EAAQvf,QAIpBwf,EAAkC,MAApBjO,EAAI+K,cAAoD,MAA5B/K,EAAI8K,qBAChC,MAAhB9K,EAAIwK,UAAkC,IAAbxK,EAAIv2C,OAAcwkD,EAEtB,IAAbjO,EAAIv2C,MAA2B,IAAbu2C,EAAIv2C,OAAewkD,GAC7C7kB,IAAe,EAAO,4EAA6E,KAAMua,GAFzGva,IAAe,EAAO,+CAAgD,KAAMua,GAK9D,IAAb3D,EAAIv2C,MAA0B,MAAZu2C,EAAIv2C,MAAsC,MAApBu2C,EAAI+K,cAAoD,MAA5B/K,EAAI8K,qBAA6B,CAAAsD,EAAA9mB,KAAA,SAEtG0Y,EAAIv2C,KAAO,EAAE2kD,EAAA9mB,KAAA,oBAEO,IAAb0Y,EAAIv2C,MAA2B,IAAbu2C,EAAIv2C,KAAU,CAAA2kD,EAAA9mB,KAAA,gBAAA8mB,EAAA9mB,KAAA,GAIjB/qB,EAASiyC,aAAY,QAE3CtlB,GAA2B,OAFrBglB,EAAOE,EAAA1mB,MAEE8iB,SAAkB,oCAAqC,wBAAyB,CAC3F5gB,UAAW,gBAGK,MAAhBoW,EAAIwK,WAAoBxK,EAAIwK,SAAW0D,EAAQ1D,UAAW4D,EAAA9mB,KAAA,wBAAA8mB,EAAA9mB,KAAA,GAKxC/qB,EAASiyC,aAAY,QAArCN,EAAOE,EAAA1mB,KAEG,MAAZsY,EAAIv2C,KAGwB,MAAxBykD,EAAQnD,cAAwD,MAAhCmD,EAAQpD,sBAIxC9K,EAAIv2C,KAAO,EAES,MAAhBu2C,EAAIwK,UAGEA,EAAWxK,EAAIwK,gBACdxK,EAAIwK,SACXxK,EAAI+K,aAAeP,EACnBxK,EAAI8K,qBAAuBN,IAKH,MAApBxK,EAAI+K,eACJ/K,EAAI+K,aAAemD,EAAQnD,cAGC,MAA5B/K,EAAI8K,uBACJ9K,EAAI8K,qBAAuBoD,EAAQpD,wBAIhB,MAApBoD,EAAQ1D,UAIfthB,IAAQ+kB,EAAY,oCAAqC,wBAAyB,CAC1ErkB,UAAW,wBAGC,MAAhBoW,EAAIwK,WACJxK,EAAIwK,SAAW0D,EAAQ1D,UAK3BxK,EAAIv2C,KAAO,GAIXy/B,IAAO,EAAO,oCAAqC,wBAAyB,CACxEU,UAAW,sBAGC,IAAboW,EAAIv2C,OAIa,MAApBu2C,EAAI+K,eACJ/K,EAAI+K,aAAemD,EAAQnD,cAGC,MAA5B/K,EAAI8K,uBACJ9K,EAAI8K,qBAAuBoD,EAAQpD,uBAE1C,eAAAsD,EAAA9mB,KAAA,GAKQX,GAAkBqZ,GAAI,eAAAoO,EAAAzmB,OAAA,SAAAymB,EAAA1mB,MAAA,yBAAA0mB,EAAArmB,OAAA,GAAAgmB,EAAA,UACtC,SAAAU,GAAA,OAAAf,EAAA5mB,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,cAAA77B,OAAA4qD,EAAA1mB,EAAAC,EAAAA,MAED,SAAA0nB,EAAkB/K,GAAsB,OAAA3c,EAAAA,MAAA,SAAA2nB,GAAA,cAAAA,EAAAtnB,KAAAsnB,EAAArnB,MAAA,OACK,OADLqnB,EAAA1L,GAC7B6J,GAAc,KAAM,eAAc6B,EAAArnB,KAAA,EAAmB,KAAKsnB,aAAajL,GAAG,cAAAgL,EAAAzL,GAAAyL,EAAAjnB,KAAAinB,EAAAhnB,OAAA,SAAAgnB,EAAA1L,GAAvCqL,YAAW/uD,KAAAovD,EAAA1L,GAAA0L,EAAAzL,KAAA,wBAAAyL,EAAA5mB,OAAA,GAAA2mB,EAAA,UACxD,SAAAG,GAAA,OAAApB,EAAA3mB,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,OAAA77B,OAAA2qD,EAAAzmB,EAAAC,EAAAA,MAED,SAAA8nB,EAAWnL,GAAsB,OAAA3c,EAAAA,MAAA,SAAA+nB,GAAA,cAAAA,EAAA1nB,KAAA0nB,EAAAznB,MAAA,OACK,OADLynB,EAAA9L,GACtB6J,GAAc,KAAM,QAAOiC,EAAAznB,KAAA,EAAY,KAAKsnB,aAAajL,GAAG,cAAAoL,EAAA7L,GAAA6L,EAAArnB,KAAAqnB,EAAApnB,OAAA,SAAAonB,EAAA9L,GAAhC1jD,KAAIA,KAAAwvD,EAAA9L,GAAA8L,EAAA7L,KAAA,wBAAA6L,EAAAhnB,OAAA,GAAA+mB,EAAA,UAC1C,SAAAE,GAAA,OAAAxB,EAAA1mB,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,cAAA77B,OAAA0qD,EAAAxmB,EAAAC,EAAAA,MAED,SAAAioB,EAAkBjtD,GAAY,IAAAua,EAAA,OAAAyqB,EAAAA,MAAA,SAAAkoB,GAAA,cAAAA,EAAA7nB,KAAA6nB,EAAA5nB,MAAA,OACyB,OAA7C/qB,EAAWuwC,GAAc,KAAM,eAAcoC,EAAA5nB,KAAA,EACtC/qB,EAASioC,YAAYxiD,GAAK,cAAAktD,EAAAvnB,OAAA,SAAAunB,EAAAxnB,MAAA,wBAAAwnB,EAAAnnB,OAAA,GAAAknB,EAAA,UAC1C,SAAAE,GAAA,OAAA5B,EAAAzmB,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,kBAAA77B,OAAAyqD,EAAAvmB,EAAAC,EAAAA,MAED,SAAAooB,EAAsBzL,GAAsB,IAAApnC,EAAAyjC,EAAAqP,EAAA,OAAAroB,EAAAA,MAAA,SAAAsoB,GAAA,cAAAA,EAAAjoB,KAAAioB,EAAAhoB,MAAA,OACe,OAAjD/qB,EAAWuwC,GAAc,KAAM,mBAAkBwC,EAAAhoB,KAAA,EAErC,KAAKioB,oBAAoB5L,GAAG,OAGzB,cAHf3D,EAAGsP,EAAA5nB,MACE3yB,KACLs6C,EAAQhuD,GAAAA,KAAiB2+C,GAAIsP,EAAArM,GACtB1mC,EAAQ+yC,EAAAhoB,KAAA,EAA4B,KAAKkoB,gBAAgBH,GAAM,cAAAC,EAAApM,GAAAoM,EAAA5nB,KAAA4nB,EAAAhoB,KAAA,GAAAgoB,EAAArM,GAAtDwM,qBAAoBlwD,KAAA+vD,EAAArM,GAAAqM,EAAApM,IAAA,eAAAoM,EAAA3nB,OAAA,SAAA2nB,EAAA5nB,MAAA,yBAAA4nB,EAAAvnB,OAAA,GAAAqnB,EAAA,UAC7C,SAAAM,GAAA,OAAApC,EAAAxmB,MAAA,KAAAxC,UAAA,MAAA+oB,CAAA,CAhL+B,GAuLpCsC,GAAA,IAAAtc,QAQauc,GAAW,SAAAC,GAAArc,EAAAoc,EAAAC,GAAA,IA2BnBC,EARAC,EANAC,E,IAbmBvc,G,EAAAmc,E,+YAUpB,SAAAA,EAAY1tD,EAAiBqa,GAA0B,IAAA+iB,E,IAEH,OAFGuO,EAAA,KAAA+hB,GACnDtwB,EAAAmU,EAAAl0C,KAAA,KAAMgd,G,mHAAUo3B,EAAArU,G,EAAAqwB,I,SAAA3c,EAAAW,EAAArU,GAAA,kBAChB0I,GAAgB2L,EAAArU,GAAmB,CAAEp9B,QAAAA,IAAWo9B,CACpD,CAsBC,OAtBA0O,EAAA4hB,EAAA,EAAAlxB,IAAA,aAAA77B,OAAAmtD,EAAAjpB,EAAAC,EAAAA,MAED,SAAAipB,IAAA,OAAAjpB,EAAAA,MAAA,SAAAkpB,GAAA,cAAAA,EAAA7oB,KAAA6oB,EAAA5oB,MAAA,cAAA4oB,EAAAvoB,OAAA,SAA6C,KAAKzlC,SAAO,wBAAAguD,EAAAnoB,OAAA,GAAAkoB,EAAA,UAAG,kBAAAD,EAAAlpB,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,UAAA77B,MAE5D,SAAQ0Z,GACJ,OAAO,IAAIqzC,EAAW,KAAK1tD,QAASqa,EACxC,GAAC,CAAAmiB,IAAA,kBAAA77B,OAAAktD,EAAAhpB,EAAAC,EAAAA,MAMD,SAAAmpB,EAAsBxM,GAAsB,OAAA3c,EAAAA,MAAA,SAAAopB,GAAA,cAAAA,EAAA/oB,KAAA+oB,EAAA9oB,MAAA,OACxCsM,GAAA,KAAI+b,GAAAU,IAAA9wD,KAAJ,KAAuB,eAAgB,mBAAmB,wBAAA6wD,EAAAroB,OAAA,GAAAooB,EAAA,UAC7D,SAAAG,GAAA,OAAAP,EAAAjpB,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,cAAA77B,OAAAitD,EAAA/oB,EAAAC,EAAAA,MAED,SAAAupB,EAAkBhtD,GAA4B,OAAAyjC,EAAAA,MAAA,SAAAwpB,GAAA,cAAAA,EAAAnpB,KAAAmpB,EAAAlpB,MAAA,OAC1CsM,GAAA,KAAI+b,GAAAU,IAAA9wD,KAAJ,KAAuB,WAAY,eAAe,wBAAAixD,EAAAzoB,OAAA,GAAAwoB,EAAA,UACrD,SAAAE,GAAA,OAAAX,EAAAhpB,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,gBAAA77B,MAAA,eAAA6tD,EAAA3pB,EAAAC,EAAAA,MAED,SAAA2pB,EAAoBhJ,EAAyBthB,EAA8CxjC,GAA0B,OAAAmkC,EAAAA,MAAA,SAAA4pB,GAAA,cAAAA,EAAAvpB,KAAAupB,EAAAtpB,MAAA,OACjHsM,GAAA,KAAI+b,GAAAU,IAAA9wD,KAAJ,KAAuB,aAAc,iBAAiB,wBAAAqxD,EAAA7oB,OAAA,GAAA4oB,EAAA,UACzD,gBAAAE,EAAAC,EAAAC,GAAA,OAAAL,EAAA5pB,MAAA,KAAAxC,UAAA,EAJA,MAIAsrB,CAAA,CAnCmB,CAAQvC,IAoC/B,SAAAgD,GAfqBlO,EAAgBvY,GAC9BV,IAAO,EAAK,0BAAArG,OAA6Bsf,GAAW,wBAAyB,CAAEvY,UAAAA,GACnF,CCnQJ,IAAAonB,GAAA,IAAAzjB,QAWa0jB,GAAW,SAAApB,GAAArc,EAAAyd,EAAApB,GAAA,IAmEnBC,EAxBAC,EAN8DC,E,IArC3Cvc,G,EAAAwd,E,+YAepB,SAAAA,EAAYta,EAAwBp6B,GAA0B,IAAA+iB,E,MAAAuO,EAAA,KAAAojB,GAC1D3xB,EAAAmU,EAAAl0C,KAAA,KAAMgd,GAAUy2B,EAAAW,EAAArU,GAAA,kB,EAAAqU,EAAArU,G,EAAA,CAAA6I,UAAA,EAAAtlC,WAAA,G,qHAAAmuD,I,WAEhB5nB,GAAeuN,GAA0C,mBAArBA,EAAWua,KAAsB,sBAAuB,aAAc,gBAE1GnjB,GAAA4F,EAAArU,GAAA0xB,GAAmBra,GAEnB,IAAMz0C,EAAUg2C,GAAe5Y,EAAK6xB,WAAWhZ,WACC,OAAhDnQ,GAAgB2L,EAAArU,GAAmB,CAAEp9B,QAAAA,IAAWo9B,CACpD,CA+EC,OA1ED0O,EAAAijB,EAAA,EAAAvyB,IAAA,aAAAK,IAGA,WAA+B,OAAAkP,GAAO,KAAI+iB,GAAc,GAExD,CAAAtyB,IAAA,aAAAK,IAGA,WAA2B,OAAO,KAAKoyB,WAAWxa,UAAY,GAAC,CAAAjY,IAAA,aAAA77B,OAAAmtD,EAAAjpB,EAAAC,EAAAA,MAE/D,SAAAC,IAAA,OAAAD,EAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAO,OAAA,SAA6C,KAAKzlC,SAAO,wBAAAklC,EAAAW,OAAA,GAAAd,EAAA,UAAG,kBAAA+oB,EAAAlpB,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,UAAA77B,MAE5D,SAAQ0Z,GACJ,OAAO,IAAI00C,EAAUhjB,GAAC,KAAI+iB,IAAcz0C,EAC5C,GAAC,CAAAmiB,IAAA,kBAAA77B,OAAAktD,EAAAhpB,EAAAC,EAAAA,MAED,SAAA+b,EAAsBY,GAAsB,IAAAyN,EAAAn8C,EAAAF,EAAAs8C,EAAA,OAAArqB,EAAAA,MAAA,SAAAgc,GAAA,cAAAA,EAAA3b,KAAA2b,EAAA1b,MAAA,cAAA0b,EAAA1b,KAAA,EAGbX,GAAkB,CACzC1xB,GAAK0uC,EAAG1uC,GAAKqvC,GAAeX,EAAG1uC,GAAI,KAAKsH,eAAW9Y,EACnDsR,KAAO4uC,EAAG5uC,KAAOuvC,GAAeX,EAAG5uC,KAAM,KAAKwH,eAAW9Y,IAC3D,OAaqD,OAbrD2tD,EAAApO,EAAAtb,KAHMzyB,EAAEm8C,EAAFn8C,GAAIF,EAAIq8C,EAAJr8C,KAKF,MAANE,IAAc0uC,EAAG1uC,GAAKA,GACd,MAARF,IAAgB4uC,EAAG5uC,KAAOA,GAEf,MAAX4uC,EAAG5uC,OACHq0B,GAAejlC,GAAoBw/C,EAAG5uC,QAAW,KAAK7S,QAClD,oCAAqC,UAAWyhD,EAAG5uC,aAChD4uC,EAAG5uC,OAIRs8C,EAAMhwD,GAAAA,KAA0CsiD,IAClDlM,UAAY,KAAK0Z,WAAWD,KAAKG,EAAIvF,cAAc9I,EAAArb,OAAA,SAEhD0pB,EAAIzF,YAAU,yBAAA5I,EAAAjb,OAAA,GAAAgb,EAAA,UACxB,SAAAnc,GAAA,OAAAmpB,EAAAjpB,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,cAAA77B,OAAAitD,EAAA/oB,EAAAC,EAAAA,MAED,SAAA+mB,EAAkBxqD,GAA4B,OAAAyjC,EAAAA,MAAA,SAAAonB,GAAA,cAAAA,EAAA/mB,KAAA+mB,EAAA9mB,MAAA,cAAA8mB,EAAAzmB,OAAA,SACnC,KAAK2pB,gBAAgB/tD,IAAQ,wBAAA6qD,EAAArmB,OAAA,GAAAgmB,EAAA,UACvC,SAAAnM,GAAA,OAAAkO,EAAAhpB,MAAA,KAAAxC,UAAA,IAID,CAAA5F,IAAA,kBAAA77B,MAGA,SAAgBU,GACZ,OAAO,KAAK4tD,WAAWD,KCtEzB,SAAsB3tD,GAExB,MADwB,iBAAbA,IAAyBA,EAAU0tC,GAAY1tC,IACnDwuC,GAAUlP,GAAO,CACpBoO,GAAYwT,IACZxT,GAAYtQ,OAAOp9B,EAAQI,SAC3BJ,IAER,CD+DoCguD,CAAYhuD,IAAUqoD,UACtD,GAAC,CAAAltB,IAAA,gBAAA77B,MAAA,eAAA6tD,EAAA3pB,EAAAC,EAAAA,MAED,SAAA8nB,EAAoBnH,EAAyBthB,EAA8CxjC,GAA0B,IAAA2uD,EAAA/X,EAAA,YAAAzS,EAAAA,MAAA,SAAA+nB,GAAA,cAAAA,EAAA1nB,KAAA0nB,EAAAznB,MAAA,cAAAynB,EAAAznB,KAAA,EAGzF0e,GAAAA,aAA8B2B,EAAQthB,EAAOxjC,EAAK,eAAAisC,EAAA/H,EAAAC,EAAAA,MAAE,SAAA0nB,EAAO1sD,GAAY,IAAAE,EAAA,OAAA8kC,EAAAA,MAAA,SAAA2nB,GAAA,cAAAA,EAAAtnB,KAAAsnB,EAAArnB,MAAA,OAOxF,OAHH4B,GAAwB,MAAjBuQ,EAAKl9B,SAAkB,8CAA+C,wBAAyB,CAClGqtB,UAAW,cACXf,KAAM,CAAE7mC,KAAAA,KACT2sD,EAAArnB,KAAA,EAEmBmS,EAAKl9B,SAASioC,YAAYxiD,GAAK,OAGlD,OAFHknC,GAAkB,OADZhnC,EAAOysD,EAAAjnB,MACW,wBAAyB,oBAAqB,CAClE7kC,MAAOb,IACR2sD,EAAAhnB,OAAA,SAEIzlC,GAAO,wBAAAysD,EAAA5mB,OAAA,GAAA2mB,EAAA,KACjB,gBAAAG,GAAA,OAAA/f,EAAAhI,MAAA,KAAAxC,UAAA,EAfyE,IAexE,OAfa,OAATktB,EAASzC,EAAArnB,KAAAqnB,EAAApnB,OAAA,SAiBR,KAAKwpB,WAAWD,KAAKlL,GAAAA,KAAsBwL,EAAU7J,OAAQthB,EAAOmrB,EAAU3uD,QAAQ+oD,YAAU,wBAAAmD,EAAAhnB,OAAA,GAAA+mB,EAAA,UAC1G,gBAAA7G,EAAAC,EAAAuG,GAAA,OAAAiC,EAAA5pB,MAAA,KAAAxC,UAAA,EAvBA,MAuBA2sB,CAAA,CAvGmB,CAAQ5D,IEzBhC,MAAM,GAA+BruD,QAAQ,2BCO7C,IAAIgxC,IAAS,EAEPyhB,GAAa,SAASrtC,GACxB,OAAOstC,EAAAA,GAAAA,WAAgBttC,EAC3B,EAEIutC,GAA+CF,GAmB7C,SAAUG,GAAUliB,GACtB,IAAMtrB,EAAOwY,GAAS8S,EAAO,QAC7B,OAAOhF,GAAQinB,GAAYvtC,GAC/B,CACAwtC,GAAUhiB,EAAI6hB,GACdG,GAAUl/B,KAAO,WAAmBsd,IAAS,CAAM,EACnD4hB,GAAU/hB,SAAW,SAASC,GAC1B,GAAIE,GAAU,MAAM,IAAIjH,UAAU,uBAClC4oB,GAAc7hB,CAClB,EACAlR,OAAOmR,OAAO6hB,IChCd,IAAI5hB,IAAS,EAEP6hB,GAAe,SAASluD,GAC1B,OAAO,IAAI0kC,YAAWypB,EAAAA,GAAAA,aAAcnuD,GACxC,EAEIouD,GAAgBF,GASd,SAAUG,GAAYruD,GACxB,OAAOouD,GAAcpuD,EACzB,CAEAquD,GAAYpiB,EAAIiiB,GAChBG,GAAYt/B,KAAO,WAAmBsd,IAAS,CAAM,EACrDgiB,GAAYniB,SAAW,SAASC,GAC5B,GAAIE,GAAU,MAAM,IAAItO,MAAM,yBAC9BqwB,GAAgBjiB,CACpB,EACAlR,OAAOmR,OAAOiiB,ICdd,IAAMC,GAAW,6DACbC,GAAwC,KAE5C,SAASC,GAASC,GACd,GAAc,MAAVF,GAAgB,CAChBA,GAAS,GACT,IAAK,IAAIhyB,EAAI,EAAGA,EAAI+xB,GAAStuD,OAAQu8B,IACjCgyB,GAAOD,GAAS/xB,IAAMuI,OAAOvI,E,CAGrC,IAAMqI,EAAS2pB,GAAOE,GAEtB,OADAhpB,GAAyB,MAAVb,EAAc,uBAA0B,SAAU6pB,GAC1D7pB,CACX,CAGA,IAAM8C,GAAO5C,OAAO,GACd4pB,GAAQ5pB,OAAO,ICtCrB,MAAM,GAA+BzpC,QAAQ,UCAvC,GAA+BA,QAAQ,wBCiB7C,IAAIszD,IAAa,EAAOC,IAAc,EAEhCC,GAAY,eAAA1jB,EAAA/H,EAAAC,EAAAA,MAAG,SAAAC,EAAewrB,EAAoBtiB,EAAkBuiB,EAAWxzB,EAAWyzB,EAAWC,EAAeC,GAA6B,OAAA7rB,EAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GACtIwrB,EAAAA,GAAAA,aAAYL,EAAQtiB,EAAM,CAAEuiB,EAAAA,EAAGxzB,EAAAA,EAAGyzB,EAAAA,EAAGC,MAAAA,EAAOC,WAAAA,IAAa,cAAAzrB,EAAAO,OAAA,SAAAP,EAAAM,MAAA,wBAAAN,EAAAW,OAAA,GAAAd,EAAA,KACzE,gBAFiBL,EAAAgb,EAAAqG,EAAAC,EAAAuG,EAAAI,EAAAG,GAAA,OAAAlgB,EAAAhI,MAAA,KAAAxC,UAAA,KAGZyuB,GAAc,SAASN,EAAoBtiB,EAAkBuiB,EAAWxzB,EAAWyzB,EAAWC,GAChG,OAAOI,EAAAA,GAAAA,QAAWP,EAAQtiB,EAAM,CAAEuiB,EAAAA,EAAGxzB,EAAAA,EAAGyzB,EAAAA,EAAGC,MAAAA,GAC/C,EAEIK,GAA6JT,GAC7JU,GAAoHH,GAwCxH,SAAsBI,GAAMhE,EAAAO,EAAAY,EAAAG,EAAAI,EAAAC,EAAAC,GAAA,OAAAqC,GAAAtsB,MAAA,KAAAxC,UAAA,CAI3B,SAAA8uB,KAAA,OAAAA,GAAArsB,EAAAC,EAAAA,MAJM,SAAA+b,EAAsBsQ,EAAoB1iB,EAAkB+hB,EAAWxzB,EAAWyzB,EAAWC,EAAeU,GAA2B,IAAAb,EAAAtiB,EAAA,OAAAnJ,EAAAA,MAAA,SAAAgc,GAAA,cAAAA,EAAA3b,KAAA2b,EAAA1b,MAAA,OAGlI,OAFFmrB,EAAS71B,GAASy2B,EAAS,UAC3BljB,EAAOvT,GAAS+T,EAAO,QAAOqS,EAAAC,GAC7BsQ,GAACvQ,EAAA1b,KAAA,EAAO2rB,GAAcR,EAAQtiB,EAAMuiB,EAAGxzB,EAAGyzB,EAAGC,EAAOU,GAAS,cAAAtQ,EAAAE,GAAAF,EAAAtb,KAAAsb,EAAArb,OAAA,YAAAqb,EAAAC,IAAAD,EAAAE,KAAA,wBAAAF,EAAAjb,OAAA,GAAAgb,EAAA,KACvEqQ,GAAAtsB,MAAA,KAAAxC,UAAA,CA+BK,SAAUkvB,GAAWH,EAAoB1iB,EAAkB+hB,EAAWxzB,EAAWyzB,EAAWC,GAC9F,IAAMH,EAAS71B,GAASy2B,EAAS,UAC3BljB,EAAOvT,GAAS+T,EAAO,QAC7B,OAAO4iB,GAAEL,GAAaT,EAAQtiB,EAAMuiB,EAAGxzB,EAAGyzB,EAAGC,GACjD,CC5FM,SAAUa,GAAOzB,GACnB,IAAM1vD,EAAQs6B,GAASo1B,EAAa,eAIpC1vD,EAAM,GAAiB,GAAXA,EAAM,GAAa,GAK/BA,EAAM,GAAiB,GAAXA,EAAM,GAAa,IAE/B,IAAMO,EAAQ6nC,GAAQpoC,GAEtB,MAAO,CACJO,EAAMwnC,UAAU,EAAG,IACnBxnC,EAAMwnC,UAAU,GAAI,IACpBxnC,EAAMwnC,UAAU,GAAI,IACpBxnC,EAAMwnC,UAAU,GAAI,IACpBxnC,EAAMwnC,UAAU,GAAI,KACrBpE,KAAK,IACX,C,2GC3BM,SAAUytB,GAAcC,GAI1B,MAH0B,iBAAfA,GAA4BA,EAAUzd,WAAW,QACxDyd,EAAY,KAAOA,GAEhBrpB,GAAaqpB,EACxB,CAEM,SAAUC,GAAK/wD,EAAwBc,GAEzC,IADAd,EAAQ89B,OAAO99B,GACRA,EAAMc,OAASA,GAAUd,EAAQ,IAAMA,EAC9C,OAAOA,CACX,CAEM,SAAUgxD,GAAY3jB,GACxB,MAAyB,iBAAdA,EACAe,GAAYf,EAAU,QAE1B5F,GAAa4F,EACxB,CAEM,SAAU4jB,GAAWp0D,EAAaq0D,GAEpC,IAAM7xB,EAAQ6xB,EAAM7xB,MAAM,sCAC1BkH,GAAwB,MAATlH,EAAe,eAAgB,OAAQ6xB,GAEtD,IAKgDvnB,EAL1CwnB,EAAO9xB,EAAM,GACbz4B,EAAOy4B,EAAM,GACb+xB,EAAqB,MAAb/xB,EAAM,GAEhB+f,EAAMviD,EAAO+sC,E,65BAAAC,CACEsnB,EAAKnhB,cAAcnQ,MAAM,MAAI,IAAhD,IAAA+J,EAAAE,MAAAH,EAAAC,EAAArO,KAAAwO,MAAkD,KAAvC2U,EAAI/U,EAAA3pC,MAGX,GAAIq+B,MAAMkH,QAAQ6Z,GAAM,CACpB,IAAKV,EAAKrf,MAAM,YAAe,MAC/B+f,EAAMA,EAAI1f,SAASgf,G,MAEhB,GAAoB,WAAhB/a,EAAOyb,GAAmB,CACjC,IAAIwE,EAAa,KACjB,IAAK,IAAM/nB,KAAOujB,EACb,GAAIvjB,EAAImU,gBAAkB0O,EAAM,CAC5BkF,EAAQxE,EAAIvjB,GACZ,K,CAGTujB,EAAMwE,C,MAGNxE,EAAM,KAGV,GAAW,MAAPA,EAAe,K,CACtB,OAAApV,GAAAJ,EAAAJ,EAAAQ,EAAA,SAAAJ,EAAAjpC,GAAA,CAID,GAFA4lC,IAAgB6qB,GAAe,MAAPhS,EAAa,yBAA0B,OAAQ+R,GAEnEvqD,GAAe,MAAPw4C,EAAa,CACrB,GAAa,QAATx4C,EAAgB,CAChB,GAAoB,iBAATw4C,GAAqBA,EAAI/f,MAAM,cACtC,OAAmBK,SAAS0f,GACzB,GAAI9V,OAAOgZ,cAAclD,GAC5B,OAAOA,C,CAIf,GAAa,WAATx4C,GACoB,iBAATw4C,GAAqBA,EAAI/f,MAAM,eACtC,OAAmBgyB,WAAWjS,GAItC,GAAa,SAATx4C,GACoB,iBAATw4C,EAAqB,OAAmByR,GAAczR,GAGrE,GAAa,UAATx4C,GAAoBy3B,MAAMkH,QAAQ6Z,GAAQ,OAAmBA,EACjE,GAAIx4C,IAAI+8B,EAAYyb,GAAQ,OAAOA,EAEnC7Y,IAAe,EAAK,wBAAAvG,OAA2Bp5B,EAAK,KAAK,OAAQuqD,E,CAGrE,OAAO/R,CACX,CFlBAkR,GAAOvjB,EAAI4iB,GACXW,GAAOzgC,KAAO,WAAmB6/B,IAAc,CAAM,EACrDY,GAAOtjB,SAAW,SAASC,GACvB,GAAIyiB,GAAe,MAAM,IAAI7wB,MAAM,oBACnCuxB,GAAgBnjB,CACpB,EACAlR,OAAOmR,OAAOojB,IA6BdK,GAAW5jB,EAAImjB,GACfS,GAAW9gC,KAAO,WAAmB4/B,IAAa,CAAM,EACxDkB,GAAW3jB,SAAW,SAASC,GAC3B,GAAIwiB,GAAc,MAAM,IAAI5wB,MAAM,wBAClCwxB,GAAepjB,CACnB,EACAlR,OAAOmR,OAAOyjB,IGrFd,IAAMW,GAAc,mBAmCd,SAAUC,GAAeC,GAC3B,IACI,IAAMjwC,EAAO0f,KAAKwd,MAAM+S,GAExB,GAAgB,KADkB,MAAhBjwC,EAAK+R,QAAmBoM,SAASne,EAAK+R,SAAU,GAC7C,OAAO,C,CAC9B,MAAOsQ,GAAO,CAChB,OAAO,CACX,CAeA,SAAStwB,GAAWiO,EAAWoxB,GAC3B,IAAM9W,EAAM9B,GAAS4Y,GACf8e,EAAaR,GAAoB1vC,EAAM,2BAG7CglB,GADoBsB,GAAQqH,GAAUlP,GAAO,CAAEnE,EAAI2D,MAAM,GAAI,IAAKiyB,MAAgBjqB,UAAU,KAC7DypB,GAAgB1vC,EAAM,sBAAsByuB,cACvE,qBAAsB,WAAY,gBAEtC,IAAM8D,EArBV,SAAiBvyB,EAAWsa,EAAiB41B,GAEzC,GAAe,gBADAR,GAAgB1vC,EAAM,wBACP,CAC1B,IAAMmwC,EAAKT,GAAoB1vC,EAAM,gCAErC,OAAOsmB,GADQ,IAAI8pB,GAAAA,IAAI91B,EAAK61B,GACNE,QAAQH,G,CAGlCprB,IAAO,EAAO,qBAAsB,wBAAyB,CACzDU,UAAW,WAEnB,CAUuB6qB,CAAQrwC,EAAMsa,EAAI2D,MAAM,EAAG,IAAKiyB,GAE7CpyD,EAAUg2C,GAAevB,GAC/B,GAAIvyB,EAAKliB,QAAS,CACd,IAAIinC,EAAQ/kB,EAAKliB,QAAQ2wC,cACpB1J,EAAM+M,WAAW,QAAS/M,EAAQ,KAAOA,GAE9CC,GAAejlC,GAAWglC,KAAWjnC,EAAS,uCAAwC,UAAWkiB,EAAKliB,Q,CAG1G,IAAMgU,EAA2B,CAAEhU,QAAAA,EAASy0C,WAAAA,GAI5C,GAAgB,QADAmd,GAAQ1vC,EAAM,2BACP,CACnB,IAAMswC,EAAch2B,EAAI2D,MAAM,GAAI,IAE5BsyB,EAAqBb,GAAoB1vC,EAAM,qCAC/CwwC,EAAad,GAAoB1vC,EAAM,kCAEvCywC,EAAiB,IAAIL,GAAAA,IAAIE,EAAaE,GAE5C1+C,EAAQk+B,SAAW,CACf4f,KAAOF,GAAuB1vC,EAAM,yBAA2B+vC,GAC/DphB,OAAS+gB,GAAuB1vC,EAAM,2BAA6B,KACnEiwB,QAAS3J,GAAQ9N,GAASi4B,EAAeJ,QAAQE,K,CAIzD,OAAOz+C,CACX,CAmBA,SAAS4+C,GAAuB1wC,GAC5B,IAAM2wC,EAAMjB,GAAQ1vC,EAAM,qBAC1B,GAAI2wC,GAAuB,iBAATA,EAAmB,CACjC,GAA0B,WAAtBA,EAAIliB,cAA4B,CAChC,IAAM1C,EAAO2jB,GAAoB1vC,EAAM,+BACjCsuC,EAAIoB,GAAgB1vC,EAAM,2BAC1B8a,EAAI40B,GAAgB1vC,EAAM,2BAC1BuuC,EAAImB,GAAgB1vC,EAAM,2BAGhCglB,GAAespB,EAAI,GAAuB,IAAjBA,EAAKA,EAAI,GAAW,gBAAiB,QAASA,GACvEtpB,GAAelK,EAAI,GAAKyzB,EAAI,EAAG,cAAe,MAAOoC,GAErD,IAAMnC,EAAQkB,GAAgB1vC,EAAM,+BAGpC,OAFAglB,GAAyB,KAAVwpB,EAAc,oBAAqB,YAAaA,GAExD,CAAE5wD,KAAM,SAAUmuC,KAAAA,EAAMuiB,EAAAA,EAAGxzB,EAAAA,EAAGyzB,EAAAA,EAAGC,MAAO,G,CAE5C,GAA0B,WAAtBmC,EAAIliB,cAA4B,CAEvC,IAAM1C,EAAO2jB,GAAoB1vC,EAAM,+BAEjC4wC,EAAMlB,GAAgB1vC,EAAM,gCAC5BgxB,EAAY4f,EAAItyB,MAAM,KAAKsd,MACjC5W,GAA6B,WAAdgM,GAAwC,WAAdA,EAAwB,kBAAmB,UAAW4f,GAE/F,IAAM1rB,EAAQwqB,GAAgB1vC,EAAM,2BAE9BwuC,EAAQkB,GAAgB1vC,EAAM,+BAGpC,OAFAglB,GAAyB,KAAVwpB,EAAc,oBAAqB,YAAaA,GAExD,CAAE5wD,KAAM,SAAUmuC,KAAAA,EAAM7G,MAAAA,EAAOspB,MAAAA,EAAOxd,UAAAA,E,EAIrDhM,IAAe,EAAO,sCAAuC,MAAO2rB,EACxE,CAkCA,SAASE,GAAMC,GACX,OAAO,IAAI3tB,SAAQ,SAACE,GAAc0tB,YAAW,WAAQ1tB,GAAW,GAAGytB,EAAW,GAClF,CAaA,SAAsBE,GAAmBxuB,EAAAgb,EAAAqG,GAAA,OAAAoN,GAAAvuB,MAAA,KAAAxC,UAAA,CAyBxC,SAAA+wB,KAAA,OAAAA,GAAAtuB,EAAAC,EAAAA,MAzBM,SAAAC,EAAmCotB,EAAc3jB,EAAgC4iB,GAA2B,IAAAlvC,EAAA8rB,EAAAolB,EAAAC,EAAAjsB,EAAAksB,EAAApgB,EAAAqgB,EAAAtlB,EAAAuiB,EAAAxzB,EAAAyzB,EAAAC,EAAAl0B,EAAA,OAAAsI,EAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAKvE,GAJlCljB,EAAO0f,KAAKwd,MAAM+S,GAElBnkB,EAAW2jB,GAAYnjB,GAGT,YADd4kB,EAASR,GAAoB1wC,IACxBpiB,KAAiB,CAAAolC,EAAAE,KAAA,aACpBgsB,EAAQ,CAAAlsB,EAAAE,KAAA,QACI,OAAZgsB,EAAS,GAAGlsB,EAAAE,KAAA,EACN2tB,GAAM,GAAE,OAGyC,GADnD9kB,EAAkCmlB,EAAlCnlB,KAAM7G,EAA4BgsB,EAA5BhsB,MAAOspB,EAAqB0C,EAArB1C,MAAOxd,EAAckgB,EAAdlgB,UACtB1W,EAAM+R,GAAOP,EAAUC,EAAM7G,EAAOspB,EAAOxd,IAC7Cke,EAAQ,CAAAlsB,EAAAE,KAAA,SACI,OAAZgsB,EAAS,GAAGlsB,EAAAE,KAAA,GACN2tB,GAAM,GAAE,eAAA7tB,EAAAO,OAAA,SAEXxxB,GAAWiO,EAAMsa,IAAI,QAKJ,OAF5BwK,GAAuB,WAAhBosB,EAAOtzD,KAAmB,oBAAqB,gBAAiB,CAAEszD,OAAAA,IAEjEnlB,EAAyBmlB,EAAzBnlB,KAAMuiB,EAAmB4C,EAAnB5C,EAAGxzB,EAAgBo2B,EAAhBp2B,EAAGyzB,EAAa2C,EAAb3C,EAAGC,EAAU0C,EAAV1C,MAAKxrB,EAAAE,KAAA,GACV6rB,GAAOjjB,EAAUC,EAAMuiB,EAAGxzB,EAAGyzB,EAAGC,EAAOU,GAAS,QAAzD,OAAH50B,EAAG0I,EAAAM,KAAAN,EAAAO,OAAA,SACFxxB,GAAWiO,EAAMsa,IAAI,yBAAA0I,EAAAW,OAAA,GAAAd,EAAA,KAC/BouB,GAAAvuB,MAAA,KAAAxC,UAAA,CAED,SAASoxB,GAAoBna,GAEzB,IAAMpL,EAAwB,MAAhBoL,EAAQpL,KAAgBvT,GAAS2e,EAAQpL,KAAM,gBAAiB6hB,GAAY,IAGtFU,EAAK,GAAK,GAAKxzB,EAAI,EAAGyzB,EAAI,EAU9B,OATIpX,EAAQ4X,SACJ5X,EAAQ4X,OAAOT,IAAKA,EAAInX,EAAQ4X,OAAOT,GACvCnX,EAAQ4X,OAAOj0B,IAAKA,EAAIqc,EAAQ4X,OAAOj0B,GACvCqc,EAAQ4X,OAAOR,IAAKA,EAAIpX,EAAQ4X,OAAOR,IAE/CvpB,GAA6B,iBAAPspB,GAAmBA,EAAI,GAAKvmB,OAAOgZ,cAAcuN,KAAOjqB,OAAOiqB,GAAKjqB,OAAOiqB,EAAI,MAAQjqB,OAAO,GAAI,6BAA8B,YAAaiqB,GACnKtpB,GAA6B,iBAAPlK,GAAmBA,EAAI,GAAKiN,OAAOgZ,cAAcjmB,GAAI,6BAA8B,YAAaA,GACtHkK,GAA6B,iBAAPupB,GAAmBA,EAAI,GAAKxmB,OAAOgZ,cAAcwN,GAAI,6BAA8B,YAAaA,GAE/G,CAAE3wD,KAAM,SAAU4wD,MAAO,GAAIziB,KAAAA,EAAMuiB,EAAAA,EAAGxzB,EAAAA,EAAGyzB,EAAAA,EACpD,CAEA,SAASgD,GAAiBj3B,EAAiBq2B,EAAmB7+C,EAA0BqlC,GAEpF,IAAM5E,EAAa/Z,GAAS1mB,EAAQygC,WAAY,cAG1C4d,EAAoB,MAAdhZ,EAAQgZ,GAAc33B,GAAS2e,EAAQgZ,GAAI,cAAevC,GAAY,IAClF5oB,GAA6B,KAAdmrB,EAAG5wD,OAAe,4BAA6B,aAAc43C,EAAQgZ,IAGpF,IAAMqB,EAA8B,MAAhBra,EAAQsa,KAAgBj5B,GAAS2e,EAAQsa,KAAM,gBAAiB7D,GAAY,IAChG5oB,GAAqC,KAAtBwsB,EAAWjyD,OAAe,8BAA+B,eAAgB43C,EAAQgZ,IAKhG,IAAMuB,EAAap3B,EAAI2D,MAAM,EAAG,IAC1B0zB,EAAYr3B,EAAI2D,MAAM,GAAI,IAI1BiyB,EAAa13B,GADJ,IAAI43B,GAAAA,IAAIsB,EAAYvB,GACAyB,QAAQrf,IAGrCsf,EAAMlkB,GAAUlP,GAAO,CAAEkzB,EAAWzB,KAGpClwC,EAA+B,CACjCliB,QAASgU,EAAQhU,QAAQmoC,UAAU,GAAGwI,cACtCj8B,GAAI68C,GAAOmC,GACXz/B,QAAS,EACT+/B,OAAQ,CACJC,OAAQ,cACRC,aAAc,CACV7B,GAAI7pB,GAAQ6pB,GAAIlqB,UAAU,IAE9BiqB,WAAY5pB,GAAQ4pB,GAAYjqB,UAAU,GAC1C0qB,IAAK,SACLsB,UAAW,CACPlmB,KAAMzF,GAAQqqB,EAAI5kB,MAAM9F,UAAU,GAClCjM,EAAG22B,EAAIrC,EACP4D,MAAO,GACP3D,EAAGoC,EAAIpC,EACPzzB,EAAG61B,EAAI71B,GAEX+2B,IAAKA,EAAI5rB,UAAU,KAK3B,GAAIn0B,EAAQk+B,SAAU,CAClB,IAAMmiB,EAA4B,MAAlBhb,EAAQgb,OAAkBhb,EAAQgb,OAAM,UAAA1zB,OAAa1M,IAE/D69B,EAAO99C,EAAQk+B,SAAS4f,MAAQG,GAChCphB,EAAS78B,EAAQk+B,SAASrB,QAAU,KAEpC2hB,EAAch2B,EAAI2D,MAAM,GAAI,IAE5BgS,EAAUzX,GAAS1mB,EAAQk+B,SAASC,QAAS,4BAC7CugB,EAAa5C,GAAY,IAEzB2C,EAAqB/3B,GADJ,IAAI43B,GAAAA,IAAIE,EAAaE,GACOoB,QAAQ3hB,IAErDmiB,EAAM,IAAIpxB,KAOVqxB,EAAgB,QANHD,EAAIE,iBAAmB,IACvB9C,GAAK4C,EAAIG,cAAgB,EAAG,GAAK,IACjC/C,GAAK4C,EAAII,aAAc,GAAK,IAC5BhD,GAAK4C,EAAIK,cAAe,GAAK,IAC7BjD,GAAK4C,EAAIM,gBAAiB,GAAK,IAC/BlD,GAAK4C,EAAIO,gBAAiB,GACvB,QAA6B3yC,EAAKliB,QAExDkiB,EAAK,YAAc,CACfmyC,OAAAA,EAAQE,aAAAA,EAAczC,KAAAA,EAAMjhB,OAAAA,EAC5BikB,gBAAiBtsB,GAAQkqB,GAAYvqB,UAAU,GAC/CsqB,mBAAoBjqB,GAAQiqB,GAAoBtqB,UAAU,GAC1DlU,QAAS,M,CAIjB,OAAO2N,KAAKC,UAAU3f,EAC1B,CAUM,SAAU6yC,GAAwB/gD,EAA0Bg6B,EAA+BqL,GAC9E,MAAXA,IAAmBA,EAAU,IAEjC,IAAM2b,EAAgBrD,GAAY3jB,GAC5B6kB,EAAMW,GAAoBna,GAEhC,OAAOoa,GAAiB/4B,GADZ42B,GAAW0D,EAAenC,EAAI5kB,KAAM4kB,EAAIrC,EAAGqC,EAAI71B,EAAG61B,EAAIpC,EAAG,KAC9BoC,EAAK7+C,EAASqlC,EACzD,CAWA,SAAsB4b,GAAmBjP,EAAAuG,EAAAI,GAAA,OAAAuI,GAAAtwB,MAAA,KAAAxC,UAAA,CAOxC,SAAA8yB,KAAA,OAAAA,GAAArwB,EAAAC,EAAAA,MAPM,SAAA+b,EAAmC7sC,EAA0Bg6B,EAA+BqL,GAAwB,IAAA2b,EAAAnC,EAAAr2B,EAAA,OAAAsI,EAAAA,MAAA,SAAAgc,GAAA,cAAAA,EAAA3b,KAAA2b,EAAA1b,MAAA,OAI/E,OAHzB,MAAXiU,IAAmBA,EAAU,IAE3B2b,EAAgBrD,GAAY3jB,GAC5B6kB,EAAMW,GAAoBna,GAAQyH,EAAA1b,KAAA,EACtB6rB,GAAO+D,EAAenC,EAAI5kB,KAAM4kB,EAAIrC,EAAGqC,EAAI71B,EAAG61B,EAAIpC,EAAG,GAAIpX,EAAQ8b,kBAAiB,OAA3F,OAAH34B,EAAGskB,EAAAtb,KAAAsb,EAAArb,OAAA,SACFguB,GAAiB/4B,GAAS8B,GAAMq2B,EAAK7+C,EAASqlC,IAAQ,wBAAAyH,EAAAjb,OAAA,GAAAgb,EAAA,MAChEjc,MAAA,KAAAxC,UAAA,C,ipBCnWM,IAAM6vB,GAAsB,mBAI7BmD,GAAe,IAAIjvB,WAAW,CAAE,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,MAEpFkvB,GAAc,WAEd7E,GAAIjqB,OAAO,sEAEX6D,GAAU,mBAChB,SAASsnB,GAAK/wD,EAAec,GAEzB,IADA,IAAI4kC,EAAS,GACN1lC,GACH0lC,EAAS+D,GAAQzpC,EAAQ,IAAM0lC,EAC/B1lC,EAAQyxC,KAAKkjB,MAAM30D,EAAQ,IAE/B,KAAO0lC,EAAO5kC,OAAkB,EAATA,GAAc4kC,EAAS,IAAMA,EACpD,MAAO,KAAOA,CAClB,CAEA,SAASkvB,GAAkBhsB,GACvB,IAAM5oC,EAAQ+5B,GAAS6O,GAGvB,OPdE,SAAuBA,GAGzB,IAFA,IAAI5oC,EAAQ0pC,GAAS3P,GAAS6O,IAC1BlD,EAAS,GACN1lC,GACH0lC,EAAS0pB,GAAS9lB,OAAOtpC,EAAQwvD,KAAU9pB,EAC3C1lC,GAASwvD,GAEb,OAAO9pB,CACX,COMWmvB,CADO70B,GAAO,CAAEhgC,EADTgoC,GAAU4E,GAAOA,GAAO5sC,IAAS,EAAG,KAGtD,CAEA,IAAMuqC,GAAS,GAEf,SAASuqB,GAAM7vB,EAAe8vB,EAAmBzf,EAAmBxB,GAChE,IAAMvyB,EAAO,IAAIikB,WAAW,IAExBP,EAAQyvB,IACRruB,GAAqB,MAAdyN,EAAoB,uCAAwC,wBAAyB,CACxF/M,UAAW,gBAIfxlB,EAAK+mB,IAAIvO,GAAS+Z,GAAa,IAI/BvyB,EAAK+mB,IAAIvO,GAASub,IAItB,IAAK,IAAIjY,EAAI,GAAIA,GAAK,EAAGA,GAAK,EAAK9b,EAAK,IAAM8b,GAAK,IAAQ4H,GAAU,GAAK5H,EAAM,IAChF,IAAM23B,EAAIj7B,GAAS2Y,GAAY,SAAUqiB,EAAWxzC,IAEpD,MAAO,CAAE0zC,GAAID,EAAEx1B,MAAM,EAAG,IAAK01B,GAAIF,EAAEx1B,MAAM,IAC7C,CAGA,SAAS21B,GAAoCC,EAASjE,GAClD,IAAM/S,EAAa+S,EAAKtxB,MAAM,KAE9B0G,GAAe6X,EAAWt9C,OAAS,IAAwB,MAAlBs9C,EAAW,IAAcgX,EAAK/V,MAAQ,GAAI,eAAgB,OAAQ8R,GAErF,MAAlB/S,EAAW,IAAcA,EAAWiX,QAGxC,IADA,IAAI3vB,EAAY0vB,EACP/3B,EAAI,EAAGA,EAAI+gB,EAAWt9C,OAAQu8B,IAAK,CACxC,IAAMi4B,EAAYlX,EAAW/gB,GAE7B,GAAIi4B,EAAUj2B,MAAM,aAAc,CAC9B,IAAM4F,EAAQvF,SAAS41B,EAAU9tB,UAAU,EAAG8tB,EAAUx0D,OAAS,IACjEylC,GAAetB,EAAQyvB,GAAa,qBAAoB,QAAA10B,OAAW3C,EAAE,KAAKi4B,GAC1E5vB,EAASA,EAAO6vB,YAAYb,GAAczvB,E,MAEvC,GAAIqwB,EAAUj2B,MAAM,YAAa,CACpC,IAAM4F,EAAQvF,SAAS41B,GACvB/uB,GAAetB,EAAQyvB,GAAa,qBAAoB,QAAA10B,OAAW3C,EAAE,KAAKi4B,GAC1E5vB,EAASA,EAAO6vB,YAAYtwB,E,MAG5BsB,IAAe,EAAO,yBAAwB,QAAAvG,OAAW3C,EAAE,KAAKi4B,E,CAIxE,OAAO5vB,CACX,CAEA,IAAA8vB,GAAA,IAAAhlB,QAQailB,GAAa,SAAAC,GAAA/kB,EAAA8kB,EAAAC,GAAA,IA4FtBC,EA5FsB/kB,EAAA+J,GAAA8a,GA0DtB,SAAAA,EAAYvuB,EAAYonB,EAAwBsH,EAA2Bb,EAAmB5D,EAAqBlsB,EAAeoa,EAAe9N,EAA2B73B,GAAyB,IAAA+iB,E,IAAAuO,EAAA,KAAAyqB,GACjMh5B,EAAAmU,EAAAl0C,KAAA,KAAM4xD,EAAY50C,G,mHAAUo3B,EAAArU,G,EAAA+4B,I,SAAArlB,EAAAW,EAAArU,GAAA,oBAAA0T,EAAAW,EAAArU,GAAA,sBAAA0T,EAAAW,EAAArU,GAAA,4BAAA0T,EAAAW,EAAArU,GAAA,mBAAA0T,EAAAW,EAAArU,GAAA,oBAAA0T,EAAAW,EAAArU,GAAA,eAAA0T,EAAAW,EAAArU,GAAA,gBAAA0T,EAAAW,EAAArU,GAAA,gBAC5BuK,GAAcE,EAAOqD,GAAQ,gBAE7BpF,GAAgB2L,EAAArU,GAAqB,CAAE6Y,UAAWgZ,EAAWuH,sBAE7D,IAAMC,EAAc9tB,GAAU+mB,GAAUniB,GAAOnQ,EAAK6Y,YAAa,EAAG,GAMjB,OALnDnQ,GAAgB2L,EAAArU,GAAqB,CACjCm5B,kBAAAA,EAAmBE,YAAAA,EACnBf,UAAAA,EAAW5D,KAAAA,EAAMlsB,MAAAA,EAAOoa,MAAAA,IAG5Bla,GAAgB2L,EAAArU,GAAqB,CAAE8U,SAAAA,IAAY9U,CACvD,CA0MC,OA1MA0O,EAAAsqB,EAAA,EAAA55B,IAAA,UAAA77B,MAED,SAAQ0Z,GACJ,OAAO,IAAI+7C,EAAalrB,GAAQ,KAAK+jB,WAAY,KAAKsH,kBAClD,KAAKb,UAAW,KAAK5D,KAAM,KAAKlsB,MAAO,KAAKoa,MAAO,KAAK9N,SAAU73B,EAC1E,GAAC,CAAAmiB,IAAA,UAAA77B,OAgBD21D,EAAAzxB,EAAAC,EAAAA,MAOA,SAAAC,EAAciJ,EAA+BmnB,GAAmC,OAAArwB,EAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC/D6vB,GAAmBvjB,GAAC,KAAIykB,GAAAO,IAAAr5D,KAAJ,MAAiB2wC,EAAU,CAAEmnB,iBAAAA,IAAmB,cAAAjwB,EAAAO,OAAA,SAAAP,EAAAM,MAAA,wBAAAN,EAAAW,OAAA,GAAAd,EAAA,UACpF,SAAAL,EAAAgb,GAAA,OAAA4W,EAAA1xB,MAAA,KAAAxC,UAAA,IAED,CAAA5F,IAAA,cAAA77B,MAUA,SAAYqtC,GACR,OAAO+mB,GAAuBrjB,GAAC,KAAIykB,GAAAO,IAAAr5D,KAAJ,MAAiB2wC,EACpD,GAEA,CAAAxR,IAAA,cAAAK,IAMA,WASI,OAFAmK,GAAO,KAAKgZ,MAAQ,IAAK,iBAAkB,wBAAyB,CAAEtY,UAAW,gBAE1E6tB,GAAkB50B,GAAO,CAC5B,aAAc+wB,GAAK,KAAK1R,MAAO,GAAI,KAAKuW,kBACxC7E,GAAK,KAAK9rB,MAAO,GAAI,KAAK8vB,UAC1B/0B,GAAO,CAAE,OAAQ,KAAK8T,eAE9B,GAEA,CAAAjY,IAAA,UAAA77B,MAIA,WAAsC,OAAqB,MAAb,KAAKmxD,IAAe,GAElE,CAAAt1B,IAAA,SAAA77B,MAOA,WACI,OAAO,IAAIg2D,GAAiBzrB,GAAQ,KAAKlrC,QAAS,KAAKi2C,UACnD,KAAKsgB,kBAAmB,KAAKb,UAAW,KAAK5D,KAAM,KAAKlsB,MACxD,KAAKoa,MAAO,KAAK3lC,SACzB,GAEA,CAAAmiB,IAAA,cAAA77B,MAGA,SAAYi2D,GACR,IAAMhxB,EAAQrW,GAAUqnC,EAAQ,SAChC1vB,GAAetB,GAAS,WAAY,gBAAiB,QAASA,GAG9D,IAAIksB,EAAO,KAAKA,KACZA,IACAA,GAAQ,KAAOlsB,GAASyvB,IACpBzvB,EAAQyvB,KAAevD,GAAQ,MAGvC,IAAA+E,EAAmBpB,GAAM7vB,EAAO,KAAK8vB,UAAW,KAAKzf,UAAW,KAAKxB,YAA7DohB,EAAEgB,EAAFhB,GAAID,EAAEiB,EAAFjB,GACNkB,EAAK,IAAItiB,GAAW5J,IAASP,GAASurB,GAAMrvB,OAAO,KAAKkO,aAAe+b,GAAG,KAEhF,OAAO,IAAI4F,EAAalrB,GAAQ4rB,EAAI,KAAKL,YAAajuB,GAAQqtB,GAC1D/D,EAAMlsB,EAAO,KAAKoa,MAAQ,EAAG,KAAK9N,SAAU,KAAK73B,SAEzD,GAEA,CAAAmiB,IAAA,aAAA77B,MAGA,SAAWmxD,GACP,OAAOgE,GAAyB,KAAMhE,EAC1C,IAAC,EAAAt1B,IAAA,kBAAA77B,MAsBD,SAAuBo2D,GACnB,IAAM32D,EAAQyqC,GPnRhB,SAAuBlqC,GAEzB,IADA,IAAI0lC,EAAS8C,GACJnL,EAAI,EAAGA,EAAIr9B,EAAMc,OAAQu8B,IAC9BqI,GAAU8pB,GACV9pB,GAAU4pB,GAAStvD,EAAMq9B,IAE7B,OAAOqI,CACX,CO4QgC2wB,CAAaD,IAErC7vB,GAAgC,KAAjB9mC,EAAMqB,QAAiB8zD,GAAkBn1D,EAAM+/B,MAAM,EAAG,OAAS42B,EAC5E,uBAAwB,cAAe,gBAE3C,IAAM/W,EAAQ5/C,EAAM,GACdm2D,EAAoB/tB,GAAQpoC,EAAM+/B,MAAM,EAAG,IAC3CyF,EAAQvF,SAASmI,GAAQpoC,EAAM+/B,MAAM,EAAG,KAAKgI,UAAU,GAAI,IAC3DutB,EAAYltB,GAAQpoC,EAAM+/B,MAAM,GAAI,KACpC3D,EAAMp8B,EAAM+/B,MAAM,GAAI,IAE5B,OAAQqI,GAAQpoC,EAAM+/B,MAAM,EAAG,KAE3B,IAAK,aAAc,IAAK,aACpB,IAAM8V,EAAYzN,GAAQhM,GAC1B,OAAO,IAAIm6B,GAAiBzrB,GAAQ8K,GAAeC,GAAYA,EAC3DsgB,EAAmBb,EAAW,KAAM9vB,EAAOoa,EAAO,MAI1D,IAAK,aAAc,IAAK,cACpB,GAAe,IAAXxjB,EAAI,GAAY,MACpB,OAAO,IAAI45B,EAAalrB,GAAQ,IAAIsJ,GAAWhY,EAAI2D,MAAM,IACrDo2B,EAAmBb,EAAW,KAAM9vB,EAAOoa,EAAO,KAAM,MAIpE9Y,IAAe,EAAO,8BAA+B,cAAe,eACxE,GAEA,CAAA1K,IAAA,eAAA77B,MAGA,SAAoBqtC,EAAmB8jB,EAAejgB,GAClC,MAAZ7D,IAAoBA,EAAW,IACvB,MAAR8jB,IAAgBA,EAAOG,IACX,MAAZpgB,IAAoBA,EAAWC,GAAAA,YACnC,IAAMI,EAAWa,GAAAA,YAAqB+c,GAAY,IAAK9hB,EAAU6D,GACjE,OAAOolB,GAAAb,EAtPFA,EAAac,IAAA75D,KAsPX+4D,EAAuBlkB,EAASilB,cAAejlB,GAAU4jB,WAAWhE,EAC/E,GAEA,CAAAt1B,IAAA,eAAA77B,MAGA,SAAoBuxC,EAAoB4f,GAEpC,OADKA,IAAQA,EAAOG,IACbgF,GAAAb,EA9PFA,EAAac,IAAA75D,KA8PX+4D,EAAuBlkB,EAASilB,cAAejlB,GAAU4jB,WAAWhE,EAC/E,GAEA,CAAAt1B,IAAA,aAAA77B,MAGA,SAAkBowC,EAAgB/C,EAAmB8jB,EAAejgB,GAChD,MAAZ7D,IAAoBA,EAAW,IACvB,MAAR8jB,IAAgBA,EAAOG,IACX,MAAZpgB,IAAoBA,EAAWC,GAAAA,YACnC,IAAMI,EAAWa,GAAAA,WAAoBhC,EAAQ/C,EAAU6D,GACvD,OAAOolB,GAAAb,EAzQFA,EAAac,IAAA75D,KAyQX+4D,EAAuBlkB,EAASilB,cAAejlB,GAAU4jB,WAAWhE,EAC/E,GAEA,CAAAt1B,IAAA,WAAA77B,MAGA,SAAgBy2D,GACZ,OAAAH,GAAOb,EAhRFA,EAAac,IAAA75D,KAgRX+4D,EAAuBgB,EAAM,KACxC,KAAChB,CAAA,CAjRqB,CAAQrH,IAoRlC,SAAA2H,KArMQ,IAAM1iD,EAA2B,CAAEhU,QAAS,KAAKA,QAASy0C,WAAY,KAAKA,YACrE4iB,EAAI,KAAKnlB,SASf,OARI,KAAK4f,MAAQuF,GAA2B,OAAtBA,EAAExlB,SAAShB,QAAkC,KAAfwmB,EAAErpB,WAClDh6B,EAAQk+B,SAAW,CACf4f,KAAM,KAAKA,KACXjhB,OAAQ,KACRsB,QAASklB,EAAEllB,UAIZn+B,CACX,CAAC,SAAAkjD,GAiGgBI,EAAkBplB,GAC/BhL,GAAeoB,GAAYgvB,GAAQ,eAAgB,OAAQ,cAE3D,IAAMF,EAAO18B,GAAS48B,EAAO,QAC7BpwB,GAAekwB,EAAK31D,QAAU,IAAM21D,EAAK31D,QAAU,GAAK,eAAgB,OAAQ,cAEhF,IAAMk0D,EAAIj7B,GAAS2Y,GAAY,SAAU+hB,GAAcgC,IACjDnI,EAAa,IAAIza,GAAWhM,GAAQmtB,EAAEx1B,MAAM,EAAG,MAErD,OAAO,IAAIi2B,GAAalrB,GAAQ+jB,EAAY,aAAczmB,GAAQmtB,EAAEx1B,MAAM,KACtE,IAAK,EAAG,EAAG+R,EAAU,KAC7B,CAsFJ,IAAaykB,GAAiB,SAAAY,GAAAjmB,EAAAqlB,EAAAY,GAAA,IAAA9b,EAAAH,GAAAqb,GAkD1B,SAAAA,EAAY9uB,EAAY7nC,EAAiBi2C,EAAmBsgB,EAA2Bb,EAAmB5D,EAAqBlsB,EAAeoa,EAAe3lC,GAAyB,IAAAk9B,EAAA5L,EAAA,KAAAgrB,GAClLpf,EAAAkE,EAAAp+C,KAAA,KAAM2C,EAASqa,GAAUy2B,EAAAW,EAAA8F,GAAA,oBAAAzG,EAAAW,EAAA8F,GAAA,sBAAAzG,EAAAW,EAAA8F,GAAA,4BAAAzG,EAAAW,EAAA8F,GAAA,oBAAAzG,EAAAW,EAAA8F,GAAA,eAAAzG,EAAAW,EAAA8F,GAAA,gBAAAzG,EAAAW,EAAA8F,GAAA,gBACzB5P,GAAcE,EAAOqD,GAAQ,oBAE7BpF,GAAgB2L,EAAA8F,GAAyB,CAAEtB,UAAAA,IAE3C,IAAMwgB,EAAc9tB,GAAU+mB,GAAUniB,GAAO0I,IAAa,EAAG,GAG5D,OAFHnQ,GAAgB2L,EAAA8F,GAAyB,CACrCtB,UAAAA,EAAWwgB,YAAAA,EAAaF,kBAAAA,EAAmBb,UAAAA,EAAW5D,KAAAA,EAAMlsB,MAAAA,EAAOoa,MAAAA,IACpEzI,CACP,CAmEC,OAnEAzL,EAAA6qB,EAAA,EAAAn6B,IAAA,UAAA77B,MAED,SAAQ0Z,GACJ,OAAO,IAAIs8C,EAAiBzrB,GAAQ,KAAKlrC,QAAS,KAAKi2C,UACnD,KAAKsgB,kBAAmB,KAAKb,UAAW,KAAK5D,KAAM,KAAKlsB,MAAO,KAAKoa,MAAO3lC,EACnF,GAEA,CAAAmiB,IAAA,cAAAK,IAMA,WASI,OAFAmK,GAAO,KAAKgZ,MAAQ,IAAK,iBAAkB,wBAAyB,CAAEtY,UAAW,gBAE1E6tB,GAAkB50B,GAAO,CAC5B,aACA+wB,GAAK,KAAK1R,MAAO,GACjB,KAAKuW,kBACL7E,GAAK,KAAK9rB,MAAO,GACjB,KAAK8vB,UACL,KAAKzf,YAEb,GAEA,CAAAzZ,IAAA,UAAA77B,MAIA,WAAsC,OAAqB,MAAb,KAAKmxD,IAAe,GAElE,CAAAt1B,IAAA,cAAA77B,MAGA,SAAYi2D,GACR,IAAMhxB,EAAQrW,GAAUqnC,EAAQ,SAChC1vB,GAAetB,GAAS,WAAY,gBAAiB,QAASA,GAG9D,IAAIksB,EAAO,KAAKA,KACZA,IACAA,GAAQ,KAAOlsB,GAASyvB,IACpBzvB,EAAQyvB,KAAevD,GAAQ,MAGvC,IAAA0F,EAAmB/B,GAAM7vB,EAAO,KAAK8vB,UAAW,KAAKzf,UAAW,MAAxD4f,EAAE2B,EAAF3B,GAAID,EAAE4B,EAAF5B,GACN6B,EAAKjjB,GAAAA,UAAqBohB,EAAI,KAAK3f,WAAW,GAE9Cj2C,EAAUg2C,GAAeyhB,GAE/B,OAAO,IAAId,EAAiBzrB,GAAQlrC,EAASy3D,EAAI,KAAKhB,YAAajuB,GAAQqtB,GACvE/D,EAAMlsB,EAAO,KAAKoa,MAAQ,EAAG,KAAK3lC,SAE1C,GAEA,CAAAmiB,IAAA,aAAA77B,MAGA,SAAWmxD,GACP,OAAOgE,GAA6B,KAAMhE,EAC9C,KAAC6E,CAAA,CA/HyB,CAAQjJ,IC7XhC,SAAUgK,GAAgBvF,GAC5B,IAEI,GADavwB,KAAKwd,MAAM+S,GACfwF,QAAW,OAAO,C,CAC7B,MAAOpzB,GAAO,CAChB,OAAO,CACX,CAcM,SAAUqzB,GAAqBzF,EAAc3jB,GAC/C,IAAMtsB,EAAO0f,KAAKwd,MAAM+S,GAClBnkB,EAAW2jB,GAAYnjB,GAGvBxuC,EAAUiC,GAAW2vD,GAAQ1vC,EAAM,oBAGnCy1C,EAAUnG,GAAcI,GAAQ1vC,EAAM,oBAC5CglB,GAAeywB,GAAYA,EAAQl2D,OAAS,IAAQ,EAAG,kBAAmB,OAAQ0wD,GAalF,IAXA,IAAM31B,EAAM9B,GAAS6T,GAAOP,EAAUA,EAAU,IAAM,GAAI,WAAW7N,MAAM,EAAG,IAExEkyB,EAAKsF,EAAQx3B,MAAM,EAAG,IACtB03B,EAAgBF,EAAQx3B,MAAM,IAG9B23B,EAAS,IAAIC,GAAAA,IAAIv7B,EAAK61B,GACtB+E,GAAOY,EAAAA,GAAAA,YAAWt9B,GAASo9B,EAAOvF,QAAQsF,KAG5CI,EAAU,GACLj6B,EAAI,EAAGA,EAAIo5B,EAAK31D,OAAQu8B,IAC7Bi6B,GAAWx5B,OAAOC,aAAa04B,EAAKp5B,IAGxC,MAAO,CAAEh+B,QAAAA,EAASy0C,WAAY//B,GAAGujD,GACrC,C,0HCrDA,SAASlF,GAAMC,GACX,OAAO,IAAI3tB,SAAQ,SAACE,GAAc0tB,YAAW,WAAQ1tB,GAAW,GAAGytB,EAAW,GAClF,CAYA,IAAakF,GAAO,SAAA7B,GAAA/kB,EAAA4mB,EAAA7B,GAAA,IAkEhB8B,EA/CA7B,E,IAnBgB/kB,G,EAAA2mB,E,+YAMhB,SAAAA,EAAY17B,EAA0BniB,GAA0BsxB,EAAA,KAAAusB,GACxC,iBAAT17B,GAAsBA,EAAIwX,WAAW,QAC5CxX,EAAM,KAAOA,GAGjB,IAAIyyB,EAA8B,iBAATzyB,EAAqB,IAAIgY,GAAWhY,GAAMA,EAAI,OAAA+U,EAAAl0C,KAAA,KACjE4xD,EAAY50C,EACtB,CAkHC,OAlHAyxB,EAAAosB,EAAA,EAAA17B,IAAA,UAAA77B,MAED,SAAQ0Z,GACJ,OAAO,IAAI69C,EAAO,KAAKjJ,WAAY50C,EACvC,GAEA,CAAAmiB,IAAA,UAAA77B,OAAA21D,EAAAzxB,EAAAC,EAAAA,MAOA,SAAAC,EAAciJ,EAA+BmnB,GAAmC,IAAAnhD,EAAA,OAAA8wB,EAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACN,OAAhEpxB,EAAU,CAAEhU,QAAS,KAAKA,QAASy0C,WAAY,KAAKA,YAAYvP,EAAAE,KAAA,EACzD6vB,GAAoBjhD,EAASg6B,EAAU,CAAEmnB,iBAAAA,IAAmB,cAAAjwB,EAAAO,OAAA,SAAAP,EAAAM,MAAA,wBAAAN,EAAAW,OAAA,GAAAd,EAAA,UAC5E,SAAAL,EAAAgb,GAAA,OAAA4W,EAAA1xB,MAAA,KAAAxC,UAAA,IAED,CAAA5F,IAAA,cAAA77B,MAUA,SAAYqtC,GAER,OAAO+mB,GADS,CAAE/0D,QAAS,KAAKA,QAASy0C,WAAY,KAAKA,YAClBzG,EAC5C,IAAC,EAAAxR,IAAA,oBAAA77B,OAsBDw3D,EAAAtzB,EAAAC,EAAAA,MAOA,SAAA+b,EAA+BsR,EAAcnkB,EAA+BojB,GAA2B,IAAAp9C,EAAA,OAAA8wB,EAAAA,MAAA,SAAAgc,GAAA,cAAAA,EAAA3b,KAAA2b,EAAA1b,MAAA,OACtC,GAAzDpxB,EAAqD,MACrDk+C,GAAeC,GAAK,CAAArR,EAAA1b,KAAA,eAAA0b,EAAA1b,KAAA,EACJ8tB,GAAoBf,EAAMnkB,EAAUojB,GAAS,OAA7Dp9C,EAAO8sC,EAAAtb,KAAAsb,EAAA1b,KAAA,oBAEAsyB,GAAgBvF,GAAK,CAAArR,EAAA1b,KAAA,aACxBgsB,EAAQ,CAAAtQ,EAAA1b,KAAA,SAAgB,OAAZgsB,EAAS,GAAGtQ,EAAA1b,KAAA,GAAO2tB,GAAM,GAAE,QACI,GAA/C/+C,EAAU4jD,GAAqBzF,EAAMnkB,IACjCojB,EAAQ,CAAAtQ,EAAA1b,KAAA,SAAgB,OAAZgsB,EAAS,GAAGtQ,EAAA1b,KAAA,GAAO2tB,GAAM,GAAE,eAAAjS,EAAArb,OAAA,SAAAwxB,GAIxCiB,EArFFA,EAAOE,IAAA/6D,KAqFL66D,EAAoBlkD,IAAO,yBAAA8sC,EAAAjb,OAAA,GAAAgb,EAAA,KACrC,SAAAkF,EAAAC,EAAAuG,GAAA,OAAA4L,EAAAvzB,MAAA,KAAAxC,UAAA,IAED,CAAA5F,IAAA,wBAAA77B,MAOA,SAA6BwxD,EAAcnkB,GACvC,IAAIh6B,EAAqD,KASzD,OARIk+C,GAAeC,GACfn+C,EH6DN,SAAkCm+C,EAAc3jB,GAClD,IAAMtsB,EAAO0f,KAAKwd,MAAM+S,GAElBnkB,EAAW2jB,GAAYnjB,GAEvB4kB,EAASR,GAAoB1wC,GACnC,MAAoB,WAAhBkxC,EAAOtzD,KAGAmU,GAAWiO,EADNqsB,GAAOP,EADuBolB,EAAlCnlB,KAAkCmlB,EAA5BhsB,MAA4BgsB,EAArB1C,MAAqB0C,EAAdlgB,aAKhClM,GAAuB,WAAhBosB,EAAOtzD,KAAmB,oBAAqB,gBAAiB,CAAEszD,OAAAA,IAIlEn/C,GAAWiO,EADNovC,GAAWtjB,EADUolB,EAAzBnlB,KAAyBmlB,EAAnB5C,EAAmB4C,EAAhBp2B,EAAgBo2B,EAAb3C,EAAa2C,EAAV1C,QAG3B,CG9EsB2H,CAAwBlG,EAAMnkB,GACjC0pB,GAAgBvF,GACvBn+C,EAAU4jD,GAAqBzF,EAAMnkB,GAErC9G,IAAe,EAAO,sBAAuB,OAAQ,gBAGzD+vB,GAAOiB,EAzGFA,EAAOE,IAAA/6D,KAyGL66D,EAAoBlkD,EAC/B,GAEA,CAAAwoB,IAAA,eAAA77B,MAMA,SAAoB0Z,GAChB,IAAMi+C,EAASlC,GAAAA,eACf,OAAI/7C,EAAmBi+C,EAAOC,QAAQl+C,GAC/Bi+C,CACX,GAEA,CAAA97B,IAAA,aAAA77B,MAGA,SAAkBowC,EAAgB12B,GAC9B,IAAMi+C,EAASlC,GAAAA,WAAwBrlB,GACvC,OAAI12B,EAAmBi+C,EAAOC,QAAQl+C,GAC/Bi+C,CACX,KAACJ,CAAA,CA/He,CAAQnJ,IAgI3B,SAAAqJ,GAlFuBpkD,GAGhB,GAFAkzB,GAAelzB,EAAS,sBAAuB,OAAQ,gBAEnD,aAAcA,GAAWA,EAAQk+B,UAAwC,OAA5Bl+B,EAAQk+B,SAASrB,OAAiB,CAC/E,IAAMqB,EAAWa,GAAAA,YAAqB/+B,EAAQk+B,SAASC,SACjDmmB,EAASlC,GAAAA,aAA0BlkB,EAAUl+B,EAAQk+B,SAAS4f,MACpE,GAAIwG,EAAOt4D,UAAYgU,EAAQhU,SAAWs4D,EAAO7jB,aAAezgC,EAAQygC,WACpE,OAAO6jB,EAEXE,QAAQC,IAAI,mF,CAGhB,IAAMH,EAAS,IAAIJ,GAAOlkD,EAAQygC,YAKlC,OAHAvN,GAAeoxB,EAAOt4D,UAAYgU,EAAQhU,QACtC,8BAA+B,OAAQ,gBAEpCs4D,CACX,CChGJ,IAAMroB,GAAQ,s9NACRuB,GAAW,qEAEbK,GAA0B,KAOjB6mB,GAAO,SAAA3mB,GAAAT,EAAAonB,EAAA3mB,GAAA,I,IAAAR,G,EAAAmnB,E,+YAUhB,SAAAA,IAAA,OAAA/sB,EAAA,KAAA+sB,GAAAnnB,EAAAl0C,KAAA,KAAsB,KAAM4yC,GAAOuB,GAAW,CAS7C,OAPD1F,EAAA4sB,EAAA,OAAAl8B,IAAA,WAAA77B,MAIA,WAEI,OADgB,MAAZkxC,KAAoBA,GAAW,IAAI6mB,GAChC7mB,EACX,KAAC6mB,CAAA,CAnBe,CAAQtnB,ICZtBjU,GAAS,mECIf,IAAAw7B,GAAA,IAAAttB,QAYautB,GAAa,SAAA7mB,GAAAT,EAAAsnB,EAAA7mB,GAAA,I,IAAAR,G,EAAAqnB,E,+YAQtB,SAAAA,EAAY/nB,EAAgB3uB,EAAc22C,EAAgBrnB,GAAgB,IAAApU,E,MAEhD,OAFgDuO,EAAA,KAAAitB,GACtEx7B,EAAAmU,EAAAl0C,KAAA,KAAMwzC,EAAQ3uB,EAAMsvB,G,EAAUC,EAAArU,G,EAAA,CAAA6I,UAAA,EAAAtlC,WAAA,G,qHAAAg4D,I,WAC9B9sB,GAAA4F,EAAArU,GAAAu7B,GAAeE,GAAOz7B,CAC1B,CAYC,OAVD0O,EAAA8sB,EAAA,EAAAp8B,IAAA,UAAAK,IAGA,WAAwB,OAAAkP,GAAO,KAAI4sB,GAAU,GAE7C,CAAAn8B,IAAA,eAAA77B,MAGA,WACI,OC9BF,SAAqBuhB,EAAc42C,GACrC,IAAI7oB,EAAQI,GAAUnuB,GAAM6hB,KAAK,KAsBjC,OAnBA+0B,EAAQt4B,MAAM,MAAMsW,SAAQ,SAAC+hB,GAEzB,IAAM74B,EAAQ64B,EAAO74B,MAAM,iCAC3BkH,GAAyB,OAAVlH,EAAgB,iCAAkC,UAAW84B,GAE5E,IAAIC,EAAY,EACVC,EFbR,SAAqBtvB,EAAexnB,GAItC,IAHA,IAAMmnB,GAAY,GAAKK,GAAS,EAC1BrD,EAAwB,GAC1BV,EAAQ,EAAGqE,EAAO,EAAGivB,EAAQ,EACxBj7B,EAAI,EAAGA,EAAI9b,EAAKzgB,OAAQu8B,IAO7B,IAJA2H,EAAUA,GAAS,EAAKxI,GAAOqB,QAAQtc,EAAK8b,IAC5CgM,GAAQ,EAGDA,GAAQN,GAAO,CAElB,IAAM/oC,EAASglC,GAAUqE,EAAON,EAChC/D,IAAU,GAAMqE,EAAON,GAAU,EACjCM,GAAQN,EAIM,IAAV/oC,EACAs4D,GAAS5vB,GAEThD,EAAOrE,KAAKrhC,EAAQs4D,GACpBA,EAAQ,E,CAKpB,OAAO5yB,CACX,CEhB0B6yB,CAAW74B,SAASL,EAAM,IAAKA,EAAM,IACjDm5B,EAAW94B,SAASL,EAAM,IAC1Bo5B,EAAQ,IAAIpc,OAAM,KAAArc,OAAOX,EAAM,GAAG,MAAM,KAC9CiQ,EAAQA,EAAM1R,QAAQ66B,GAAO,SAAC9zB,EAAK4qB,GAM/B,OAJY,KADE8I,EAAUD,KAEpB7I,EAASzxB,OAAOC,aAAawxB,EAAOjyB,WAAW,GAAIk7B,GACnDJ,KAEG7I,CACX,GACJ,IAEOjgB,EAAMzP,MAAM,IACvB,CDMe64B,CAAW,KAAK7rB,MAAO,KAAKmrB,QACvC,KAACC,CAAA,CAvBqB,CAAQxnB,IEdlC,IAAMnB,GAAQ,kwLACR6oB,GAAU,iWACVtnB,GAAW,qEAEbK,GAA0B,KAOjBynB,GAAO,SAAAC,GAAAjoB,EAAAgoB,EAAAC,GAAA,I,IAAAhoB,G,EAAA+nB,E,+YAUhB,SAAAA,IAAA,OAAA3tB,EAAA,KAAA2tB,GAAA/nB,EAAAl0C,KAAA,KAAsB,KAAM4yC,GAAO6oB,GAAStnB,GAAW,CAStD,OAPD1F,EAAAwtB,EAAA,OAAA98B,IAAA,WAAA77B,MAIA,WAEI,OADgB,MAAZkxC,KAAoBA,GAAW,IAAIynB,GAChCznB,EACX,KAACynB,CAAA,CAnBe,CAAQV,ICX5B,IAAM3oB,GAAQ,w9OACR6oB,GAAU,mWACVtnB,GAAW,qEAEbK,GAA0B,KAOjB2nB,GAAO,SAAAD,GAAAjoB,EAAAkoB,EAAAD,GAAA,I,IAAAhoB,G,EAAAioB,E,+YAUhB,SAAAA,IAAA,OAAA7tB,EAAA,KAAA6tB,GAAAjoB,EAAAl0C,KAAA,KAAsB,KAAM4yC,GAAO6oB,GAAStnB,GAAW,CAStD,OAPD1F,EAAA0tB,EAAA,OAAAh9B,IAAA,WAAA77B,MAIA,WAEI,OADgB,MAAZkxC,KAAoBA,GAAW,IAAI2nB,GAChC3nB,EACX,KAAC2nB,CAAA,CAnBe,CAAQZ,ICL5B,IAAM12C,GAAO,CAGT,qrEAGA,usGAGA,6uDAGA,qlBAGA,6JAGA,2GAGA,aAIEu3C,GAAU,8FAEZC,GAAkC,KAEtC,SAASn5B,GAAI6P,GACT,OAAO5H,GAAQuG,GAAYqB,GAC/B,CAEA,IAAMupB,GAAS,uBACTC,GAAQ,uBAEd,SAAS95B,GAAS5d,GACd,OAAO+sB,GAAa,IAAI9I,WAAWjkB,GACvC,CAEA,SAAS23C,KACL,GAAkB,OAAdH,GAAsB,OAAOA,GAEjC,IAAM7nB,EAAW,GAGXioB,EAAiD,GAcvD,SAAStyB,EAAU4I,GAEf,IADA,IAAI/J,EAAS,GACJrI,EAAI,EAAGA,EAAIoS,EAAK3uC,OAAQu8B,IAAK,CAClC,IAAI+7B,EAAO3pB,EAAKpS,GACV+H,EAAS+zB,EAAUC,IACV,IAAXh0B,IACAA,IAAUg0B,EAAeh0B,GAC7BM,GAAU0zB,E,CAEd,OAAO1zB,CACX,CArBAyzB,EAAUh6B,GAAS,CAAC,IAAK,IAAK,QAAS,EACvCg6B,EAAUh6B,GAAS,CAAC,IAAK,IAAK,QAAS,EAGvCg6B,EAAUh6B,GAAS,CAAC,IAAK,IAAK,OAASA,GAAS,CAAC,IAAK,IAAK,MAC3Dg6B,EAAUh6B,GAAS,CAAC,IAAK,IAAK,OAASA,GAAS,CAAC,IAAK,IAAK,MAC3Dg6B,EAAUh6B,GAAS,CAAC,IAAK,IAAK,OAASA,GAAS,CAAC,IAAK,IAAK,MAC3Dg6B,EAAUh6B,GAAS,CAAC,IAAK,IAAK,OAASA,GAAS,CAAC,IAAK,IAAK,MA0B3D,IAAK,IAAIr+B,EAAS,EAAGA,GAAU,EAAGA,IAE9B,IADA,IAAM46B,EAAIna,GAAKzgB,EAAS,GACfymC,EAAS,EAAGA,EAAS7L,EAAE56B,OAAQymC,GAAUzmC,EAAQ,CAEtD,IADA,IAAM2uC,EAAO,GACJpS,EAAI,EAAGA,EAAIv8B,EAAQu8B,IAAK,CAC5B,IAAMsE,EAAIm3B,GAAQj7B,QAAQnC,EAAE6L,EAASlK,IACrCoS,EAAKpO,KAAK,KACVoO,EAAKpO,KAAU,GAAJM,EAAY,IAAK,KAC5B8N,EAAKpO,KAAkB,KAAR,GAAJM,G,CAEhBuP,EAAS7P,KAAKlC,GAASsQ,G,CAY/B,GATAyB,EAASrL,MAtBT,SAAsBlK,EAAW0c,GAG7B,OAFA1c,EAAIkL,EAAUlL,KACd0c,EAAIxR,EAAUwR,KACO,EACjB1c,EAAI0c,EAAY,EACb,CACX,IAyBIzY,GAAIsR,EAAS,QAAU8nB,IAAUp5B,GAAIsR,EAAS,QAAU+nB,GAAO,CAC/D,IAAMl5B,EAAMmR,EAAS,KACrBA,EAAS,KAAOA,EAAS,KACzBA,EAAS,KAAOnR,C,CAQpB,GAAiB,uEAFAhsB,GAAGm9B,EAAS9N,KAAK,MAAQ,MAGtC,MAAM,IAAIvE,MAAM,2CAMpB,OAFAk6B,GAAY7nB,EAELA,CACX,CAEA,IAAIA,GAA0B,KAOjBmoB,GAAO,SAAA3oB,GAAAC,EAAA0oB,EAAA3oB,GAAA,I,IAAAE,G,EAAAyoB,E,+YAUhB,SAAAA,IAAA,OAAAruB,EAAA,KAAAquB,GAAAzoB,EAAAl0C,KAAA,KAAsB,KAAO,CA6B5B,OA7B6ByuC,EAAAkuB,EAAA,EAAAx9B,IAAA,UAAA77B,MAE9B,SAAQilC,GACJ,IAAMqK,EAAQ4pB,KAGd,OAFA3yB,GAAetB,GAAS,GAAKA,EAAQqK,EAAMxuC,OAAM,uBAAAk/B,OACrBiF,GAAU,QAASA,GACxCqK,EAAMrK,EACjB,GAAC,CAAApJ,IAAA,eAAA77B,MAED,SAAayvC,GACT,OAAOypB,KAAYr7B,QAAQ4R,EAC/B,GAAC,CAAA5T,IAAA,QAAA77B,MAED,SAAMowC,GAEF,OAAOA,EAAOvQ,MAAM,iBACxB,GAAC,CAAAhE,IAAA,OAAA77B,MAED,SAAKsvC,GACD,OAAOA,EAAMlM,KAAK,IACtB,IAEA,EAAAvH,IAAA,WAAA77B,MAIA,WAEI,OADgB,MAAZkxC,KAAoBA,GAAW,IAAImoB,GAChCnoB,EACX,KAACmoB,CAAA,CAvCe,CAAQppB,ICtI5B,IAAM1uB,GAAO,CACT,OACA,05JACA,+lIACA,k8BACA,moCACA,0aACA,iHACA,iFAGE+3C,GAAQ,yEAYVP,GAAkC,KAEtC,SAASG,KACL,GAAiB,MAAbH,GAAqB,OAAOA,GAEhC,IAAM7nB,EAA0B,GAmBhC,GAjBA3vB,GAAK40B,SAAQ,SAAC50B,EAAMzgB,GAChBA,GAAU,EACV,IAAK,IAAIu8B,EAAI,EAAGA,EAAI9b,EAAKzgB,OAAQu8B,GAAKv8B,EAAQ,CAE1C,IADA,IAAI2uC,EAAO,GACF/N,EAAI,EAAGA,EAAI5gC,EAAQ4gC,IACxB+N,KAtBGvnC,EAsBeoxD,GAAMz7B,QAAQtc,EAAK8b,EAAIqE,MArBzC,GACRx5B,EAAOA,EAAO,IAAM,GACbA,GAAQ,KACfA,EAAOA,EAAO,GAAK,IAGhBomC,GAAa,IAAI9I,WAAW,CAAE,IAAmB,KAAbt9B,GAAQ,GAA0B,KAAR,GAAPA,OAiBtDgpC,EAAS7P,KAAKoO,E,CAxB1B,IAAmBvnC,CA0Bf,IAEAgpC,EAASrL,OAMQ,uEAFA9xB,GAAGm9B,EAAS9N,KAAK,MAAQ,MAGtC,MAAM,IAAIvE,MAAM,yCAMpB,OAFAk6B,GAAY7nB,EAELA,CACX,CAEA,IAAIA,GAA0B,KAOjBqoB,GAAO,SAAA7oB,GAAAC,EAAA4oB,EAAA7oB,GAAA,I,IAAAE,G,EAAA2oB,E,+YAUhB,SAAAA,IAAA,OAAAvuB,EAAA,KAAAuuB,GAAA3oB,EAAAl0C,KAAA,KACU,KACV,CAoBC,OApBAyuC,EAAAouB,EAAA,EAAA19B,IAAA,UAAA77B,MAED,SAAQilC,GACJ,IAAMqK,EAAQ4pB,KAGd,OAFA3yB,GAAetB,GAAS,GAAKA,EAAQqK,EAAMxuC,OAAM,uBAAAk/B,OACrBiF,GAAU,QAASA,GACxCqK,EAAMrK,EACjB,GAAC,CAAApJ,IAAA,eAAA77B,MAED,SAAayvC,GACT,OAAOypB,KAAYr7B,QAAQ4R,EAC/B,IAEA,EAAA5T,IAAA,WAAA77B,MAIA,WAEI,OADgB,MAAZkxC,KAAoBA,GAAW,IAAIqoB,GAChCroB,EACX,KAACqoB,CAAA,CAhCe,CAAQtpB,ICpE5B,IAAMX,GAAQ,2+OACRuB,GAAW,qEAEbK,GAA0B,KAOjBsoB,GAAO,SAAApoB,GAAAT,EAAA6oB,EAAApoB,GAAA,I,IAAAR,G,EAAA4oB,E,+YAUhB,SAAAA,IAAA,OAAAxuB,EAAA,KAAAwuB,GAAA5oB,EAAAl0C,KAAA,KAAsB,KAAM4yC,GAAOuB,GAAW,CAS7C,OAPD1F,EAAAquB,EAAA,OAAA39B,IAAA,WAAA77B,MAIA,WAEI,OADgB,MAAZkxC,KAAoBA,GAAW,IAAIsoB,GAChCtoB,EACX,KAACsoB,CAAA,CAnBe,CAAQ/oB,ICV5B,IAAMnB,GAAQ,u0OACRuB,GAAW,qEAEbK,GAA0B,KAOjBuoB,GAAO,SAAAroB,GAAAT,EAAA8oB,EAAAroB,GAAA,I,IAAAR,G,EAAA6oB,E,+YAUhB,SAAAA,IAAA,OAAAzuB,EAAA,KAAAyuB,GAAA7oB,EAAAl0C,KAAA,KAAsB,KAAM4yC,GAAOuB,GAAW,CAS7C,OAPD1F,EAAAsuB,EAAA,OAAA59B,IAAA,WAAA77B,MAIA,WAEI,OADgB,MAAZkxC,KAAoBA,GAAW,IAAIuoB,GAChCvoB,EACX,KAACuoB,CAAA,CAnBe,CAAQhpB,ICN5B,IAAMlvB,GAAO,mgMACPm4C,GAAY,8lDAGZX,GAAkD,CACpDY,MAAO,KACPC,MAAO,MAGLC,GAAiC,CACnCF,MAAO,qEACPC,MAAO,sEAGLN,GAAQ,mEACRQ,GAAQ,6BAEd,SAASZ,GAAUhpB,GACf,GAAyB,MAArB6oB,GAAU7oB,GAAmB,OAAO6oB,GAAU7oB,GAKlD,IAHA,IAAMgB,EAAW,GAEb6oB,EAAc,EACT18B,EAAI,EAAGA,EAAI,KAAMA,IAAK,CAC3B,IAAMyM,EAAIgwB,GAAMj8B,QAAQtc,GAAS,EAAJ8b,IACvB59B,EAAQ,CACV,KAAOqqC,GAAK,GACZ,IAAMwvB,GAAMz7B,QAAQtc,GAAS,EAAJ8b,EAAQ,IACjC,IAAMi8B,GAAMz7B,QAAQtc,GAAS,EAAJ8b,EAAQ,KAGrC,GAAe,UAAX6S,EAEA,IADA,IACS7S,EADMyM,EAAI,EACEzM,EAAI,EAAGA,IACxB59B,EAAM49B,GAAKi8B,GAAMz7B,QAAQ67B,GAAUK,OAAyB,GAAL18B,EAAU,IAAK,KAI9E6T,EAAS7P,KAAKiN,GAAa,IAAI9I,WAAW/lC,I,CAM9C,GAFiBsU,GAAGm9B,EAAS9N,KAAK,MAAQ,QAEzBy2B,GAAO3pB,GACpB,MAAM,IAAIrR,MAAK,sBAAAmB,OAAwBkQ,EAAO,sBAMlD,OAFA6oB,GAAU7oB,GAAUgB,EAEbA,CACX,CAEA,IAAM8oB,GAAoC,GAQ7BC,GAAO,SAAAvpB,GAAAC,EAAAspB,EAAAvpB,GAAA,I,IAAAE,G,EAAAqpB,E,+YAYhB,SAAAA,EAAYC,GAAe,OAAAlvB,EAAA,KAAAivB,GAAArpB,EAAAl0C,KAAA,KAAU,MAAQw9D,EAAU,CA8BtD,OA9BuD/uB,EAAA8uB,EAAA,EAAAp+B,IAAA,UAAA77B,MAExD,SAAQilC,GACJ,IAAMqK,EAAQ4pB,GAAU,KAAKhpB,QAG7B,OAFA3J,GAAetB,GAAS,GAAKA,EAAQqK,EAAMxuC,OAAM,uBAAAk/B,OACrBiF,GAAU,QAASA,GACxCqK,EAAMrK,EACjB,GAAC,CAAApJ,IAAA,eAAA77B,MAED,SAAayvC,GACT,OAAOypB,GAAU,KAAKhpB,QAAQrS,QAAQ4R,EAC1C,GAAC,CAAA5T,IAAA,QAAA77B,MAED,SAAMowC,GAEF,OADAA,EAASA,EAAOxS,QAAQ,iBAAkB,KAC5BiC,MAAM,GACxB,IAEA,EAAAhE,IAAA,WAAA77B,MAOA,SAAgBk6D,GAIZ,OAH0B,MAAtBF,GAAUE,KACVF,GAAUE,GAAW,IAAID,EAAOC,IAE7BF,GAAUE,EACrB,KAACD,CAAA,CA1Ce,CAAQhqB,IC1Cf+pB,GAAsC,CACjDG,GAAIpC,GAAAA,WACJqC,GAAIjpB,GAAAA,WACJkpB,GAAI1B,GAAAA,WACJ2B,GAAIzB,GAAAA,WACJ0B,GAAIf,GAAAA,WACJgB,GAAIf,GAAAA,WACJgB,GAAIpB,GAAAA,WACJqB,GAAInB,GAAAA,WACJI,MAAOM,GAAAA,SAAgB,MACvBL,MAAOK,GAAAA,SAAgB,O,wtBC3BzB,SAASre,GAAO5F,GACZ,IAAMtQ,EAAS,IAAImW,IAEnB,OADA7F,EAAMG,SAAQ,SAACxU,GAAC,OAAK+D,EAAOyP,IAAIxT,EAAE,IAC3B5F,OAAOmR,OAAOxH,EACzB,CAEA,IAAMoW,GAAW,8DACX6e,GAAU/e,GAAOE,GAASjc,MAAM,MAChCkc,GAAW,2DACX6e,GAAUhf,GAAOG,GAASlc,MAAM,MAChCmc,GAAe,0CACfC,GAAcL,GAAOI,GAAanc,MAAM,MAIxCqc,GAAWN,GADC,CAACG,GAAUC,GAFZ,gBAEoCF,IAAU1Y,KAAK,KAClCvD,MAAM,MAElCsc,GAAe,CACjB,IAAK,aAAc,IAAK,cACxB,IAAK,eAAgB,IAAK,gBAC1B,IAAK,QAAS,IAAK,MAGjBC,GAAwB,IAAIC,OAAO,WACnCC,GAAoB,IAAID,OAAO,aAC/BE,GAAgB,IAAIF,OAAO,+BAE3BG,GAAU,IAAIH,OAAO,gCACrBI,GAAY,IAAIJ,OAAO,gEAAgE1E,GAAA,IAAAjN,QAAAgS,GAAA,IAAAhS,QAAAiS,GAAA,IAAAnM,QACvFoM,GAAW,WAKb,SAAAA,EAAYC,GAAQ7R,IAAA,KAAA4R,GAAAtF,GAAA,KAAAqF,IAAA1R,GAAA,KAAA0M,GAAA,CAAArS,UAAA,EAAAtlC,WAAA,IAAAirC,GAAA,KAAAyR,GAAA,CAAApX,UAAA,EAAAtlC,WAAA,IAChBkrC,KAAAzuC,KAAIk7C,GAAW,GACfzM,KAAAzuC,KAAIigD,GAAWG,EAAOrd,QAC1B,CAsFC,OAtFA2L,IAAAyR,EAAA,EAAA/gB,IAAA,SAAAK,IALD,WAAe,OAAAkP,KAAO3uC,KAAIk7C,GAAU,GAAC,CAAA9b,IAAA,SAAAK,IACrC,WAAe,OAAOkP,KAAA3uC,KAAIigD,IAAS57C,OAAMsqC,KAAG3uC,KAAIk7C,GAAU,GAAC,CAAA9b,IAAA,QAAA77B,MAK3D,WAAU,OAAO,IAAI48C,EAAWxR,KAAC3uC,KAAIigD,IAAW,GAAC,CAAA7gB,IAAA,QAAA77B,MACjD,WAAUkrC,KAAAzuC,KAAIk7C,GAAW,EAAG,GAAC,CAAA9b,IAAA,aAAA77B,MAY7B,SAAW88C,GACP,IAAMC,EAAMtgD,KAAKugD,OACjB,GAAiB,YAAbD,EAAIn2C,OAAuBk2C,EAAQG,IAAIF,EAAIG,MAC3C,MAAM,IAAIre,MAAM,oBAADmB,OAAqB+c,EAAIG,OAE5C,OAAOzgD,KAAK0gD,MAAMD,IACtB,GACA,CAAArhB,IAAA,UAAA77B,MACA,SAAQ4G,GACJ,GAAInK,KAAKugD,OAAOp2C,OAASA,EACrB,MAAM,IAAIi4B,MAAM,YAADmB,OAAap5B,EAAI,UAAAo5B,OAASiB,KAAKC,UAAUzkC,KAAKugD,UAEjE,OAAOvgD,KAAK0gD,MAAMD,IACtB,GACA,CAAArhB,IAAA,WAAA77B,MACA,WACI,IAAM+8C,EAAMtgD,KAAKugD,OACjB,GAAiB,eAAbD,EAAIn2C,KACJ,MAAM,IAAIi4B,MAAM,aAEpB,IAAM6G,EAAMqL,GAAGt0C,KAAIkgD,GAAAS,IAAA1gD,KAAJD,KAAqB2uC,KAAA3uC,KAAIk7C,IAAW,EAAGoF,EAAI1d,MAAQ,GAElE,OADA6L,KAAAzuC,KAAIk7C,GAAWoF,EAAI1d,MAAQ,GACpBqG,CACX,GACA,CAAA7J,IAAA,YAAA77B,MACA,WACI,IAAM+8C,EAAMtgD,KAAKugD,OACjB,GAAiB,eAAbD,EAAIn2C,KACJ,MAAM,IAAIi4B,MAAM,aAGpB,IADA,IAAM6G,EAAS,GACR0F,KAAA3uC,KAAIk7C,IAAWoF,EAAI1d,MAAQ,GAAG,CACjC,IAAMge,EAAO5gD,KAAKugD,OAAOM,SACzB5X,EAAOrE,KAAI0P,GAACt0C,KAAIkgD,GAAAS,IAAA1gD,KAAJD,KAAqB2uC,KAAA3uC,KAAIk7C,IAAW,EAAG0F,IACnDnS,KAAAzuC,KAAIk7C,GAAW0F,EACnB,CAEA,OADAnS,KAAAzuC,KAAIk7C,GAAWoF,EAAI1d,MAAQ,GACpBqG,CACX,GACA,CAAA7J,IAAA,OAAA77B,MACA,WACI,GAAIorC,KAAA3uC,KAAIk7C,KAAYvM,KAAA3uC,KAAIigD,IAAS57C,OAC7B,MAAM,IAAI+9B,MAAM,iBAEpB,OAAOuM,KAAA3uC,KAAIigD,IAAAtR,KAAS3uC,KAAIk7C,IAC5B,GACA,CAAA9b,IAAA,cAAA77B,MACA,SAAY88C,GACR,IAAMC,EAAMtgD,KAAK8gD,SAAS,WAC1B,OAAe,MAAPR,GAAeD,EAAQG,IAAIF,GAAQA,EAAM,IACrD,GACA,CAAAlhB,IAAA,WAAA77B,MACA,SAAS4G,GACL,GAAoB,IAAhBnK,KAAKqE,OACL,OAAO,KAEX,IAAMi8C,EAAMtgD,KAAKugD,OACjB,OAAQD,EAAIn2C,OAASA,EAAQm2C,EAAIG,KAAO,IAC5C,GACA,CAAArhB,IAAA,MAAA77B,MACA,WAAM,IAAAw9C,EACI9X,EAASjpC,KAAKugD,OAEpB,OADA9R,KAAAzuC,KAAIk7C,IAAA6F,EAAApS,KAAJ3uC,KAAIk7C,MAAA6F,IACG9X,CACX,GAAC,CAAA7J,IAAA,WAAA77B,MACD,WAEI,IADA,IAAM68C,EAAS,GACNxf,EAAC+N,KAAG3uC,KAAIk7C,IAAUta,EAAI+N,KAAA3uC,KAAIigD,IAAS57C,OAAQu8B,IAAK,CACrD,IAAMogB,EAAQrS,KAAA3uC,KAAIigD,IAASrf,GAC3Bwf,EAAOxb,KAAK,GAADrB,OAAIyd,EAAM72C,KAAI,KAAAo5B,OAAIyd,EAAMP,MACvC,CACA,MAAO,gBAAPld,OAAuB6c,EAAOzZ,KAAK,KAAI,IAC3C,KAACwZ,CAAA,CA9FY,GA8FZ,SAAAQ,KAnFiC,IAAlBlrC,EAAIuvB,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,EAAGrvB,EAAEqvB,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,EAC3B,OAAO,IAAImb,GAAYxR,KAAA3uC,KAAIigD,IAASld,MAAMttB,EAAME,GAAI8wB,KAAI,SAACO,GACrD,OAAO1H,OAAOmR,OAAOnR,OAAOqK,OAAO,CAAC,EAAG3C,EAAG,CACtCpE,MAAQoE,EAAEpE,MAAQntB,EAClBwrC,SAAWja,EAAEia,SAAWxrC,EACxBorC,SAAW7Z,EAAE6Z,SAAWprC,IAGhC,IACJ,CA4EJ,SAASqtC,GAAIrC,GAST,IARA,IAAML,EAAS,GACTlH,EAAa,SAACj1C,GAChB,IAAM+8C,EAASlW,EAAS2V,EAAKp8C,OAAUmgC,KAAKC,UAAUgc,EAAK3V,IAAW,OACtE,MAAM,IAAI1I,MAAM,iBAADmB,OAAkByd,EAAK,QAAAzd,OAAOuH,EAAM,MAAAvH,OAAKt/B,GAC5D,EACIw+C,EAAW,GACXC,EAAS,GACT5X,EAAS,EACNA,EAAS2V,EAAKp8C,QAAQ,CAEzB,IAAIs+C,EAAMlC,EAAK1V,UAAUD,GACrBlI,EAAQ+f,EAAI/f,MAAM+c,IAClB/c,IACAkI,GAAUlI,EAAM,GAAGv+B,OACnBs+C,EAAMlC,EAAK1V,UAAUD,IAEzB,IAAMkW,EAAQ,CAAE4B,MAAOH,EAASp+C,OAAQ48C,UAAW,EAAGJ,UAAW,EAAGje,OAAQ,EAAGz4B,KAAM,GAAIs2C,KAAM,GAAI3V,OAAAA,EAAQvnC,OAAQ,GACnH68C,EAAOxb,KAAKoc,GACZ,IAAI72C,EAAQu1C,GAAaiD,EAAI,KAAO,GACpC,GAAIx4C,GAIA,GAHA62C,EAAM72C,KAAOA,EACb62C,EAAMP,KAAOkC,EAAI,GACjB7X,IACa,eAAT3gC,EACAs4C,EAAS7d,KAAKwb,EAAO/7C,OAAS,GAC9Bq+C,EAAO9d,KAAKwb,EAAO/7C,OAAS,QAE3B,GAAY,eAAR8F,EACmB,IAApBs4C,EAASp+C,QACT60C,EAAW,4BAEf8H,EAAMpe,MAAQ6f,EAAS/B,MACtBN,EAAOY,EAAMpe,OAAQA,MAAQwd,EAAO/7C,OAAS,EAC9C28C,EAAM4B,QACN5B,EAAMC,SAAWyB,EAAOhC,MACvBN,EAAOY,EAAMC,UAAWJ,SAAWT,EAAO/7C,OAAS,OAEnD,GAAa,UAAT8F,EACL62C,EAAMC,SAAWyB,EAAOhC,MACvBN,EAAOY,EAAMC,UAAWJ,SAAWT,EAAO/7C,OAAS,EACpDq+C,EAAO9d,KAAKwb,EAAO/7C,OAAS,QAE3B,GAAa,iBAAT8F,EACL62C,EAAM72C,KAAO,eAEZ,GAAa,kBAATA,EAA0B,CAE/B,IAAI04C,EAASzC,EAAOM,MAAMD,KAC1B,GAAIL,EAAO/7C,OAAS,GAAwC,WAAnC+7C,EAAOA,EAAO/7C,OAAS,GAAG8F,KAAmB,CAClE,IAAM5G,EAAQ68C,EAAOM,MAAMD,KAC3BoC,EAASt/C,EAAQs/C,EAChBzC,EAAOA,EAAO/7C,OAAS,GAAId,MAAQ4uB,GAAU5uB,EAClD,CACA,GAAsB,IAAlB68C,EAAO/7C,QAAmD,YAAnC+7C,EAAOA,EAAO/7C,OAAS,GAAG8F,KACjD,MAAM,IAAIi4B,MAAM,2BAEnBge,EAAOA,EAAO/7C,OAAS,GAAIo8C,MAAQoC,CACxC,OAIJ,GADAjgB,EAAQ+f,EAAI/f,MAAMkd,IAClB,CAGI,GAFAkB,EAAMP,KAAO7d,EAAM,GACnBkI,GAAUkW,EAAMP,KAAKp8C,OACjBo7C,GAASe,IAAIQ,EAAMP,MAAO,CAC1BO,EAAM72C,KAAO,UACb,QACJ,CACA,GAAI62C,EAAMP,KAAK7d,MAAMod,IAAY,CAC7BgB,EAAM72C,KAAO,OACb,QACJ,CACA62C,EAAM72C,KAAO,IAEjB,KAbA,CAeA,KADAy4B,EAAQ+f,EAAI/f,MAAMid,KAOlB,MAAM,IAAIzd,MAAM,oBAADmB,OAAqBiB,KAAKC,UAAUke,EAAI,IAAG,iBAAApf,OAAgBuH,IALtEkW,EAAMP,KAAO7d,EAAM,GACnBoe,EAAM72C,KAAO,SACb2gC,GAAUkW,EAAMP,KAAKp8C,MALzB,CASJ,CACA,OAAO,IAAI87C,GAAYC,EAAO3Z,KAAI,SAACO,GAAC,OAAK1H,OAAOmR,OAAOzJ,EAAE,IAC7D,CAEA,SAASo3B,GAAYvyB,EAAKwU,GACtB,IAAIge,EAAW,GACf,IAAK,IAAMj/B,KAAOihB,EAAQzY,OAClBiE,EAAI2U,IAAIphB,IACRi/B,EAASz5B,KAAKxF,GAGtB,GAAIi/B,EAASh6D,OAAS,EAClB,MAAM,IAAI+9B,MAAM,sBAADmB,OAAuB86B,EAAS13B,KAAK,OAE5D,CAGA,SAAS23B,GAAYn0D,EAAMi2C,GACvB,GAAIA,EAAOme,YAAYJ,IAAU,CAC7B,IAAM/c,EAAUhB,EAAOM,MAAMD,KAC7B,GAAIW,IAAYj3C,EACZ,MAAM,IAAIi4B,MAAM,YAADmB,OAAap5B,EAAI,UAAAo5B,OAAS6d,GAEjD,CACA,OAAOhB,EAAO6C,QAAQ,KAC1B,CAEA,SAAS/B,GAAgBd,EAAQC,GAE7B,IADA,IAAMc,EAAW,IAAI/B,MACR,CACT,IAAMgC,EAAUhB,EAAOU,SAAS,WAChC,GAAe,MAAXM,GAAoBf,IAAYA,EAAQG,IAAIY,GAC5C,MAGJ,GADAhB,EAAOM,MACHS,EAASX,IAAIY,GACb,MAAM,IAAIhf,MAAM,uBAADmB,OAAwBiB,KAAKC,UAAU2c,KAE1DD,EAASzI,IAAI0I,EACjB,CACA,OAAO9hB,OAAOmR,OAAO0Q,EACzB,CAEA,SAASqd,GAAkBpe,GACvB,IAAIqe,EAAYvd,GAAgBd,EAAQ8d,IAKxC,OAHAE,GAAYK,EAAWtf,GAAO,8BAA8B/b,MAAM,OAClEg7B,GAAYK,EAAWtf,GAAO,+BAA+B/b,MAAM,OAE/Dq7B,EAAUje,IAAI,QACP,OAEPie,EAAUje,IAAI,QACP,OAEPie,EAAUje,IAAI,WACP,UAEPie,EAAUje,IAAI,cACP,aAGPie,EAAUje,IAAI,YACP,OAEJ,YACX,CAEA,SAASke,GAActe,EAAQmC,GAC3B,OAAOnC,EAAO4C,YAAYvc,KAAI,SAACO,GAAC,OAAK0a,GAAUjsC,KAAKuxB,EAAGub,EAAa,GACxE,CAEA,SAASoc,GAAWve,GAChB,GAAIA,EAAOU,SAAS,MAAO,CAEvB,GADAV,EAAOM,MACHN,EAAOU,SAAS,UAChB,OAAOzU,GAAU+T,EAAOM,MAAMD,MAElC,MAAM,IAAIre,MAAM,cACpB,CACA,OAAO,IACX,CACA,SAASw8B,GAAWxe,GAChB,GAAIA,EAAO/7C,OACP,MAAM,IAAI+9B,MAAM,sBAADmB,OAAuB6c,EAAO1d,YAErD,CACA,IAAM2e,GAAiB,IAAIzB,OAAO,sBAClC,SAAS0B,GAAgBn3C,GACrB,IAAMy4B,EAAQz4B,EAAKy4B,MAAMod,IAEzB,GADAlW,GAAelH,EAAO,eAAgB,OAAQz4B,GACjC,SAATA,EACA,MAAO,UAEX,GAAa,QAATA,EACA,MAAO,SAEX,GAAIy4B,EAAM,GAAI,CAEV,IAAMv+B,EAAS4+B,SAASL,EAAM,IAC9BkH,GAA0B,IAAXzlC,GAAgBA,GAAU,GAAI,uBAAwB,OAAQ8F,EACjF,MACK,GAAIy4B,EAAM,GAAI,CAEf,IAAMiZ,EAAO5Y,SAASL,EAAM,IAC5BkH,GAAwB,IAAT+R,GAAcA,GAAQ,KAAQA,EAAO,GAAO,EAAG,wBAAyB,OAAQ1xC,EACnG,CACA,OAAOA,CACX,CAEA,IAAM2jC,GAAS,CAAC,EACVyT,GAAW1hB,OAAM,IAAK,oBACtB2hB,GAAoB,qBACpBqd,GAAwB,iBACxBC,GAAwB,iBACxBC,GAA8B,uBAC9BC,GAA2B,oBAC3BC,GAA2B,oBAC3BC,GAAyB,kBAC/Bzd,GAAA,IAAA1N,QAGa2N,GAAS,WAyClB,SAAAA,EAAYjX,EAAO/nC,EAAMyH,EAAM0zC,EAAUzjB,EAASunB,EAAYC,EAAaC,GAMvE,GANsFtT,IAAA,KAAAmT,GAAA7G,GAAA,KAAA4G,IAAA/N,IAAA,oBAAAA,IAAA,oBAAAA,IAAA,wBAAAA,IAAA,uBAAAA,IAAA,0BAAAA,IAAA,2BAAAA,IAAA,6BACtFnJ,GAAcE,EAAOqD,GAAQ,aAC7BxO,OAAOC,eAAev/B,KAAMuhD,GAAU,CAAEh+C,MAAOi+C,KAC3CG,IACAA,EAAariB,OAAOmR,OAAOkR,EAAW5e,UAEzB,UAAb8a,GACA,GAAmB,MAAf+D,GAAwC,MAAjBC,EACvB,MAAM,IAAIzf,MAAM,SAGnB,GAAmB,MAAfwf,GAAwC,MAAjBC,EAC5B,MAAM,IAAIzf,MAAM,IAEpB,GAAiB,UAAbyb,EACkB,MAAd8D,IAEAA,EAAariB,OAAOmR,OAAO,UAG9B,GAAkB,MAAdkR,EACL,MAAM,IAAIvf,MAAM,IAEpBsG,GAAiB1oC,KAAM,CACnB0C,KAAAA,EAAMyH,KAAAA,EAAM0zC,SAAAA,EAAUzjB,QAAAA,EAASunB,WAAAA,EAAYC,YAAAA,EAAaC,cAAAA,GAEhE,CAiLA,IAAAC,EAqGC,OArRDpT,IAAAgT,EAAA,EAAAtiB,IAAA,SAAA77B,MAWA,SAAO24C,GAIH,GAHc,MAAVA,IACAA,EAAS,WAEE,SAAXA,EAAmB,CACnB,IAAIjT,EAAS,CACT9+B,KAA0B,UAAlBnK,KAAK69C,SAAwB,QAAU79C,KAAKmK,KACpDzH,KAAO1C,KAAK0C,WAAQyB,GAQxB,MAN8B,kBAAlBnE,KAAKo6B,UACb6O,EAAO7O,QAAUp6B,KAAKo6B,SAEtBp6B,KAAK+hD,YACL9Y,EAAO0Y,WAAa3hD,KAAK2hD,WAAWlb,KAAI,SAAC5E,GAAC,OAAK2C,KAAKwd,MAAMngB,EAAEqa,OAAOA,GAAQ,KAExE1X,KAAKC,UAAUwE,EAC1B,CACA,IAAIA,EAAS,GAyBb,OAvBIjpC,KAAK8oC,WACLG,GAAUjpC,KAAK6hD,cAAc3F,OAAOA,GACpCjT,GAAU,IAAJ1F,OAASvjC,KAAK4hD,YAAc,EAAI,GAAKvgB,OAAOrhC,KAAK4hD,aAAY,MAG/D5hD,KAAK+hD,WACU,YAAX7F,IACAjT,GAAUjpC,KAAKmK,MAEnB8+B,GAAU,IAAMjpC,KAAK2hD,WAAWlb,KAAI,SAACwb,GAAI,OAAKA,EAAK/F,OAAOA,EAAO,IAAEvV,KAAiB,SAAXuV,EAAqB,KAAO,KAAO,KAG5GjT,GAAUjpC,KAAKmK,KAGR,YAAX+xC,KACqB,IAAjBl8C,KAAKo6B,UACL6O,GAAU,YAEC,SAAXiT,GAAqBl8C,KAAK0C,OAC1BumC,GAAU,IAAMjpC,KAAK0C,OAGtBumC,CACX,GAUA,CAAA7J,IAAA,UAAA77B,MAMA,WACI,MAA0B,UAAlBvD,KAAK69C,QACjB,GACA,CAAAze,IAAA,UAAA77B,MAMA,WACI,MAA0B,UAAlBvD,KAAK69C,QACjB,GACA,CAAAze,IAAA,cAAA77B,MAMA,WACI,OAAwB,MAAhBvD,KAAKo6B,OACjB,GACA,CAAAgF,IAAA,OAAA77B,MAIA,SAAKA,EAAO2+C,GACR,GAAIliD,KAAK8oC,UAAW,CAChB,IAAKlH,MAAMkH,QAAQvlC,GACf,MAAM,IAAI6+B,MAAM,uBAEpB,IAA0B,IAAtBpiC,KAAK4hD,aAAsBr+C,EAAMc,SAAWrE,KAAK4hD,YACjD,MAAM,IAAIxf,MAAM,yBAEpB,IAAMpC,EAAQhgC,KACd,OAAOuD,EAAMkjC,KAAI,SAAC9D,GAAC,OAAM3C,EAAM6hB,cAAcM,KAAKxf,EAAGuf,EAAQ,GACjE,CACA,GAAIliD,KAAK+hD,UAAW,CAChB,IAAKngB,MAAMkH,QAAQvlC,GACf,MAAM,IAAI6+B,MAAM,uBAEpB,GAAI7+B,EAAMc,SAAWrE,KAAK2hD,WAAWt9C,OACjC,MAAM,IAAI+9B,MAAM,yBAEpB,IAAMpC,EAAQhgC,KACd,OAAOuD,EAAMkjC,KAAI,SAAC9D,EAAG/B,GAAC,OAAMZ,EAAM2hB,WAAW/gB,GAAGuhB,KAAKxf,EAAGuf,EAAQ,GACpE,CACA,OAAOA,EAAQliD,KAAKmK,KAAM5G,EAC9B,GAAC,CAAA67B,IAAA,YAAA77B,OA2DDu+C,EAAAra,IAAAC,IAAAA,MAOA,SAAAC,EAAgBpkC,EAAO2+C,GAAO,IAAAE,EAAAnZ,EAAA,OAAAvB,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAKvB,GAJGoa,EAAW,GACXnZ,EAAS,CAAC1lC,GAChB+wC,GAAAt0C,KAAIyhD,GAAAY,IAAApiD,KAAJD,KAAgBoiD,EAAU7+C,EAAO2+C,GAAS,SAAC3+C,GACvC0lC,EAAO,GAAK1lC,CAChB,KACI6+C,EAAS/9C,OAAQ,CAAFyjC,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EACTC,QAAQC,IAAIka,GAAS,cAAAta,EAAAO,OAAA,SAExBY,EAAO,IAAE,wBAAAnB,EAAAW,OAAA,GAAAd,EAAA,UACnB,SAAAL,EAAAgb,GAAA,OAAAR,EAAAta,MAAA,KAAAxC,UAAA,KACD,EAAA5F,IAAA,OAAA77B,MAMA,SAAYd,EAAK8/C,GACb,GAAIb,EAAUc,YAAY//C,GACtB,OAAOA,EAEX,GAAqB,iBAATA,EACR,OAAOi/C,EAAUjsC,KAAKqtC,GAAIrgD,GAAM8/C,GAE/B,GAAI9/C,aAAe09C,GAAa,CACjC,IAAIh2C,EAAO,GAAI0zC,EAAW,GACtBkF,EAAQ,KACR7B,GAAgBz+C,EAAK08C,GAAO,CAAC,WAAWqB,IAAI,UAAY/9C,EAAIq+C,SAAS,eAErEjD,EAAW,QACXkF,EAAQtgD,EAAIugD,YAAYvc,KAAI,SAACO,GAAC,OAAK0a,EAAUjsC,KAAKuxB,EAAE,IACpD78B,EAAO,SAAHo5B,OAAYwf,EAAMtc,KAAI,SAAC5E,GAAC,OAAKA,EAAEqa,QAAQ,IAAEvV,KAAK,KAAI,MAKtDkX,EADA1zC,EAAOm3C,GAAgB7+C,EAAIwgD,QAAQ,SAMvC,IAFA,IAAIpB,EAAgB,KAChBD,EAAc,KACXn/C,EAAI4B,QAAU5B,EAAIq+C,SAAS,YAAY,CAC1C,IAAMoC,EAAUzgD,EAAIi+C,MACpBmB,EAAgB,IAAIH,EAAU5T,GAAQ,GAAI3jC,EAAM0zC,EAAU,KAAMkF,EAAOnB,EAAaC,GACpFD,EAAcsB,EAAQ3/C,MACtB4G,GAAQ+4C,EAAQzC,KAChB5C,EAAW,QACXkF,EAAQ,IACZ,CACA,IAAI3oB,EAAU,KAEd,GADiB8mB,GAAgBz+C,EAAK+8C,IACzBgB,IAAI,WAAY,CACzB,IAAK+B,EACD,MAAM,IAAIngB,MAAM,IAEpBhI,GAAU,CACd,CACA,IAAM13B,EAAQD,EAAIq+C,SAAS,MAAQr+C,EAAIi+C,MAAMD,KAAO,GACpD,GAAIh+C,EAAI4B,OACJ,MAAM,IAAI+9B,MAAM,mBAEpB,OAAO,IAAIsf,EAAU5T,GAAQprC,EAAMyH,EAAM0zC,EAAUzjB,EAAS2oB,EAAOnB,EAAaC,EACpF,CACA,IAAMn/C,EAAOD,EAAIC,KACjBonC,IAAgBpnC,GAA2B,iBAAVA,GAAsBA,EAAKkgC,MAAMmd,IAAW,eAAgB,WAAYr9C,GACzG,IAAI03B,EAAU33B,EAAI23B,QACH,MAAXA,IACA0P,GAAeyY,EAAc,8BAA+B,cAAe9/C,EAAI23B,SAC/EA,IAAYA,GAEhB,IAAIjwB,EAAO1H,EAAI0H,KACXg5C,EAAah5C,EAAKy4B,MAAMye,IAC5B,GAAI8B,EAAY,CACZ,IAAMvB,EAAc3e,SAASkgB,EAAW,IAAM,MACxCtB,EAAgBH,EAAUjsC,KAAK,CACjCtL,KAAMg5C,EAAW,GACjBxB,WAAYl/C,EAAIk/C,aAEpB,OAAO,IAAID,EAAU5T,GAAQprC,GAAQ,GAAIyH,EAAM,QAASiwB,EAAS,KAAMwnB,EAAaC,EACxF,CACA,GAAa,UAAT13C,GAAoBA,EAAKysC,WAAW,WAA0BzsC,EAAKysC,WAAW,KAAmB,CACjG,IAAMmM,EAA2B,MAAlBtgD,EAAIk/C,WAAsBl/C,EAAIk/C,WAAWlb,KAAI,SAAC5E,GAAC,OAAK6f,EAAUjsC,KAAKosB,EAAE,IAAI,KAGxF,OAFc,IAAI6f,EAAU5T,GAAQprC,GAAQ,GAAIyH,EAAM,QAASiwB,EAAS2oB,EAAO,KAAM,KAGzF,CAEA,OADA54C,EAAOm3C,GAAgB7+C,EAAI0H,MACpB,IAAIu3C,EAAU5T,GAAQprC,GAAQ,GAAIyH,EAAMA,EAAMiwB,EAAS,KAAM,KAAM,KAC9E,GACA,CAAAgF,IAAA,cAAA77B,MAGA,SAAmBA,GACf,OAAQA,GAASA,EAAMg+C,MAAcC,EACzC,KAACE,CAAA,CAzViB,GA2VtB,SAAAW,GAjKeD,EAAU7+C,EAAO2+C,EAASkB,GACjC,GAAIpjD,KAAK8oC,UAAW,CAChB,IAAKlH,MAAMkH,QAAQvlC,GACf,MAAM,IAAI6+B,MAAM,uBAEpB,IAA0B,IAAtBpiC,KAAK4hD,aAAsBr+C,EAAMc,SAAWrE,KAAK4hD,YACjD,MAAM,IAAIxf,MAAM,yBAEpB,IAAMihB,EAAYrjD,KAAK6hD,cACjB5Y,EAAS1lC,EAAMw/B,QAOrB,OANAkG,EAAOyQ,SAAQ,SAACn2C,EAAOilC,GACnB8L,GAAA+O,EAAS5B,GAAAY,IAAApiD,KAATojD,EAAqBjB,EAAU7+C,EAAO2+C,GAAS,SAAC3+C,GAC5C0lC,EAAOT,GAASjlC,CACpB,GACJ,SACA6/C,EAASna,EAEb,CACA,GAAIjpC,KAAK+hD,UAAW,CAChB,IAEI9Y,EAFE0Y,EAAa3hD,KAAK2hD,WAGxB,GAAI/f,MAAMkH,QAAQvlC,GACd0lC,EAAS1lC,EAAMw/B,YAEd,CACD,GAAa,MAATx/B,GAAoC,WAAnB2jC,IAAQ3jC,GACzB,MAAM,IAAI6+B,MAAM,uBAEpB6G,EAAS0Y,EAAWlb,KAAI,SAAC6c,GACrB,IAAKA,EAAM5gD,KACP,MAAM,IAAI0/B,MAAM,mDAEpB,KAAMkhB,EAAM5gD,QAAQa,GAChB,MAAM,IAAI6+B,MAAM,+BAADmB,OAAgC+f,EAAM5gD,OAEzD,OAAOa,EAAM+/C,EAAM5gD,KACvB,GACJ,CACA,GAAIumC,EAAO5kC,SAAWrE,KAAK2hD,WAAWt9C,OAClC,MAAM,IAAI+9B,MAAM,yBAQpB,OANA6G,EAAOyQ,SAAQ,SAACn2C,EAAOilC,GAAU,IAAA+a,EAC7BjP,GAAAiP,EAAA5B,EAAWnZ,GAAMiZ,GAAAY,IAAApiD,KAAAsjD,EAAYnB,EAAU7+C,EAAO2+C,GAAS,SAAC3+C,GACpD0lC,EAAOT,GAASjlC,CACpB,GACJ,SACA6/C,EAASna,EAEb,CACA,IAAMA,EAASiZ,EAAQliD,KAAKmK,KAAM5G,GAC9B0lC,EAAOua,KACPpB,EAASxd,KAAK6C,IAAAC,IAAAA,MAAC,SAAA+b,IAAA,OAAA/b,IAAAA,MAAA,SAAAgc,GAAA,cAAAA,EAAA3b,KAAA2b,EAAA1b,MAAA,OAA4B,OAA5B0b,EAAAC,GAAoBP,EAAQM,EAAA1b,KAAA,EAAOiB,EAAM,OAAAya,EAAAE,GAAAF,EAAAtb,MAAA,EAAAsb,EAAAC,IAAAD,EAAAE,IAAA,wBAAAF,EAAAjb,OAAA,GAAAgb,EAAA,IAA1Chc,IAGd2b,EAASna,EAEjB,CA2GG,IAAMk2B,GAAQ,WAYjB,SAAAA,EAAY10B,EAAOtgC,EAAMi1D,GAAQ7wB,IAAA,KAAA4wB,GAAAzrB,IAAA,oBAAAA,IAAA,sBAC7BnJ,GAAcE,EAAOqD,GAAQ,YAE7BpF,GAAiB1oC,KAAM,CAAEmK,KAAAA,EAAMi1D,OAD/BA,EAAS9/B,OAAOmR,OAAO2uB,EAAOr8B,UAElC,CA4EC,OA3ED2L,IAAAywB,EAAA,OAAA//B,IAAA,OAAA77B,MAIA,SAAYd,GACR,GAAqB,iBAATA,EAAmB,CAE3B,IACI08D,EAAS1pD,KAAK+uB,KAAKwd,MAAMv/C,GAC7B,CACA,MAAOsqC,GAAK,CAEZ,OAAOoyB,EAAS1pD,KAAKqtC,GAAIrgD,GAC7B,CACA,GAAIA,aAAe09C,GAGf,OADa19C,EAAI87D,YAAYJ,KAEzB,IAAK,cAAe,OAAOkB,GAAoB5pD,KAAKhT,GACpD,IAAK,QAAS,OAAO68D,GAAc7pD,KAAKhT,GACxC,IAAK,QAAS,OAAO88D,GAAc9pD,KAAKhT,GACxC,IAAK,WACL,IAAK,UACD,OAAO+8D,GAAiB/pD,KAAKhT,GACjC,IAAK,WAAY,OAAOg9D,GAAiBhqD,KAAKhT,GAC9C,IAAK,SAAU,OAAOi9D,GAAejqD,KAAKhT,QAG7C,GAAqB,WAAjBykC,IAAQzkC,GAAmB,CAEhC,OAAQA,EAAI0H,MACR,IAAK,cAAe,OAAOk1D,GAAoB5pD,KAAKhT,GACpD,IAAK,QAAS,OAAO68D,GAAc7pD,KAAKhT,GACxC,IAAK,QAAS,OAAO88D,GAAc9pD,KAAKhT,GACxC,IAAK,WACL,IAAK,UACD,OAAO+8D,GAAiB/pD,KAAKhT,GACjC,IAAK,WAAY,OAAOg9D,GAAiBhqD,KAAKhT,GAC9C,IAAK,SAAU,OAAOi9D,GAAejqD,KAAKhT,GAE9CmnC,IAAO,EAAO,qBAAFrG,OAAuB9gC,EAAI0H,MAAQ,wBAAyB,CACpEmgC,UAAW,iBAEnB,CACAR,IAAe,EAAO,8BAA+B,MAAOrnC,EAChE,GACA,CAAA28B,IAAA,gBAAA77B,MAGA,SAAqBA,GACjB,OAAO87D,GAAoBM,WAAWp8D,EAC1C,GACA,CAAA67B,IAAA,UAAA77B,MAGA,SAAeA,GACX,OAAO+7D,GAAcK,WAAWp8D,EACpC,GACA,CAAA67B,IAAA,UAAA77B,MAGA,SAAeA,GACX,OAAOg8D,GAAcI,WAAWp8D,EACpC,GACA,CAAA67B,IAAA,aAAA77B,MAGA,SAAkBA,GACd,OAAOk8D,GAAiBE,WAAWp8D,EACvC,GACA,CAAA67B,IAAA,WAAA77B,MAGA,SAAgBA,GACZ,OAAOm8D,GAAeC,WAAWp8D,EACrC,KAAC47D,CAAA,CA5FgB,GAkGRS,GAAa,SAAAC,GAAA3rB,IAAA0rB,EAAAC,GAAA,IAAA1rB,EAAA+J,GAAA0hB,GAQtB,SAAAA,EAAYn1B,EAAOtgC,EAAMzH,EAAM08D,GAAQ,IAAApkB,EAIF,OAJEzM,IAAA,KAAAqxB,GACnC5kB,EAAA7G,EAAAl0C,KAAA,KAAMwqC,EAAOtgC,EAAMi1D,GAAQ1rB,IAAAW,IAAA2G,GAAA,eAC3BlR,GAAiC,iBAAVpnC,GAAsBA,EAAKkgC,MAAMmd,IAAU,qBAAsB,OAAQr9C,GAChG08D,EAAS9/B,OAAOmR,OAAO2uB,EAAOr8B,SAC9B2F,GAAgB2L,IAAA2G,GAAO,CAAEt4C,KAAAA,IAAQs4C,CACrC,CAAC,OAAAtM,IAAAkxB,EAAA,CAbqB,CAAST,IAenC,SAASW,GAAW5jB,EAAQ8Z,GACxB,MAAO,IAAMA,EAAOvvB,KAAI,SAAC4sB,GAAC,OAAKA,EAAEnX,OAAOA,EAAO,IAAEvV,KAAiB,SAAXuV,EAAqB,KAAO,KAAO,GAC9F,CAIO,IAAMojB,GAAa,SAAAS,GAAA7rB,IAAAorB,EAAAS,GAAA,IAAA1hB,EAAAH,GAAAohB,GAItB,SAAAA,EAAY70B,EAAO/nC,EAAM08D,GAAQ,IAAAxa,EAE2C,OAF3CrW,IAAA,KAAA+wB,GAC7B1a,EAAAvG,EAAAp+C,KAAA,KAAMwqC,EAAO,QAAS/nC,EAAM08D,GAC5B9/B,OAAOC,eAAc8U,IAAAuQ,GAAOrD,GAAU,CAAEh+C,MAAOs7D,KAAyBja,CAC5E,CA0CC,OAzCDlW,IAAA4wB,EAAA,EAAAlgC,IAAA,WAAAK,IAGA,WACI,OAAOnoB,GAAGtX,KAAKk8C,OAAO,YAAYnR,UAAU,EAAG,GACnD,GAAC,CAAA3L,IAAA,SAAA77B,MACD,SAAO24C,GAIH,GAHc,MAAVA,IACAA,EAAS,WAEE,SAAXA,EACA,OAAO1X,KAAKC,UAAU,CAClBt6B,KAAM,QACNzH,KAAM1C,KAAK0C,KACX08D,OAAQp/D,KAAKo/D,OAAO34B,KAAI,SAACtG,GAAK,OAAKqE,KAAKwd,MAAM7hB,EAAM+b,OAAOA,GAAQ,MAG3E,IAAMjT,EAAS,GAKf,MAJe,YAAXiT,GACAjT,EAAOrE,KAAK,SAEhBqE,EAAOrE,KAAK5kC,KAAK0C,KAAOo9D,GAAW5jB,EAAQl8C,KAAKo/D,SACzCn2B,EAAOtC,KAAK,IACvB,IAAC,EAAAvH,IAAA,OAAA77B,MACD,SAAYd,GACR,GAAI68D,EAAcK,WAAWl9D,GACzB,OAAOA,EAEX,GAAqB,iBAATA,EACR,OAAO68D,EAAc7pD,KAAKqtC,GAAIrgD,IAE7B,GAAIA,aAAe09C,GAAa,CACjC,IAAMz9C,EAAO47D,GAAY,QAAS77D,GAC5B28D,EAASV,GAAcj8D,GAE7B,OADAm8D,GAAWn8D,GACJ,IAAI68D,EAAcxxB,GAAQprC,EAAM08D,EAC3C,CACA,OAAO,IAAIE,EAAcxxB,GAAQrrC,EAAIC,KAAMD,EAAI28D,OAAS38D,EAAI28D,OAAO34B,IAAIib,GAAUjsC,MAAQ,GAC7F,GAAC,CAAA2pB,IAAA,aAAA77B,MACD,SAAkBA,GACd,OAAQA,GAASA,EAAMg+C,MAAcsd,EACzC,KAACS,CAAA,CAjDqB,CAASM,IAsDtBL,GAAa,SAAAS,GAAA9rB,IAAAqrB,EAAAS,GAAA,IAAAC,EAAA/hB,GAAAqhB,GAKtB,SAAAA,EAAY90B,EAAO/nC,EAAM08D,EAAQhnC,GAAW,IAAA8nC,EAGF,OAHE3xB,IAAA,KAAAgxB,GACxCW,EAAAD,EAAAhgE,KAAA,KAAMwqC,EAAO,QAAS/nC,EAAM08D,GAAQ1rB,IAAAW,IAAA6rB,GAAA,oBACpC5gC,OAAOC,eAAc8U,IAAA6rB,GAAO3e,GAAU,CAAEh+C,MAAOu7D,KAC/Cp2B,GAAgB2L,IAAA6rB,GAAO,CAAE9nC,UAAAA,IAAa8nC,CAC1C,CAoDC,OAnDDxxB,IAAA6wB,EAAA,EAAAngC,IAAA,YAAAK,IAGA,WACI,OAAOnoB,GAAGtX,KAAKk8C,OAAO,WAC1B,GAAC,CAAA9c,IAAA,SAAA77B,MACD,SAAO24C,GAIH,GAHc,MAAVA,IACAA,EAAS,WAEE,SAAXA,EACA,OAAO1X,KAAKC,UAAU,CAClBt6B,KAAM,QACNiuB,UAAWp4B,KAAKo4B,UAChB11B,KAAM1C,KAAK0C,KACX08D,OAAQp/D,KAAKo/D,OAAO34B,KAAI,SAAC7F,GAAC,OAAK4D,KAAKwd,MAAMphB,EAAEsb,OAAOA,GAAQ,MAGnE,IAAMjT,EAAS,GAQf,MAPe,YAAXiT,GACAjT,EAAOrE,KAAK,SAEhBqE,EAAOrE,KAAK5kC,KAAK0C,KAAOo9D,GAAW5jB,EAAQl8C,KAAKo/D,SACjC,YAAXljB,GAAwBl8C,KAAKo4B,WAC7B6Q,EAAOrE,KAAK,aAETqE,EAAOtC,KAAK,IACvB,IAAC,EAAAvH,IAAA,eAAA77B,MACD,SAAoBb,EAAMszD,GAGtB,OAFAA,GAAUA,GAAU,IAAIvvB,KAAI,SAAC4sB,GAAC,OAAK3R,GAAUjsC,KAAK49C,EAAE,IACnC,IAAIkM,EAAczxB,GAAQprC,EAAMszD,GAAQ,GACzCmK,SACpB,GAAC,CAAA/gC,IAAA,OAAA77B,MACD,SAAYd,GACR,GAAI88D,EAAcI,WAAWl9D,GACzB,OAAOA,EAEX,GAAqB,iBAATA,EACR,OAAO88D,EAAc9pD,KAAKqtC,GAAIrgD,IAE7B,GAAIA,aAAe09C,GAAa,CACjC,IAAMz9C,EAAO47D,GAAY,QAAS77D,GAC5B28D,EAASV,GAAcj8D,GAAK,GAC5B21B,IAAc8oB,GAAgBz+C,EAAK08C,GAAO,CAAC,eAAeqB,IAAI,aAEpE,OADAoe,GAAWn8D,GACJ,IAAI88D,EAAczxB,GAAQprC,EAAM08D,EAAQhnC,EACnD,CACA,OAAO,IAAImnC,EAAczxB,GAAQrrC,EAAIC,KAAMD,EAAI28D,OAAS38D,EAAI28D,OAAO34B,KAAI,SAAC4sB,GAAC,OAAK3R,GAAUjsC,KAAK49C,GAAG,EAAK,IAAI,KAAM5wD,EAAI21B,UACvH,GAAC,CAAAgH,IAAA,aAAA77B,MACD,SAAkBA,GACd,OAAQA,GAASA,EAAMg+C,MAAcud,EACzC,KAACS,CAAA,CA7DqB,CAASK,IAkEtBP,GAAmB,SAAAe,GAAAlsB,IAAAmrB,EAAAe,GAAA,IAAAC,EAAAniB,GAAAmhB,GAM5B,SAAAA,EAAY50B,EAAOtgC,EAAMi1D,EAAQ1mC,EAAS4nC,GAAK,IAAAC,EAGF,OAHEhyB,IAAA,KAAA8wB,GAC3CkB,EAAAF,EAAApgE,KAAA,KAAMwqC,EAAOtgC,EAAMi1D,GAAQ1rB,IAAAW,IAAAksB,GAAA,kBAAA7sB,IAAAW,IAAAksB,GAAA,cAC3BjhC,OAAOC,eAAc8U,IAAAksB,GAAOhf,GAAU,CAAEh+C,MAAOw7D,KAC/Cr2B,GAAgB2L,IAAAksB,GAAO,CAAE7nC,QAAAA,EAAS4nC,IAAAA,IAAOC,CAC7C,CAsCC,OAtCA7xB,IAAA2wB,EAAA,EAAAjgC,IAAA,SAAA77B,MACD,SAAO24C,GAEH,GADAtS,GAAiB,MAAVsS,GAA6B,YAAXA,EAAsB,0CAA2C,wBAAyB,CAAE5R,UAAW,oBACjH,SAAX4R,EACA,OAAO1X,KAAKC,UAAU,CAClBt6B,KAAM,cACNq2D,gBAAkBxgE,KAAK04B,QAAU,UAAY,YAC7CA,QAAS14B,KAAK04B,QACd4nC,IAAmB,MAAZtgE,KAAKsgE,IAAetgE,KAAKsgE,SAAMn8D,EACtCi7D,OAAQp/D,KAAKo/D,OAAO34B,KAAI,SAAC7F,GAAC,OAAK4D,KAAKwd,MAAMphB,EAAEsb,OAAOA,GAAQ,MAGnE,IAAMjT,EAAS,CAAC,cAAD1F,OAAeu8B,GAAW5jB,EAAQl8C,KAAKo/D,UAKtD,OAJAn2B,EAAOrE,KAAM5kC,KAAK04B,QAAW,UAAY,cACzB,MAAZ14B,KAAKsgE,KACLr3B,EAAOrE,KAAK,IAADrB,OAAKvjC,KAAKsgE,IAAI59B,aAEtBuG,EAAOtC,KAAK,IACvB,IAAC,EAAAvH,IAAA,OAAA77B,MACD,SAAYd,GACR,GAAI48D,EAAoBM,WAAWl9D,GAC/B,OAAOA,EAEX,GAAqB,iBAATA,EACR,OAAO48D,EAAoB5pD,KAAKqtC,GAAIrgD,IAEnC,GAAIA,aAAe09C,GAAa,CACjCe,GAAgBz+C,EAAK08C,GAAO,CAAC,iBAC7B,IAAMigB,EAASV,GAAcj8D,GACvBi2B,IAAYwoB,GAAgBz+C,EAAK08C,GAAO,CAAC,aAAaqB,IAAI,WAC1D8f,EAAM3B,GAAWl8D,GAEvB,OADAm8D,GAAWn8D,GACJ,IAAI48D,EAAoBvxB,GAAQ,cAAesxB,EAAQ1mC,EAAS4nC,EAC3E,CACA,OAAO,IAAIjB,EAAoBvxB,GAAQ,cAAerrC,EAAI28D,OAAS38D,EAAI28D,OAAO34B,IAAIib,GAAUjsC,MAAQ,KAAMhT,EAAIi2B,QAAqB,MAAXj2B,EAAI69D,IAAe79D,EAAI69D,IAAM,KACzJ,GAAC,CAAAlhC,IAAA,aAAA77B,MACD,SAAkBA,GACd,OAAQA,GAASA,EAAMg+C,MAAcwd,EACzC,KAACM,CAAA,CAhD2B,CAASF,IAqD5BK,GAAgB,SAAAiB,GAAAvsB,IAAAsrB,EAAAiB,GAAA,IAAAC,EAAAxiB,GAAAshB,GAKzB,SAAAA,EAAY/0B,EAAO20B,EAAQ1mC,GAAS,IAAAioC,EAGI,OAHJpyB,IAAA,KAAAixB,GAChCmB,EAAAD,EAAAzgE,KAAA,KAAMwqC,EAAO,WAAY20B,GAAQ1rB,IAAAW,IAAAssB,GAAA,kBACjCrhC,OAAOC,eAAc8U,IAAAssB,GAAOpf,GAAU,CAAEh+C,MAAOy7D,KAC/Ct2B,GAAgB2L,IAAAssB,GAAO,CAAEjoC,QAAAA,IAAWioC,CACxC,CA2DC,OA3DAjyB,IAAA8wB,EAAA,EAAApgC,IAAA,SAAA77B,MACD,SAAO24C,GACH,IAAM/xC,EAAgC,IAAvBnK,KAAKo/D,OAAO/6D,OAAgB,UAAY,WACvD,GAAe,SAAX63C,EAAmB,CACnB,IAAMskB,EAAmBxgE,KAAK04B,QAAU,UAAY,aACpD,OAAO8L,KAAKC,UAAU,CAAEt6B,KAAAA,EAAMq2D,gBAAAA,GAClC,CACA,MAAO,GAAPj9B,OAAUp5B,EAAI,MAAAo5B,OAAKvjC,KAAK04B,QAAU,WAAa,GACnD,IAAC,EAAA0G,IAAA,OAAA77B,MACD,SAAYd,GACR,GAAI+8D,EAAiBG,WAAWl9D,GAC5B,OAAOA,EAEX,GAAqB,iBAATA,EACR,OAAO+8D,EAAiB/pD,KAAKqtC,GAAIrgD,IAEhC,GAAIA,aAAe09C,GAAa,CACjC,IAAMygB,EAAWn+D,EAAIigC,WAKrB,GAHAoH,GADmBrnC,EAAI87D,YAAYpf,GAAO,CAAC,WAAY,aAC5B,mCAAoC,MAAOyhB,GAGzD,YAFAn+D,EAAIo+D,WAAW1hB,GAAO,CAAC,WAAY,aAExB,CACpB,IAAMigB,EAASV,GAAcj8D,GAI7B,OAHAqnC,GAAiC,IAAlBs1B,EAAO/6D,OAAc,gCAAiC,aAAc+6D,GACnFle,GAAgBz+C,EAAK08C,GAAO,CAAC,aAC7Byf,GAAWn8D,GACJ,IAAI+8D,EAAiB1xB,GAAQ,IAAI,EAC5C,CAGA,IAAIsxB,EAASV,GAAcj8D,GACvB28D,EAAO/6D,OACPylC,GAAiC,IAAlBs1B,EAAO/6D,QAAmC,UAAnB+6D,EAAO,GAAGj1D,KAAkB,0BAA2B,aAAci1D,EAAO34B,KAAI,SAAC7F,GAAC,OAAKA,EAAEsb,OAAO,UAAU,IAAEvV,KAAK,OAGvJy4B,EAAS,CAAC1d,GAAUjsC,KAAK,UAE7B,IAAMqrD,EAAatC,GAAkB/7D,GAErC,GADAqnC,GAA8B,eAAfg3B,GAA8C,YAAfA,EAA0B,+BAAgC,sBAAuBA,GAC3H5f,GAAgBz+C,EAAK08C,GAAO,CAAC,aAAaqB,IAAI,WAAY,CAC1D,IAAMugB,EAAUrC,GAAcj8D,GAC9BqnC,GAAkC,IAAnBi3B,EAAQ18D,QAAoC,UAApB08D,EAAQ,GAAG52D,KAAkB,2BAA4B,cAAe42D,EAAQt6B,KAAI,SAAC7F,GAAC,OAAKA,EAAEsb,OAAO,UAAU,IAAEvV,KAAK,MAChK,CAEA,OADAi4B,GAAWn8D,GACJ,IAAI+8D,EAAiB1xB,GAAQsxB,EAAuB,YAAf0B,EAChD,CACA,GAAiB,YAAbr+D,EAAI0H,KACJ,OAAO,IAAIq1D,EAAiB1xB,GAAQ,IAAI,GAE5C,GAAiB,aAAbrrC,EAAI0H,KAAqB,CACzB,IAAMi1D,EAAS,CAAC1d,GAAUjsC,KAAK,UACzBijB,EAAmC,YAAxBj2B,EAAI+9D,gBACrB,OAAO,IAAIhB,EAAiB1xB,GAAQsxB,EAAQ1mC,EAChD,CACAoR,IAAe,EAAO,+BAAgC,MAAOrnC,EACjE,GAAC,CAAA28B,IAAA,aAAA77B,MACD,SAAkBA,GACd,OAAQA,GAASA,EAAMg+C,MAAcyd,EACzC,KAACQ,CAAA,CApEwB,CAASL,IAyEzBM,GAAgB,SAAAuB,GAAA9sB,IAAAurB,EAAAuB,GAAA,IAAAC,EAAA/iB,GAAAuhB,GAyBzB,SAAAA,EAAYh1B,EAAO/nC,EAAM89D,EAAiBpB,EAAQ2B,EAAST,GAAK,IAAAY,EAAA3yB,IAAA,KAAAkxB,GAC5DyB,EAAAD,EAAAhhE,KAAA,KAAMwqC,EAAO,WAAY/nC,EAAM08D,GAAQ1rB,IAAAW,IAAA6sB,GAAA,mBAAAxtB,IAAAW,IAAA6sB,GAAA,kBAAAxtB,IAAAW,IAAA6sB,GAAA,0BAAAxtB,IAAAW,IAAA6sB,GAAA,kBAAAxtB,IAAAW,IAAA6sB,GAAA,cACvC5hC,OAAOC,eAAc8U,IAAA6sB,GAAO3f,GAAU,CAAEh+C,MAAO07D,KAC/C8B,EAAUzhC,OAAOmR,OAAOswB,EAAQh+B,SAChC,IAAM1K,EAAgC,SAApBmoC,GAAkD,SAApBA,EAC1C9nC,EAA+B,YAApB8nC,EAC4D,OAA7E93B,GAAgB2L,IAAA6sB,GAAO,CAAE7oC,SAAAA,EAAUioC,IAAAA,EAAKS,QAAAA,EAASroC,QAAAA,EAAS8nC,gBAAAA,IAAmBU,CACjF,CAuEC,OAtEDxyB,IAAA+wB,EAAA,EAAArgC,IAAA,WAAAK,IAGA,WACI,OAAOnoB,GAAGtX,KAAKk8C,OAAO,YAAYnR,UAAU,EAAG,GACnD,GAAC,CAAA3L,IAAA,SAAA77B,MACD,SAAO24C,GAIH,GAHc,MAAVA,IACAA,EAAS,WAEE,SAAXA,EACA,OAAO1X,KAAKC,UAAU,CAClBt6B,KAAM,WACNzH,KAAM1C,KAAK0C,KACX21B,SAAUr4B,KAAKq4B,SACfmoC,gBAA4C,eAAzBxgE,KAAKwgE,gBAAoCxgE,KAAKwgE,qBAAkBr8D,EACnFu0B,QAAS14B,KAAK04B,QACd4nC,IAAmB,MAAZtgE,KAAKsgE,IAAetgE,KAAKsgE,SAAMn8D,EACtCi7D,OAAQp/D,KAAKo/D,OAAO34B,KAAI,SAAC7F,GAAC,OAAK4D,KAAKwd,MAAMphB,EAAEsb,OAAOA,GAAQ,IAC3D6kB,QAAS/gE,KAAK+gE,QAAQt6B,KAAI,SAACpH,GAAC,OAAKmF,KAAKwd,MAAM3iB,EAAE6c,OAAOA,GAAQ,MAGrE,IAAMjT,EAAS,GAiBf,MAhBe,YAAXiT,GACAjT,EAAOrE,KAAK,YAEhBqE,EAAOrE,KAAK5kC,KAAK0C,KAAOo9D,GAAW5jB,EAAQl8C,KAAKo/D,SACjC,YAAXljB,IAC6B,eAAzBl8C,KAAKwgE,iBACLv3B,EAAOrE,KAAK5kC,KAAKwgE,iBAEjBxgE,KAAK+gE,SAAW/gE,KAAK+gE,QAAQ18D,SAC7B4kC,EAAOrE,KAAK,WACZqE,EAAOrE,KAAKk7B,GAAW5jB,EAAQl8C,KAAK+gE,WAExB,MAAZ/gE,KAAKsgE,KACLr3B,EAAOrE,KAAK,IAADrB,OAAKvjC,KAAKsgE,IAAI59B,cAG1BuG,EAAOtC,KAAK,IACvB,IAAC,EAAAvH,IAAA,cAAA77B,MACD,SAAmBb,EAAMszD,GAGrB,OAFAA,GAAUA,GAAU,IAAIvvB,KAAI,SAAC4sB,GAAC,OAAK3R,GAAUjsC,KAAK49C,EAAE,IACnC,IAAIoM,EAAiB3xB,GAAQprC,EAAM,OAAQszD,EAAQ,GAAI,MACxDmL,QACpB,GAAC,CAAA/hC,IAAA,OAAA77B,MACD,SAAYd,GACR,GAAIg9D,EAAiBE,WAAWl9D,GAC5B,OAAOA,EAEX,GAAqB,iBAATA,EACR,OAAOg9D,EAAiBhqD,KAAKqtC,GAAIrgD,IAEhC,GAAIA,aAAe09C,GAAa,CACjC,IAAMz9C,EAAO47D,GAAY,WAAY77D,GAC/B28D,EAASV,GAAcj8D,GACvBq+D,EAAatC,GAAkB/7D,GACjCs+D,EAAU,GACV7f,GAAgBz+C,EAAK08C,GAAO,CAAC,aAAaqB,IAAI,aAC9CugB,EAAUrC,GAAcj8D,IAE5B,IAAM69D,EAAM3B,GAAWl8D,GAEvB,OADAm8D,GAAWn8D,GACJ,IAAIg9D,EAAiB3xB,GAAQprC,EAAMo+D,EAAY1B,EAAQ2B,EAAST,EAC3E,CAEA,OAAO,IAAIb,EAAiB3xB,GAAQrrC,EAAIC,KAAMD,EAAI+9D,gBAAiB/9D,EAAI28D,OAAS38D,EAAI28D,OAAO34B,IAAIib,GAAUjsC,MAAQ,GAAIhT,EAAIs+D,QAAUt+D,EAAIs+D,QAAQt6B,IAAIib,GAAUjsC,MAAQ,GAAgB,MAAXhT,EAAI69D,IAAe79D,EAAI69D,IAAM,KAC3M,GAAC,CAAAlhC,IAAA,aAAA77B,MACD,SAAkBA,GACd,OAAQA,GAASA,EAAMg+C,MAAc0d,EACzC,KAACQ,CAAA,CAvGwB,CAASG,IA4GzBF,GAAc,SAAA0B,GAAAltB,IAAAwrB,EAAA0B,GAAA,IAAAC,EAAAnjB,GAAAwhB,GAIvB,SAAAA,EAAYj1B,EAAO/nC,EAAM08D,GAAQ,IAAAkC,EAE4C,OAF5C/yB,IAAA,KAAAmxB,GAC7B4B,EAAAD,EAAAphE,KAAA,KAAMwqC,EAAO,SAAU/nC,EAAM08D,GAC7B9/B,OAAOC,eAAc8U,IAAAitB,GAAO/f,GAAU,CAAEh+C,MAAO27D,KAA0BoC,CAC7E,CAkBC,OAlBA5yB,IAAAgxB,EAAA,EAAAtgC,IAAA,SAAA77B,MACD,WACI,MAAM,IAAI6+B,MAAM,QACpB,IAAC,EAAAhD,IAAA,OAAA77B,MACD,SAAYd,GACR,GAAqB,iBAATA,EACR,OAAOi9D,EAAejqD,KAAKqtC,GAAIrgD,IAE9B,GAAIA,aAAe09C,GAAa,CACjC,IAAMz9C,EAAO47D,GAAY,SAAU77D,GAC7B28D,EAASV,GAAcj8D,GAE7B,OADAm8D,GAAWn8D,GACJ,IAAIi9D,EAAe5xB,GAAQprC,EAAM08D,EAC5C,CACA,OAAO,IAAIM,EAAe5xB,GAAQrrC,EAAIC,KAAMD,EAAI28D,OAAS38D,EAAI28D,OAAO34B,IAAIib,GAAUjsC,MAAQ,GAC9F,GAAC,CAAA2pB,IAAA,aAAA77B,MACD,SAAkBA,GACd,OAAQA,GAASA,EAAMg+C,MAAc2d,EACzC,KAACQ,CAAA,CAzBsB,CAASE,I,qzCC9nC7B,IAAM2B,GAAc7yB,KAMvB,SAAA6yB,EAAYC,EAAUC,EAAOnoB,GAAM/K,IAAA,KAAAgzB,GAAA7tB,IAAA,wBAAAA,IAAA,oBAAAA,IAAA,yBAAAA,IAAA,qBAAAA,IAAA,oBAC/B,IAAMhxC,EAAO8+D,EAAS9+D,KAAMy1C,EAAYqpB,EAAStlB,SACjDxT,GAAiB1oC,KAAM,CACnBwhE,SAAAA,EAAU9+D,KAAAA,EAAMy1C,UAAAA,EAAWspB,MAAAA,EAAOnoB,KAAAA,GAE1C,IAESooB,GAAsBhzB,KAO/B,SAAAgzB,EAAYF,EAAUL,EAAU7nB,EAAM/1C,GAAOgrC,IAAA,KAAAmzB,GAAAhuB,IAAA,wBAAAA,IAAA,oBAAAA,IAAA,oBAAAA,IAAA,yBAAAA,IAAA,wBAAAA,IAAA,qBACzC,IAAMhxC,EAAO8+D,EAAS9+D,KAAMy1C,EAAYqpB,EAAStlB,SACjDxT,GAAiB1oC,KAAM,CACnBwhE,SAAAA,EAAU9+D,KAAAA,EAAM42C,KAAAA,EAAMnB,UAAAA,EAAWgpB,SAAAA,EAAU59D,MAAAA,GAEnD,IAESo+D,GAAgBjzB,KAMzB,SAAAizB,EAAYH,EAAUL,EAAU7nB,GAAM/K,IAAA,KAAAozB,GAAAjuB,IAAA,wBAAAA,IAAA,oBAAAA,IAAA,oBAAAA,IAAA,yBAAAA,IAAA,wBAClC,IAAMhxC,EAAO8+D,EAAS9+D,KAAMy1C,EAAYqpB,EAAStlB,SACjDxT,GAAiB1oC,KAAM,CACnBwhE,SAAAA,EAAU9+D,KAAAA,EAAM42C,KAAAA,EAAMnB,UAAAA,EAAWgpB,SAAAA,GAEzC,IAESS,GAAO,WAMhB,SAAAA,EAAY/vC,GAAM0c,IAAA,KAAAqzB,GAAAluB,IAAA,oBAAAA,IAAA,0BACdhL,GAAiB1oC,KAAM,CAAE6xB,KAAAA,EAAMgwC,YAAY,GAC/C,CAHC,OAGAnzB,IAAAkzB,EAAA,OAAAxiC,IAAA,YAAA77B,MALD,SAAiBA,GACb,SAAUA,IAASA,EAAMs+D,WAC7B,KAACD,CAAA,CALe,GAWd/d,GAAe,CACjB,EAAK,gBACL,EAAK,gBACL,GAAM,sBACN,GAAM,6BACN,GAAM,gBACN,GAAM,8CACN,GAAM,wDACN,GAAM,6CACN,GAAM,gBACN,GAAM,0BAEJie,GAAgB,CAClB,aAAc,CACV3pB,UAAW,gBACXz1C,KAAM,QACN08D,OAAQ,CAAC,UACT7tB,OAAQ,SAACttC,GACL,MAAO,+BAAPs/B,OAAsCiB,KAAKC,UAAUxgC,GACzD,GAEJ,aAAc,CACVk0C,UAAW,iBACXz1C,KAAM,QACN08D,OAAQ,CAAC,WACT7tB,OAAQ,SAAC9lC,GACL,IAAI8lC,EAAS,qBAIb,OAHI9lC,GAAQ,GAAKA,GAAQ,KAAQo4C,GAAap4C,EAAKi3B,cAC/C6O,EAASsS,GAAap4C,EAAKi3B,aAExB,8BAAPa,OAAqC93B,EAAKi3B,SAAS,IAAG,MAAAa,OAAKgO,EAAM,IACrE,IAGRwwB,GAAA,IAAA9zB,QAAA+zB,GAAA,IAAA/zB,QAAAg0B,GAAA,IAAAh0B,QAAAi0B,GAAA,IAAAj0B,QAAAk0B,GAAA,IAAApuB,QAAAquB,GAAA,IAAAruB,QAUasuB,GAAS,WAyBlB,SAAAA,EAAYC,GAAW,IAAAtiC,EAAA,KAAAuO,IAAA,KAAA8zB,GA8NvBxnB,GAAA,KAAAunB,IArHAvnB,GAAA,KAAAsnB,IAAAzuB,IAAA,yBAAAA,IAAA,sBAAAA,IAAA,wBAAAA,IAAA,uBAAAlF,GAAA,KAAAuzB,GAAA,CAAAl5B,UAAA,EAAAtlC,WAAA,IAAAirC,GAAA,KAAAwzB,GAAA,CAAAn5B,UAAA,EAAAtlC,WAAA,IAAAirC,GAAA,KAAAyzB,GAAA,CAAAp5B,UAAA,EAAAtlC,WAAA,IAAAirC,GAAA,KAAA0zB,GAAA,CAAAr5B,UAAA,EAAAtlC,WAAA,IAxGI,IAAI2yB,EAEAA,EADuB,iBAAfosC,EACF99B,KAAKwd,MAAMsgB,GAGXA,EAEV7zB,KAAAzuC,KAAIiiE,GAAc,IAAI37D,KACtBmoC,KAAAzuC,KAAI+hE,GAAW,IAAIz7D,KACnBmoC,KAAAzuC,KAAIgiE,GAAW,IAAI17D,KAEnB,IACmB4mC,EADbq1B,EAAQ,GAAGp1B,EAAAC,GACDlX,GAAG,IAAnB,IAAAiX,EAAAE,MAAAH,EAAAC,EAAArO,KAAAwO,MAAqB,KAAVpO,EAACgO,EAAA3pC,MACR,IACIg/D,EAAM39B,KAAKu6B,GAAAA,KAAcjgC,GAC7B,CACA,MAAOiI,GACHi0B,QAAQC,IAAI,KAAMl0B,EACtB,CACJ,CAAC,OAAAoG,GAAAJ,EAAAJ,EAAAQ,EAAA,SAAAJ,EAAAjpC,GAAA,CACDwkC,GAAiB1oC,KAAM,CACnBsiE,UAAWhjC,OAAOmR,OAAO8xB,KAE7B,IAAIC,EAAW,KACXC,GAAU,EACdh0B,KAAAzuC,KAAIkiE,GAAaliE,KAAK0iE,eAEtB1iE,KAAKsiE,UAAU5oB,SAAQ,SAAC8nB,EAAUh5B,GAC9B,IAAIm6B,EACJ,OAAQnB,EAASr3D,MACb,IAAK,cACD,OAAI61B,EAAK4iC,YACLxH,QAAQC,IAAI,2CAIhB3yB,GAAiB1I,EAAM,CAAE4iC,OAAQpB,IAErC,IAAK,WASD,YAR+B,IAA3BA,EAASpC,OAAO/6D,OAChBo+D,GAAU,GAGV34B,IAAgB04B,GAAYhB,EAAS9oC,UAAY8pC,EAAS9pC,QAAS,iCAAkC,aAAF6K,OAAeiF,EAAK,KAAKg5B,GAE5HiB,GADAD,EAAWhB,GACQ9oC,UAG3B,IAAK,WAGDiqC,EAAMh0B,KAAG3O,EAAIiiC,IACb,MACJ,IAAK,QAEDU,EAAMh0B,KAAG3O,EAAIgiC,IACb,MACJ,IAAK,QACDW,EAAMh0B,KAAG3O,EAAI+hC,IACb,MACJ,QACI,OAGR,IAAM5pB,EAAYqpB,EAAStlB,SACvBymB,EAAOniB,IAAIrI,IAGfwqB,EAAO92B,IAAIsM,EAAWqpB,EAC1B,IAEKxhE,KAAK4iE,QACNl6B,GAAiB1oC,KAAM,CACnB4iE,OAAQvD,GAAAA,KAAyB,mBAGzC32B,GAAiB1oC,KAAM,CAAEwiE,SAAAA,EAAUC,QAAAA,GACvC,CA6vBC,OA5vBD/zB,IAAA2zB,EAAA,EAAAjjC,IAAA,SAAA77B,MAKA,SAAOs/D,GACH,IAAM3mB,EAAU2mB,EAAU,UAAY,OAEtC,OADY7iE,KAAKsiE,UAAU77B,KAAI,SAACviC,GAAC,OAAKA,EAAEg4C,OAAOA,EAAO,GAE1D,GACA,CAAA9c,IAAA,aAAA77B,MAIA,WACI,IAAM2yB,EAAMl2B,KAAKsiE,UAAU77B,KAAI,SAACviC,GAAC,OAAKA,EAAEg4C,OAAO,OAAO,IAEtD,OAAO1X,KAAKC,UAAUvO,EAAIuQ,KAAI,SAACxB,GAAC,OAAKT,KAAKwd,MAAM/c,EAAE,IACtD,GACA,CAAA7F,IAAA,cAAA77B,MAIA,WACI,OAAO2gD,GAASS,iBACpB,GAAC,CAAAvlB,IAAA,kBAAA77B,MAyFD,SAAgB67B,GACZ,IAAMoiC,EAAQltB,GAAGt0C,KAAImiE,GAAAW,IAAA7iE,KAAJD,KAAkBo/B,EAAK,MAAM,GAE9C,OADA0K,GAAe03B,EAAU,uBAAwB,MAAOpiC,GACjDoiC,EAAS9+D,IACpB,GACA,CAAA08B,IAAA,cAAA77B,MAUA,SAAY67B,EAAKwJ,GACb,OAAA0L,GAAOt0C,KAAImiE,GAAAW,IAAA7iE,KAAJD,KAAkBo/B,EAAKwJ,GAAU,MAAM,EAClD,GACA,CAAAxJ,IAAA,kBAAA77B,MAGA,SAAgB62C,GACZ,IAAMZ,EAAQ5X,MAAMnsB,KAAKk5B,KAAA3uC,KAAIiiE,IAAYr6B,QACzC4R,EAAMpQ,MAAK,SAAClK,EAAG0c,GAAC,OAAK1c,EAAEsrB,cAAc5O,EAAE,IACvC,IAAK,IAAIhb,EAAI,EAAGA,EAAI4Y,EAAMn1C,OAAQu8B,IAAK,CACnC,IAAMl+B,EAAO82C,EAAM5Y,GACnBwZ,EAAUzL,KAAA3uC,KAAIiiE,IAAYxiC,IAAI/8B,GAAQk+B,EAC1C,CACJ,GAAC,CAAAxB,IAAA,eAAA77B,MAgED,SAAa67B,GACT,IAAMoiC,EAAQltB,GAAGt0C,KAAIoiE,GAAAW,IAAA9iE,KAAJD,KAAeo/B,EAAK,MAAM,GAE3C,OADA0K,GAAe03B,EAAU,oBAAqB,MAAOpiC,GAC9CoiC,EAAS9+D,IACpB,GACA,CAAA08B,IAAA,WAAA77B,MAUA,SAAS67B,EAAKwJ,GACV,OAAA0L,GAAOt0C,KAAIoiE,GAAAW,IAAA9iE,KAAJD,KAAeo/B,EAAKwJ,GAAU,MAAM,EAC/C,GACA,CAAAxJ,IAAA,eAAA77B,MAGA,SAAa62C,GACT,IAAMZ,EAAQ5X,MAAMnsB,KAAKk5B,KAAA3uC,KAAIgiE,IAASp6B,QACtC4R,EAAMpQ,MAAK,SAAClK,EAAG0c,GAAC,OAAK1c,EAAEsrB,cAAc5O,EAAE,IACvC,IAAK,IAAIhb,EAAI,EAAGA,EAAI4Y,EAAMn1C,OAAQu8B,IAAK,CACnC,IAAMl+B,EAAO82C,EAAM5Y,GACnBwZ,EAAUzL,KAAA3uC,KAAIgiE,IAASviC,IAAI/8B,GAAQk+B,EACvC,CACJ,GACA,CAAAxB,IAAA,WAAA77B,MAUA,SAAS67B,EAAKwJ,GACV,GAAIqC,GAAY7L,GAAM,CAClB,IAAM+hC,EAAW/hC,EAAImU,cACrB,GAAIuuB,GAAcX,GACd,OAAO7B,GAAAA,KAAmBwC,GAAcX,GAAUhpB,WACrD,IAC2CiP,EAD3CC,EAAAja,GACsBuB,KAAA3uC,KAAI+hE,IAASn5B,UAAQ,IAA5C,IAAAye,EAAAha,MAAA+Z,EAAAC,EAAAvoB,KAAAwO,MAA8C,KAAnCk0B,EAAQpa,EAAA7jD,MACf,GAAI49D,IAAaK,EAASL,SACtB,OAAOK,CAEf,CAAC,OAAAj0B,GAAA8Z,EAAAta,EAAAQ,EAAA,SAAA8Z,EAAAnjD,GAAA,CACD,OAAO,IACX,CAEA,IAA0B,IAAtBk7B,EAAIgC,QAAQ,KAAa,CACzB,IACmCmmB,EAD7Byb,EAAW,GAAGxb,EAAApa,GAAAuB,KACW3uC,KAAI+hE,KAAA,IAAnC,IAAAva,EAAAna,MAAAka,EAAAC,EAAA1oB,KAAAwO,MAA6C,KAAA21B,EAAAtrB,KAAA4P,EAAAhkD,MAAA,GAAjCb,EAAIugE,EAAA,GAAEzB,EAAQyB,EAAA,GAClBvgE,EAAK0gC,MAAM,KAAiB,KAAOhE,GACnC4jC,EAASp+B,KAAK48B,EAEtB,CAAC,OAAAj0B,GAAAia,EAAAza,EAAAQ,EAAA,SAAAia,EAAAtjD,GAAA,CACD,GAAwB,IAApB8+D,EAAS3+D,OACT,MAAY,UAAR+6B,EACOkgC,GAAAA,KAAmB,uBAElB,UAARlgC,EACOkgC,GAAAA,KAAmB,wBAEvB,KAEN,GAAI0D,EAAS3+D,OAAS,EAAG,CAC1B,IAAM6+D,EAAWF,EAASv8B,KAAI,SAACwzB,GAAC,OAAKz1B,KAAKC,UAAUw1B,EAAE/d,SAAS,IAAEvV,KAAK,MACtEmD,IAAe,EAAO,qCAAFvG,OAAuC2/B,EAAQ,KAAK,OAAQ9jC,EACpF,CACA,OAAO4jC,EAAS,EACpB,CAGA,MAAY,mBADZ5jC,EAAMkgC,GAAAA,KAAmBlgC,GAAK8c,UAEnBojB,GAAAA,KAAmB,uBAElB,mBAARlgC,EACOkgC,GAAAA,KAAmB,wBAEf3wB,KAAA3uC,KAAI+hE,IAAStiC,IAAIL,IAIzB,IACX,GACA,CAAAA,IAAA,eAAA77B,MAGA,SAAa62C,GACT,IAAMZ,EAAQ5X,MAAMnsB,KAAKk5B,KAAA3uC,KAAI+hE,IAASn6B,QACtC4R,EAAMpQ,MAAK,SAAClK,EAAG0c,GAAC,OAAK1c,EAAEsrB,cAAc5O,EAAE,IACvC,IAAK,IAAIhb,EAAI,EAAGA,EAAI4Y,EAAMn1C,OAAQu8B,IAAK,CACnC,IAAMl+B,EAAO82C,EAAM5Y,GACnBwZ,EAAUzL,KAAA3uC,KAAI+hE,IAAStiC,IAAI/8B,GAAQk+B,EACvC,CACJ,GAuBA,CAAAxB,IAAA,gBAAA77B,MAMA,SAAcyyD,EAAQlxC,GAClB,OAAO6pB,KAAA3uC,KAAIkiE,IAAWhhC,OAAO80B,EAAQlxC,EACzC,GAAC,CAAAsa,IAAA,gBAAA77B,MACD,SAAcyyD,EAAQptB,GAClB,OAAO+F,KAAA3uC,KAAIkiE,IAAWhiC,OAAO81B,EAAQptB,EACzC,GACA,CAAAxJ,IAAA,eAAA77B,MAIA,SAAaqlC,GACT,OAAO5oC,KAAKmjE,cAAcnjE,KAAK4iE,OAAOxD,OAAQx2B,GAAU,GAC5D,GACA,CAAAxJ,IAAA,oBAAA77B,MASA,SAAkBi+D,EAAU18C,GACxB,GAA0B,iBAAd08C,EAAwB,CAChC,IAAMt9D,EAAIlE,KAAKojE,SAAS5B,GACxB13B,GAAe5lC,EAAG,gBAAiB,WAAYs9D,GAC/CA,EAAWt9D,CACf,CAEA,OADA4lC,GAAeyB,GAAUzmB,EAAM,EAAG,KAAO08C,EAASL,SAAU,uCAAF59B,OAAyCi+B,EAAS9+D,KAAI,KAAK,OAAQoiB,GACtH9kB,KAAKqjE,cAAc7B,EAASpC,OAAQ7zB,GAAUzmB,EAAM,GAC/D,GACA,CAAAsa,IAAA,oBAAA77B,MAQA,SAAkBi+D,EAAU54B,GACxB,GAA0B,iBAAd44B,EAAwB,CAChC,IAAMt9D,EAAIlE,KAAKojE,SAAS5B,GACxB13B,GAAe5lC,EAAG,gBAAiB,WAAYs9D,GAC/CA,EAAWt9D,CACf,CACA,OAAOq/B,GAAO,CACVi+B,EAASL,SACTnhE,KAAKmjE,cAAc3B,EAASpC,OAAQx2B,GAAU,KAEtD,GACA,CAAAxJ,IAAA,qBAAA77B,MAQA,SAAmBi+D,EAAU18C,GACzB,GAA0B,iBAAd08C,EAAwB,CAChC,IAAMt9D,EAAIlE,KAAKsjE,YAAY9B,GAC3B13B,GAAe5lC,EAAG,mBAAoB,WAAYs9D,GAClDA,EAAWt9D,CACf,CAEA,OADA4lC,GAAeyB,GAAUzmB,EAAM,EAAG,KAAO08C,EAASL,SAAU,0CAAF59B,OAA4Ci+B,EAAS9+D,KAAI,KAAK,OAAQoiB,GACzH9kB,KAAKqjE,cAAc7B,EAASpC,OAAQ7zB,GAAUzmB,EAAM,GAC/D,GACA,CAAAsa,IAAA,qBAAA77B,MAKA,SAAmBi+D,EAAU54B,GACzB,GAA0B,iBAAd44B,EAAwB,CAChC,IAAMt9D,EAAIlE,KAAKsjE,YAAY9B,GAC3B13B,GAAe5lC,EAAG,mBAAoB,WAAYs9D,GAClDA,EAAWt9D,CACf,CACA,OAAOq/B,GAAO,CACVi+B,EAASL,SACTnhE,KAAKmjE,cAAc3B,EAASpC,OAAQx2B,GAAU,KAEtD,GACA,CAAAxJ,IAAA,uBAAA77B,MASA,SAAqBi+D,EAAU18C,GAC3B,GAA0B,iBAAd08C,EAAwB,CAChC,IAAMt9D,EAAIlE,KAAKsjE,YAAY9B,GAC3B13B,GAAe5lC,EAAG,mBAAoB,WAAYs9D,GAClDA,EAAWt9D,CACf,CACA,IAAID,EAAU,iCACRjB,EAAQgoC,GAAalmB,GAC3B,GAAK9hB,EAAMqB,OAAS,IAAQ,EACxB,IACI,OAAOsqC,KAAA3uC,KAAIkiE,IAAWhhC,OAAOsgC,EAAST,QAAS/9D,EACnD,CACA,MAAOmkC,GACHljC,EAAU,8BACd,CAGJ2lC,IAAO,EAAO3lC,EAAS,WAAY,CAC/BV,MAAO6nC,GAAQpoC,GACfumC,KAAM,CAAEoB,OAAQ62B,EAAS9+D,KAAMy1C,UAAWqpB,EAAStlB,WAE3D,GAAC,CAAA9c,IAAA,YAAA77B,MACD,SAAU6sC,EAAOiU,GACb,IAAMv/B,EAAOwY,GAAS8S,EAAO,QACvBjJ,EAAQ+c,GAASQ,wBAAwB,OAAQL,EAAIv/B,GAG3D,GAAIqiB,EAAMljC,QAAQ2yC,WADG,6CACuB,CACxC,IAAMuqB,EAAW/1B,GAAQtmB,EAAKie,MAAM,EAAG,IACjCwgC,EAAKvjE,KAAKojE,SAASjC,GACzB,GAAIoC,EACA,IACI,IAAMjqB,EAAO3K,KAAA3uC,KAAIkiE,IAAWhhC,OAAOqiC,EAAGnE,OAAQt6C,EAAKie,MAAM,IACzDoE,EAAMod,OAAS,CACX7hD,KAAM6gE,EAAG7gE,KAAMy1C,UAAWorB,EAAGrnB,SAAU5C,KAAAA,GAE3CnS,EAAMoK,OAASpK,EAAMod,OAAOpM,UAC5BhR,EAAMljC,QAAU,uBAAHs/B,OAA0B4D,EAAMoK,OACjD,CACA,MAAOxE,GACH5F,EAAMljC,QAAU,oDACpB,CAER,CAEA,IAAMu/D,EAASxjE,KAAKyjE,iBAAiBpf,GAQrC,OAPImf,IACAr8B,EAAMsd,WAAa,CACf9Z,OAAQ64B,EAAO9gE,KACfy1C,UAAWqrB,EAAOrrB,UAClBmB,KAAMkqB,EAAOlqB,OAGdnS,CACX,GACA,CAAA/H,IAAA,uBAAA77B,MAQA,SAAqBi+D,EAAU54B,GAC3B,GAA0B,iBAAd44B,EAAwB,CAChC,IAAMt9D,EAAIlE,KAAKsjE,YAAY9B,GAC3B13B,GAAe5lC,EAAG,mBAAoB,WAAYs9D,GAClDA,EAAWt9D,CACf,CACA,OAAOknC,GAAQuD,KAAA3uC,KAAIkiE,IAAWhiC,OAAOshC,EAAST,QAASn4B,GAAU,IACrE,GA+BA,CAAAxJ,IAAA,qBAAA77B,MACA,SAAmBi+D,EAAU54B,GAAQ,IAAAuR,EAAA,KACjC,GAA0B,iBAAdqnB,EAAwB,CAChC,IAAMt9D,EAAIlE,KAAK0jE,SAASlC,GACxB13B,GAAe5lC,EAAG,gBAAiB,gBAAiBs9D,GACpDA,EAAWt9D,CACf,CACA0lC,GAAOhB,EAAOvkC,QAAUm9D,EAASpC,OAAO/6D,OAAQ,0BAAFk/B,OAA4Bi+B,EAAStlB,UAAY,sBAAuB,CAAElS,MAAOpB,EAAOvkC,OAAQ4lC,cAAeu3B,EAASpC,OAAO/6D,SAC7K,IAAMs/D,EAAS,GACVnC,EAASppC,WACVurC,EAAO/+B,KAAK48B,EAASrB,WAGzB,IAAMyD,EAAc,SAACtgB,EAAO//C,GACxB,MAAmB,WAAf+/C,EAAMn5C,KACCmN,GAAG/T,GAEU,UAAf+/C,EAAMn5C,KACJsoC,GAAUrH,GAAQ7nC,KAEV,SAAf+/C,EAAMn5C,MAAsC,kBAAX5G,IACjCA,EAASA,EAAQ,OAAS,QAE1B+/C,EAAMn5C,KAAKy4B,MAAM,YACjBr/B,EAAQiqC,GAAQjqC,IAGD,YAAf+/C,EAAMn5C,MACNwkC,KAAAwL,EAAI+nB,IAAWhiC,OAAO,CAAC,WAAY,CAAC38B,IAEjCmoC,GAAaN,GAAQ7nC,GAAQ,IAExC,EAqBA,IApBAqlC,EAAO8Q,SAAQ,SAACn2C,EAAOilC,GACnB,IAAM8a,EAAQke,EAASpC,OAAO52B,GACzB8a,EAAMlpB,QAIE,MAAT72B,EACAogE,EAAO/+B,KAAK,MAEY,UAAnB0e,EAAMzF,UAA2C,UAAnByF,EAAMzF,SACzC/T,IAAe,EAAO,gDAAkD,YAAcwZ,EAAM5gD,KAAOa,GAE9Fq+B,MAAMkH,QAAQvlC,GACnBogE,EAAO/+B,KAAKrhC,EAAMkjC,KAAI,SAACljC,GAAK,OAAKqgE,EAAYtgB,EAAO//C,EAAM,KAG1DogE,EAAO/+B,KAAKg/B,EAAYtgB,EAAO//C,IAb/BumC,GAAwB,MAATvmC,EAAe,qDAAuD,YAAc+/C,EAAM5gD,KAAOa,EAexH,IAEOogE,EAAOt/D,QAAwC,OAA9Bs/D,EAAOA,EAAOt/D,OAAS,IAC3Cs/D,EAAOjjB,MAEX,OAAOijB,CACX,GAAC,CAAAvkC,IAAA,iBAAA77B,MACD,SAAei+D,EAAU54B,GAAQ,IAAAoS,EAAA,KAC7B,GAA0B,iBAAdwmB,EAAwB,CAChC,IAAMt9D,EAAIlE,KAAK0jE,SAASlC,GACxB13B,GAAe5lC,EAAG,gBAAiB,gBAAiBs9D,GACpDA,EAAWt9D,CACf,CACA,IAAMy/D,EAAS,GACTE,EAAY,GACZC,EAAa,GA2BnB,OA1BKtC,EAASppC,WACVurC,EAAO/+B,KAAK48B,EAASrB,WAEzBr2B,GAAelB,EAAOvkC,SAAWm9D,EAASpC,OAAO/6D,OAAQ,kCAAmC,SAAUukC,GACtG44B,EAASpC,OAAO1lB,SAAQ,SAAC4J,EAAO9a,GAC5B,IAAMjlC,EAAQqlC,EAAOJ,GACrB,GAAI8a,EAAMlpB,QACN,GAAmB,WAAfkpB,EAAMn5C,KACNw5D,EAAO/+B,KAAKttB,GAAG/T,SAEd,GAAmB,UAAf+/C,EAAMn5C,KACXw5D,EAAO/+B,KAAK6N,GAAUlvC,QAErB,IAAuB,UAAnB+/C,EAAMzF,UAA2C,UAAnByF,EAAMzF,SAEzC,MAAM,IAAIzb,MAAM,mBAGhBuhC,EAAO/+B,KAAK+J,KAAAqM,EAAIknB,IAAWhiC,OAAO,CAACojB,EAAMn5C,MAAO,CAAC5G,IACrD,MAGAsgE,EAAUj/B,KAAK0e,GACfwgB,EAAWl/B,KAAKrhC,EAExB,IACO,CACHuhB,KAAM6pB,KAAA3uC,KAAIkiE,IAAWhiC,OAAO2jC,EAAWC,GACvCH,OAAQA,EAEhB,GACA,CAAAvkC,IAAA,iBAAA77B,MACA,SAAei+D,EAAU18C,EAAM6+C,GAC3B,GAA0B,iBAAdnC,EAAwB,CAChC,IAAMt9D,EAAIlE,KAAK0jE,SAASlC,GACxB13B,GAAe5lC,EAAG,gBAAiB,gBAAiBs9D,GACpDA,EAAWt9D,CACf,CACA,GAAc,MAAVy/D,IAAmBnC,EAASppC,UAAW,CACvC,IAAM2rC,EAAavC,EAASrB,UAC5Br2B,GAAemB,GAAY04B,EAAO,GAAI,KAAOA,EAAO,GAAGpwB,gBAAkBwwB,EAAY,0BAA2B,YAAaJ,EAAO,IACpIA,EAASA,EAAO5gC,MAAM,EAC1B,CACA,IAAM3I,EAAU,GACV4pC,EAAa,GACbvpB,EAAU,GAChB+mB,EAASpC,OAAO1lB,SAAQ,SAAC4J,EAAO9a,GACxB8a,EAAMlpB,QACa,WAAfkpB,EAAMn5C,MAAoC,UAAfm5C,EAAMn5C,MAAuC,UAAnBm5C,EAAMzF,UAA2C,UAAnByF,EAAMzF,UACzFzjB,EAAQwK,KAAK8c,GAAAA,KAAe,CAAEv3C,KAAM,UAAWzH,KAAM4gD,EAAM5gD,QAC3D+3C,EAAQ7V,MAAK,KAGbxK,EAAQwK,KAAK0e,GACb7I,EAAQ7V,MAAK,KAIjBo/B,EAAWp/B,KAAK0e,GAChB7I,EAAQ7V,MAAK,GAErB,IACA,IAAMq/B,EAA2B,MAAVN,EAAkBh1B,KAAA3uC,KAAIkiE,IAAWhhC,OAAO9G,EAASmJ,GAAOogC,IAAW,KACpFO,EAAmBv1B,KAAA3uC,KAAIkiE,IAAWhhC,OAAO8iC,EAAYl/C,GAAM,GAE3D8jB,EAAS,GACThB,EAAO,GACTu8B,EAAkB,EAAGC,EAAe,EA8BxC,OA7BA5C,EAASpC,OAAO1lB,SAAQ,SAAC4J,EAAO9a,GAC5B,IAAIjlC,EAAQ,KACZ,GAAI+/C,EAAMlpB,QACN,GAAqB,MAAjB6pC,EACA1gE,EAAQ,IAAIq+D,GAAQ,WAEnB,GAAInnB,EAAQjS,GACbjlC,EAAQ,IAAIq+D,GAAQqC,EAAcG,WAGlC,IACI7gE,EAAQ0gE,EAAcG,IAC1B,CACA,MAAOj9B,GACH5jC,EAAQ4jC,CACZ,MAIJ,IACI5jC,EAAQ2gE,EAAiBC,IAC7B,CACA,MAAOh9B,GACH5jC,EAAQ4jC,CACZ,CAEJyB,EAAOhE,KAAKrhC,GACZqkC,EAAKhD,KAAK0e,EAAM5gD,MAAQ,KAC5B,IACOT,GAAOoiE,UAAUz7B,EAAQhB,EACpC,GACA,CAAAxI,IAAA,mBAAA77B,MAMA,SAAiB8gD,GACb,IAAMv/B,EAAOwY,GAAS+mB,EAAGv/B,KAAM,WACzBvhB,EAAQ8oC,GAAuB,MAAZgY,EAAG9gD,MAAiB8gD,EAAG9gD,MAAQ,EAAG,YACrDi+D,EAAWxhE,KAAKsjE,YAAYl4B,GAAQtmB,EAAKie,MAAM,EAAG,KACxD,IAAKy+B,EACD,OAAO,KAEX,IAAMloB,EAAO3K,KAAA3uC,KAAIkiE,IAAWhhC,OAAOsgC,EAASpC,OAAQt6C,EAAKie,MAAM,IAC/D,OAAO,IAAI2+B,GAAuBF,EAAUA,EAASL,SAAU7nB,EAAM/1C,EACzE,GAAC,CAAA67B,IAAA,kBAAA77B,MACD,SAAgBuhB,GACZ,MAAM,IAAIsd,MAAM,QACpB,GACA,CAAAhD,IAAA,WAAA77B,MAMA,SAAS83D,GACL,IAAMmG,EAAWxhE,KAAK0jE,SAASrI,EAAIsI,OAAO,IAC1C,OAAKnC,GAAYA,EAASppC,UACf,KAKJ,IAAImpC,GAAeC,EAAUA,EAASrB,UAAWngE,KAAKskE,eAAe9C,EAAUnG,EAAIv2C,KAAMu2C,EAAIsI,QACxG,GACA,CAAAvkC,IAAA,aAAA77B,MAMA,SAAWuhB,GACP,IAAMy/C,EAAUn5B,GAAQtmB,GAClB08C,EAAWxhE,KAAKojE,SAAS73B,GAAUg5B,EAAS,EAAG,IACrD,IAAK/C,EACD,OAAO,KAEX,IAAMloB,EAAO3K,KAAA3uC,KAAIkiE,IAAWhhC,OAAOsgC,EAASpC,OAAQ7zB,GAAUg5B,EAAS,IACvE,OAAO,IAAI5C,GAAiBH,EAAUA,EAASL,SAAU7nB,EAC7D,IACA,EAAAla,IAAA,OAAA77B,MAMA,SAAYA,GAER,OAAIA,aAAiB8+D,EACV9+D,EAGY,iBAAXA,EACD,IAAI8+D,EAAU79B,KAAKwd,MAAMz+C,IAGN,mBAAlBA,EAAM24C,OACP,IAAImmB,EAAU9+D,EAAM24C,OAAO,SAG/B,IAAImmB,EAAU9+D,EACzB,KAAC8+D,CAAA,CAp2BiB,GAq2BrB,SAAAS,GAluBgB1jC,EAAKwJ,EAAQ47B,GAEtB,GAAIv5B,GAAY7L,GAAM,CAClB,IAC+CsoB,EADzCyZ,EAAW/hC,EAAImU,cAAcoU,EAAAva,GACZuB,KAAA3uC,KAAIiiE,IAAYr5B,UAAQ,IAA/C,IAAA+e,EAAAta,MAAAqa,EAAAC,EAAA7oB,KAAAwO,MAAiD,KAAtCk0B,EAAQ9Z,EAAAnkD,MACf,GAAI49D,IAAaK,EAASL,SACtB,OAAOK,CAEf,CAAC,OAAAj0B,GAAAoa,EAAA5a,EAAAQ,EAAA,SAAAoa,EAAAzjD,GAAA,CACD,OAAO,IACX,CAEA,IAA0B,IAAtBk7B,EAAIgC,QAAQ,KAAa,CACzB,IACmCqjC,EAD7BzB,EAAW,GAAG0B,EAAAt3B,GAAAuB,KACW3uC,KAAIiiE,KAAA,IAAnC,IAAAyC,EAAAr3B,MAAAo3B,EAAAC,EAAA5lC,KAAAwO,MAAgD,KAAAq3B,EAAAhtB,KAAA8sB,EAAAlhE,MAAA,GAApCb,EAAIiiE,EAAA,GAAEnD,EAAQmD,EAAA,GAClBjiE,EAAK0gC,MAAM,KAAiB,KAAOhE,GACnC4jC,EAASp+B,KAAK48B,EAEtB,CAAC,OAAAj0B,GAAAm3B,EAAA33B,EAAAQ,EAAA,SAAAm3B,EAAAxgE,GAAA,CACD,GAAI0kC,EAAQ,CACR,IAAMg8B,EAAah8B,EAAOvkC,OAAS,EAAKukC,EAAOA,EAAOvkC,OAAS,GAAK,KAChEwgE,EAAcj8B,EAAOvkC,OACrBygE,GAAe,EACfnpB,GAAMQ,QAAQyoB,IAAiC,cAAnBA,EAAUz6D,OACtC26D,GAAe,EACfD,KAIJ,IAAK,IAAIjkC,EAAIoiC,EAAS3+D,OAAS,EAAGu8B,GAAK,EAAGA,IAAK,CAC3C,IAAMw+B,EAAS4D,EAASpiC,GAAGw+B,OAAO/6D,OAC9B+6D,IAAWyF,GAAiBC,GAAgB1F,IAAWyF,EAAc,GACrE7B,EAAS+B,OAAOnkC,EAAG,EAE3B,CAEA,IAAK,IAAIA,EAAIoiC,EAAS3+D,OAAS,EAAGu8B,GAAK,EAAGA,IAEtC,IADA,IAAMw+B,EAAS4D,EAASpiC,GAAGw+B,OAClBn6B,EAAI,EAAGA,EAAI2D,EAAOvkC,OAAQ4gC,IAE/B,GAAK0W,GAAMQ,QAAQvT,EAAO3D,IAA1B,CAIA,GAAIA,GAAKm6B,EAAO/6D,OAAQ,CACpB,GAAuB,cAAnBukC,EAAO3D,GAAG96B,KACV,SAEJ64D,EAAS+B,OAAOnkC,EAAG,GACnB,KACJ,CAEA,GAAIgI,EAAO3D,GAAG96B,OAASi1D,EAAOn6B,GAAG4Y,SAAU,CACvCmlB,EAAS+B,OAAOnkC,EAAG,GACnB,KACJ,CAbA,CAgBZ,CAGA,GAAwB,IAApBoiC,EAAS3+D,QAAgBukC,GAAUA,EAAOvkC,SAAW2+D,EAAS,GAAG5D,OAAO/6D,OAAQ,CAChF,IAAM2gE,EAAUp8B,EAAOA,EAAOvkC,OAAS,IACxB,MAAX2gE,GAAmBpjC,MAAMkH,QAAQk8B,IAAiC,WAArB99B,IAAQ89B,KACrDhC,EAAS+B,OAAO,EAAG,EAE3B,CACA,GAAwB,IAApB/B,EAAS3+D,OACT,OAAO,KAEX,GAAI2+D,EAAS3+D,OAAS,GAAKmgE,EAAa,CACpC,IAAMtB,EAAWF,EAASv8B,KAAI,SAACwzB,GAAC,OAAKz1B,KAAKC,UAAUw1B,EAAE/d,SAAS,IAAEvV,KAAK,MACtEmD,IAAe,EAAO,gDAAFvG,OAAkD2/B,EAAQ,KAAK,MAAO9jC,EAC9F,CACA,OAAO4jC,EAAS,EACpB,CAGA,OADer0B,KAAA3uC,KAAIiiE,IAAYxiC,IAAIggC,GAAAA,KAAsBrgC,GAAK8c,WAIvD,IACX,CAAC,SAAA6mB,GAmCS3jC,EAAKwJ,EAAQ47B,GAEnB,GAAIv5B,GAAY7L,GAAM,CAClB,IAC4C6lC,EADtClB,EAAa3kC,EAAImU,cAAc2xB,EAAA93B,GACduB,KAAA3uC,KAAIgiE,IAASp5B,UAAQ,IAA5C,IAAAs8B,EAAA73B,MAAA43B,EAAAC,EAAApmC,KAAAwO,MAA8C,KAAnCk0B,EAAQyD,EAAA1hE,MACf,GAAIwgE,IAAevC,EAASrB,UACxB,OAAOqB,CAEf,CAAC,OAAAj0B,GAAA23B,EAAAn4B,EAAAQ,EAAA,SAAA23B,EAAAhhE,GAAA,CACD,OAAO,IACX,CAEA,IAA0B,IAAtBk7B,EAAIgC,QAAQ,KAAa,CACzB,IACmC+jC,EAD7BnC,EAAW,GAAGoC,EAAAh4B,GAAAuB,KACW3uC,KAAIgiE,KAAA,IAAnC,IAAAoD,EAAA/3B,MAAA83B,EAAAC,EAAAtmC,KAAAwO,MAA6C,KAAA+3B,EAAA1tB,KAAAwtB,EAAA5hE,MAAA,GAAjCb,EAAI2iE,EAAA,GAAE7D,EAAQ6D,EAAA,GAClB3iE,EAAK0gC,MAAM,KAAiB,KAAOhE,GACnC4jC,EAASp+B,KAAK48B,EAEtB,CAAC,OAAAj0B,GAAA63B,EAAAr4B,EAAAQ,EAAA,SAAA63B,EAAAlhE,GAAA,CACD,GAAI0kC,EAAQ,CAER,IAAK,IAAIhI,EAAIoiC,EAAS3+D,OAAS,EAAGu8B,GAAK,EAAGA,IAClCoiC,EAASpiC,GAAGw+B,OAAO/6D,OAASukC,EAAOvkC,QACnC2+D,EAAS+B,OAAOnkC,EAAG,GAI3B,IAAK,IAAIA,EAAIoiC,EAAS3+D,OAAS,EAAGu8B,GAAK,EAAGA,IAEtC,IADA,IAAMw+B,EAAS4D,EAASpiC,GAAGw+B,OAClBn6B,EAAI,EAAGA,EAAI2D,EAAOvkC,OAAQ4gC,IAE/B,GAAK0W,GAAMQ,QAAQvT,EAAO3D,KAItB2D,EAAO3D,GAAG96B,OAASi1D,EAAOn6B,GAAG4Y,SAAU,CACvCmlB,EAAS+B,OAAOnkC,EAAG,GACnB,KACJ,CAGZ,CACA,GAAwB,IAApBoiC,EAAS3+D,OACT,OAAO,KAEX,GAAI2+D,EAAS3+D,OAAS,GAAKmgE,EAAa,CACpC,IAAMtB,EAAWF,EAASv8B,KAAI,SAACwzB,GAAC,OAAKz1B,KAAKC,UAAUw1B,EAAE/d,SAAS,IAAEvV,KAAK,MACtEmD,IAAe,EAAO,6CAAFvG,OAA+C2/B,EAAQ,KAAK,MAAO9jC,EAC3F,CACA,OAAO4jC,EAAS,EACpB,CAGA,OADer0B,KAAA3uC,KAAIgiE,IAASviC,IAAI8/B,GAAAA,KAAmBngC,GAAK8c,WAIjD,IACX,CCvYJ,IAAMopB,GAAiB,SAACC,GAAQ,OAAKj3B,GAAU74B,KAAK8vD,EAAS,EACvDC,GAAgB,SAACC,GAAQ,OAAKn3B,GAAU74B,KAAKgwD,GAAUnZ,UAAU,EACjEoZ,GAAW,SAACniE,GAAK,OAAK+5B,GAAS/5B,EAAM,EACrCoiE,GAAc,CAChBC,QAAS,UACT/C,QAAS,UACTgD,KAAM,OACN9Q,KAAM,QAEJ+Q,GAAkBnwB,GAASmwB,gB,oqCAEjC7vB,GAAY1F,UAAS,SAACuF,EAAW1W,EAAKta,GAClC,OAAOmxB,GAAY3F,EAAEwF,EAAWiwB,OAAOtwD,KAAK2pB,GAAM2mC,OAAOtwD,KAAKqP,GAClE,ICzBA,IAAMsgC,GAAU,IAAIrc,WAAW,IAC/Bqc,GAAQxZ,KAAK,GACb,IAAMyZ,GAAQlc,QAAQ,GAChB4C,GAAO5C,OAAO,GACd6C,GAAO7C,OAAO,GACdwV,GAAiBxV,OAAO,sEAUxBmc,GAAU9X,GAAQxB,GAAM,IACxBuZ,GAAW/X,GAAQzB,GAAM,IACzByZ,GAAmB,CACrB9iD,KAAM,SACNm0B,QAAS,SACTsY,QAAS,UACTsW,kBAAmB,UACnB5U,KAAM,WAEJ6U,GAAmB,CACrB,OAAQ,UAAW,UAAW,oBAAqB,QAEvD,SAASC,GAAYvmB,GACjB,OAAO,SAAU77B,GAEb,OADAumC,GAAkC,iBAAXvmC,EAAqB,4BAAFggC,OAA8BiB,KAAKC,UAAUrF,IAAI,UAAAmE,OAAcnE,GAAO77B,GACzGA,CACX,CACJ,CACA,IAAMqiD,GAAe,CACjBljD,KAAMijD,GAAY,QAClB9uB,QAAS8uB,GAAY,WACrBxW,QAAS,SAAU5rC,GACf,OAAO8oC,GAAU9oC,EAAO,iBAC5B,EACAkiD,kBAAmB,SAAUliD,GACzB,IACI,OA5CYX,EA4CUW,EA3CvByiE,GAAQpjE,QAAQ+1C,MAAM/1C,IA2CQ2wC,aACjC,CACA,MAAOpM,GAAS,CA9CxB,IAAwBvkC,EA+ChBknC,IAAe,EAAO,2CAA4C,2BAA4BvmC,EAClG,EACAstC,KAAM,SAAUttC,GACZ,IAAMP,EAAQs6B,GAAS/5B,EAAO,eAE9B,OADAumC,GAAgC,KAAjB9mC,EAAMqB,OAAe,8BAA+B,cAAed,GAC3E6nC,GAAQpoC,EACnB,GAEJ,SAAS+iD,GAAe57C,GAGhB,IAAMy4B,EAAQz4B,EAAKy4B,MAAM,kBACzB,GAAIA,EAAO,CACP,IAAM8Y,EAAuB,KAAb9Y,EAAM,GAChB0J,EAAQrJ,SAASL,EAAM,IAAM,OACnCkH,GAAewC,EAAQ,GAAM,GAAe,IAAVA,GAAeA,GAAS,MAAoB,MAAZ1J,EAAM,IAAcA,EAAM,KAAOvB,OAAOiL,IAAS,wBAAyB,OAAQniC,GACpJ,IAAM67C,EAAcvZ,GAAKkS,GAAgBjD,EAAUpP,EAAQ,EAAKA,GAC1D2Z,EAAcvK,GAAWsK,EAAcha,IAAQqZ,GAAStZ,GAC9D,OAAO,SAAUI,GACb,IAAM5oC,EAAQ8oC,GAAUF,EAAQ,SAEhC,OADArC,GAAevmC,GAAS0iD,GAAe1iD,GAASyiD,EAAa,2BAAFziB,OAA6Bp5B,GAAQ,QAAS5G,GAElGiqC,GADFkO,EACUxP,GAAO3oC,EAAO,KADDA,EACO,GACvC,CACJ,CAIA,IAAMq/B,EAAQz4B,EAAKy4B,MAAM,gBACzB,GAAIA,EAAO,CACP,IAAM0J,EAAQrJ,SAASL,EAAM,IAE7B,OADAkH,GAAyB,IAAVwC,GAAeA,GAAS,IAAM1J,EAAM,KAAOvB,OAAOiL,GAAQ,sBAAuB,OAAQniC,GACjG,SAAU5G,GAGb,OADAumC,GADcxM,GAAS/5B,GACFc,SAAWioC,EAAO,sBAAF/I,OAAwBp5B,GAAQ,QAAS5G,GAvE9F,SAAqBA,GACjB,IAAMP,EAAQs6B,GAAS/5B,GACjB2iD,EAAYljD,EAAMqB,OAAS,GACjC,OAAI6hD,EACO3iB,GAAO,CAACvgC,EAAOoiD,GAAQriB,MAAMmjB,KAEjC9a,GAAQpoC,EACnB,CAiEuBmjD,CAAY5iD,EACvB,CACJ,CAEJ,OAAQ4G,GACP,IAAK,WAAY,OAAO47C,GAAe,WACpC,IAAK,UAAW,OAAO,SAAUxiD,GAC7B,OAAOmoC,IA5FC9oC,EA4FuBW,EA3FhCyiE,GAAQpjE,QAAQ+1C,MAAM/1C,GAASu+B,QAAQ4C,EAAsB,OA2FrB,IA5FnD,IAAoBnhC,CA6FZ,EACA,IAAK,OAAQ,OAAO,SAAUW,GAC1B,OAAUA,EAAoB+hD,GAAXC,EACvB,EACA,IAAK,QAAS,OAAO,SAAUhiD,GAC3B,OAAOkvC,GAAUlvC,EACrB,EACA,IAAK,SAAU,OAAO,SAAUA,GAC5B,OAAO+T,GAAG/T,EACd,EAEJ,OAAO,IACX,CACA,SAAS6iD,GAAW1jD,EAAM2jD,GACtB,MAAO,GAAP9iB,OAAU7gC,EAAI,KAAA6gC,OAAI8iB,EAAO5f,KAAI,SAAA+I,GAAA,IAAG9sC,EAAI8sC,EAAJ9sC,KAAU,OAAA8sC,EAAJrlC,KAAmB,IAAMzH,CAAI,IAAGikC,KAAK,KAAI,IACnF,CAAC,IAAA2f,GAAA,IAAArY,QAAAsY,GAAA,IAAAtY,QAAAuY,GAAA,IAAAvY,QAAAwY,GAAA,IAAA1S,QACY2S,GAAgB,WAQzB,SAAAA,EAAY3f,G,MAAOwH,IAAA,KAAAmY,G,GAAA,K,EAAAD,I,MAAA,MAAA/S,IAAA,2BAAAlF,GAAA,KAAA8X,GAAA,CAAAzd,UAAA,EAAAtlC,WAAA,IAAAirC,GAAA,KAAA+X,GAAA,CAAA1d,UAAA,EAAAtlC,WAAA,IAAAirC,GAAA,KAAAgY,GAAA,CAAA3d,UAAA,EAAAtlC,WAAA,IACfkrC,KAAAzuC,KAAIsmD,GAAU9hB,KAAKC,UAAUsC,IAC7B0H,KAAAzuC,KAAIumD,GAAc,IAAIjgD,KACtBmoC,KAAAzuC,KAAIwmD,GAAiB,IAAIlgD,KAEzB,IAAMqgD,EAAQ,IAAIrgD,IAEZsgD,EAAU,IAAItgD,IAEdugD,EAAW,IAAIvgD,IAMrB,IAAK,IAAM5D,KALX48B,OAAOsI,KAAKb,GAAO2S,SAAQ,SAACvvC,GACxBw8C,EAAM9a,IAAI1hC,EAAM,IAAIi1C,KACpBwH,EAAQ/a,IAAI1hC,EAAM,IAClB08C,EAAShb,IAAI1hC,EAAM,IAAIi1C,IAC3B,IACmBrY,EAAO,CACtB,IAC+BmG,EADzBgS,EAAc,IAAIE,IAAMjS,EAAAC,GACVrG,EAAMrkC,IAAK,IAA/B,IAAAyqC,EAAAE,MAAAH,EAAAC,EAAArO,KAAAwO,MAAiC,KAAtBwZ,EAAK5Z,EAAA3pC,MAEZumC,IAAgBoV,EAAYsB,IAAIsG,EAAMpkD,MAAO,2BAAF6gC,OAA6BiB,KAAKC,UAAUqiB,EAAMpkD,MAAK,QAAA6gC,OAAOiB,KAAKC,UAAU/hC,IAAS,QAASqkC,GAC1ImY,EAAYxG,IAAIoO,EAAMpkD,MAEtB,IAAMm7C,EAAYiJ,EAAM38C,KAAKy4B,MAAM,uBAAwB,IAAM,KACjEkH,GAAe+T,IAAan7C,EAAM,8BAAF6gC,OAAgCiB,KAAKC,UAAUoZ,IAAa,QAAS9W,GAErFgf,GAAelI,KAI/B/T,GAAe8c,EAAQpG,IAAI3C,GAAW,gBAAFta,OAAkBiB,KAAKC,UAAUoZ,IAAa,QAAS9W,GAE3F6f,EAAQnnB,IAAIoe,GAAUjZ,KAAKliC,GAC3BikD,EAAMlnB,IAAI/8B,GAAMg2C,IAAImF,GACxB,CAAC,OAAAtQ,GAAAJ,EAAAJ,EAAAQ,EAAA,SAAAJ,EAAAjpC,GAAA,CACL,CAEA,IAAM6iD,EAAenlB,MAAMnsB,KAAKmxC,EAAQhf,QAAQof,QAAO,SAACloB,GAAC,OAAgC,IAA1B8nB,EAAQnnB,IAAIX,GAAGz6B,MAAY,IAC1FylC,GAAuC,IAAxBid,EAAa1iD,OAAc,uBAAwB,QAAS0iC,GAC3E+C,GAAuC,IAAxBid,EAAa1iD,OAAc,4CAAFk/B,OAA8CwjB,EAAatgB,KAAI,SAACO,GAAC,OAAMxC,KAAKC,UAAUuC,EAAE,IAAGL,KAAK,OAAS,QAASI,GAC1J2B,GAAiB1oC,KAAM,CAAEinD,YAAaF,EAAa,KAEnD,SAASG,EAAc/8C,EAAMg9C,GACzBrd,IAAgBqd,EAAM3G,IAAIr2C,GAAO,8BAAFo5B,OAAgCiB,KAAKC,UAAUt6B,IAAS,QAAS48B,GAChGogB,EAAMzO,IAAIvuC,GAAM,IACmBi9C,EADnBC,EAAAja,GACIuZ,EAAMlnB,IAAIt1B,IAAK,IAAnC,IAAAk9C,EAAAha,MAAA+Z,EAAAC,EAAAvoB,KAAAwO,MAAqC,KAA1Bga,EAAKF,EAAA7jD,MACZ,GAAKqjD,EAAQpG,IAAI8G,GAAjB,CAIAJ,EAAcI,EAAOH,GACrB,IAC2BI,EAD3BC,EAAApa,GACsB+Z,GAAK,IAA3B,IAAAK,EAAAna,MAAAka,EAAAC,EAAA1oB,KAAAwO,MAA6B,KAAlBma,EAAOF,EAAAhkD,MACdsjD,EAASpnB,IAAIgoB,GAAS/O,IAAI4O,EAC9B,CAAC,OAAA/Z,GAAAia,EAAAza,EAAAQ,EAAA,SAAAia,EAAAtjD,GAAA,CAND,CAOJ,CAAC,OAAAqpC,GAAA8Z,EAAAta,EAAAQ,EAAA,SAAA8Z,EAAAnjD,GAAA,CACDijD,EAAK,OAAQh9C,EACjB,CACA+8C,CAAclnD,KAAKinD,YAAa,IAAI7H,KACpC,IACkCsI,EADlCC,EAAAva,GAC0ByZ,GAAQ,IAAlC,IAAAc,EAAAta,MAAAqa,EAAAC,EAAA7oB,KAAAwO,MAAoC,KAAAsa,EAAAjQ,KAAA+P,EAAAnkD,MAAA,GAAxBb,EAAIklD,EAAA,GAAE/b,EAAG+b,EAAA,GACX5kB,EAAKpB,MAAMnsB,KAAKo2B,GACtB7I,EAAGoG,OACHuF,KAAA3uC,KAAIumD,IAAY1a,IAAInpC,EAAM0jD,GAAW1jD,EAAMqkC,EAAMrkC,IAASsgC,EAAGyD,KAAI,SAACO,GAAC,OAAKof,GAAWpf,EAAGD,EAAMC,GAAG,IAAEL,KAAK,IAC1G,CAAC,OAAA4G,GAAAoa,EAAA5a,EAAAQ,EAAA,SAAAoa,EAAAzjD,GAAA,CACL,CA8KC,OA9KAwqC,IAAAgY,EAAA,EAAAtnB,IAAA,QAAAK,IArED,WACI,OAAO+E,KAAKwd,MAAKrT,KAAC3uC,KAAIsmD,IAC1B,GAAC,CAAAlnB,IAAA,aAAA77B,MAoED,SAAW4G,GACP,IAAI29C,EAAUnZ,KAAA3uC,KAAIwmD,IAAe/mB,IAAIt1B,GAKrC,OAJK29C,IACDA,E,4GAAOxT,CAAGt0C,KAAIymD,GAAAsB,IAAA9nD,KAAJD,KAAiBmK,GAC3BwkC,KAAA3uC,KAAIwmD,IAAe3a,IAAI1hC,EAAM29C,IAE1BA,CACX,GAAC,CAAA1oB,IAAA,aAAA77B,MAyCD,SAAWb,GACP,IAAMumC,EAAS0F,KAAA3uC,KAAIumD,IAAY9mB,IAAI/8B,GAEnC,OADAonC,GAAeb,EAAQ,iBAAF1F,OAAmBiB,KAAKC,UAAU/hC,IAAS,OAAQA,GACjEumC,CACX,GAAC,CAAA7J,IAAA,aAAA77B,MACD,SAAW4G,EAAM5G,GACb,OAAOvD,KAAKgoD,WAAW79C,EAAhBnK,CAAsBuD,EACjC,GAAC,CAAA67B,IAAA,aAAA77B,MACD,SAAWb,EAAMa,GACb,OAAOkvC,GAAUzyC,KAAKioD,WAAWvlD,EAAMa,GAC3C,GAAC,CAAA67B,IAAA,SAAA77B,MACD,SAAOA,GACH,OAAOvD,KAAKioD,WAAWjoD,KAAKinD,YAAa1jD,EAC7C,GAAC,CAAA67B,IAAA,OAAA77B,MACD,SAAKA,GACD,OAAOvD,KAAKkoD,WAAWloD,KAAKinD,YAAa1jD,EAC7C,GAAC,CAAA67B,IAAA,SAAA77B,MACD,SAAO4G,EAAM5G,EAAO62C,GAAU,IAAApa,EAAA,KAItB,GADgB+lB,GAAe57C,GAE3B,OAAOiwC,EAASjwC,EAAM5G,GAI9B,IAAMq/B,EAAQz4B,EAAKy4B,MAAM,yBACzB,GAAIA,EAEA,OADAkH,IAAgBlH,EAAM,IAAMK,SAASL,EAAM,MAAQr/B,EAAMc,OAAQ,0CAAFk/B,OAA4CN,SAASL,EAAM,KAAO,QAASr/B,GACnIA,EAAMkjC,KAAI,SAAC9D,GAAC,OAAK3C,EAAKmoB,OAAOvlB,EAAM,GAAID,EAAGyX,EAAS,IAG9D,IAAMiM,EAASrmD,KAAK+mC,MAAM58B,GAC1B,GAAIk8C,EACA,OAAOA,EAAO/d,QAAO,SAACC,EAAK6f,GAAqB,IAAjB1lD,EAAI0lD,EAAJ1lD,KAAMyH,EAAIi+C,EAAJj+C,KAEjC,OADAo+B,EAAM7lC,GAAQs9B,EAAKmoB,OAAOh+C,EAAM5G,EAAMb,GAAO03C,GACtC7R,CACX,GAAG,CAAC,GAERuB,IAAe,EAAO,iBAAFvG,OAAmBp5B,GAAQ,OAAQA,EAC3D,GAAC,CAAAi1B,IAAA,QAAA77B,MACD,SAAMA,EAAO62C,GACT,OAAOp6C,KAAKmoD,OAAOnoD,KAAKinD,YAAa1jD,EAAO62C,EAChD,IAAC,EAAAhb,IAAA,OAAA77B,MACD,SAAYwjC,GACR,OAAO,IAAI2f,EAAiB3f,EAChC,GAAC,CAAA3H,IAAA,iBAAA77B,MACD,SAAsBwjC,GAClB,OAAO2f,EAAiBjxC,KAAKsxB,GAAOkgB,WACxC,GAAC,CAAA7nB,IAAA,aAAA77B,MACD,SAAkBb,EAAMqkC,EAAOxjC,GAC3B,OAAOmjD,EAAiBjxC,KAAKsxB,GAAOmhB,WAAWxlD,EAAMa,EACzD,GAAC,CAAA67B,IAAA,aAAA77B,MACD,SAAkB8kD,GACd,IAAMC,EAAe,GACrB,IAAK,IAAM5lD,KAAQ2lD,EACf,GAAoB,MAAhBA,EAAO3lD,GAAX,CAGA,IAAMyH,EAAOq7C,GAAiB9iD,GAC9BonC,GAAe3/B,EAAM,kCAAFo5B,OAAoCiB,KAAKC,UAAU/hC,IAAS,SAAU2lD,GACzFC,EAAa1jB,KAAK,CAAEliC,KAAAA,EAAMyH,KAAAA,GAH1B,CAQJ,OAHAm+C,EAAalf,MAAK,SAAClK,EAAG0c,GAClB,OAAO8J,GAAiBtkB,QAAQlC,EAAEx8B,MAAQgjD,GAAiBtkB,QAAQwa,EAAEl5C,KACzE,IACOgkD,EAAiBwB,WAAW,eAAgB,CAAEK,aAAcD,GAAgBD,EACvF,GAAC,CAAAjpB,IAAA,SAAA77B,MACD,SAAc8kD,EAAQthB,EAAOxjC,GACzB,OAAOggC,GAAO,CACV,SACAmjB,EAAiB8B,WAAWH,GAC5B3B,EAAiBjxC,KAAKsxB,GAAOlV,KAAKtuB,IAE1C,GAAC,CAAA67B,IAAA,OAAA77B,MACD,SAAY8kD,EAAQthB,EAAOxjC,GACvB,OAAOkvC,GAAUiU,EAAiBxmB,OAAOmoB,EAAQthB,EAAOxjC,GAC5D,GAAC,CAAA67B,IAAA,aAAA77B,MACD,SAAkB8kD,EAAQthB,EAAOxjC,GAE7BmjD,EAAiB8B,WAAWH,GAE5B,IAAMQ,EAAe,CAAC,EAChBC,EAAc,GACpBpD,GAAiBhM,SAAQ,SAACh3C,GACtB,IAAMa,EAAQ8kD,EAAO3lD,GACR,MAATa,IAGJslD,EAAanmD,GAAQkjD,GAAaljD,GAAMa,GACxCulD,EAAYlkB,KAAK,CAAEliC,KAAAA,EAAMyH,KAAMq7C,GAAiB9iD,KACpD,IACA,IAAMolD,EAAUpB,EAAiBjxC,KAAKsxB,GAChCgiB,EAAkBzpB,OAAOqK,OAAO,CAAC,EAAG5C,GAK1C,OAJA+C,GAA+C,MAAhCif,EAAgBR,aAAsB,2CAA4C,qBAAsBxhB,GACvHgiB,EAAgBR,aAAeO,EAE/BhB,EAAQ5nB,OAAO38B,GACR,CACHwjC,MAAOgiB,EACPV,OAAQQ,EACR5B,YAAaa,EAAQb,YACrBhjD,QAAS6jD,EAAQY,MAAMnlD,GAAO,SAAC4G,EAAM5G,GAEjC,GAAI4G,EAAKy4B,MAAM,eACX,OAAOwI,GAAQ9N,GAAS/5B,IAG5B,GAAI4G,EAAKy4B,MAAM,UACX,OAAOyJ,GAAU9oC,GAAOm/B,WAE5B,OAAQv4B,GACV,IAAK,WACK,OAAOkiC,GAAU9oC,GAAOm/B,WAC5B,IAAK,UACD,OAAOn/B,EAAMgwC,cACjB,IAAK,OACD,QAAShwC,EACb,IAAK,SAED,OADAumC,GAAkC,iBAAXvmC,EAAqB,iBAAkB,QAASA,GAChEA,EAEfumC,IAAe,EAAO,mBAAoB,OAAQ3/B,EACtD,IAER,KAACu8C,CAAA,CAtPwB,GAuP5B,SAAAqB,GAtKe59C,GAAM,IAAAgwC,EAAA,KAGJ2N,EAAU/B,GAAe57C,GAC/B,GAAI29C,EACA,OAAOA,EAIf,IAAMllB,EAAQz4B,EAAKy4B,MAAM,yBACzB,GAAIA,EAAO,CACP,IAAM6kB,EAAU7kB,EAAM,GAChBomB,EAAahpD,KAAKgoD,WAAWP,GACnC,OAAO,SAAClkD,GACJumC,IAAgBlH,EAAM,IAAMK,SAASL,EAAM,MAAQr/B,EAAMc,OAAQ,0CAAFk/B,OAA4CN,SAASL,EAAM,KAAO,QAASr/B,GAC1I,IAAI0lC,EAAS1lC,EAAMkjC,IAAIuiB,GAIvB,OAHIra,KAAAwL,EAAIoM,IAAY/F,IAAIiH,KACpBxe,EAASA,EAAOxC,IAAIgM,KAEjBA,GAAUlP,GAAO0F,GAC5B,CACJ,CAEA,IAAMod,EAASrmD,KAAK+mC,MAAM58B,GAC1B,GAAIk8C,EAAQ,CACR,IAAM4C,EAAc3xC,GAAGq3B,KAAA3uC,KAAIumD,IAAY9mB,IAAIt1B,IAC3C,OAAO,SAAC5G,GACJ,IAAMqlC,EAASyd,EAAO5f,KAAI,SAAAyiB,GAAoB,IAAjBxmD,EAAIwmD,EAAJxmD,KAAMyH,EAAI++C,EAAJ/+C,KACzB8+B,EAASkR,EAAK6N,WAAW79C,EAAhBgwC,CAAsB52C,EAAMb,IAC3C,OAAIisC,KAAAwL,EAAIoM,IAAY/F,IAAIr2C,GACbsoC,GAAUxJ,GAEdA,CACX,IAEA,OADAL,EAAOugB,QAAQF,GACR1lB,GAAOqF,EAClB,CACJ,CACAkB,IAAe,EAAO,iBAAFvG,OAAmBp5B,GAAQ,OAAQA,EAC3D,CCzOJ,MAAM,GAA+BzK,QAAQ,mC,OCSvCumE,GAAmB,QAAfC,GAAGC,GAAAA,iBAAY,IAAAD,GAAAA,GAAIC,GAMtB,SAASC,GAAsBC,GAClC,IAAMC,EAAQC,GAAOF,GAGjBG,EAFUD,GAAOD,GAEAvjC,MAAM,EAAG,GAG9B,OAAOqD,GAFPogC,EAAWH,EAAa9iC,OAAOijC,GAGnC,CAEO,SAASC,GAAoBC,GAChC,GAA4B,iBAAhBA,EACR,OAAO,EAEX,GAAIA,EAAYriE,QAAU,EACtB,OAAO,EAEX,IAAIzB,EAAUgkC,GAAS8/B,GAEvB,GAAIA,EAAYriE,QAAU,EACtB,OAAO,EAEX,IACMymC,EADMloC,EAAQyB,OACC,EACfmiE,EAAW5jE,EAAQmgC,MAAM+H,GAIzBw7B,EAAQC,GAFd3jE,EAAUA,EAAQmgC,MAAM,EAAG+H,IAIrB67B,EADQJ,GAAOD,GACGvjC,MAAM,EAAG,GAEjC,GAAIyjC,EAAS,IAAMG,EAAU,IAAMH,EAAS,IAAMG,EAAU,IAAMH,EAAS,IACvEG,EAAU,IAAMH,EAAS,IAAMG,EAAU,GAEzC,OAAO/jE,EAGX,MAAM,IAAIw/B,MAAM,2BACpB,CAEO,SAAS8tB,GAAgB0W,EAAapiB,GACd,iBAAhBoiB,IACPA,EAAc7hC,EAAiB6hC,IAEnC,IACMzuB,EAAY0uB,GAAU9hC,EADfyf,EAAYsiB,MAC2BF,GAOpD,OALIhlC,MAAMkH,QAAQ0b,EAAYrM,WACrBqM,EAAYrM,UAAU4uB,SAAS5uB,IAChCqM,EAAYrM,UAAUvT,KAAKuT,GAE/BqM,EAAYrM,UAAY,CAACA,GACtBqM,CACX,CAEO,SAASwiB,GAAoB9nC,GAChC,OAAO+nC,KAAK5lC,OAAOC,aAAYkG,MAAnBnG,OAAM6lC,IAAiBhoC,IACvC,CAEO,SAASioC,GAAU9vB,EAAY+vB,GAOlC,MAN0B,iBAAf/vB,IACPA,EAAatS,EAAiBsS,IAGhBwvB,GADAN,GAAOa,GACc/vB,EAG3C,CAEO,SAAS+Z,GAAe/I,EAAQthB,EAAOxjC,EAAO8zC,GACjD,IAAMjY,EAAM,KAAHmE,OAAQ8T,EAAWlW,QAAQ,MAAO,KACrC0wB,EAAa,IAAIza,GAAWhY,GAE5BioC,EAAgB3gB,GAAAA,KAAsB2B,EAAQthB,EAAOxjC,GACrD40C,EAAY0Z,EAAWD,KAAKyV,GAOlC,MANqB,CACjB,KACAlvB,EAAUvY,EAAEmL,UAAU,GACtBoN,EAAU9K,EAAEtC,UAAU,GACtB8B,OAAOsL,EAAUxV,GAAGD,SAAS,KAC/BiE,KAAK,GAEX,CAEO,SAAS2gC,GAAiCC,GAC7C,IAAMC,EAAc/jC,EAAuB8jC,GAI3C,OAHoBjnE,MAAMmnE,SAAS1lE,YAAYgB,kBAAkBykE,GACzCnrD,aAEbzY,iBACf,CAEO,SAAS8jE,KACZ,IACIC,EAAYnkC,EADDyiC,GAAK2B,MAAMC,oBAK1B,OAAO9iC,EAFP4iC,EAAYA,EAAUG,SAAS,GAAI,KAGvC,CAEO,SAASlvB,GAAemvB,GACH,KAApBA,EAAS1jE,SACT0jE,EAAWA,EAAShlC,MAAM,IAE9B,IAAMlR,EAAO4gB,GAAU,IAAI1J,WAAWg/B,IAAWrlC,WAAWqI,UAAU,GAGtE,OAAOhG,EAFYlB,EAAiBhS,EAAKkZ,UAAU,IAGvD,CAEO,SAASi9B,GAAqBpB,GAEjC,OAAOhuB,GADQqvB,GAAoBrB,GAEvC,CAEO,SAASsB,GAAcC,GAC1B,IAAMC,EAAcxhC,GAASuhC,GAE7B,GAAIC,EAAY/jE,QAAU,EACtB,OAAO,EAEX,IAAMgkE,EAAaD,EAAYrlC,MAAM,EAAGqlC,EAAY/jE,OAAS,GACvDiiE,EAAQC,GAAO8B,GACfC,EAAQ/B,GAAOD,GAErB,OAAIgC,EAAM,KAAOF,EAAYC,EAAWhkE,SACpCikE,EAAM,KAAOF,EAAYC,EAAWhkE,OAAS,IAC7CikE,EAAM,KAAOF,EAAYC,EAAWhkE,OAAS,IAC7CikE,EAAM,KAAOF,EAAYC,EAAWhkE,OAAS,IACtCgkE,CAIf,CAEO,SAASE,GAAeC,GAC3B,GAA2B,iBAAfA,EACR,OAAO,EAEX,GAAIA,EAAUnkE,SAAWu/B,EACrB,OAAO,EAEX,IAAIhhC,EAAUgkC,GAAS4hC,GAEvB,GAAuB,KAAnB5lE,EAAQyB,OACR,OAAO,EAEX,GAAIzB,EAAQ,KAAOkhC,EACf,OAAO,EAEX,IAAM0iC,EAAW5jE,EAAQmgC,MAAM,IAGzBujC,EAAQC,GAFd3jE,EAAUA,EAAQmgC,MAAM,EAAG,KAIrB4jC,EADQJ,GAAOD,GACGvjC,MAAM,EAAG,GAEjC,OAAIyjC,EAAS,IAAMG,EAAU,IAAMH,EAAS,IAAMG,EAAU,IAAMH,EAAS,IACvEG,EAAU,IAAMH,EAAS,IAAMG,EAAU,EAMjD,CAEO,SAAS8B,GAA4CC,GAKxD,OAAOtC,GAFcxtB,GADJqvB,GADGxkC,EAAuBilC,KAK/C,CAEO,SAASC,GAAuCD,GAMnD,OAFmBllC,EADEoV,GADJqvB,GADGxkC,EAAuBilC,KAM/C,CAEO,SAASE,GAAiCF,GAM7C,OAFsB/kC,EADDiV,GADJqvB,GADGxkC,EAAuBilC,KAM/C,CAEO,SAAST,GAAoBrB,GAChC,IAAM3tD,EAASgtD,GAAK4C,gBAAgBC,eAAe,IAAI//B,WAvM3D,SAAkC69B,GAC9B,OAAO7hC,EAAiBvB,EAAiBojC,GAAakB,SAAS,GAAI,KACvE,CAqMsEiB,CAAyBnC,KACrFoC,EAAI/vD,EAAO+vD,EACXC,EAAIhwD,EAAOgwD,EAEbC,EAAOF,EAAEtmC,SAAS,IAAIolC,SAAS,GAAI,KACnCqB,EAAOF,EAAEvmC,SAAS,IAAIolC,SAAS,GAAI,KAKvC,OAFoB/iC,EADF,KAAHxB,OAAQ2lC,GAAI3lC,OAAG4lC,GAIlC,CAEO,SAAStC,GAAUuC,EAAWxC,GACjC,IAAMzuB,EAAY8tB,GAAKrU,KAAKpuB,EAAiB4lC,GAAY5lC,EAAiBojC,IAEpEhnC,EAAIuY,EAAUvY,EAAE8C,SAAS,IACzB2K,EAAI8K,EAAU9K,EAAE3K,SAAS,IACzBC,EAAIwV,EAAUkxB,SAAW,GAE/B,OAAOzpC,EAAEkoC,SAAS,GAAI,KAAOz6B,EAAEy6B,SAAS,GAAI,KAAO5lC,EAAYS,EACnE,CAEO,SAAS4jC,GAAO+C,GAGnB,OAAOvkC,EADSoL,GAAO,KADR3M,EAAiB8lC,IACMnoC,QAAQ,MAAO,IAEzD,CAEO,SAASooC,GAAkB34B,GAI9B,OAAOw1B,GAFkB4B,GADDvkC,EAAuBmN,IAInD,CAEO,SAAS44B,GAAYnyB,GAIxB,OAAO+uB,GAFkB4B,GADDjjC,EAAiBsS,EADCrS,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,KAK9C,CC/OA,IAAMykC,GAA8B,6BAE7B,SAASC,KACZ,IAAM9C,EAAcc,KACdiC,EAAc1B,GAAoBrB,GAClCP,EAAe2B,GAAqBpB,GAK1C,MAAO,CACHvvB,WAJe7T,EAAiBojC,GAKhC/tB,UAJcrV,EAAiBmmC,GAK/B/mE,QAAS,CACLgnE,OAAQxD,GAAsBC,GAC9BljC,IAAKK,EAAiB6iC,IAGlC,CAEO,SAASwD,GAAe5tB,GAK3B,GAJI2rB,GAAAA,SAAe3rB,KAAYA,EAAU,CAAC,GACtCA,EAAQyY,OACRzY,EAAQyY,KAAO1wB,IAEf3C,OAAO4a,EAAQyY,MAAM9xB,MAAM,mBAC3B,MAAM,IAAIR,MAAMqnC,IAGpB,IAAM7yD,EAAUkzD,GAAAA,aAAgC7tB,EAAQrL,SAAUqL,EAAQyY,KAAMzY,EAAQxH,UASxF,MAPe,CACXK,SAAUl+B,EAAQk+B,SAClBuC,WAAYzgC,EAAQygC,WACpBwB,UAAWjiC,EAAQi7C,WAAWhZ,UAC9Bj2C,QAAS4mE,GAAY5yD,EAAQygC,WAAWlW,QAAQ,MAAO,KAI/D,CAEO,SAAS4oC,GAA4Bj1B,EAAU4f,GAAuB,IAAjBjgB,EAAQzP,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,KAInE,GAHI0vB,IACAA,EAAO1wB,IAEP3C,OAAOqzB,GAAM9xB,MAAM,mBACnB,MAAM,IAAIR,MAAMqnC,IAEpB,IAAM7yD,EAAWkzD,GAAAA,aAAgCn0B,GAASq0B,WAAWl1B,EAAU,KAAML,GAAWigB,GAShG,MAPe,CACX5f,SAAUl+B,EAAQk+B,SAClBuC,WAAYzgC,EAAQygC,WACpBwB,UAAWjiC,EAAQi7C,WAAWhZ,UAC9Bj2C,QAAS4mE,GAAY5yD,EAAQygC,WAAWlW,QAAQ,MAAO,KAI/D,CCtEA,MAAM,GAA+BzhC,QAAQ,sBCI7C,IAAM4kD,GAAW,IAAIJ,GAAAA,SAMrB,SAAS+lB,GAAc1mE,GACnB,OAAOyiE,GAAQpjE,QAAQ+1C,MAAMp1C,GAAO49B,QAAQ4C,EAAsB,KACtE,CAEA,SAASmmC,GAASvhC,GACd,GAC+C,oBAA3CrJ,OAAOl9B,UAAUsgC,SAASziC,KAAK0oC,IACY,mBAA3CrJ,OAAOl9B,UAAUsgC,SAASziC,KAAK0oC,GAE/B,OAAOA,EAEX,IAfcwhC,EAeRC,GAfQD,EAeaxhC,EAdpB/G,MAAMkH,QAAQqhC,GAcgB,GAAK,CAAC,GAM3C,OAJA7qC,OAAOsI,KAAKe,GAAQ+Q,SAAQ,SAAAta,GAAG,OAC3BgrC,EAAUhrC,GAAOuJ,EAAOvJ,aAAgBE,SAAWqJ,EAAOvJ,GAAKirC,aAAeH,GAASvhC,EAAOvJ,IAAQuJ,EAAOvJ,EAAI,IAG9GgrC,CACX,CAEO,SAASE,GAAa9wB,EAAOzS,EAAOpG,EAAQ4pC,GAW/C,GAVK5pC,GAA4B,kBAAXA,IAClB4pC,EAAmB5pC,EACnBA,EAASoG,EACTA,EAAQyS,EACRA,EAAQ,IAGR+wB,GAAoB5pC,EAAOQ,QAAQ,MAAO,IAAI98B,OAAS,IAAO,IAC9Ds8B,EAAS,KAAOA,EAAOQ,QAAQ,MAAO,IAAI4J,UAAU,IAEpDpK,EAAOQ,QAAQ,MAAO,IAAI98B,OAAS,GACnC,MAAM,IAAI+9B,MAAM,yEAUpB,OAPA2E,EAAQA,EAAMN,KAAI,SAAAt8B,GAId,MAHI,WAAWi7B,KAAKj7B,KAChBA,EAAOA,EAAKg3B,QAAQ,WAAY,YAE7Bh3B,CACX,IAEOm6C,GAASpjB,OAAO6F,EAAOpG,GAAQ2H,QAAO,SAAC7lC,EAAK+nE,EAAKhiC,GAQpD,MAPoB,WAAhBzB,EAAMyB,KACNgiC,EAAM3mC,EAAiB2mC,EAAIC,OAAO,GAAGl3B,eAErCiG,EAAMn1C,OACN5B,EAAI+2C,EAAMhR,IAAUgiC,EACnB/nE,EAAImiC,KAAK4lC,GAEP/nE,CACX,GAAG+2C,EAAMn1C,OAAS,CAAC,EAAI,GAC3B,CAEO,SAASqmE,GAAa3jC,EAAO6B,GAEhC,IAAK,IAAIhI,EAAI,EAAGA,EAAImG,EAAM1iC,OAAQu8B,IACb,YAAbmG,EAAMnG,KACNgI,EAAOhI,GAAKolC,GAAQpjE,QAAQ+1C,MAAM/P,EAAOhI,IAAIO,QAAQ4C,EAAsB,OAInF,OAAOugB,GAASpkB,OAAO6G,EAAO6B,EAClC,CAEA,SAAS+hC,GAAaxgE,GACpB,IAAM0xC,EAAO1xC,EAAKy4B,MAAM,yBACxB,OAAOiZ,EAAOA,EAAK,GAAK,EAC1B,CAEA,SAAS+uB,GAAiBzgE,GAExB,OADawgE,GAAYxgE,GACZy4B,MAAM,UAAY,IAAIv+B,OAAS,CAC9C,CAEO,SAASwmE,GAAoBC,EAAQxxB,GACxC,IAAMvS,EAAQ,GAERgkC,EAA0B,SAA1BA,EAA2BC,GAC/B,GAAIA,GAA6C,IAAlCA,EAAQ7gE,KAAKi3B,QAAQ,UAAkB4pC,EAAQrpB,WAAY,CACxE,IAAMspB,EAAaD,EAAQrpB,WAAWlb,KAAI,SAACykC,GAAgB,OAAOH,EAAwBG,EAAW,IACrG,MAAO,SAAP3nC,OAAgB0nC,EAAWtkC,KAAK,KAAI,KAAApD,OAAIonC,GAAYK,EAAQ7gE,MAC9D,CAEA,MAAI,WAAWi7B,KAAK4lC,EAAQ7gE,MACnB6gE,EAAQ7gE,KAAKg3B,QAAQ,WAAY,WAEnC6pC,EAAQ7gE,IACjB,EAUMghE,EAAmB,SAAnBA,EAAmBC,GACvB,OAAIxpC,MAAMkH,QAAQsiC,IAChBA,EAAQ1xB,SAAQ,SAAC2xB,EAAOzqC,GACtBwqC,EAAQxqC,GAAKuqC,EAAiBE,EAChC,IACOD,GAEAnB,GAAcmB,EAEzB,EAEME,EAAW,SAAXA,EAAY3pB,EAAYrI,EAAMiyB,GAC9BA,EAAY,EACVjyB,EAAKj1C,QACPi1C,EAAKI,SAAQ,SAAA8wB,GACXc,EAAS3pB,EAAY6oB,EAAKe,EAAY,EACxC,IAGEjyB,EAAKj1C,QAAUknE,GACjBjyB,EAAKI,SAAQ,SAAA8wB,GACXgB,EAAW7pB,EAAY6oB,EACzB,GAGN,EAEMgB,EAAa,SAAbA,IAAoC,IAAtBpM,EAAMp6B,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,GAAIsU,EAAItU,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EAC/Bi7D,EAAO/6D,QACT+6D,EAAO1lB,SAAQ,SAACvZ,EAAOS,GACrB,IAAMz2B,EAAOg2B,EAAMh2B,KAEnB,GAAImvC,EAAK1Y,GACP,GAAa,YAATz2B,EAAoBmvC,EAAK1Y,GAAKqpC,GAAc3wB,EAAK1Y,SAChD,GAA6C,aAAzCz2B,EAAKy4B,MAAM,uBAAuB,GACzCuoC,EAAiB7xB,EAAK1Y,SACnB,GAA8B,IAA1Bz2B,EAAKi3B,QAAQ,SACpB,GAAIupC,GAAYxgE,GAAO,CACrB,IAAMohE,EAAYX,GAAgBzgE,GAClCmhE,EAASnrC,EAAMwhB,WAAYrI,EAAK1Y,GAAI2qC,EACtC,MAAOC,EAAWrrC,EAAMwhB,WAAYrI,EAAK1Y,GAC/C,GACJ,EAEA,GAAIkqC,EAAO1L,QAAU0L,EAAO1L,OAAO/6D,OACjC,IAAK,IAAIu8B,EAAI,EAAGA,EAAIkqC,EAAO1L,OAAO/6D,OAAQu8B,IAAK,CAC7C,IAAMz2B,EAAO2gE,EAAO1L,OAAOx+B,GAAGz2B,KAGjB,SAATA,GAA+B,UAAZmvC,EAAK1Y,KAC1B0Y,EAAK1Y,IAAK,GAEZmG,EAAMnC,KAA+B,IAA1Bz6B,EAAKi3B,QAAQ,SAAiB2pC,EAAwBD,EAAO1L,OAAOx+B,IAAMz2B,GACjFmvC,EAAKj1C,OAAS0iC,EAAM1iC,QACtBi1C,EAAK1U,KAAK,GAEd,CAMF,OAHA4mC,EAAWV,EAAO1L,OAAQ9lB,GAnEL,SAACvS,GACpB,IAAK,IAAInG,EAAI,EAAGA,EAAImG,EAAM1iC,OAAQu8B,IAAK,CACrC,IAAMz2B,EAAO48B,EAAMnG,GACf,WAAWwE,KAAKj7B,KAClB48B,EAAMnG,GAAKz2B,EAAKg3B,QAAQ,WAAY,WACxC,CACF,CA8DAsqC,CAAa1kC,GAENud,GAASpkB,OAAO6G,EAAOuS,EAClC,CAEO,SAASoyB,GAAoBZ,EAAQhmD,GAC1C,IAQMqmD,EAAmB,SAAnBA,EAAmBC,GACvB,OAAIxpC,MAAMkH,QAAQsiC,IAChBA,EAAQ1xB,SAAQ,SAAC2xB,EAAOzqC,GACtBwqC,EAAQxqC,GAAKuqC,EAAiBE,EAChC,IACOD,GAEApF,GAAQpjE,QAAQ+1C,MAAMyyB,EAEjC,EAEME,EAAW,SAAXA,EAAY3pB,EAAYrI,EAAMiyB,GAC9BA,EAAY,EACVjyB,EAAKj1C,QACPi1C,EAAKI,SAAQ,SAAA8wB,GACXc,EAAS3pB,EAAY6oB,EAAKe,EAAY,EACxC,IAGEjyB,EAAKj1C,QAAUknE,GACjBjyB,EAAKI,SAAQ,SAAA8wB,GACXmB,EAAahqB,EAAY6oB,EAC3B,GAGN,EAEMoB,EAA8B,SAA9BA,EAA+BZ,GACnC,IAAMtoE,EAAOsoE,EAAQtoE,KAAO,IAAH6gC,OAAOynC,EAAQtoE,MAAS,GACjD,GAAIsoE,GAA6C,IAAlCA,EAAQ7gE,KAAKi3B,QAAQ,UAAkB4pC,EAAQrpB,WAAY,CACxE,IAAMspB,EAAaD,EAAQrpB,WAAWlb,KAAI,SAACykC,GAAgB,OAAOU,EAA4BV,EAAW,IACzG,MAAO,SAAP3nC,OAAgB0nC,EAAWtkC,KAAK,KAAI,KAAApD,OAAIonC,GAAYK,EAAQ7gE,OAAKo5B,OAAG7gC,EACtE,CACA,MAAI,WAAW0iC,KAAK4lC,EAAQ7gE,MACnB6gE,EAAQ7gE,KAAKg3B,QAAQ,WAAY,WAAaz+B,EAEhDsoE,EAAQ7gE,KAAOzH,CACxB,EAEMipE,EAAe,SAAfA,IAAyC,IAAzB5K,EAAO/7B,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,GAAIiE,EAAMjE,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EACpC48D,EAAQ18D,QACV08D,EAAQrnB,SAAQ,SAAC/Y,EAAQC,GACvB,IAAOz2B,EAAcw2B,EAAdx2B,KAAMzH,EAAQi+B,EAARj+B,KAEb,GAAIumC,EAAOrI,GACT,GAAa,YAATz2B,EACF8+B,EAAOrI,GAAKolC,GAAQpjE,QAAQ+1C,MAAM1P,EAAOrI,IACtCl+B,IAAMumC,EAAOvmC,GAAQsjE,GAAQpjE,QAAQ+1C,MAAM1P,EAAOvmC,UAElD,GAA6C,aAAzCyH,EAAKy4B,MAAM,uBAAuB,GACzCuoC,EAAiBliC,EAAOrI,IACrBl+B,GAAMyoE,EAAiBliC,EAAOvmC,SAE9B,GAA8B,IAA1ByH,EAAKi3B,QAAQ,SAAgB,CACpC,GAAIupC,GAAYxgE,GAAO,CACrB,IAAMohE,EAAYX,GAAgBzgE,GAClCmhE,EAAS3qC,EAAOghB,WAAY1Y,EAAOrI,GAAI2qC,EACzC,MAAOI,EAAahrC,EAAOghB,WAAY1Y,EAAOrI,IAE3Cl+B,IAAMumC,EAAOvmC,GAAQumC,EAAOrI,GACjC,CACJ,GACJ,EAGA,GAAIkqC,EAAO/J,SAAW+J,EAAO/J,QAAQ18D,OAAS,EAAG,CAG7C,IADA,IAAIwnE,EAAc,GACTjrC,EAAI,EAAGA,EAAIkqC,EAAO/J,QAAQ18D,OAAQu8B,IAAK,CAC9C,IAAMz2B,EAAO2gE,EAAO/J,QAAQngC,GAAGz2B,KACzBzH,EAAOooE,EAAO/J,QAAQngC,GAAGl+B,KAAO,IAAH6gC,OAAOunC,EAAO/J,QAAQngC,GAAGl+B,MAAS,GACrEmpE,EAAYjnC,KAA+B,IAA1Bz6B,EAAKi3B,QAAQ,SAAiBwqC,EAA4Bd,EAAO/J,QAAQngC,IAAMz2B,EAAOzH,EACzG,EAhFqB,SAACqkC,GACxB,IAAK,IAAInG,EAAI,EAAGA,EAAImG,EAAM1iC,OAAQu8B,IAAK,CACrC,IAAMz2B,EAAO48B,EAAMnG,GACf,YAAYwE,KAAKj7B,KACnB48B,EAAMnG,GAAKz2B,EAAKg3B,QAAQ,YAAa,WACzC,CACF,CA2EI2qC,CAAiBD,GAEZ/mD,GAASA,EAAKzgB,SAAQygB,EAAO,IAAIikB,WAAW,GAAK+hC,EAAO/J,QAAQ18D,SAErE,IACM0nE,EAAgB7B,GADJ5lB,GAASpjB,OAAO2qC,EAAa/mD,IAI/C,OAFA6mD,EAAab,EAAO/J,QAASgL,GAEtBA,CACX,CACA,MAAO,EACT,CCrQO,IAAMC,GAAsB,0BAE5B,SAAS/Z,GAAYhuD,GASxB,MARwB,iBAAbA,IACPA,EAAU0tC,GAAY1tC,IAGtB29B,MAAMkH,QAAQ7kC,KACdA,EAAU,IAAI8kC,WAAW9kC,IAGtBwuC,GAAUlP,GAAO,CACpBoO,GAAYq6B,IACZr6B,GAAYtQ,OAAOp9B,EAAQI,SAC3BJ,IAER,CAEO,SAASgoE,GAAYhoE,EAASozC,GAC7BA,EAAWzU,MAAM,SACjByU,EAAc,KAAOA,GAGzB,IAAMwa,EAAa,IAAIza,GAAWC,GAC5BgwB,EAAgBpV,GAAYhuD,GAC5Bk0C,EAAY0Z,EAAWD,KAAKyV,GAElC,OAAO7B,GAAcrtB,EACzB,CAEO,SAAS+zB,GAAcjoE,EAASk0C,GAOnC,OANIA,EAAUvV,MAAM,SAClBuV,EAAa,KAAOA,GAGAiuB,GAAsBrhC,EAD1B+T,GAAemZ,GAAYhuD,GAAUk0C,GACgBhX,QAAQ,MAAO0C,IAG1F,C,qkBC3CA,IAAM1jC,GAAyBT,EAAQ,KAEvCysE,GAAyCzsE,EAAQ,IAAzCqC,GAAWoqE,GAAXpqE,YAAaJ,GAAUwqE,GAAVxqE,WAAYH,GAAG2qE,GAAH3qE,IAEjC4qE,GAUI1sE,EAAQ,KATRmvB,GAAgBu9C,GAAhBv9C,iBACAH,GAAqB09C,GAArB19C,sBACAC,GAAuBy9C,GAAvBz9C,wBACAC,GAAuBw9C,GAAvBx9C,wBACAU,GAAuB88C,GAAvB98C,wBACAC,GAAyB68C,GAAzB78C,0BACAC,GAA8B48C,GAA9B58C,+BACAC,GAAwB28C,GAAxB38C,yBACAC,GAA0B08C,GAA1B18C,2BAEJ28C,GAKI3sE,EAAQ,KAJRkqB,GAAqByiD,GAArBziD,sBACAG,GAA6BsiD,GAA7BtiD,8BACAL,GAAkB2iD,GAAlB3iD,mBACAI,GAAmBuiD,GAAnBviD,oBAGJwiD,GAOI5sE,EAAQ,KANR+1B,GAAoB62C,GAApB72C,qBACAC,GAAgB42C,GAAhB52C,iBACAE,GAAyB02C,GAAzB12C,0BACAD,GAAqB22C,GAArB32C,sBACAH,GAAmB82C,GAAnB92C,oBACAL,GAAam3C,GAAbn3C,cAGIzB,GAAiBh0B,EAAQ,KAAzBg0B,aAER64C,GAGI7sE,EAAQ,IAFRm+B,GAAqB0uC,GAArB1uC,sBACAE,GAAmBwuC,GAAnBxuC,oBAIAX,GACA19B,EAAQ,KADR09B,wBAGJovC,GAKI9sE,EAAQ,KAJRmoB,GAAqB2kD,GAArB3kD,sBACAC,GAAqB0kD,GAArB1kD,sBACAC,GAAoBykD,GAApBzkD,qBACAC,GAA+BwkD,GAA/BxkD,gCAGJykD,GAII/sE,EAAQ,KAHRo1B,GAAsB23C,GAAtB33C,uBACAC,GAAsB03C,GAAtB13C,uBACAF,GAAuB43C,GAAvB53C,wBAGJ63C,GAKIhtE,EAAQ,KAJRo0B,GAAsB44C,GAAtB54C,uBACAC,GAAsB24C,GAAtB34C,uBACAC,GAAwB04C,GAAxB14C,yBACAC,GAA2By4C,GAA3Bz4C,4BAOE04C,GAAgB,SAACtY,GACnB,OAAKA,GAAkC,IAArBA,EAAUhwD,OACrB,IAAI0kC,WACPi9B,GAAQpjE,QAAQ+1C,MAAM0b,GAAWzxB,MAAM,WAAW6D,KAAI,SAACtE,GAAI,OAAKc,SAASd,EAAM,GAAG,KAFrC,IAAI4G,WAAW,GAIpE,EAUM6jC,GAAyB,SAC3B3oE,EACA4oE,EACAC,EACAzvD,GAEA,IAAI0vD,EAAW,IAAI5sE,GAAuB6c,IAC1C+vD,EAASnwB,KAAK34C,EAAQL,kBAAmB,YAAckpE,GACvD,IAAIE,EAAW,IAAIjrE,GAAYC,SAC/BgrE,EAASr/D,QAAQk/D,GACjBG,EAAS1vD,aAAayvD,GAClB1vD,GACA2vD,EAASvvD,gBAAgBJ,GAE7B,IAAInb,EAAM,IAAIH,GAAYG,IAC1BA,EAAI0jB,YAAYonD,GAChB,IAAIxoB,EAAc,IAAIziD,GAEtB,OADAyiD,EAAY9nC,WAAWxa,GAChBsiD,CACX,EAwzBMyoB,GAAyB,SAACD,EAAUzpE,EAAO04C,GAC7C,OAAQ+wB,EAAS7iE,MACb,IAAK,mBACD,OAxzBkB,SAAC5G,EAAO04C,GAClC,IAAQixB,EAAsC3pE,EAAtC2pE,WAAYC,EAA0B5pE,EAA1B4pE,cAAez/C,EAAWnqB,EAAXmqB,OAC/B0/C,EAAmB,IAAIv+C,GAI3B,OAHAu+C,EAAiBx/C,aAAa++C,GAAcO,IAC5CE,EAAiB/kD,gBAAgBskD,GAAcQ,IAC/CC,EAAiBv/C,UAAUH,GACpBk/C,GACHQ,EACArrE,GAAYC,SAAS6b,aAAaE,iBAClC,mBACAk+B,EAAQoxB,cAEhB,CA4yBmBC,CAAsB/pE,EAAO04C,GACxC,IAAK,wBACD,OA3yBuB,SAAC14C,EAAO04C,GACvC,IAAQixB,EAAkD3pE,EAAlD2pE,WAAYC,EAAsC5pE,EAAtC4pE,cAAez/C,EAAuBnqB,EAAvBmqB,OAAQ6/C,EAAehqE,EAAfgqE,WACvCH,EAAmB,IAAIxjD,GAK3B,OAJAwjD,EAAiBx/C,aAAa++C,GAAcO,IAC5CE,EAAiB/kD,gBAAgBskD,GAAcQ,IAC/CC,EAAiBz/C,aAAag/C,GAAcY,EAAWpsC,QAAQ,MAAO,MACtEisC,EAAiBv/C,UAAUH,GACpBk/C,GACHQ,EACArrE,GAAYC,SAAS6b,aAAaG,sBAClC,wBACAi+B,EAAQoxB,cAEhB,CA8xBmBG,CAA2BjqE,EAAO04C,GAC7C,IAAK,gCACD,OA7xB+B,SAAC14C,EAAO04C,GAC/C,IAAIwxB,EAAQ,IAAI1jD,GAMhB,OALA0jD,EAAM7/C,aAAa++C,GAAcppE,EAAM2pE,aACvCO,EAAMplD,gBAAgBskD,GAAcppE,EAAM4pE,gBAC1CM,EAAM9/C,aAAag/C,GAAcppE,EAAMgqE,WAAWpsC,QAAQ,MAAO,MACjEssC,EAAM5/C,UAAUtqB,EAAMmqB,QAEfk/C,GACHa,EACA1rE,GAAYC,SAAS6b,aAAaS,8BAClC,gCACA29B,EAAQoxB,cAEhB,CAgxBmBK,CAAmCnqE,EAAO04C,GACrD,IAAK,uBACD,OAhxBsB,SAAC14C,EAAO04C,GACtC,IAAI0xB,EAAuB,IAAIl4C,GAE3B03C,EAQA5pE,EARA4pE,cACAS,EAOArqE,EAPAqqE,iBAAgBC,EAOhBtqE,EANAuZ,UAAAA,OAAS,IAAA+wD,EAAG,GAAEA,EACdC,EAKAvqE,EALAuqE,kBACAC,EAIAxqE,EAJAwqE,WACAC,EAGAzqE,EAHAyqE,iBACAC,EAEA1qE,EAFA0qE,SACAnpD,EACAvhB,EADAuhB,KAKJ,GAHA6oD,EAAqBtlD,gBAAgBskD,GAAcQ,IACnDQ,EAAqB52C,mBAAmB41C,GAAciB,IACtDD,EAAqBz2C,aAAa62C,GAC9BjpD,EACA6oD,EAAqBhoD,QAAQgnD,GAAc7nD,SACxC,GAAIgpD,EAAmB,CAC1B,IAAMI,EA7FD,SAACnsC,GACV,OADwBiD,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,KAAAA,UAAA,GAEH,GAAP,MACVyN,GAAUszB,OAAOtwD,KAAKssB,EAAQ,UAAUW,WAAWqI,UAAU,EAErE,CAwF6BojC,CAAKL,GAAmB/iC,UAAU,EAAG,IAAMjuB,EAChE6wD,EAAqBhoD,QAAQgnD,GAAcuB,GAC/C,CASA,OAPID,GACAN,EAAqBt5C,WAAW45C,GAEhCD,GACAL,EAAqB7xC,kBAAkBkyC,GAGpCpB,GACHe,EACA5rE,GAAYC,SAAS6b,aAAasB,qBAClC,uBACA88B,EAAQoxB,cAEhB,CA6uBmBe,CAA0B7qE,EAAO04C,GAC5C,IAAK,wBACD,OA7uBuB,SAAC14C,EAAO04C,GACvC,IAAIoyB,EAAwB,IAAI3/C,GAE5By+C,EAKA5pE,EALA4pE,cACAmB,EAIA/qE,EAJA+qE,eACAC,EAGAhrE,EAHAgrE,gBACA1+C,EAEAtsB,EAFAssB,SACA2+C,EACAjrE,EADAirE,iBAcJ,OAZAH,EAAsBhmD,gBAAgBskD,GAAcQ,IACpDkB,EAAsBj9D,iBAAiBk9D,GACvCD,EAAsBr+C,kBAAkBu+C,GACpC1+C,GACAw+C,EAAsBp+C,YAAYyD,GAAa7D,IAE/C2+C,GACAH,EAAsBn+C,mBAClBy8C,GAAc6B,IAIf5B,GACHyB,EACAtsE,GAAYC,SAAS6b,aAAaW,sBAClC,wBACAy9B,EAAQoxB,cAEhB,CAktBmBoB,CAA2BlrE,EAAO04C,GAC7C,IAAK,0BACD,OAltByB,SAAC14C,EAAO04C,GACzC,IAAIyyB,EAA0B,IAAI//C,GAC1Bw+C,EAA8C5pE,EAA9C4pE,cAAet9C,EAA+BtsB,EAA/BssB,SAAU2+C,EAAqBjrE,EAArBirE,iBAWjC,OAVAE,EAAwBrmD,gBAAgBskD,GAAcQ,IAClDt9C,GACA6+C,EAAwBz+C,YAAYyD,GAAa7D,IAEjD2+C,GACAE,EAAwBx+C,mBACpBy8C,GAAc6B,IAIf5B,GACH8B,EACA3sE,GAAYC,SAAS6b,aAAaY,wBAClC,0BACAw9B,EAAQoxB,cAEhB,CA+rBmBsB,CAA6BprE,EAAO04C,GAC/C,IAAK,0BACD,OA/rByB,SAAC14C,EAAO04C,GACzC,IAAI2yB,EAA0B,IAAIhgD,GAC1Bu+C,EAAkB5pE,EAAlB4pE,cAGR,OAFAyB,EAAwBvmD,gBAAgBskD,GAAcQ,IAE/CP,GACHgC,EACA7sE,GAAYC,SAAS6b,aAAaa,wBAClC,0BACAu9B,EAAQoxB,cAEhB,CAorBmBwB,CAA6BtrE,EAAO04C,GAC/C,IAAK,0BACD,OAprByB,SAAC14C,EAAO04C,GACzC,IAAM6yB,EAA0B,IAAIx/C,GAEhC69C,EAGA5pE,EAHA4pE,cACAmB,EAEA/qE,EAFA+qE,eACAz+C,EACAtsB,EADAssB,SAMJ,OAJAi/C,EAAwBzmD,gBAAgBskD,GAAcQ,IACtD2B,EAAwB19D,iBAAiBk9D,GACzCQ,EAAwB7+C,YAAYyD,GAAa7D,IAE1C+8C,GACHkC,EACA/sE,GAAYC,SAAS6b,aAAaoC,wBAClC,0BACAg8B,EAAQoxB,cAEhB,CAmqBmB0B,CAA6BxrE,EAAO04C,GAC/C,IAAK,8BACD,OAnqB+B,SAAC14C,EAAO04C,GAC/C,IAAM+yB,EAAyB,IAAIx/C,GAC3B29C,EAAkB5pE,EAAlB4pE,cAGR,OAFA6B,EAAuB3mD,gBAAgBskD,GAAcQ,IAE9CP,GACHoC,EACAjtE,GAAYC,SAAS6b,aAAayC,4BAClC,8BACA27B,EAAQoxB,cAEhB,CAwpBmB4B,CAAmC1rE,EAAO04C,GACrD,IAAK,4BACD,OAxpB2B,SAAC14C,EAAO04C,GAC3C,IAAMizB,EAA4B,IAAI3/C,GAElC49C,EAGA5pE,EAHA4pE,cACAgC,EAEA5rE,EAFA4rE,iBACAt/C,EACAtsB,EADAssB,SAMJ,OAJAq/C,EAA0B7mD,gBAAgBskD,GAAcQ,IACxD+B,EAA0Bh8C,mBAAmBi8C,GAC7CD,EAA0Bj/C,YAAYyD,GAAa7D,IAE5C+8C,GACHsC,EACAntE,GAAYC,SAAS6b,aAAaqC,0BAClC,4BACA+7B,EAAQoxB,cAEhB,CAuoBmB+B,CAA+B7rE,EAAO04C,GACjD,IAAK,2BACD,OAvoB0B,SAAC14C,EAAO04C,GAC1C,IAAMozB,EAA2B,IAAI5/C,GAEjC09C,EAMA5pE,EANA4pE,cACAqB,EAKAjrE,EALAirE,iBACApkE,EAIA7G,EAJA6G,QACAylB,EAGAtsB,EAHAssB,SAAQy/C,EAGR/rE,EAFA6vB,KAAAA,OAAI,IAAAk8C,GAAQA,EACZC,EACAhsE,EADAgsE,YASJ,OAPAF,EAAyBhnD,gBAAgBskD,GAAcQ,IACvDkC,EAAyBzhE,WAAWxD,GACpCilE,EAAyBp/C,YAAYyD,GAAa7D,IAClDw/C,EAAyB/7C,QAAQF,GACjCi8C,EAAyB97C,cAAcg8C,GACvCF,EAAyBn/C,mBAAmBy8C,GAAc6B,IAEnD5B,GACHyC,EACAttE,GAAYC,SAAS6b,aAAauC,yBAClC,2BACA67B,EAAQoxB,cAEhB,CAgnBmBmC,CAA8BjsE,EAAO04C,GAChD,IAAK,6BACD,OAhnB4B,SAAC14C,EAAO04C,GAC5C,IAAMwzB,EAA6B,IAAI//C,GAEnCy9C,EAIA5pE,EAJA4pE,cACAqB,EAGAjrE,EAHAirE,iBACApkE,EAEA7G,EAFA6G,QACAylB,EACAtsB,EADAssB,SAOJ,OALA4/C,EAA2BpnD,gBAAgBskD,GAAcQ,IACzDsC,EAA2B7hE,WAAWxD,GACtCqlE,EAA2Bx/C,YAAYyD,GAAa7D,IACpD4/C,EAA2Bv/C,mBAAmBy8C,GAAc6B,IAErD5B,GACH6C,EACA1tE,GAAYC,SAAS6b,aAAawC,2BAClC,6BACA47B,EAAQoxB,cAEhB,CA6lBmBqC,CAAgCnsE,EAAO04C,GAClD,IAAK,iCACD,OA7lBgC,SAAC14C,EAAO04C,GAChD,IAAM+yB,EAAyB,IAAIx/C,GAC3B29C,EAAkB5pE,EAAlB4pE,cAGR,OAFA6B,EAAuB3mD,gBAAgBskD,GAAcQ,IAE9CP,GACHoC,EACAjtE,GAAYC,SAAS6b,aAAasC,+BAClC,iCACA87B,EAAQoxB,cAEhB,CAklBmBsC,CAAoCpsE,EAAO04C,GACtD,IAAK,wBACD,OAjlBe,SAAC14C,EAAO04C,GAC/B,IAAM2zB,EAAwB,IAAI/xC,GAC1BsvC,EAAuB5pE,EAAvB4pE,cAAeh0D,EAAQ5V,EAAR4V,IAGvB,OAFAy2D,EAAsBvnD,gBAAgBskD,GAAcQ,IACpDyC,EAAsBj2D,OAAOgzD,GAAcxzD,EAAIgoB,QAAQ,MAAO,MACvDyrC,GACHgD,EACA7tE,GAAYC,SAAS6b,aAAaM,sBAClC,wBACA89B,EAAQoxB,cAEhB,CAskBmBwC,CAAmBtsE,EAAO04C,GACrC,IAAK,sBACD,OArkBoB,SAAC14C,EAAO04C,GACpC,IAAI6zB,EAAsB,IAAI/xC,GACtBovC,EAAyB5pE,EAAzB4pE,cAAe4C,EAAUxsE,EAAVwsE,MAYvB,OAXAD,EAAoBznD,gBAAgBskD,GAAcQ,IAElD4C,EAAMr2B,SAAQ,SAACs2B,GACX,IAAIC,EAAO,IAAIlyC,GAAoB98B,KAC3BivE,EAA6BF,EAA7BE,aAAcC,EAAeH,EAAfG,WACtBF,EAAKhrE,eAAe0nE,GAAcuD,IAClC,IAAIE,EAAgBntC,SAASktC,GAC7BF,EAAK9qE,aAAairE,GAClBN,EAAoBjiE,SAASoiE,EACjC,IAEOrD,GACHkD,EACA/tE,GAAYC,SAAS6b,aAAaK,oBAClC,sBACA+9B,EAAQoxB,cAEhB,CAijBmBgD,CAAwB9sE,EAAO04C,GAC1C,IAAK,sBACD,OAjjBqB,SAAC14C,EAAO04C,GACrC,IAAI+Z,EAASzyD,SAAAA,EAAO+sE,aAAYC,GAAAA,GAAA,GAErB,CACCpD,cAAe5pE,EAAM4pE,cACrBa,iBAAkBzqE,EAAMyqE,iBACxBC,SAAU1qE,EAAM0qE,WAEjB1qE,EAAM+sE,cAEX/sE,EAEF4pE,EAWAnX,EAXAmX,cACAqD,EAUAxa,EAVAwa,8BACAC,EASAza,EATAya,oBACAv6C,EAQA8/B,EARA9/B,IAAGw6C,EAQH1a,EAPA5/B,SAAAA,OAAQ,IAAAs6C,EAAG,GAAEA,EACPC,EAMN3a,EANAtzD,KAAIkuE,EAMJ5a,EALAl5C,UAAAA,OAAS,IAAA8zD,EAAG,GAAEA,EACd7C,EAIA/X,EAJA+X,WACAC,EAGAhY,EAHAgY,iBACAC,EAEAjY,EAFAiY,SACA4C,EACA7a,EADA6a,eAGAC,EAAsB,IAAIt7C,GAC9Bs7C,EAAoBzoD,gBAAgBskD,GAAcQ,IAC9Cc,GACA6C,EAAoBz8C,WAAW45C,GAE/BD,GACA8C,EAAoBh1C,kBAAkBkyC,GAE1C,IAAM+C,EAAuB,IAAI57C,GAEjC,GAAIe,EAAK,CACL,IAAI86C,EAEAA,EADe,iBAAR96C,EACGsO,KAAKwd,MAAM9rB,IAEXA,aAAG,EAAHA,EAAK+6C,SAAU,GAE7B,IAAMC,EAAa,IAAI/7C,GAAcC,IAE/B+7C,EAAkB,SAACrsD,GACrB,IAAMw+B,EAAQ,IAAInuB,GAAcC,IAAIC,MAAMC,MAClC8E,EAAwBtV,EAAxBsV,QAAS13B,EAAeoiB,EAAfpiB,KAAMyH,EAAS2a,EAAT3a,KAMvB,OALgB,IAAZiwB,GACAkpB,EAAMjpB,YAAW,GAErBipB,EAAM7/C,QAAQf,GACd4gD,EAAM31C,QAAQxD,GACPm5C,CACX,EACM8tB,EAAgBJ,EAAQvqC,KAAI,SAAC4qC,GAC/B,IACIj5C,EAQAi5C,EARAj5C,UACAC,EAOAg5C,EAPAh5C,SACA31B,EAMA2uE,EANA3uE,KACA08D,EAKAiS,EALAjS,OACA2B,EAIAsQ,EAJAtQ,QACA52D,EAGAknE,EAHAlnE,KACAuuB,EAEA24C,EAFA34C,QACA8nC,EACA6Q,EADA7Q,gBAEE8Q,EAAe,IAAIn8C,GAAcC,IAAIC,MA6B3C,OA5BAi8C,EAAa14C,aAAaR,GAC1Bk5C,EAAaz4C,YAAYR,GACzBi5C,EAAa7tE,QAAQf,GACjB08D,GACAkS,EAAa/2C,cACT6kC,EAAO34B,KAAI,SAACtG,GAAK,OAAKgxC,EAAgBhxC,EAAM,KAGhD4gC,GACAuQ,EAAa72C,eACTsmC,EAAQt6B,KAAI,SAAC9F,GAAM,OAAKwwC,EAAgBxwC,EAAO,KAGnDx2B,GACAmnE,EAAa3jE,QACTwnB,GAAcC,IAAIC,MAAMiE,UAAUnvB,EAAKqsC,gBAI/C86B,EAAat4C,WAAWN,GACrB8nC,GACC8Q,EAAar4C,mBACT9D,GAAcC,IAAIC,MAAMyE,oBACpB0mC,EAAgBhqB,gBAKrB86B,CACX,IACAJ,EAAWv2C,cAAcy2C,GACzBL,EAAqB/5C,OAAOk6C,EAChC,CAiBA,GAdInD,GACAgD,EAAqB75C,aAAa62C,GAGtCgD,EAAqB55C,8BACjBq5C,GAEJO,EAAqB35C,qBAAqBq5C,GAErCI,IACDA,EAAiB1D,GAErB4D,EAAqBj6C,iBAAiB61C,GAAckE,IAEhDz6C,EAAU,CACV,IAAMm7C,EAAoBn7C,EAAS+K,QAAQ,MAAO,IAAMrkB,EAAUqkB,QAAQ,MAAO,IACjF4vC,EAAqB95C,YAAY01C,GAAc4E,GACnD,CAMA,OAJAR,EAAqBttE,QAAQktE,GAE7BG,EAAoBj1C,eAAek1C,GAE5BnE,GACHkE,EACA/uE,GAAYC,SAAS6b,aAAaqB,oBAClC,sBACA+8B,EAAQoxB,cAEhB,CA+amBmE,CAAyBjuE,EAAO04C,GAC3C,IAAK,mBACD,OA/akB,SAAC14C,EAAO04C,GAClC,IAAQ2xB,EAAoCrqE,EAApCqqE,iBAAkBT,EAAkB5pE,EAAlB4pE,cACpBsE,EAAmB,IAAI/7C,GAI7B,OAHA+7C,EAAiBppD,gBAAgBskD,GAAcQ,IAC/CsE,EAAiB16C,mBAAmB41C,GAAciB,IAE3ChB,GACH6E,EACA1vE,GAAYC,SAAS6b,aAAa+B,iBAClC,mBACAq8B,EAAQoxB,cAEhB,CAmamBqE,CAAsBnuE,EAAO04C,GACxC,IAAK,0BACD,OAlayB,SAAC14C,EAAO04C,GACzC,IAAQve,EAA6Bn6B,EAA7Bm6B,UAAWyvC,EAAkB5pE,EAAlB4pE,cACbwE,EAA0B,IAAIv0C,GAIpC,OAHAu0C,EAAwBtpD,gBAAgBskD,GAAcQ,IACtDwE,EAAwBh0C,aAAaD,GAE9BkvC,GACH+E,EACA5vE,GAAYC,SAAS6b,aAAagC,wBAClC,0BACAo8B,EAAQoxB,cAEhB,CAsZmBuE,CAA6BruE,EAAO04C,GAC/C,IAAK,qBACD,OArZoB,SAAC14C,EAAO04C,GACpC,IACIkxB,EAiBA5pE,EAjBA4pE,cACAzqE,EAgBAa,EAhBAb,KACAsnB,EAeAzmB,EAfAymB,KACAU,EAcAnnB,EAdAmnB,YACAvR,EAaA5V,EAbA4V,IACA04D,EAYAtuE,EAZAsuE,aACAC,EAWAvuE,EAXAuuE,QACAznD,EAUA9mB,EAVA8mB,IACA0nD,EASAxuE,EATAwuE,WACAC,EAQAzuE,EARAyuE,SACA5nD,EAOA7mB,EAPA6mB,UACA6nD,EAMA1uE,EANA0uE,qBACAC,EAKA3uE,EALA2uE,4BAA2BC,EAK3B5uE,EAJA6uE,4BAAAA,OAA2B,IAAAD,EAAG,EAACA,EAAAE,EAI/B9uE,EAHA+uE,4BAAAA,OAA2B,IAAAD,EAAG,EAACA,EAAAE,EAG/BhvE,EAFAivE,WAAAA,OAAU,IAAAD,EAAG,EAACA,EACdE,EACAlvE,EADAkvE,cAEAC,EAAqB,IAAIhpD,GAkC7B,GAjCAgpD,EAAmBrqD,gBAAgBskD,GAAcQ,IAC7CzqE,GACAgwE,EAAmBjvE,QAAQkpE,GAAcjqE,EAAKy+B,QAAQ,MAAO,MAE7DnX,GACA0oD,EAAmBznD,QAAQ0hD,GAAc3iD,EAAKmX,QAAQ,MAAO,MAEjEuxC,EAAmBxnD,eAAe2mD,GAClCa,EAAmBrnD,OAAOhB,GAC1BqoD,EAAmBnnD,WAAWymD,GAC9BU,EAAmBpnD,aAAaymD,GAChCW,EAAmBvnD,UAAU2mD,GAC7BY,EAAmBjnD,aAAa+mD,GAC5BpoD,GACAsoD,EAAmBtnD,aAAahB,GAEhCkoD,GACAI,EAAmB5mD,2BACfwmD,GAGJ5nD,GACAgoD,EAAmBhnD,eACfihD,GAAcjiD,EAAYyW,QAAQ,MAAO,MAG7ChoB,GACAu5D,EAAmB/4D,OAAOgzD,GAAcxzD,EAAIgoB,QAAQ,MAAO,MAG/DuxC,EAAmB7mD,2BAA2BumD,GAC9CM,EAAmB/mD,qBAAqBsmD,GACxCS,EAAmB9mD,2BAA2BsmD,GAC1CO,EAAe,CACf,IAAIE,EAAuB,IAAIjpD,GAAmBC,aAClDgpD,EAAqB3lD,gBAAgBylD,EAAcpuE,OAASouE,EAAc,GAAGG,cAAgBH,EAAcG,eAC3GD,EAAqB1lD,cAAcwlD,EAAcpuE,OAASouE,EAAc,GAAGI,YAAcJ,EAAcI,aACvGH,EAAmB7jE,gBAAgB8jE,EACvC,CACA,OAAO/F,GACH8F,EACA3wE,GAAYC,SAAS6b,aAAaO,mBAClC,qBACA69B,EAAQoxB,cAEhB,CAmVmByF,CAAwBvvE,EAAO04C,GAC1C,IAAK,wBACD,OAlVuB,SAAC14C,EAAO04C,GACvC,IAAI82B,EAAwB,IAAIlrD,GACxBmrD,EAAmCzvE,EAAnCyvE,gBAAiB7F,EAAkB5pE,EAAlB4pE,cAKzB,OAJA4F,EAAsB1qD,gBAAgBskD,GAAcQ,IACpD4F,EAAsBzqD,kBAClBqkD,GAAcqG,EAAgB7xC,QAAQ,MAAO,MAE1CyrC,GACHmG,EACAhxE,GAAYC,SAAS6b,aAAaC,sBAClC,wBACAm+B,EAAQoxB,cAEhB,CAqUmB4F,CAA2B1vE,EAAO04C,GAC7C,IAAK,wBACD,OApUuB,SAAC14C,EAAO04C,GACvC,IAAIi3B,EAAwB,IAAIprD,GACxBqrD,EAAgC5vE,EAAhC4vE,aAAchG,EAAkB5pE,EAAlB4pE,cAKtB,OAJA+F,EAAsB7qD,gBAAgBskD,GAAcQ,IACpD+F,EAAsBxlE,eAClBi/D,GAAcwG,EAAahyC,QAAQ,MAAO,MAEvCyrC,GACHsG,EACAnxE,GAAYC,SAAS6b,aAAaU,sBAClC,wBACA09B,EAAQoxB,cAEhB,CAuTmB+F,CAA2B7vE,EAAO04C,GAC7C,IAAK,uBACD,OAtTsB,SAAC14C,EAAO04C,GACtC,IAAIo3B,EAAuB,IAAItrD,GACvBurD,EAA8B/vE,EAA9B+vE,WAAYnG,EAAkB5pE,EAAlB4pE,cAKpB,OAJAkG,EAAqBhrD,gBAAgBskD,GAAcQ,IACnDkG,EAAqBlkE,aACjBw9D,GAAc2G,EAAWnyC,QAAQ,MAAO,MAErCyrC,GACHyG,EACAtxE,GAAYC,SAAS6b,aAAamB,qBAClC,uBACAi9B,EAAQoxB,cAEhB,CAySmBkG,CAA0BhwE,EAAO04C,GAC5C,IAAK,yBACD,OAzSwB,SAAC14C,EAAO04C,GACxC,IAAIu3B,EAAyB,IAAI1+C,GACzBq4C,EAA8B5pE,EAA9B4pE,cAAesG,EAAelwE,EAAfkwE,WAOvB,OANAD,EAAuBnrD,gBAAgBskD,GAAcQ,IACrDsG,EAAW/5B,SAAQ,SAAC58B,GAChB02D,EACK3tE,mBACAgmC,IAAI/uB,EAAUsiB,IAAKtiB,EAAUvZ,MACtC,IACOqpE,GACH4G,EACAzxE,GAAYC,SAAS6b,aAAagB,uBAClC,yBACAo9B,EAAQoxB,cAEhB,CA0RmBqG,CAA4BnwE,EAAO04C,GAC9C,IAAK,yBACD,OA1RwB,SAAC14C,EAAO04C,GACxC,IAAI03B,EAAyB,IAAI5+C,GACzBo4C,EAA+B5pE,EAA/B4pE,cAAeyG,EAAgBrwE,EAAhBqwE,YAGvB,OAFAD,EAAuBtrD,gBAAgBskD,GAAcQ,IACrDwG,EAAuBxtE,cAAcytE,GAC9BhH,GACH+G,EACA5xE,GAAYC,SAAS6b,aAAakB,uBAClC,yBACAk9B,EAAQoxB,cAEhB,CA+QmBwG,CAA4BtwE,EAAO04C,GAC9C,IAAK,0BACD,OA/QsB,SAAC14C,EAAO04C,GACtC,IAAI63B,EAAuB,IAAIj/C,GACvBs4C,EAAgD5pE,EAAhD4pE,cAAeyG,EAAiCrwE,EAAjCqwE,YAAaG,EAAoBxwE,EAApBwwE,gBAIpC,OAHAD,EAAqBzrD,gBAAgBskD,GAAcQ,IACnD2G,EAAqB3tE,cAAcytE,GACnCE,EAAqB7+C,iBAAiB8+C,GAC/BnH,GACHkH,EACA/xE,GAAYC,SAAS6b,aAAaiB,wBAClC,0BACAm9B,EAAQoxB,cAEhB,CAmQmB2G,CAA0BzwE,EAAO04C,GAC5C,IAAK,yBACD,OAnQwB,SAAC14C,EAAO04C,GACxC,IAAMg4B,EAAyB,IAAIngD,GAE/Bq5C,EAKA5pE,EALA4pE,cACA+G,EAIA3wE,EAJA2wE,eACAC,EAGA5wE,EAHA4wE,oBACAC,EAEA7wE,EAFA6wE,gBACAC,EACA9wE,EADA8wE,qBAWJ,OATAJ,EAAuB5rD,gBAAgBskD,GAAcQ,IACrD8G,EAAuB7qE,gBACnBujE,GAAcuH,EAAe/yC,QAAQ,MAAO,MAEhD8yC,EAAuB5qE,qBAAqB8qE,GAC5CF,EAAuB3qE,iBACnBqjE,GAAcyH,EAAgBjzC,QAAQ,MAAO,MAEjD8yC,EAAuB1qE,sBAAsB8qE,GACtCzH,GACHqH,EACAlyE,GAAYC,SAAS6b,aAAayB,uBAClC,yBACA28B,EAAQoxB,cAEhB,CA2OmBiH,CAA4B/wE,EAAO04C,GAC9C,IAAK,yBACD,OA3OwB,SAAC14C,EAAO04C,GACxC,IAAMs4B,EAAyB,IAAIxgD,GAC3Bo5C,EAAgD5pE,EAAhD4pE,cAAeqH,EAAiCjxE,EAAjCixE,YAAavG,EAAoB1qE,EAApB0qE,SAAU75C,EAAU7wB,EAAV6wB,MAO9C,OANAmgD,EAAuBlsD,gBAAgBskD,GAAcQ,IACrDoH,EAAuBrrE,cAAcsrE,GACrCD,EAAuBlgD,WACnBs4C,GAAcsB,EAAS9sC,QAAQ,MAAO,MAE1CozC,EAAuBjgD,SAASF,GACzBw4C,GACH2H,EACAxyE,GAAYC,SAAS6b,aAAa0B,uBAClC,yBACA08B,EAAQoxB,cAEhB,CA4NmBoH,CAA4BlxE,EAAO04C,GAC9C,IAAK,2BACD,OA5N0B,SAAC14C,EAAO04C,GAC1C,IAAMy4B,EAA2B,IAAI1gD,GAC7Bm5C,EAAgD5pE,EAAhD4pE,cAAeqH,EAAiCjxE,EAAjCixE,YAAavG,EAAoB1qE,EAApB0qE,SAAU75C,EAAU7wB,EAAV6wB,MAO9C,OANAsgD,EAAyBrsD,gBAAgBskD,GAAcQ,IACvDuH,EAAyBxrE,cAAcsrE,GACvCE,EAAyBrgD,WACrBs4C,GAAcsB,EAAS9sC,QAAQ,MAAO,MAE1CuzC,EAAyBpgD,SAASF,GAC3Bw4C,GACH8H,EACA3yE,GAAYC,SAAS6b,aAAa2B,yBAClC,2BACAy8B,EAAQoxB,cAEhB,CA6MmBsH,CAA8BpxE,EAAO04C,GAChD,IAAK,8BACD,OA7M6B,SAAC14C,EAAO04C,GAC7C,IAAM24B,EAA8B,IAAI3gD,GAChCk5C,EAA0D5pE,EAA1D4pE,cAAeqH,EAA2CjxE,EAA3CixE,YAAavG,EAA8B1qE,EAA9B0qE,SAAU75C,EAAoB7wB,EAApB6wB,MAAOM,EAAanxB,EAAbmxB,SAQrD,OAPAkgD,EAA4BvsD,gBAAgBskD,GAAcQ,IAC1DyH,EAA4B1rE,cAAcsrE,GAC1CI,EAA4BvgD,WACxBs4C,GAAcsB,EAAS9sC,QAAQ,MAAO,MAE1CyzC,EAA4BtgD,SAASF,GACrCwgD,EAA4BjgD,YAAYD,GACjCk4C,GACHgI,EACA7yE,GAAYC,SAAS6b,aAAa4B,4BAClC,8BACAw8B,EAAQoxB,cAEhB,CA6LmBwH,CAAiCtxE,EAAO04C,GACnD,IAAK,wBACD,OA7LuB,SAAC14C,EAAO04C,GACvC,IAAM64B,EAAwB,IAAIn/C,GAC1Bw3C,EACJ5pE,EADI4pE,cAAeS,EACnBrqE,EADmBqqE,iBAAkB4C,EACrCjtE,EADqCitE,8BAOzC,OALAsE,EAAsBzsD,gBAAgBskD,GAAcQ,IACpD2H,EAAsB/9C,mBAAmB41C,GAAciB,IACvDkH,EAAsB39C,8BAClBq5C,GAEG5D,GACHkI,EACA/yE,GAAYC,SAAS6b,aAAawB,sBAClC,wBACA48B,EAAQoxB,cAEhB,CA8KmB0H,CAA2BxxE,EAAO04C,GAC7C,IAAK,4BACD,OA9K2B,SAAC14C,EAAO04C,GAC3C,IAAM+4B,EAA4B,IAAIp/C,GAC9Bu3C,EAAyD5pE,EAAzD4pE,cAAeS,EAA0CrqE,EAA1CqqE,iBAAkB6C,EAAwBltE,EAAxBktE,oBAMzC,OALAuE,EAA0B3sD,gBAAgBskD,GAAcQ,IACxD6H,EAA0Bj+C,mBACtB41C,GAAciB,IAElBoH,EAA0B59C,qBAAqBq5C,GACxC7D,GACHoI,EACAjzE,GAAYC,SAAS6b,aAAa6B,0BAClC,4BACAu8B,EAAQoxB,cAEhB,CAgKmB4H,CAA+B1xE,EAAO04C,GACjD,IAAK,kCACD,OAhKiC,SAAC14C,EAAO04C,GACjD,IAAMi5B,EACF,IAAIltD,GACAmlD,EAA2C5pE,EAA3C4pE,cAAexkD,EAA4BplB,EAA5BolB,MAAOE,EAAqBtlB,EAArBslB,QAASssD,EAAY5xE,EAAZ4xE,QACvCD,EAAgC7sD,gBAC5BskD,GAAcQ,IAElB,IAKMiI,EAAkB,SAACtwD,GAErB,IAAMuwD,EAAa,IAAI1zE,GAEnBwI,EAOA2a,EAPA3a,KACAmN,EAMAwN,EANAxN,GACAg+D,EAKAxwD,EALAwwD,gBACA/9D,EAIAuN,EAJAvN,UACAC,EAGAsN,EAHAtN,SACAC,EAEAqN,EAFArN,WACAmwB,EACA9iB,EADA8iB,KAsBJ,OApBAytC,EAAW1nE,QAjBC,SAAAxD,GAEZ,OAAI22B,MAAM32B,GAAuB,WAATA,EAAoB,EAAa,YAATA,EAAqB,EAAI,EAClEA,CACX,CAauBuF,CAAQvF,IAC3BkrE,EAAWv9D,MAAMR,GACjB+9D,EAAWp+D,kBAAkBq+D,GAC7BD,EAAWt9D,aAAaR,GACpBC,GACA69D,EAAWr9D,YAAYR,GAEvBC,GACA49D,EAAWp9D,cAAc00D,GAAcl1D,IAEvCmwB,GACAytC,EAAWv8D,YACP8uB,EAAKnB,KAAI,SAACrH,GACN,IAAMm2C,EAAa,IAAI/zE,GAGvB,OAFA+zE,EAAW7xE,WAAWipE,GAAcvtC,EAAIx8B,UACxC2yE,EAAWhgE,UAAU6pB,EAAI9pB,QAClBigE,CACX,KAGDF,CACX,EAkBA,OAjBI1sD,GACAusD,EAAgCjsD,SAASmsD,EAAgBzsD,IAEzDE,GACAqsD,EAAgChsD,WAAWksD,EAAgBvsD,IAE3DssD,IACIvzC,MAAMkH,QAAQqsC,GACdD,EAAgC1rD,eAC5B2rD,EAAQ1uC,KAAI,SAAA+uC,GAAM,OAAIJ,EAAgBI,EAAO,KAGjDN,EAAgC1rD,eAAe,CAC3C4rD,EAAgBD,MAIrBvI,GACHsI,EACAnzE,GAAYC,SAAS6b,aAAa8B,gCAClC,kCACAs8B,EAAQoxB,cAEhB,CA2FmBoI,CAAqClyE,EAAO04C,GACvD,IAAK,sBACD,OA3FqB,SAAC14C,EAAO04C,GACrC,IAAMy5B,EAAsB,IAAI5rD,GACxBqjD,EAAiE5pE,EAAjE4pE,cAAeziD,EAAkDnnB,EAAlDmnB,YAAavR,EAAqC5V,EAArC4V,IAAKw8D,EAAgCpyE,EAAhCoyE,UAAWC,EAAqBryE,EAArBqyE,iBAcpD,OAbAF,EAAoBrtD,gBAAgBskD,GAAcQ,IAC9CziD,GACAgrD,EAAoBhqD,eAAeihD,GAAcjiD,EAAYyW,QAAQ,MAAO,MAE5EhoB,GACAu8D,EAAoB/7D,OAAOgzD,GAAcxzD,EAAIgoB,QAAQ,MAAO,MAE7Dw0C,GACCD,EAAoBrnD,YAAYsnD,GAEjCC,GACCF,EAAoBpnD,kBAAkBsnD,GAEnChJ,GACH8I,EACA3zE,GAAYC,SAAS6b,aAAae,oBAClC,sBACAq9B,EAAQoxB,cAEhB,CAqEmBwI,CAAyBtyE,EAAO04C,GAEnD,EAEM65B,GAAa,SAACtxB,GAChB,IAAMpoC,EAAUooC,EAAsB,SAChCuxB,EAAe35D,EAAQ4wD,SAAS,GAChCloD,EAAOixD,EAAaj5D,UAAUvZ,MAC9B04C,EAAU,CAAEoxB,cAAe0I,EAAa1I,eACxC2I,EAAiB/I,GAAuB8I,EAAcjxD,EAAMm3B,GAE5Dg6B,EAAaD,EAAe35D,aAqBlC,OApBA45D,EAAW3wD,iBAAiBqnD,GAAcvwD,EAAQ85D,kBAClDD,EAAWzwD,gBAAgBmnD,GAAcvwD,EAAQ+5D,iBAC7C/5D,EAAQ0I,MACRmxD,EAAWtwD,QAAQgnD,GAAcvwD,EAAQ0I,OAGzC1I,EAAQg6D,WACRH,EAAWlwD,YAAY3J,EAAQg6D,WAG/Bh6D,EAAQuI,YACRsxD,EAAWxwD,cAAcrJ,EAAQuI,YAGjCvI,EAAQgJ,WACR6wD,EAAWnwD,aAAa1J,EAAQgJ,WAGpC4wD,EAAet5D,WAAWu5D,GAEnBD,CACX,EAEMK,GAAqB,SACvB7xB,GAGC,IAFDlL,EAAItU,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,CAAC,EACRiX,EAAOjX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEL5oB,EAAUooC,EAAsB,SAChCuxB,EAAe35D,EAAQ4wD,SAAS,GAEhCgJ,EAAiB/I,GAAuB8I,EAAcz8B,EAAM,CAAE+zB,cAAe/zB,aAAI,EAAJA,EAAM+zB,gBAEnF4I,EAAaD,EAAe35D,aAsBlC,OArBA45D,EAAW3wD,iBAAiBqnD,GAAcvwD,EAAQ85D,kBAClDD,EAAWzwD,gBAAgBmnD,GAAcvwD,EAAQ+5D,iBAE7Cl6B,EAAQn3B,MACRmxD,EAAWtwD,QAAQgnD,GAAc1wB,EAAQn3B,KAAKqc,QAAQ,MAAO,OAG7D8a,EAAQm6B,WAAa98B,EAAK88B,YAC1BH,EAAWlwD,YAAYk2B,EAAQm6B,WAAa98B,EAAK88B,WAGjDh6D,EAAQuI,YACRsxD,EAAWxwD,cAAcrJ,EAAQuI,YAGjCvI,EAAQgJ,WACR6wD,EAAWnwD,aAAa1J,EAAQgJ,WAGpC4wD,EAAet5D,WAAWu5D,GAEnBD,CACX,EAEMM,GAAqB,SAAC9xB,EAAa+xB,GACrC,IAAMC,EAAeD,EAAcl6D,aAAazY,kBAC1C6yE,EAAajzC,EAAiBgzC,GAC9B1P,EAAO32B,GAAOqmC,GACpB,OACIC,EAAWljC,gBAAkBiR,EAAYkyB,aAAanjC,eACtDuzB,EAAK3lC,QAAQ,MAAO,IAAIoS,gBACpBiR,EAAYsiB,KAAK3lC,QAAQ,MAAO,IAAIoS,aAGhD,EAEMojC,GAAmB,SAACC,GACtB,OAAOpzC,EAAiBozC,EAAGv6D,aAAazY,kBAC5C,EAEMizE,GAAU,SAACryB,GACb,IAAM+xB,EAAgBT,GAAWtxB,GACjC,OAAO8xB,GAAmB9xB,EAAa+xB,EAC3C,EAEMO,GAAkB,SAACtyB,EAAalL,EAAM2C,GACxC,IAAMs6B,EAAgBF,GAClB7xB,EACAlL,EACA2C,GAEJ,OAAOq6B,GAAmB9xB,EAAa+xB,EAC3C,EAEMQ,GAAa,SAACR,GAGhB,OADapmC,GADQomC,EAAcl6D,aAAazY,kBAGpD,ECvkCA,MAAM,GAA+BlE,QAAQ,a,eCA7C,MAAM,GAA+BA,QAAQ,gB,olBCe7C,IAAMkoE,GAAQ,CACVoP,WAAU,SAAC79D,GACP,MAAmB,iBAARA,GAEJ89D,KAAAA,MAAgB99D,EAAIupB,WAAY,CACnCw0C,UAAW,CAAC,OAAQ,SACpBC,aAAa,GAErB,EAEAC,SAAQ,SAAC30E,GACL,OAAOA,IAAQ68B,OAAO78B,IAAgD,mBAAxC68B,OAAOl9B,UAAUsgC,SAASziC,KAAKwC,EACjE,EAEAqmC,QAAO,SAAC3E,GACJ,OAAOvC,MAAMkH,QAAQ3E,EACzB,EAEAkzC,OAAM,SAACt1C,GACH,IACI,QAASyC,KAAKwd,MAAMjgB,EACxB,CAAE,MAAOu1C,GACL,OAAO,CACX,CACJ,EAEAC,UAAS,SAACC,GACN,MAAuB,kBAATA,CAClB,EAEAC,YAAW,SAAC1lD,GACR,OAAOA,IAAWA,aAAkB2lD,MAAc3lD,EAAO4lD,aAA2C,cAA5B5lD,EAAO4lD,YAAYj1E,KAC/F,EAEAk1E,SAAQ,SAAC71C,GACL,MAAyB,iBAAXA,GAAwBA,GAAUA,EAAO41C,aAA2C,WAA5B51C,EAAO41C,YAAYj1E,IAC7F,EAEAm1E,WAAU,SAACp1E,GACP,MAAsB,mBAARA,CAClB,EAEAq1E,MAAK,SAAC/1C,GACF,MAA0B,iBAAXA,IACPjB,MAAMmC,SAASlB,EAAQ,MACxB,sBAAsBqD,KAAKrD,EACtC,EAEA+K,UAAS,SAAC/a,GACN,OAAe,OAAXA,GAEG8a,OAAOC,UACVD,OAAO9a,GAEf,EAEAgmD,YAAW,SAACt1E,EAAKu1E,GACb,OAAO14C,OAAOl9B,UAAUu9B,eAAe1/B,KAAKwC,EAAKu1E,EACrD,EAEAC,cAAa,SAACx1E,GAAoB,QAAAu9B,EAAA,KAAAiX,EAAAjS,UAAA3gC,OAAZ6zE,EAAU,IAAAt2C,MAAAqV,EAAA,EAAAA,EAAA,KAAAf,EAAA,EAAAA,EAAAe,EAAAf,IAAVgiC,EAAUhiC,EAAA,GAAAlR,UAAAkR,GAC5B,OAAOgiC,EAAW7zE,SAAW6zE,EAAWzxC,KAAI,SAAAuxC,GACxC,OAAOh4C,EAAK+3C,YAAYt1E,EAAKu1E,EACjC,IAAGjR,UAAS,EAChB,EAEAoR,SAAQ,SAACC,GACL,IAAItzD,EAAO,CACP+xB,MAAOuhC,EAAMC,aACbjzD,UAAWgzD,EAAME,gBACjBtL,SAAUoL,EAAMxK,iBAChBlrE,KAAM01E,EAAMG,WACZ/zB,YAAa4zB,EAAMI,eACnBvvC,OAAQmvC,EAAMnvC,OACdwvC,aAAcL,EAAMM,gBAAkBN,EAAMO,aAAe,WAAa,iBAQ5E,OANIP,EAAMO,eACN7zD,EAAK8zD,YAAcR,EAAMO,cAEzBP,EAAMS,eACN/zD,EAAKu0C,YAAc+e,EAAMS,cAEtB/zD,CACX,EAEAg0D,WAAU,SAACV,EAAK5oC,GAAiB,IAANtZ,EAAGsZ,EAAX4vB,OACf,IAAKgZ,EAAMnvC,OACP,OAAOmvC,EAEX,GAAIp4E,KAAKo3E,SAASgB,EAAMnvC,QACpB,IAAK,IAAIrI,EAAI,EAAGA,EAAI1K,EAAI7xB,OAAQu8B,IAAK,CACjC,IAAIn+B,EAAMyzB,EAAI0K,GACE,WAAZn+B,EAAI0H,MAAqB1H,EAAIC,QAAQ01E,EAAMnvC,SAC3CmvC,EAAMnvC,OAAOxmC,EAAIC,MAAQmhC,EAAiBu0C,EAAMnvC,OAAOxmC,EAAIC,MAAM+nE,OAAO,GAAGl3B,cACnF,MACOvzC,KAAK8oC,QAAQsvC,EAAMnvC,UAC1BmvC,EAAMnvC,OAASmvC,EAAMnvC,OAAOX,QAAO,SAAC7lC,EAAKwmC,EAAQT,GAC7C,IAAAuwC,EAGI7iD,EAAIsS,GAFJ9lC,EAAIq2E,EAAJr2E,KASJ,MALY,WAHJq2E,EAAJ5uE,OAIA8+B,EAASpF,EAAiBoF,EAAOwhC,OAAO,GAAGl3B,eAE/C9wC,EAAIC,GAAQumC,EAELxmC,CACX,GAAG,CAAC,IAGR,OAAO21E,CACX,EAEAY,QAAO,SAAC74C,EAAOilB,EAAS13B,GAGpB,IAFA,IAAIwkB,EAAM/R,EAAMuC,WAETwP,EAAI7tC,OAASqpB,GAChBwkB,EAAMkT,EAAUlT,EAEpB,OAAOA,CACX,EAEA+mC,qBAAoB,SAACC,GACjB,OAAOA,OACX,EAEMC,MAAK,WAAe,IAAAC,EAAAp0C,UAAA,OAAAyC,IAAAC,IAAAA,MAAA,SAAAC,IAAA,IAAA0xC,EAAA,OAAA3xC,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAD,OAAbqxC,EAAMD,EAAA/0E,OAAA,QAAAF,IAAAi1E,EAAA,GAAAA,EAAA,GAAG,IAAItxC,EAAAO,OAAA,SACd,IAAIJ,SAAQ,SAAAE,GAAO,OAAI0tB,WAAW1tB,EAASkxC,EAAO,KAAC,wBAAAvxC,EAAAW,OAAA,GAAAd,EAAA,IADpCF,EAE1B,GAGJ,SAAA8oC,GAAAA,GAAA,GACO3I,IAAK,IACRn8D,KAAAA,EACA6tE,SAAAA,EACA1P,OAAAA,EACA5mE,MAAAA,EACAu2E,OAAAA,EACArjD,IAAAA,EACAjyB,QAAAA,EACAu1E,kBAAAA,GACAh1B,YAAAA,EACAi1B,YAAAA,IC7JsB,IAELC,GAAY,WAC7B,SAAAA,EAAYC,GAAuF,IAAjFC,EAAO50C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,IAAO60C,EAAI70C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAU4L,EAAQ5L,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAU80C,EAAO90C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAG+0C,EAAU/0C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,IAC1F,GAD6FuJ,IAAA,KAAAmrC,IACxF9R,GAAAA,WAAiB+R,GAClB,MAAM,IAAIv3C,MAAM,wCAEpB,GAAItB,MAAM84C,IAAYA,EAAU,EAC5B,MAAM,IAAIx3C,MAAM,qCAEpB,IAAKwlC,GAAAA,SAAekS,GAChB,MAAM,IAAI13C,MAAM,mCAEpBu3C,EAAOA,EAAKx4C,QAAQ,OAAQ,IAE5BnhC,KAAK25E,KAAOA,EACZ35E,KAAK45E,QAAUA,EACf55E,KAAK65E,KAAOA,EACZ75E,KAAK4wC,SAAWA,EAChB5wC,KAAK85E,QAAUA,EACf95E,KAAK+5E,WAAaA,EAElB/5E,KAAKg6E,SAAWC,IAAAA,OAAa,CACzBC,QAASP,EACTC,QAASA,EACTE,QAASA,EACTK,KAAMN,GAAQ,CACVA,KAAAA,EACAjpC,SAAAA,IAGZ,CAIC,IAAAwpC,EAiBA,OArBA1rC,IAAAgrC,EAAA,EAAAt6C,IAAA,gBAAA77B,MAED,WAAgC,IAAlBw2E,EAAU/0C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,IACvBhlC,KAAK+5E,WAAaA,CACtB,GAAC,CAAA36C,IAAA,cAAA77B,OAAA62E,EAAA3yC,IAAAC,IAAAA,MAED,SAAAC,IAAA,IAAAoyC,EAAAM,EAAAr1C,UAAA,OAAA0C,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAA8C,OAA5B+xC,EAAUM,EAAAh2E,OAAA,QAAAF,IAAAk2E,EAAA,GAAAA,EAAA,GAAGr6E,KAAK+5E,WAAUjyC,EAAAO,OAAA,SACnCroC,KAAKs6E,QAAQP,GAAYv2B,MAAK,SAAA1+B,GACjC,OAAO8iD,GAAAA,cAAoB9iD,EAAM,UAAW,eAChD,IAAE,OAAO,kBAAM,CAAK,KAAC,wBAAAgjB,EAAAW,OAAA,GAAAd,EAAA,UACxB,kBAAAyyC,EAAA5yC,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,UAAA77B,MAED,SAAQ4V,GAAmC,IAA9B6wC,EAAOhlB,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAG2F,EAAM3F,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,MAGhC,OAFA2F,EAASA,EAAO4I,cAETvzC,KAAKg6E,SAASM,QAAQ,CACzBx1D,KAAgB,QAAV6lB,GAAoBrL,OAAOsI,KAAKoiB,GAAS3lD,OAAS2lD,EAAU,KAClEgM,OAAkB,OAAVrrB,GAAmBqf,EAC3B7wC,IAAAA,EACAwxB,OAAAA,IACD6Y,MAAK,SAAAhU,GAAM,OAAAA,EAAJ1qB,IAAc,GAC5B,KAAC40D,CAAA,CAlD4B,GCDjC,UACIA,aAAAA,ICHE,GAA+Bh6E,QAAQ,iB,qBCAvC,GAA+BA,QAAQ,U,eCA7C,MAAM,GAA+BA,QAAQ,iB,0HCCnB,ICStBK,GDPiBw6E,GAAS,WAE1B,SAAAA,IAA6B,IAAjBC,EAAOx1C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GACf,GADuBuJ,IAAA,KAAAgsC,IAClBC,IAAYA,aAAmBxU,GAChC,MAAM,IAAI5jC,MAAM,gCACpBpiC,KAAKw6E,QAAUA,CACnB,CAqIC,OArIA9rC,IAAA6rC,EAAA,EAAAn7C,IAAA,UAAA77B,MAED,SAAQ+/C,GACJ,OAAOA,EAAM9gD,KAAO,WAAJ+gC,OAAe+f,EAAM5gD,MAAI6gC,OAAkB,YAAf+f,EAAMn5C,KAAqB,WAAa,GAAE,YAC1F,GAAC,CAAAi1B,IAAA,cAAA77B,MAED,SAAY+/C,GACR,MAAO,GAAP/f,OAAU+f,EAAM5gD,KAAI,8BACxB,GAAC,CAAA08B,IAAA,WAAA77B,MAED,SAAS+/C,GACL,OAAOA,EAAM9gD,KAAO,GAAJ+gC,OAAO+f,EAAM9J,MAAM,GAAE,yBAAAjW,OAAwB+f,EAAM9J,MAAM,GAC7E,GAAC,CAAApa,IAAA,WAAA77B,MAED,WAA+C,IAIjB2pC,EAJrB8oB,EAAMhxB,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,GAAIoV,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,IAAI9kC,SAE7Bu6E,EAAa,CAAC,EACdC,GAAK,EAAMvtC,E,65BAAAC,CACK4oB,GAAM,IAA1B,IAAA7oB,EAAAE,MAAAH,EAAAC,EAAArO,KAAAwO,MAA4B,KAAjBgW,EAAKpW,EAAA3pC,MAERb,EAUA4gD,EAVA5gD,KACA82C,EASA8J,EATA9J,MACAj2C,EAQA+/C,EARA//C,MACA4G,EAOAm5C,EAPAn5C,KACAwwE,EAMAr3B,EANAq3B,GACAC,EAKAt3B,EALAs3B,GACAC,EAIAv3B,EAJAu3B,IACAC,EAGAx3B,EAHAw3B,IAIJ,GADIx3B,EAFAy3B,IAEAz3B,EADA03B,UAGCpT,GAAAA,qBAA2BrkE,KACf,YAAT4G,IAAgC,IAAV5G,GAF9B,CAKA,OADAk3E,EAAWn3B,EAAM5gD,MAAQ4gD,EAAM//C,MACvB4G,GAEJ,IAAK,UACInK,KAAKw6E,QAAQS,UAAU13E,GAGxBk3E,EAAW/3E,GAAQ1C,KAAKw6E,QAAQ53E,QAAQ+1C,MAAMp1C,GAF9Cm3E,GAAK,EAIT,MAEJ,IAAK,YACI9S,GAAAA,UAAgBrkE,IACF,iBAAPo3E,GAAmBp3E,GAAS+/C,EAAMq3B,IAC3B,iBAAPC,GAAmBr3E,GAAS+/C,EAAMs3B,IAC1B,iBAARC,GAAoBt3E,EAAQ+/C,EAAMu3B,KAC1B,iBAARC,GAAoBv3E,EAAQ+/C,EAAMw3B,OAC1CJ,GAAK,GAET,MAEJ,IAAK,mBACD,IAAK9S,GAAAA,UAAgBrkE,IAAUA,GAAS,EAEpC,YADA62C,EAASp6C,KAAKk7E,YAAY53B,IAG9B,MAEJ,IAAK,UA2CL,IAAK,mBACIskB,GAAAA,SAAerkE,IAAWA,EAAMc,SACjCq2E,GAAK,GAET,MAzCJ,IAAK,iBACI9S,GAAAA,SAAerkE,IAAW+7B,OAAOsI,KAAKrkC,GAAOc,SAC9Cq2E,GAAK,GAET,MAEJ,IAAK,WACD,GAAID,EAAWjhC,EAAM,MAAQihC,EAAWjhC,EAAM,IAE1C,OADAY,EAASp6C,KAAKm7E,SAAS73B,KAChB,EAEX,MAEJ,IAAK,WACI,CAAC,YAAa,UAAUyjB,SAASxjE,KAClCm3E,GAAK,GAET,MAEJ,IAAK,MACI9S,GAAAA,WAAiBrkE,KAClBm3E,GAAK,GAET,MAEJ,IAAK,MACI9S,GAAAA,MAAYrkE,KACbm3E,GAAK,GAET,MAEJ,IAAK,QACI94C,MAAMkH,QAAQvlC,KACfm3E,GAAK,GAET,MAQJ,IAAK,UACI9S,GAAAA,UAAgBrkE,KACjBm3E,GAAK,GAET,MACJ,IAAK,WACI9S,GAAAA,SAAerkE,IACD,iBAAPo3E,GAAmBp3E,EAAMc,QAAUi/C,EAAMq3B,IAClC,iBAAPC,GAAmBr3E,EAAMc,QAAUi/C,EAAMs3B,IACjC,iBAARC,GAAoBt3E,EAAMc,OAASi/C,EAAMu3B,KACjC,iBAARC,GAAoBv3E,EAAMc,OAASi/C,EAAMw3B,OACjDJ,GAAK,GAIjB,GAAIA,EAEA,OADAtgC,EAASp6C,KAAKo7E,QAAQ93B,KACf,CA/FC,CAiGhB,CAAC,OAAA/V,GAAAJ,EAAAJ,EAAAQ,EAAA,SAAAJ,EAAAjpC,GAAA,CACD,OAAO,CACX,KAACq2E,CAAA,CA3IyB,G,glDCW9B,SAAS5hC,GAAMp1C,GACX,OAAOyiE,GAAQpjE,QAAQ+1C,MAAMp1C,EACjC,CAEA,SAAS83E,GAAS93E,GACd,OAAOxD,GAAKy6E,QAAQa,SAAS93E,GAAO49B,QAAQ,MAAO,GACvD,CAEA,SAASm6C,GAAavmB,GAClB,OAAOvwB,KAAKwd,MAAMxd,KAAKC,UAAUswB,GACrC,CAEA,SAASwmB,GAAc/2B,EAAa1/B,EAAMm3B,EAAS7B,GAU/C,MATuB,mBAAZ6B,IACP7B,EAAW6B,GAGK,mBAATn3B,IACPs1B,EAAWt1B,EACXA,EAAO,MAGP0/B,EAAYpiB,MACLgY,EAASoK,EAAYpiB,OAE5BoiB,EAAYvb,QAAUub,EAAYvb,OAAOhlC,QAClCm2C,EACHr6C,GAAKy6E,QAAQgB,OAAOh3B,EAAYvb,OAAOhlC,UAG5B6yE,GAAgBtyB,EAAa1/B,EAAMm3B,GAE3C7B,EAAS,KAAMoK,GAEnBpK,EAAS,sBACpB,CAoCC,SAEcqhC,GAAiBn0C,EAAAgb,EAAAqG,EAAAC,GAAA,OAAA8yB,GAAAl0C,MAAC,KAADxC,UAAA,UAAA02C,KAyB/B,OAzB+BA,GAAAj0C,IAAAC,IAAAA,MAAhC,SAAAooB,EAAiC0qB,EAASrwE,EAAM5G,EAAO8pE,GAAa,IAAApxB,EAAA0/B,EAAAt3B,EAAAuyB,EAAAgF,EAAA52C,UAAA,OAAA0C,IAAAA,MAAA,SAAAsoB,GAAA,cAAAA,EAAAjoB,KAAAioB,EAAAhoB,MAAA,OAAc,OAAZiU,EAAO2/B,EAAAv3E,OAAA,QAAAF,IAAAy3E,EAAA,GAAAA,EAAA,GAAG,CAAC,EAAC5rB,EAAAhoB,KAAA,EACzCwyC,EAAQqB,SAZjCvB,QAAQ,kBAAmB,CAAEwB,QAAQ,GAAS,QACrDt4B,MAAK,SAAC1+B,GACH,MAAO,CACHoxD,gBAAiBpxD,EAAKi3D,aAAaC,SAASjqD,OAAO2Q,SAAS,IAAIK,OAAO,GAAG+kC,SAAS,EAAG,KACtFqO,eAAgBrxD,EAAKm3D,QAAQl5C,MAAM,GAAI,IACvCpe,WAAYG,EAAKi3D,aAAaC,SAAS52D,UAAY,IACnDA,UAAWN,EAAKi3D,aAAaC,SAAS52D,UAE9C,IAIkD,OAsBD,OAtB/Cu2D,EAAQ3rB,EAAA5nB,KACRic,EAAK,CACP63B,SAAS,EACTpV,KAAM,GACN4P,aAAc,GACdsF,SAAQzL,GAAAA,GAAA,CACJvD,SAAU,CAAC,CACPlwD,UAAW,CACPvZ,MAAAA,EACA44E,SAAU,gCAAF54C,OAAkCp5B,IAE9CA,KAAAA,KAEDwxE,GACA1/B,IAGPoxB,IACAhpB,EAAG23B,SAAShP,SAAS,GAAGK,cAAgBA,GAEtCuJ,EAAKd,GAAWzxB,GACtBA,EAAGyiB,KAAOiQ,GAAWH,GAAIz1C,QAAQ,MAAO,IACxCkjB,EAAGqyB,aAAeC,GAAiBC,GAAIrjC,cAAcyc,EAAA3nB,OAAA,SAC9Cgc,GAAE,yBAAA2L,EAAAvnB,OAAA,GAAAqnB,EAAA,KACZ4rB,GAAAl0C,MAAA,KAAAxC,UAAA,KAEoBo3C,GAAkB,WACnC,SAAAA,IAA6B,IAAjB5B,EAAOx1C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GACf,GADuBuJ,IAAA,KAAA6tC,IAClB5B,IAAYA,aAAmBxU,GAChC,MAAM,IAAI5jC,MAAM,gCACpBriC,GAAOC,KACPA,KAAKw6E,QAAUA,EACfx6E,KAAKq8E,cAAgBC,KAAct8E,MACnCA,KAAKi3E,UAAY,IAAIsD,GAAUC,EACnC,CA2qFC,IAAA+B,EAZAC,EA1BAC,EAjDAC,EAtgDAC,EAinDA,OA/rFAjuC,IAAA0tC,EAAA,EAAAh9C,IAAA,UAAA77B,MAED,WAAmG,IAAAw4C,EAA3FpmC,EAAEqvB,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAUtX,EAAMsX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,EAAGvvB,EAAIuvB,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAK8Y,EAAOjX,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EAAEi2C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAcrF,GAbI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiBnyD,IACjB2kC,EAAW3kC,EACXA,EAAOzV,KAAKw6E,QAAQoC,eAAez5C,KAC5BykC,GAAAA,SAAenyD,KACtBwmC,EAAUxmC,EACVA,EAAOzV,KAAKw6E,QAAQoC,eAAez5C,MAGlCiX,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAK68E,QAASlnE,EAAI+X,EAAQjY,EAAMwmC,GAK9D,GAFAvuB,EAASuV,SAASvV,IAEd1tB,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,YACNyH,KAAM,UACN5G,MAAOoS,GAEX,CACIjT,KAAM,SACNyH,KAAM,UACN5G,MAAOkS,GAEX,CACI+jC,MAAO,CAAC,YAAa,UACrBrvC,KAAM,WACN3H,IAAK,2CAET,CACIE,KAAM,SACNyH,KAAM,UACNwwE,GAAI,EACJp3E,MAAOmqB,IAEZ0sB,GAtBH,CAyBA,IAAMt1B,EAAO,CACTooD,WAAYv0B,GAAMhjC,GAClBw3D,cAAex0B,GAAMljC,GACrBiY,OAAQA,GAGZ+tD,GAAkBz7E,KAAKw6E,QAAS,mBAAoB11D,EAAa,QAATi3B,EAAEE,SAAO,IAAAF,OAAA,EAAPA,EAAS1+B,cAC9DmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GAVrB,CAWd,GAAC,CAAAnO,IAAA,YAAA77B,MAED,WAAsH,IAAAw5E,EAA5GpnE,EAAEqvB,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAUtX,EAAMsX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,EAAGg4C,EAAOh4C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAUvvB,EAAIuvB,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAK8Y,EAAOjX,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EAAEi2C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAcxG,GAbI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiBnyD,IACjB2kC,EAAW3kC,EACXA,EAAOzV,KAAKw6E,QAAQoC,eAAez5C,KAC5BykC,GAAAA,SAAenyD,KACtBwmC,EAAUxmC,EACVA,EAAOzV,KAAKw6E,QAAQoC,eAAez5C,MAGlCiX,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKi9E,UAAWtnE,EAAI+X,EAAQsvD,EAASvnE,EAAMwmC,GAGzE,GADAvuB,EAASuV,SAASvV,IACd1tB,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,YACNyH,KAAM,UACN5G,MAAOoS,GAEX,CACIjT,KAAM,SACNyH,KAAM,UACN5G,MAAOkS,GAEX,CACI+jC,MAAO,CAAC,YAAa,UACrBrvC,KAAM,WACN3H,IAAK,8CAET,CACIE,KAAM,SACNyH,KAAM,UACNwwE,GAAI,EACJp3E,MAAOmqB,GAEX,CACIhrB,KAAM,WACNyH,KAAM,UACN5G,MAAOy5E,IAEZ5iC,GA3BH,CA8BA,IAAMt1B,EAAO,CACTooD,WAAYv0B,GAAMhjC,GAClBw3D,cAAex0B,GAAMljC,GACrB83D,WAAY8N,GAAS2B,GACrBtvD,OAAQuV,SAASvV,IAGrB+tD,GAAkBz7E,KAAKw6E,QAAS,wBAAyB11D,EAAa,QAATi4D,EAAE9gC,SAAO,IAAA8gC,OAAA,EAAPA,EAAS1/D,cACnEmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GAXrB,CAYd,GAAC,CAAAnO,IAAA,gBAAA77B,MAED,WAAsI,IAAA25E,EAAxHC,EAAan4C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAUg4C,EAAOh4C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAUtX,EAAMsX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,EAAGo4C,EAAKp4C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAK8Y,EAAOjX,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EAAEi2C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAcxH,GAbI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiBwV,IACjBhjC,EAAWgjC,EACXA,EAAQp9E,KAAKw6E,QAAQoC,eAAez5C,KAC7BykC,GAAAA,SAAewV,KACtBnhC,EAAUmhC,EACVA,EAAQp9E,KAAKw6E,QAAQoC,eAAez5C,MAGnCiX,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKq9E,cAAeF,EAAeH,EAAStvD,EAAQ0vD,EAAOnhC,GAEzF,IAAIj8C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,QACNyH,KAAM,UACN5G,MAAO65E,GAEX,CACI16E,KAAM,SACNyH,KAAM,UACN5G,MAAO45E,GAEX,CACI3jC,MAAO,CAAC,QAAS,UACjBrvC,KAAM,WACN3H,IAAK,4CAET,CACIE,KAAM,SACNyH,KAAM,UACNwwE,GAAI,EACJp3E,MAAOmqB,GAEX,CACIhrB,KAAM,WACNyH,KAAM,UACN5G,MAAOy5E,IAEZ5iC,GA3BH,CA8BA,IAAMt1B,EAAO,CACTooD,WAAYv0B,GAAMwkC,GAClBhQ,cAAex0B,GAAMykC,GACrB7P,WAAY8N,GAAS2B,GACrBtvD,OAAQuV,SAASvV,IAGrB+tD,GAAkBz7E,KAAKw6E,QAAS,gCAAiC11D,EAAa,QAATo4D,EAAEjhC,SAAO,IAAAihC,OAAA,EAAPA,EAAS7/D,cAC3EmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GAXrB,CAYd,GAAC,CAAAnO,IAAA,gBAAA77B,MAED,WAAmK,IAAA+5E,EAArJ5vD,EAAMsX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,EAAG4wB,EAAQ5wB,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,EAAGnV,EAAQmV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,YAAapiC,EAAOoiC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAKrT,EAAekV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,QAAG7gC,EAAW83C,EAAOjX,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EAAEi2C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAgCrJ,GA/BI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiB93C,IACjBsqB,EAAWtqB,EACXA,OAAkB3rB,GACXyjE,GAAAA,SAAe93C,KACtBmsB,EAAUnsB,EACVA,OAAkB3rB,GAGlByjE,GAAAA,WAAiBhlE,IACjBw3C,EAAWx3C,EACXA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,KAC/BykC,GAAAA,SAAehlE,KACtBq5C,EAAUr5C,EACVA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,KAGtCykC,GAAAA,WAAiBhS,KACjBxb,EAAWwb,EACXA,EAAW,GAGXgS,GAAAA,WAAiB/3C,KACjBuqB,EAAWvqB,EACXA,EAAW,cAGVuqB,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKu9E,cAAe7vD,EAAQkoC,EAAU/lC,EAAUjtB,EAASktB,EAAiBmsB,GAExG,IAAIj8C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,SACNyH,KAAM,UACN5G,MAAOX,GAEX,CACIF,KAAM,WACNyH,KAAM,UACN5G,MAAOusB,EACPkrD,UAAU,GAEd,CACIt4E,KAAM,SACNyH,KAAM,UACNwwE,GAAI,EACJp3E,MAAOmqB,GAEX,CACIhrB,KAAM,WACNyH,KAAM,UACN0wE,IAAK,EACLt3E,MAAOqyD,GAEX,CACIlzD,KAAM,WACNyH,KAAM,WACN5G,MAAOssB,EACPrtB,IAAK,gEAEV43C,GA9BH,CAiCA,IAAMt1B,EAAO,CACTqoD,cAAex0B,GAAM/1C,GACrB0rE,eAAgBrrC,SAASvV,GACzB6gD,gBAAiBtrC,SAAS2yB,IAEb,cAAb/lC,IACA/K,EAAK+K,SAAWA,GAGhB+3C,GAAAA,qBAA2B93C,IAAoB6oB,GAAM7oB,KAAqB6oB,GAAM/1C,KAChFkiB,EAAK0pD,iBAAmB71B,GAAM7oB,IAGlC2rD,GAAkBz7E,KAAKw6E,QAAS,wBAAyB11D,EAAa,QAATw4D,EAAErhC,SAAO,IAAAqhC,OAAA,EAAPA,EAASjgE,cACnEmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GAjBrB,CAkBd,GAAC,CAAAnO,IAAA,kBAAA77B,MAED,WAA2I,IAAAi6E,EAA3H3tD,EAAQmV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,YAAapiC,EAAOoiC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAKrT,EAAekV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,QAAG7gC,EAAW83C,EAAOjX,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EAAEi2C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GA2B7H,GA1BI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiB93C,IACjBsqB,EAAWtqB,EACXA,OAAkB3rB,GACXyjE,GAAAA,SAAe93C,KACtBmsB,EAAUnsB,EACVA,OAAkB3rB,GAGlByjE,GAAAA,WAAiBhlE,IACjBw3C,EAAWx3C,EACXA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,KAC/BykC,GAAAA,SAAehlE,KACtBq5C,EAAUr5C,EACVA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,KAGtCykC,GAAAA,WAAiB/3C,KACjBuqB,EAAWvqB,EACXA,EAAW,cAGVuqB,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKizB,gBAAiBpD,EAAUjtB,EAASktB,EAAiBmsB,GAExF,IAAIj8C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,SACNyH,KAAM,UACN5G,MAAOX,GAEX,CACIF,KAAM,WACNyH,KAAM,UACN5G,MAAOusB,EACPkrD,UAAU,GAEd,CACIt4E,KAAM,WACNyH,KAAM,WACN5G,MAAOssB,EACPrtB,IAAK,gEAEV43C,GAlBH,CAqBA,IAAMt1B,EAAO,CACTqoD,cAAex0B,GAAM/1C,IAER,cAAbitB,IACA/K,EAAK+K,SAAWA,GAGhB+3C,GAAAA,qBAA2B93C,IAAoB6oB,GAAM7oB,KAAqB6oB,GAAM/1C,KAChFkiB,EAAK0pD,iBAAmB71B,GAAM7oB,IAGlC2rD,GAAkBz7E,KAAKw6E,QAAS,0BAA2B11D,EAAa,QAAT04D,EAAEvhC,SAAO,IAAAuhC,OAAA,EAAPA,EAASngE,cACrEmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GAfrB,CAgBd,GAAC,CAAAnO,IAAA,kBAAA77B,MAED,WAA0H,IAAAk6E,EAA1G/vD,EAAMsX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,EAAGnV,EAAQmV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,YAAapiC,EAAOoiC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAK8Y,EAAOjX,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EAAEi2C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAsB5G,GArBI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiBhlE,IACjBw3C,EAAWx3C,EACXA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,KAC/BykC,GAAAA,SAAehlE,KACtBq5C,EAAUr5C,EACVA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,KAGtCykC,GAAAA,WAAiB/3C,IACjBuqB,EAAWvqB,EACXA,EAAW,aACJ+3C,GAAAA,SAAe/3C,KACtBosB,EAAUpsB,EACVA,EAAW,cAGVuqB,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAK09E,gBAAiBhwD,EAAQmC,EAAUjtB,EAASq5C,GAE/E,IAAIj8C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,SACNyH,KAAM,UACN5G,MAAOX,GAEX,CACIF,KAAM,SACNyH,KAAM,UACNwwE,GAAI,EACJp3E,MAAOmqB,GAEX,CACIhrB,KAAM,WACNyH,KAAM,WACN5G,MAAOssB,EACPrtB,IAAK,gEAEV43C,GAlBH,CAqBA,IAAMt1B,EAAO,CACTqoD,cAAex0B,GAAM/1C,GACrB0rE,eAAgBrrC,SAASvV,IAEZ,cAAbmC,IACA/K,EAAK+K,SAAWA,GAGpB4rD,GAAkBz7E,KAAKw6E,QAAS,0BAA2B11D,EAAa,QAAT24D,EAAExhC,SAAO,IAAAwhC,OAAA,EAAPA,EAASpgE,cACrEmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GAZrB,CAad,GAAC,CAAAnO,IAAA,oBAAA77B,MAED,WAA4H,IAAAo6E,EAA1GjwD,EAAMsX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,EAAGnV,EAAQmV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,YAAapiC,EAAOoiC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAK8Y,EAAOjX,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EAAEi2C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAsB9G,GArBI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiBhlE,IACjBw3C,EAAWx3C,EACXA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,KAC/BykC,GAAAA,SAAehlE,KACtBq5C,EAAUr5C,EACVA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,KAGtCykC,GAAAA,WAAiB/3C,IACjBuqB,EAAWvqB,EACXA,EAAW,aACJ+3C,GAAAA,SAAe/3C,KACtBosB,EAAUpsB,EACVA,EAAW,cAGVuqB,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAK49E,kBAAmBlwD,EAAQmC,EAAUjtB,EAASq5C,GAEjF,IAAIj8C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,SACNyH,KAAM,UACN5G,MAAOX,GAEX,CACIF,KAAM,SACNyH,KAAM,UACNwwE,GAAI,EACJp3E,MAAOmqB,GAEX,CACIhrB,KAAM,WACNyH,KAAM,WACN5G,MAAOssB,EACPrtB,IAAK,gEAEV43C,GAlBH,CAqBA,IAAMt1B,EAAO,CACTqoD,cAAex0B,GAAM/1C,GACrBusE,iBAAkBlsC,SAASvV,IAEd,cAAbmC,IACA/K,EAAK+K,SAAWA,GAGpB4rD,GAAkBz7E,KAAKw6E,QAAS,4BAA6B11D,EAAa,QAAT64D,EAAE1hC,SAAO,IAAA0hC,OAAA,EAAPA,EAAStgE,cACvEmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GAZrB,CAad,GAAC,CAAAnO,IAAA,0BAAA77B,MAED,WAA8F,IAAAs6E,EAAtEj7E,EAAOoiC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAK8Y,EAAOjX,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EAAEi2C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAehF,GAdI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiBhlE,IACjBw3C,EAAWx3C,EACXq5C,EAAU,CAAC,EACXr5C,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,KAC/BykC,GAAAA,SAAehlE,KACtBq5C,EAAUr5C,EACVA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,MAGrCiX,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAK89E,wBAAyBl7E,EAASq5C,GAErE,IAAIj8C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,SACNyH,KAAM,UACN5G,MAAOX,IAEZw3C,GANH,CASA,IAAMt1B,EAAO,CACTqoD,cAAex0B,GAAM/1C,IAGzB64E,GAAkBz7E,KAAKw6E,QAAS,8BAA+B11D,EAAa,QAAT+4D,EAAE5hC,SAAO,IAAA4hC,OAAA,EAAPA,EAASxgE,cACzEmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GARrB,CASd,GAAC,CAAAnO,IAAA,mBAAA77B,MAED,WASE,IAAAw6E,EARErwD,EAAMsX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,EACTlV,EAAekV,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EACf0rB,EAAQmV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,YACXpiC,EAAOoiC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IACtC/P,EAAI4R,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GACJ3R,EAAU2R,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EACV83C,EAAOjX,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EACPi2C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAuCR,GArCI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiBv0C,IACjB+mB,EAAW/mB,EACXA,OAAalvB,GACNyjE,GAAAA,SAAev0C,KACtB4oB,EAAU5oB,EACVA,OAAalvB,GAGbyjE,GAAAA,WAAiBx0C,IACjBgnB,EAAWhnB,EACXA,GAAO,GACAw0C,GAAAA,SAAex0C,KACtB6oB,EAAU7oB,EACVA,GAAO,GAGPw0C,GAAAA,WAAiBhlE,IACjBw3C,EAAWx3C,EACXA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,KAC/BykC,GAAAA,SAAehlE,KACtBq5C,EAAUr5C,EACVA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,KAGtCykC,GAAAA,WAAiB/3C,IACjBuqB,EAAWvqB,EACXA,EAAW,aACJ+3C,GAAAA,SAAe/3C,KACtBosB,EAAUpsB,EACVA,EAAW,cAGVuqB,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKg+E,iBAAkBtwD,EAAQoC,EAAiBD,EAAUjtB,EAASwwB,EAAMC,EAAY4oB,GAEnH,IAAIj8C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,SACNyH,KAAM,UACNwwE,GAAI,EACJp3E,MAAOmqB,GAEX,CACIhrB,KAAM,WACNyH,KAAM,WACN5G,MAAOssB,EACPrtB,IAAK,+DAET,CACIE,KAAM,WACNyH,KAAM,UACN5G,MAAOusB,GAEX,CACIptB,KAAM,SACNyH,KAAM,UACN5G,MAAOX,GAEX,CACIF,KAAM,OACNyH,KAAM,UACN5G,MAAO6vB,GAEX,CACI1wB,KAAM,cACNyH,KAAM,UACN0wE,IAAK,EACLt3E,MAAO8vB,EACP2nD,UAAU,IAEf5gC,GAnCH,CAsCA,GAAGzB,GAAM7oB,KAAqB6oB,GAAM/1C,GAChC,OAAOw3C,EAAS,0DAGpB,IAAMt1B,EAAO,CACTqoD,cAAex0B,GAAM/1C,GACrB4rE,iBAAkB71B,GAAM7oB,GACxB1lB,QAAS64B,SAASvV,IAEL,cAAbmC,IACA/K,EAAK+K,SAAWA,GAEhBuD,IACAtO,EAAKsO,KAAOA,EACRw0C,GAAAA,qBAA2Bv0C,KAC3BvO,EAAKyqD,YAAcl8C,IAI3BooD,GAAkBz7E,KAAKw6E,QAAS,2BAA4B11D,EAAa,QAATi5D,EAAE9hC,SAAO,IAAA8hC,OAAA,EAAPA,EAAS1gE,cACtEmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GAvBrB,CAwBd,GAAC,CAAAnO,IAAA,qBAAA77B,MAED,WAA8I,IAAA06E,EAA3HvwD,EAAMsX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,EAAGlV,EAAekV,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EAAE0rB,EAAQmV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,YAAapiC,EAAOoiC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAK8Y,EAAOjX,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EAAEi2C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAsBhI,GArBI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiBhlE,IACjBw3C,EAAWx3C,EACXA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,KAC/BykC,GAAAA,SAAehlE,KACtBq5C,EAAUr5C,EACVA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,KAGtCykC,GAAAA,WAAiB/3C,IACjBuqB,EAAWvqB,EACXA,EAAW,aACJ+3C,GAAAA,SAAe/3C,KACtBosB,EAAUpsB,EACVA,EAAW,cAGVuqB,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKk+E,mBAAoBxwD,EAAQoC,EAAiBD,EAAUjtB,EAASq5C,GAEnG,IAAIj8C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,SACNyH,KAAM,UACN5G,MAAOX,GAEX,CACIF,KAAM,WACNyH,KAAM,UACN5G,MAAOusB,GAEX,CACIptB,KAAM,SACNyH,KAAM,UACNwwE,GAAI,EACJp3E,MAAOmqB,GAEX,CACIhrB,KAAM,WACNyH,KAAM,WACN5G,MAAOssB,EACPrtB,IAAK,gEAEV43C,GAvBH,CA0BA,GAAGzB,GAAM7oB,KAAqB6oB,GAAM/1C,GAChC,OAAOw3C,EAAS,0DAGpB,IAAMt1B,EAAO,CACTqoD,cAAex0B,GAAM/1C,GACrB4rE,iBAAkB71B,GAAM7oB,GACxB1lB,QAAS64B,SAASvV,IAEL,cAAbmC,IACA/K,EAAK+K,SAAWA,GAGpB4rD,GAAkBz7E,KAAKw6E,QAAS,6BAA8B11D,EAAa,QAATm5D,EAAEhiC,SAAO,IAAAgiC,OAAA,EAAPA,EAAS5gE,cACxEmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GAjBrB,CAkBd,GAAC,CAAAnO,IAAA,yBAAA77B,MAED,WAA6F,IAAA46E,EAAtEv7E,EAAOoiC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAK8Y,EAAOjX,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EAAEi2C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAc/E,GAbI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiBhlE,IACjBw3C,EAAWx3C,EACXA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,KAC/BykC,GAAAA,SAAehlE,KACtBq5C,EAAUr5C,EACVA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,MAGrCiX,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKgvE,uBAAwBpsE,EAASq5C,GAEpE,IAAIj8C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,SACNyH,KAAM,UACN5G,MAAOX,IAEZw3C,GANH,CASA,IAAMt1B,EAAO,CACTqoD,cAAex0B,GAAM/1C,IAGzB64E,GAAkBz7E,KAAKw6E,QAAS,iCAAkC11D,EAAa,QAATq5D,EAAEliC,SAAO,IAAAkiC,OAAA,EAAPA,EAAS9gE,cAC5EmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GARrB,CASd,GAAC,CAAAnO,IAAA,uBAAA77B,MAED,WAA2F,IAAA66E,EAAtEx7E,EAAOoiC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAK8Y,EAAOjX,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EAAEi2C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAc7E,GAbI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiBhlE,IACjBw3C,EAAWx3C,EACXA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,KAC/BykC,GAAAA,SAAehlE,KACtBq5C,EAAUr5C,EACVA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,MAGrCiX,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKq+E,qBAAsBz7E,EAASq5C,GAElE,IAAIj8C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,SACNyH,KAAM,UACN5G,MAAOX,IAEZw3C,GANH,CASA,IAAMt1B,EAAO,CACTqoD,cAAex0B,GAAM/1C,IAGzB64E,GAAkBz7E,KAAKw6E,QAAS,0BAA2B11D,EAAa,QAATs5D,EAAEniC,SAAO,IAAAmiC,OAAA,EAAPA,EAAS/gE,cACrEmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GARrB,CASd,GAAC,CAAAnO,IAAA,aAAA77B,MAED,WAKE,IAAA+6E,EAJE17E,EAAOoiC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IACtChqB,EAAG6rB,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GACHiX,EAAOjX,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EACPi2C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAYR,GAVI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAEX2rB,GAAAA,SAAezuD,IAAQyuD,GAAAA,WAAiBhlE,KACxCq5C,EAAU9iC,EACVA,EAAMvW,EACNA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,MAGrCiX,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKu+E,WAAY37E,EAASuW,EAAK8iC,GAE7D,IAAIj8C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,SACNyH,KAAM,UACN5G,MAAOX,GAEX,CACIF,KAAM,MACNyH,KAAM,MACN5G,MAAO4V,EACP3W,IAAK,wBAET,CACIE,KAAM,MACNyH,KAAM,SACN5G,MAAO4V,EACP2hE,IAAK,IACLt4E,IAAK,yBAEV43C,GAnBH,CAuBA,IAAMt1B,EAAO,CACTqoD,cAAex0B,GAAM/1C,GACrBuW,IAAKkiE,GAASliE,IAGlBsiE,GAAkBz7E,KAAKw6E,QAAS,wBAAyB11D,EAAa,QAATw5D,EAAEriC,SAAO,IAAAqiC,OAAA,EAAPA,EAASjhE,cACnEmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GAVrB,CAWd,GAAC,CAAAnO,IAAA,OAAA77B,MAED,WAA4F,IAAAi7E,EAAAx+C,EAAA,KAAvF+vC,EAAK/qC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGy5C,EAAYz5C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAK8Y,EAAOjX,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EAAEi2C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAc9E,GAbI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiB6W,IACjBrkC,EAAWqkC,EACXA,EAAez+E,KAAKw6E,QAAQoC,eAAez5C,KACpCykC,GAAAA,SAAe6W,KACtBxiC,EAAUwiC,EACVA,EAAez+E,KAAKw6E,QAAQoC,eAAez5C,MAG1CiX,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKiwE,KAAMF,EAAO0O,EAAcxiC,GAE9D,IAAIj8C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,QACNyH,KAAM,UACN5G,MAAOk7E,GAEX,CACI/7E,KAAM,QACNyH,KAAM,iBACN5G,MAAOwsE,IAEZ31B,GAXH,CAcA,IAAIghC,GAAU,EA4Bd,GA1BArL,EAAQzwC,OAAOo/C,QAAQ3O,GAAOtpC,KAAI,SAAA+I,GAA4B,IAAA4Y,EAAAzQ,KAAAnI,EAAA,GAA1BmvC,EAASv2B,EAAA,GAAEpjD,EAASojD,EAAA,GACpD,IAAIgzB,EAGJ,OAAIp7C,EAAKi3C,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,KACNyH,KAAM,UACN5G,MAAOo7E,GAEX,CACIj8E,KAAM,aACNyH,KAAM,UACNwwE,GAAI,EACJp3E,MAAOyB,EACPxC,IAAK,uCAAyCm8E,KAG3CvD,GAAU,EAEd,CACHlL,aAAcv3B,GAAMgmC,GACpBxO,WAAYltC,SAASj+B,GAE7B,KAEIo2E,EAAJ,CAGA,IAAMt2D,EAAO,CACTqoD,cAAex0B,GAAM8lC,GACrB1O,MAAAA,GAGJ0L,GAAkBz7E,KAAKw6E,QAAS,sBAAuB11D,EAAa,QAAT05D,EAAEviC,SAAO,IAAAuiC,OAAA,EAAPA,EAASnhE,cACjEmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GATrB,CA/BA,CAyCd,GAAC,CAAAnO,IAAA,sBAAA77B,MAED,WAAqG,IAAA42C,EAAA,KAAjF8B,EAAOjX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGm4C,EAAan4C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAKiX,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAMvF,GALI4iC,GAAAA,WAAiBuV,KACjB/iC,EAAW+iC,EACXA,EAAgBn9E,KAAKw6E,QAAQoC,eAAez5C,MAG3CiX,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAK8wE,oBAAqB70B,EAASkhC,GAEjE,IAAM93D,EAAW42B,EAAQ52B,UAAYrlB,KAAKw6E,QAAQn1D,SAC9Cu5D,EAAoB3iC,EAAQ2iC,kBACC,iBAAtBA,GAAmCA,IAC1CA,EAAoB,KAExB,IAAMpoD,EAAoBylB,EAAQzlB,mBAAqB,IACjDF,EAAY2lB,EAAQ3lB,WAAa,EACjCuoD,EAAa5iC,EAAQ4iC,WACrB3qD,EAAU+nB,EAAQ/nB,SAAW+nB,EAAQgyB,SAE3C6Q,EAKI7iC,EAJA/lB,IAAAA,OAAG,IAAA4oD,GAAQA,EAAAC,EAIX9iC,EAHA7lB,SAAAA,OAAQ,IAAA2oD,GAAQA,EAAAC,EAGhB/iC,EAFAw3B,WAAAA,OAAU,IAAAuL,EAAG,GAAEA,EAAAC,EAEfhjC,EADAv5C,KAAAA,OAAI,IAAAu8E,EAAG,GAAEA,EAGb,GAAI/oD,GAAO0xC,GAAAA,SAAe1xC,GACtB,IACIA,EAAMsO,KAAKwd,MAAM9rB,EACrB,CAAE,MAAAgpD,GACE,OAAO9kC,EAAS,+BACpB,CAMJ,GAHIlkB,EAAI+6C,SACJ/6C,EAAMA,EAAI+6C,SAETrJ,GAAAA,QAAc1xC,GACf,OAAOkkB,EAAS,gCAGpB,IAAM1hB,EAAUxC,EAAIipD,MAAK,SAAA3uC,GACrB,MAAqB,gBAAdA,EAAKrmC,MAA0B,YAAcqmC,EAAKgwB,gBAAgBjtB,aAC7E,IAEA,IAAIvzC,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,WACNyH,KAAM,MACN5G,MAAO6yB,GAEX,CACI1zB,KAAM,WACNyH,KAAM,UACN5G,MAAO8hB,EACPs1D,GAAI,GAER,CACIj4E,KAAM,YACNyH,KAAM,UACN5G,MAAO+yB,EACPukD,IAAK,GAET,CACIn4E,KAAM,oBACNyH,KAAM,UACN5G,MAAOq7E,EACP/D,IAAK,EACLC,IAAK,KAET,CACIp4E,KAAM,oBACNyH,KAAM,UACN5G,MAAOizB,EACPqkD,IAAK,EACLC,IAAK,KAET,CACIp4E,KAAM,aACNyH,KAAM,QACN5G,MAAOkwE,GAEX,CACI/wE,KAAM,SACNyH,KAAM,UACN5G,MAAO45E,GAEX,CACIz6E,KAAM,aACNyH,KAAM,UACN5G,MAAOs7E,EACPhE,IAAK,EACLG,UAAU,GAEd,CACIt4E,KAAM,UACNyH,KAAM,UACN5G,MAAO2wB,EACP2mD,IAAK,EACLG,UAAU,IAEf5gC,GAxDH,CA2DA,IAAK1hB,IAAYpC,EAAY,GAAKuoD,EAAa,GAC3C,OAAOzkC,EAAS,oFAGpB,GAAI6B,EAAQmjC,cAAgBxX,GAAAA,SAAe3rB,EAAQmjC,cAC/C3L,EAAax3B,EAAQmjC,aAAaj+C,QAAQ,QAAS,SAChD,GAAI8a,EAAQojC,UACf5L,EAAa5I,GAAoB5uB,EAAQojC,UAAWpjC,EAAQqjC,cAAcn+C,QAAQ,QAAS,QACxF,CACH,IAAIo+C,EAAoBrpD,EAAIspD,MACxB,SAAC1hB,GACG,MAAmB,gBAAZA,EAAG3zD,IACd,IAGJ,QAAiC,IAAtBo1E,GAAqCA,EAAmB,CAC/D,IAAMj7B,EAAW,IAAIJ,GAAAA,SACfnd,EAAQ,GACR6B,EAAS,GAGf,GAFA22C,EAAoBA,EAAkBngB,OAElCqU,EAAWpvE,QAAUk7E,EAAkBl7E,OACvC,OAAO+1C,EAAS,qBAAD7W,OAAsBg8C,EAAkBl7E,OAAM,SAAAk/B,OAAQkwC,EAAWpvE,OAAM,cAE1F,IAAK,IAAIu8B,EAAI,EAAGA,EAAI6yC,EAAWpvE,OAAQu8B,IAAK,CACxC,IAAIz2B,EAAOo1E,EAAkB3+C,GAAGz2B,KAC5B5G,EAAQkwE,EAAW7yC,GAEvB,IAAKz2B,IAASy9D,GAAAA,SAAez9D,KAAUA,EAAK9F,OACxC,OAAO+1C,EAAS,oCAAsCjwC,GAE7C,YAATA,EACA5G,EAAQo1C,GAAMp1C,GAAO49B,QAAQ4C,EAAsB,MACL,aAAzC55B,EAAKy4B,MAAM,uBAAuB,GACvCr/B,EAAQA,EAAMkjC,KAAI,SAAA9D,GAAC,OAAIgW,GAAMhW,GAAGxB,QAAQ4C,EAAsB,KAAK,IAC9D,WAAWqB,KAAKj7B,KACrBA,EAAOA,EAAKg3B,QAAQ,WAAY,YAGpC4F,EAAMnC,KAAKz6B,GACXy+B,EAAOhE,KAAKrhC,EAChB,CAEA,IACIkwE,EAAanvB,EAASpkB,OAAO6G,EAAO6B,GAAQzH,QAAQ,QAAS,GACjE,CAAE,MAAOm2C,GACL,OAAOl9B,EAASk9B,EACpB,CACJ,MAAO7D,EAAa,EACxB,CAEA,IAAMn6B,EAAO,CACT6zB,cAAex0B,GAAMwkC,GACrB/G,UAAWnzC,SAAS5d,GACpB0oD,WAAY9qC,SAAS3M,GACrBk6C,8BAA+BoO,EAC/BnO,oBAAqBj6C,EACrBN,IAAKsO,KAAKC,UAAUvO,GACpBE,SAAAA,EACAtZ,UAAW22D,EACX/wE,KAAAA,GAIAklE,GAAAA,qBAA2BiX,KAC3BvlC,EAAK00B,iBAAmB/qC,SAAS47C,IACjCjX,GAAAA,qBAA2B1zC,KAC3BolB,EAAK20B,SAAWhrC,SAAS/O,IAE7B,IAAI+T,SAAQ,SAACE,GAAY,IAAAs3C,EACXzS,EAAW,CAAC,EAClBA,EAASG,cAAgB7zB,EAAK6zB,cAC1BvF,GAAAA,qBAA2BtuB,EAAK00B,oBAChChB,EAASgB,iBAAmB10B,EAAK00B,kBAEjCpG,GAAAA,qBAA2BtuB,EAAK20B,YAChCjB,EAASiB,SAAW30B,EAAK20B,UAE7B,IAAMqC,EAAetD,EAASsD,aAAe,CAAC,EAE1Ch3B,EAAKpjB,IACLo6C,EAAap6C,IAAM,CACf+6C,OAAQzsC,KAAKwd,MAAM1I,EAAKpjB,MAG5Bo6C,EAAap6C,IAAM,CAAC,EAEpBojB,EAAKy0B,aACLuC,EAAavC,WAAaz0B,EAAKy0B,YAEnCuC,EAAaE,8BAAgCl3B,EAAKk3B,8BAClDF,EAAaG,oBAAsBn3B,EAAKm3B,oBACxCH,EAAaO,eAAoC,QAAtB4O,EAAGnmC,EAAKu3B,sBAAc,IAAA4O,EAAAA,EAAInmC,EAAK6zB,cACtD7zB,EAAKljB,SAAWkjB,EAAKx8B,YACrBwzD,EAAal6C,UAAYkjB,EAAKljB,SAAWkjB,EAAKx8B,WAAWqkB,QAAQ,MAAO,KAExEymC,GAAAA,qBAA2BtuB,EAAK52C,QAChC4tE,EAAa5tE,KAAO42C,EAAK52C,MAG7BylC,EAAQ6kC,EACZ,IACCxpB,KAAI,eAAA0F,EAAAzhB,IAAAC,IAAAA,MAAC,SAAAC,EAAMqlC,GAAQ,IAAA3oB,EAAA,OAAA3c,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACCyzC,GAAkBthC,EAAKqgC,QAAS,sBAAuBxN,EAAU/wB,aAAO,EAAPA,EAAS5+B,aAAc,CAAE+4D,UAAW98B,EAAK88B,YAAY,OACjE,OADhE/xB,EAAEvc,EAAAM,MACLwlC,kBA9lCS3lD,EA8lC6BqxB,EAAK6zB,cA9lCpBrG,EA8lCmCziB,EAAGyiB,KA7lCrE,KAAOr0B,GAAUszB,OAAOtwD,KAAKqxD,EAAO7+C,EAAc,QAAQya,WAAWqI,UAAU,GAAGhI,MAAM,KA6lCb+E,EAAAO,OAAA,SAC/Dgc,GAAE,wBAAAvc,EAAAW,OA/lCzB,IAA4BxgB,EAAc6+C,CA+lCjB,GAAAn/B,EAAA,KACZ,gBAAAwnB,GAAA,OAAAjG,EAAA1hB,MAAA,KAAAxC,UAAA,EAJI,IAKJwe,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GA9GrB,CA+Gd,GAAC,CAAAnO,IAAA,uBAAA77B,MAED,WAAgC,QAAAm8E,EAAAzoC,EAAAjS,UAAA3gC,OAAR2xD,EAAM,IAAAp0B,MAAAqV,GAAAf,EAAA,EAAAA,EAAAe,EAAAf,IAAN8f,EAAM9f,GAAAlR,UAAAkR,GAQ1B,MAPyB,WAArBhP,IAAO8uB,EAAO,MACdA,EAAO,GAAK,CACR3wC,SAAU2wC,EAAO,GACjB1/B,UAAW0/B,EAAO,IAEtBA,EAAO+O,OAAO,EAAG,IAER,QAAb2a,EAAI1pB,EAAO,UAAE,IAAA0pB,GAATA,EAAWC,QACJ3/E,KAAK4/E,2BAA0Bp4C,MAA/BxnC,KAAmCg2D,GAEvCh2D,KAAK6/E,sBAAqBr4C,MAA1BxnC,KAA8Bg2D,EACzC,GAAC,CAAA52B,IAAA,0BAAA77B,MAED,WAAmC,QAAAy2C,EAAAhV,UAAA3gC,OAAR2xD,EAAM,IAAAp0B,MAAAoY,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAN+b,EAAM/b,GAAAjV,UAAAiV,GAE7B,OADA+b,EAAO,GAAG8pB,aAAc,EACjB9/E,KAAK6/E,sBAAqBr4C,MAA1BxnC,KAA8Bg2D,EACzC,GAAC,CAAA52B,IAAA,mCAAA77B,MAED,WAA4C,QAAAw8E,EAAA/6C,UAAA3gC,OAAR2xD,EAAM,IAAAp0B,MAAAm+C,GAAA5pB,EAAA,EAAAA,EAAA4pB,EAAA5pB,IAANH,EAAMG,GAAAnxB,UAAAmxB,GAGtC,OAFAH,EAAO,GAAG8pB,aAAc,EACxB9pB,EAAO,GAAGgqB,WAAY,EACfhgF,KAAK6/E,sBAAqBr4C,MAA1BxnC,KAA8Bg2D,EACzC,GAAC,CAAA52B,IAAA,iBAAA77B,MAED,WAA0B,QAAA08E,EAAAj7C,UAAA3gC,OAAR2xD,EAAM,IAAAp0B,MAAAq+C,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANlqB,EAAMkqB,GAAAl7C,UAAAk7C,GAEpB,OADAlqB,EAAO,GAAGmqB,gBAAiB,EACpBngF,KAAK6/E,sBAAqBr4C,MAA1BxnC,KAA8Bg2D,EACzC,GAAC,CAAA52B,IAAA,yBAAA77B,OAAAo5E,EAAAl1C,IAAAC,IAAAA,MAED,SAAA+b,IAAA,IAAAxH,EAAA9b,EAAAlY,EAAAiM,EAAA2qD,EAAAuB,EAAA9pD,EAAAgjB,EAAA+mC,EAAArlC,EAAA,KAAAslC,EAAAt7C,UAAA,OAAA0C,IAAAA,MAAA,SAAAgc,GAAA,cAAAA,EAAA3b,KAAA2b,EAAA1b,MAAA,OAyDiE,OAvDzD7H,GAFqB8b,EAAOqkC,EAAAj8E,OAAA,QAAAF,IAAAm8E,EAAA,GAAAA,EAAA,GAAG,CAAC,GAEhCngD,MACAlY,EAIAg0B,EAJAh0B,aACAiM,EAGA+nB,EAHA/nB,QACA2qD,EAEA5iC,EAFA4iC,WAAUuB,EAEVnkC,EADA3lB,UAAAA,OAAS,IAAA8pD,EAAG,EAACA,EAGjBpgF,KAAKi3E,UAAU6F,SAAS,CACpB,CACIp6E,KAAM,QACNyH,KAAM,mBACN5G,MAAO48B,GAEX,CACIz9B,KAAM,YACNyH,KAAM,UACN5G,MAAO+yB,EACPukD,IAAK,GAET,CACIn4E,KAAM,QACNyH,KAAM,UACN5G,MAAO0kB,GAEX,CACIvlB,KAAM,aACNyH,KAAM,UACN5G,MAAOs7E,EACPhE,IAAK,EACLG,UAAU,GAEd,CACIt4E,KAAM,UACNyH,KAAM,UACN5G,MAAO2wB,EACP2mD,IAAK,EACLG,UAAU,KAEf,SAAC14C,GACA,MAAM,IAAIF,MAAME,EACpB,IAEMgX,EAAO,CACTx0B,KAAMqb,EACNgtC,cAAex0B,GAAM1wB,GACrB8lD,WAAYz3C,GAGZpC,IACAolB,EAAK20B,SAAW/5C,GAEhB2qD,IACAvlC,EAAK00B,iBAAmB6Q,GAGtBwB,EAAW,SAAH98C,OAAY0Y,EAAQ+jC,UAAY,WAAa,GAAE,mBAAAt8B,EAAArb,OAAA,SACtDroC,KAAKw6E,QAAQv+B,EAAQ+jC,UAAY,eAAiB,YACpD1F,QAAQ+F,EAAU/mC,EAAM,QACxBkK,MAAK,SAAAgB,GACF,GAAIA,EAAYpiB,MACZ,MAAM,IAAIA,MAAMoiB,EAAYpiB,OAEhC,GAAIoiB,EAAYvb,QAAUub,EAAYvb,OAAOhlC,QACzC,MAAM,IAAIm+B,MACN4Y,EAAKw/B,QAAQgB,OAAOh3B,EAAYvb,OAAOhlC,UAG/C,OAAOugD,CACX,KAAE,wBAAAd,EAAAjb,OAAA,GAAAgb,EAAA,UACT,kBAAAk5B,EAAAn1C,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,+BAAA77B,MAED,SACIyyB,EACAuqD,EACAtkC,EACAw3B,EACA0J,EACA0B,EACA3qD,EACAoC,EACAjR,GAEA,IAAMi0B,EAAO,CACTs0B,iBAAkBj1B,GAAM3iB,GACxBm3C,cAAex0B,GAAMwkC,IAIzB,GAAIoD,GAAoB3Y,GAAAA,SAAe2Y,GAAmB,CAEtD,GADAA,EAAmBA,EAAiBp/C,QAAQ,QAAU,IAClDsyC,EAAWpvE,OAAQ,CAKnB,IAJA,IAAMigD,EAAW,IAAIJ,GAAAA,SACjBnd,EAAQ,GACN6B,EAAS,GAENhI,EAAI,EAAGA,EAAI6yC,EAAWpvE,OAAQu8B,IAAK,CACxC,IAAA4/C,EAAoB/M,EAAW7yC,GAA1Bz2B,EAAIq2E,EAAJr2E,KAAM5G,EAAKi9E,EAALj9E,MAEX,IAAK4G,IAASy9D,GAAAA,SAAez9D,KAAUA,EAAK9F,OACxC,OAAO+1C,SAAS,oCAAsCjwC,GAE7C,YAATA,EACA5G,EAAQo1C,GAAMp1C,GAAO49B,QAAQ4C,EAAsB,MACL,aAAzC55B,EAAKy4B,MAAM,uBAAuB,KACvCr/B,EAAQA,EAAMkjC,KAAI,SAAA9D,GAAC,OAAIgW,GAAMhW,GAAGxB,QAAQ4C,EAAsB,KAAK,KAEvEgD,EAAMnC,KAAKz6B,GACXy+B,EAAOhE,KAAKrhC,EAChB,CAEA,IAEIwjC,EAAQA,EAAMN,KAAI,SAAAt8B,GAId,MAHI,WAAWi7B,KAAKj7B,KAChBA,EAAOA,EAAKg3B,QAAQ,WAAY,YAE7Bh3B,CACX,IAEAspE,EAAanvB,EAASpkB,OAAO6G,EAAO6B,GAAQzH,QAAQ,QAAS,GAEjE,CAAE,MAAOm2C,GACL,OAAOl9B,SAASk9B,EACpB,CACJ,MAAO7D,EAAa,GAGhBx3B,EAAQojC,YACR5L,EAAa5I,GAAoB5uB,EAAQojC,UAAWpjC,EAAQqjC,cAAcn+C,QAAQ,QAAS,KAG3F8a,EAAQwkC,mBAAqB7Y,GAAAA,SAAe3rB,EAAQwkC,qBACpDhN,EAAax3B,EAAQwkC,kBAAkBt/C,QAAQ,QAAS,KAGxD8a,EAAQmjC,cAAgBxX,GAAAA,SAAe3rB,EAAQmjC,gBAC/C3L,EAAax3B,EAAQmjC,aAAaj+C,QAAQ,QAAS,KAGvDmY,EAAKw0B,kBAAoByS,EACzBjnC,EAAKx8B,UAAY22D,CACrB,MAAWx3B,EAAQ9b,QACfmZ,EAAKx0B,KAAOm3B,EAAQ9b,OAiBxB,OAdAmZ,EAAKy0B,WAAa9qC,SAAS3M,GACvBsxC,GAAAA,qBAA2BiX,KAC3BvlC,EAAK00B,iBAAmB/qC,SAAS47C,IACjCjX,GAAAA,qBAA2B1zC,KAC3BolB,EAAK20B,SAAWhrC,SAAS/O,IAEvB+nB,EAAQ6jC,aAAe7jC,EAAQkkC,iBACjC7mC,EAAK88B,UAAYnzC,SAAS5d,IAG1B42B,EAAQ5+B,eACRi8B,EAAK+zB,cAAgBpxB,EAAQ5+B,cAG1Bi8B,CACX,GAAC,CAAAla,IAAA,6BAAA77B,MAED,SACIyyB,EACAuqD,GAKF,IAJEtkC,EAAOjX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,CAAC,EACXyuC,EAAUzuC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,GACbm4C,EAAan4C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAC5CiX,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAaR,GAVI4iC,GAAAA,WAAiBuV,KACjB/iC,EAAW+iC,EACXA,EAAgBn9E,KAAKw6E,QAAQoC,eAAez5C,KAG5CykC,GAAAA,WAAiB6L,KACjBr5B,EAAWq5B,EACXA,EAAa,KAGZr5B,EACD,OAAOp6C,KAAKq8E,cACRr8E,KAAK4/E,2BACL5pD,EACAuqD,EACAtkC,EACAw3B,EACA0J,GAIR,IAAAuD,EAKIphD,OAAOqK,OAAO,CACdrT,UAAW,EACXjR,SAAUrlB,KAAKw6E,QAAQn1D,UACxB42B,GAPC4iC,EAAU6B,EAAV7B,WACA3qD,EAAOwsD,EAAPxsD,QACAoC,EAASoqD,EAATpqD,UACAjR,EAAQq7D,EAARr7D,SAMJ,IAAIrlB,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,WACNyH,KAAM,UACN5G,MAAO8hB,EACPs1D,GAAI,GAER,CACIj4E,KAAM,YACNyH,KAAM,UACN5G,MAAO+yB,EACPukD,IAAK,GAET,CACIn4E,KAAM,aACNyH,KAAM,QACN5G,MAAOkwE,GAEX,CACI/wE,KAAM,WACNyH,KAAM,UACN5G,MAAOyyB,GAEX,CACItzB,KAAM,SACNyH,KAAM,UACN5G,MAAO45E,EACPnC,UAAU,GAEd,CACIt4E,KAAM,aACNyH,KAAM,UACN5G,MAAOs7E,EACPhE,IAAK,EACLG,UAAU,GAEd,CACIt4E,KAAM,UACNyH,KAAM,UACN5G,MAAO2wB,EACP2mD,IAAK,EACLG,UAAU,IAEf5gC,GA3CH,CA8CA,IAAMd,EAAOt5C,KAAK2gF,6BACd3qD,EACAuqD,EACAtkC,EACAw3B,EACA0J,EACA0B,EACA3qD,EACAoC,EACAjR,GAGAi0B,EAAKw0B,oBACLx0B,EAAKx0B,KAAO2tB,GAAUszB,OAAOtwD,KAAK6jC,EAAKw0B,kBAAmB,UAAUprC,WAAWqI,UAAU,EAAG,IAAMuO,EAAKx8B,WAE3G,IAAMvZ,EAAQ,CACVuhB,KAAMw0B,EAAKx0B,KACXqoD,cAAe7zB,EAAK6zB,cACpBS,iBAAkBt0B,EAAKs0B,kBAEvBt0B,EAAKy0B,aACLxqE,EAAMwqE,WAAaz0B,EAAKy0B,YAExBz0B,EAAK00B,mBACLzqE,EAAMyqE,iBAAmB10B,EAAK00B,kBAE9B10B,EAAK20B,WACL1qE,EAAM0qE,SAAW30B,EAAK20B,UAE1BwN,GACIz7E,KAAKw6E,QACL,uBACAj3E,EACA04C,EAAQ5+B,aACR,CACI+4D,UAAW98B,EAAK88B,YAEtB5yB,MAAK,SAAAgB,GACHpK,EAAS,KAAM,CACXnR,OAAQ,CACJA,QAAQ,GAEZub,YAAAA,GAER,IAAE,OAAO,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GA9CnB,CA+Cd,GAAC,CAAAnO,IAAA,wBAAA77B,MAED,SACIyyB,EACAuqD,GAKF,IAJEtkC,EAAOjX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,CAAC,EACXyuC,EAAUzuC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,GACbm4C,EAAan4C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAC5CiX,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAaR,GAVI4iC,GAAAA,WAAiBuV,KACjB/iC,EAAW+iC,EACXA,EAAgBn9E,KAAKw6E,QAAQoC,eAAez5C,KAG5CykC,GAAAA,WAAiB6L,KACjBr5B,EAAWq5B,EACXA,EAAa,KAGZr5B,EACD,OAAOp6C,KAAKq8E,cACRr8E,KAAK6/E,sBACL7pD,EACAuqD,EACAtkC,EACAw3B,EACA0J,GAIR,IAAAyD,EAKIthD,OAAOqK,OAAO,CACdrT,UAAW,EACXjR,SAAUrlB,KAAKw6E,QAAQn1D,UACxB42B,GAPC4iC,EAAU+B,EAAV/B,WACA3qD,EAAO0sD,EAAP1sD,QACAoC,EAASsqD,EAATtqD,UACAjR,EAAQu7D,EAARv7D,SAMJ,IAAIrlB,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,WACNyH,KAAM,UACN5G,MAAO8hB,EACPs1D,GAAI,GAER,CACIj4E,KAAM,YACNyH,KAAM,UACN5G,MAAO+yB,EACPukD,IAAK,GAET,CACIn4E,KAAM,aACNyH,KAAM,QACN5G,MAAOkwE,GAEX,CACI/wE,KAAM,WACNyH,KAAM,UACN5G,MAAOyyB,GAEX,CACItzB,KAAM,SACNyH,KAAM,UACN5G,MAAO45E,EACPnC,UAAU,GAEd,CACIt4E,KAAM,aACNyH,KAAM,UACN5G,MAAOs7E,EACPhE,IAAK,EACLG,UAAU,GAEd,CACIt4E,KAAM,UACNyH,KAAM,UACN5G,MAAO2wB,EACP2mD,IAAK,EACLG,UAAU,IAEf5gC,GA3CH,CA8CA,IAAMd,EAAOt5C,KAAK2gF,6BACd3qD,EACAuqD,EACAtkC,EACAw3B,EACA0J,EACA0B,EACA3qD,EACAoC,EACAjR,GAGAg7D,EAAW,uBACZpkC,EAAQ6jC,YACPO,EAAW,0BACJpkC,EAAQkkC,iBACfE,EAAW,kBAGfA,EAAW,SAAH98C,OAAY0Y,EAAQ+jC,UAAY,WAAa,GAAE,KAAAz8C,OAAI88C,GAC3DrgF,KAAKw6E,QAAQv+B,EAAQ+jC,UAAY,eAAiB,YAAY1F,QAAQ+F,EAAU/mC,EAAM,QAAQkK,MAAK,SAAAgB,GAAW,OA1iDtH,SAA2CA,EAAa1/B,EAAMm3B,EAAS7B,GACnE,OAAIoK,EAAYpiB,MACLgY,EAASoK,EAAYpiB,OAE5BoiB,EAAYvb,QAAUub,EAAYvb,OAAOhlC,QAClCm2C,EACHr6C,GAAKy6E,QAAQgB,OAAOh3B,EAAYvb,OAAOhlC,UAI1Cg4C,EAAQ6jC,aAAe7jC,EAAQkkC,gBACbrJ,GAAgBtyB,EAAYA,YAAa1/B,EAAMm3B,GAM/D7B,EAAS,KAAMoK,GAFXpK,EAAS,sBAGxB,CAwhD0HymC,CAAkCr8B,EAAalL,EAAM2C,EAAS7B,EAAS,IAAC,OAAO,SAAA7M,GAAG,OAAI6M,EAAS7M,EAAI,GAtB3M,CAuBd,GAAC,CAAAnO,IAAA,WAAA77B,MAED,SAASyyB,GAA4F,IAAA8qD,EAA3E74D,EAAY+c,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAK8Y,EAAOjX,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EAAEi2C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAcvF,GAbI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiB3/C,IACjBmyB,EAAWnyB,EACXA,EAAejoB,KAAKw6E,QAAQoC,eAAez5C,KACpCykC,GAAAA,SAAe3/C,KACtBg0B,EAAUh0B,EACVA,EAAejoB,KAAKw6E,QAAQoC,eAAez5C,MAG1CiX,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAK+gF,SAAU/qD,EAAiB/N,EAAcg0B,GAE5E,IAAKj8C,KAAKw6E,QAAQS,UAAUjlD,GACxB,OAAOokB,EAAS,qCAEpB,IAAKp6C,KAAKw6E,QAAQS,UAAUhzD,GACxB,OAAOmyB,EAAS,kCAEpB,IAAMt1B,EAAO,CACT8oD,iBAAkBj1B,GAAM3iB,GACxBm3C,cAAex0B,GAAM1wB,IAGrBjoB,KAAKw6E,QAAQwG,IAAIC,MAAMC,UAAUlrD,WAC1Bh2B,KAAKw6E,QAAQwG,IAAIC,MAAMC,UAAUlrD,GAG5CylD,GAAkBz7E,KAAKw6E,QAAS,mBAAoB11D,EAAa,QAATg8D,EAAE7kC,SAAO,IAAA6kC,OAAA,EAAPA,EAASzjE,cAC9DmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GAEnC,GAAC,CAAAnO,IAAA,kBAAA77B,MAED,SAAgBm6B,GAAsF,IAAAyjD,EAA3El5D,EAAY+c,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAK8Y,EAAOjX,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EAAEi2C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAcxF,GAbI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiB3/C,IACjBmyB,EAAWnyB,EACXA,EAAejoB,KAAKw6E,QAAQoC,eAAez5C,KACpCykC,GAAAA,SAAe3/C,KACtBg0B,EAAUh0B,EACVA,EAAejoB,KAAKw6E,QAAQoC,eAAez5C,MAG1CiX,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKohF,gBAAiB1jD,EAAWzV,EAAcg0B,GAE7E,IAAK2rB,GAAAA,qBAA2BlqC,GAC5B,OAAO0c,EAAS,8BAEpB,IAAKwtB,GAAAA,UAAgBlqC,IAAcA,EAAY,GAAKA,EAAY,IAC5D,OAAO0c,EAAS,kDAEpB,IAAKp6C,KAAKw6E,QAAQS,UAAUhzD,GACxB,OAAOmyB,EAAS,kCAEpB,IAAMt1B,EAAO,CACT4Y,UAAWuF,SAASvF,GACpByvC,cAAex0B,GAAM1wB,IAGzBwzD,GAAkBz7E,KAAKw6E,QAAS,0BAA2B11D,EAAa,QAATq8D,EAAEllC,SAAO,IAAAklC,OAAA,EAAPA,EAAS9jE,cACrEmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GACnC,GAAC,CAAAnO,IAAA,cAAA77B,MAED,WAA6F,IAAjF04C,EAAOjX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGm4C,EAAan4C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAKiX,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAM/E,GALI4iC,GAAAA,WAAiBuV,KACjB/iC,EAAW+iC,EACXA,EAAgBn9E,KAAKw6E,QAAQoC,eAAez5C,MAG3CiX,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKqhF,YAAaplC,EAASkhC,GAEzD,IAAAmE,EAiBIrlC,EAhBAv5C,KAAAA,OAAI,IAAA4+E,GAAQA,EAAAC,EAgBZtlC,EAfAulC,aAAAA,OAAY,IAAAD,GAAQA,EAAAE,EAepBxlC,EAdAvxB,YAAAA,OAAW,IAAA+2D,EAAG,GAAEA,EAAAC,EAchBzlC,EAbA9iC,IAAAA,OAAG,IAAAuoE,GAAQA,EAAAC,EAaX1lC,EAZA/xB,YAAAA,OAAW,IAAAy3D,EAAG,EAACA,EAAAC,EAYf3lC,EAXA4lC,SAAAA,OAAQ,IAAAD,EAAG,EAACA,EAAAE,EAWZ7lC,EAVA8lC,WAAAA,OAAU,IAAAD,EAAG,EAACA,EAAAE,EAUd/lC,EATAgmC,UAAAA,OAAS,IAAAD,EAAGl8C,KAAKoxB,MAAK8qB,EAAAE,EAStBjmC,EARAkmC,QAAAA,OAAO,IAAAD,GAAQA,EAAAE,EAQfnmC,EAPAomC,cAAAA,OAAa,IAAAD,EAAG,EAACA,EAAAE,EAOjBrmC,EANAsmC,mBAAAA,OAAkB,IAAAD,EAAG,EAACA,EAAAE,EAMtBvmC,EALAnvB,aAAAA,OAAY,IAAA01D,EAAG,EAACA,EAAAC,EAKhBxmC,EAJArsB,eAAAA,OAAc,IAAA6yD,EAAG,EAACA,EAElBh4D,EAEAwxB,EAFAxxB,UACAL,EACA6xB,EADA7xB,UAGJ,IAAIpqB,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,gBACNyH,KAAM,mBACN5G,MAAO2mB,GAEX,CACIxnB,KAAM,YACNyH,KAAM,mBACN5G,MAAOs+E,GAEX,CACIn/E,KAAM,cACNyH,KAAM,mBACN5G,MAAOw+E,GAEX,CACIr/E,KAAM,qBACNyH,KAAM,SACN5G,MAAOi+E,EACP1G,IAAK,GACLH,GAAI,GAER,CACIj4E,KAAM,aACNyH,KAAM,mBACN5G,MAAOb,GAEX,CACIA,KAAM,oBACNyH,KAAM,SACN5G,MAAOmnB,EACPowD,IAAK,KAET,CACIp4E,KAAM,YACNyH,KAAM,MACN5G,MAAO4V,GAEX,CACIzW,KAAM,YACNyH,KAAM,SACN5G,MAAO4V,EACP2hE,IAAK,KAET,CACIp4E,KAAM,SACNyH,KAAM,UACN5G,MAAO45E,GAEX,CACIz6E,KAAM,uBACNyH,KAAM,UACN5G,MAAO0+E,EACPpH,IAAK/0C,KAAKoxB,OAEd,CACIx0D,KAAM,qBACNyH,KAAM,UACN5G,MAAO4+E,EACPxH,GAAIsH,GAER,CACIv/E,KAAM,gBACNyH,KAAM,UACN5G,MAAOupB,EACP+tD,IAAK,GAET,CACIn4E,KAAM,kBACNyH,KAAM,UACN5G,MAAOqsB,EACPirD,IAAK,IAEVzgC,GA1EH,CA6EA,GAAIwtB,GAAAA,qBAA2Bn9C,MAAgBm9C,GAAAA,UAAgBn9C,IAAcA,GAAa,GACtF,OAAO2vB,EAAS,uDAEpB,GAAIwtB,GAAAA,qBAA2Bx9C,MAAgBw9C,GAAAA,UAAgBx9C,IAAcA,EAAY,GAAKA,EAAY,GACtG,OAAOgwB,EAAS,sDAEpB,IAAMt1B,EAAO,CACTqoD,cAAex0B,GAAMwkC,GACrBz6E,KAAM24E,GAAS34E,GACfsnB,KAAMqxD,GAASmG,GACf92D,YAAa2wD,GAAS3wD,GACtBvR,IAAKkiE,GAASliE,GACd04D,aAAc5uC,SAAS/Y,GACvB4nD,QAAS7uC,SAAS4+C,GAClBx3D,IAAK4Y,SAAS8+C,GACdhQ,WAAY9uC,SAASg/C,GACrBjQ,SAAU/uC,SAASk/C,GACnB1P,cAAe,CAAC,CACZG,cAAe3vC,SAASnW,GACxB+lD,YAAa5vC,SAASrT,MAG9B,CAAC,OAAQ,OAAQ,cAAe,OAAO8pB,SAAQ,SAACta,GACvCta,EAAKsa,WACCta,EAAKsa,EAEpB,IACM6D,SAASnW,GAAgB,UACpBhI,EAAK2tD,cAEZ4P,IAAkBvhD,MAAMmC,SAASo/C,KAAmBp/C,SAASo/C,IAAkB,IAC/Ev9D,EAAKmtD,qBAAuBhvC,SAASo/C,IAErCE,IAAuBzhD,MAAMmC,SAASs/C,KAAwBt/C,SAASs/C,IAAuB,IAC9Fz9D,EAAKotD,4BAA8BjvC,SAASs/C,IAE5Cn4D,IAAc0W,MAAMmC,SAAS7Y,MAC7BtF,EAAKsF,UAAY6Y,SAAS7Y,IAE1BK,IAAcqW,MAAMmC,SAASxY,MAC7B3F,EAAK0tD,WAAavvC,SAASxY,IAG/BgxD,GAAkBz7E,KAAKw6E,QAAS,qBAAsB11D,EAAMm3B,aAAO,EAAPA,EAAS5+B,cAChEmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GA/CrB,CAgDd,GAAC,CAAAnO,IAAA,gBAAA77B,MAED,SAAc4kB,GAAsF,IAAAu6D,EAAtE9/E,EAAOoiC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAK8Y,EAAOjX,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EAAEi2C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GActF,GAbI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiBhlE,IACjBw3C,EAAWx3C,EACXA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,KAC/BykC,GAAAA,SAAehlE,KACtBq5C,EAAUr5C,EACVA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,MAGrCiX,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAK2iF,cAAex6D,EAAgBvlB,EAASq5C,GAG3E,IAAIj8C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,UACNyH,KAAM,UACN5G,MAAO4kB,GAEX,CACIzlB,KAAM,SACNyH,KAAM,UACN5G,MAAOX,IAEZw3C,GAXH,CAcA,IAAMt1B,EAAO,CACTqoD,cAAex0B,GAAM/1C,GACrBowE,gBAAiBr6B,GAAMxwB,IAG3BszD,GAAkBz7E,KAAKw6E,QAAS,wBAAyB11D,EAAa,QAAT49D,EAAEzmC,SAAO,IAAAymC,OAAA,EAAPA,EAASrlE,cACnEmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GATrB,CAUd,GAAC,CAAAnO,IAAA,gBAAA77B,MAED,WAAyG,IAAAq/E,EAA3F34E,EAAW+6B,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAUpiC,EAAOoiC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAK8Y,EAAOjX,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EAAEi2C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAc3F,GAbI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiBhlE,IACjBw3C,EAAWx3C,EACXA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,KAC/BykC,GAAAA,SAAehlE,KACtBq5C,EAAUr5C,EACVA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,MAGrCiX,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAK6iF,cAAe54E,EAAarH,EAASq5C,GAGxE,IAAIj8C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,OACNyH,KAAM,SACN2wE,IAAK,IACLH,GAAI,EACJp3E,MAAO0G,EACPzH,IAAK,uBAET,CACIE,KAAM,SACNyH,KAAM,UACN5G,MAAOX,IAEZw3C,GAdH,CAiBA,IAAMt1B,EAAO,CACTquD,aAAckI,GAASpxE,GACvBkjE,cAAex0B,GAAM/1C,IAGzB64E,GAAkBz7E,KAAKw6E,QAAS,wBAAyB11D,EAAa,QAAT89D,EAAE3mC,SAAO,IAAA2mC,OAAA,EAAPA,EAASvlE,cACnEmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GATrB,CAUd,GAAC,CAAAnO,IAAA,eAAA77B,MAED,SAAauJ,GAAiF,IAAAg2E,EAAtElgF,EAAOoiC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAK8Y,EAAOjX,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EAAEi2C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAchF,GAbI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiBhlE,IACjBw3C,EAAWx3C,EACXA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,KAC/BykC,GAAAA,SAAehlE,KACtBq5C,EAAUr5C,EACVA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,MAGrCiX,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKmP,aAAcrC,EAAWlK,EAASq5C,GAOrE,GAJInvC,GAAa86D,GAAAA,SAAe96D,IAAcA,EAAU8pC,WAAW,QAC/D9pC,EAAYA,EAAUi2B,MAAM,KAG5B/iC,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,YACNyH,KAAM,MACN5G,MAAOuJ,GAEX,CACIpK,KAAM,YACNyH,KAAM,SACN2wE,IAAK,GACLD,IAAK,EACLt3E,MAAOuJ,GAEX,CACIpK,KAAM,SACNyH,KAAM,UACN5G,MAAOX,IAEZw3C,GAlBH,CAqBA,IAAMt1B,EAAO,CACTwuD,WAAYxmE,EACZqgE,cAAex0B,GAAM/1C,IAGzB64E,GAAkBz7E,KAAKw6E,QAAS,uBAAwB11D,EAAa,QAATg+D,EAAE7mC,SAAO,IAAA6mC,OAAA,EAAPA,EAASzlE,cAClEmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GATrB,CAUd,GAAC,CAAAnO,IAAA,cAAA77B,MAED,WAA6F,IAAAw/E,EAAjF9mC,EAAOjX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGm4C,EAAan4C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAKiX,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAS/E,GARI4iC,GAAAA,WAAiBuV,IACjB/iC,EAAW+iC,EACXA,EAAgBn9E,KAAKw6E,QAAQoC,eAAez5C,KACrCykC,GAAAA,SAAeuV,KACtBlhC,EAAUkhC,EACVA,EAAgBn9E,KAAKw6E,QAAQoC,eAAez5C,MAG3CiX,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKgjF,YAAa/mC,EAASkhC,GAEzD,IAAA8F,EAKIhnC,EAAOinC,EAAAD,EAJPv4D,YAAAA,OAAW,IAAAw4D,EAAG,GAAEA,EAAAC,EAAAF,EAChB9pE,IAAAA,OAAG,IAAAgqE,GAAQA,EAAAC,EAAAH,EACXZ,cAAAA,OAAa,IAAAe,EAAG,EAACA,EAAAC,EAAAJ,EACjBV,mBAAAA,OAAkB,IAAAc,EAAG,EAACA,EAI1B,IAAIrjF,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,oBACNyH,KAAM,SACN5G,MAAOmnB,EACPowD,IAAK,KAET,CACIp4E,KAAM,YACNyH,KAAM,MACN5G,MAAO4V,GAEX,CACIzW,KAAM,YACNyH,KAAM,SACN5G,MAAO4V,EACP2hE,IAAK,KAET,CACIp4E,KAAM,SACNyH,KAAM,UACN5G,MAAO45E,IAEZ/iC,GAvBH,CA0BA,IAAMt1B,EAAO,CACTqoD,cAAex0B,GAAMwkC,GACrBzyD,YAAa2wD,GAAS3wD,GACtBvR,IAAKkiE,GAASliE,IAGdkpE,IAAkBvhD,MAAMmC,SAASo/C,KAAmBp/C,SAASo/C,IAAkB,IAC/Ev9D,EAAK6wD,UAAY1yC,SAASo/C,IAE1BE,IAAuBzhD,MAAMmC,SAASs/C,KAAwBt/C,SAASs/C,IAAuB,IAC9Fz9D,EAAK8wD,iBAAmB3yC,SAASs/C,IAGrC9G,GAAkBz7E,KAAKw6E,QAAS,sBAAuB11D,EAAa,QAATi+D,EAAE9mC,SAAO,IAAA8mC,OAAA,EAAPA,EAAS1lE,cACjEmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GAjBrB,CAkBd,GAAC,CAAAnO,IAAA,YAAA77B,MAED,WACI,OAAOvD,KAAKi9E,UAASz1C,MAAdxnC,KAAIglC,UACf,GAAC,CAAA5F,IAAA,gBAAA77B,MAED,WACI,OAAOvD,KAAKq9E,cAAa71C,MAAlBxnC,KAAIglC,UACf,GAAC,CAAA5F,IAAA,cAAA77B,MAED,WACI,OAAOvD,KAAKqhF,YAAW75C,MAAhBxnC,KAAIglC,UACf,GAAC,CAAA5F,IAAA,cAAA77B,MAED,WACI,OAAOvD,KAAKgjF,YAAWx7C,MAAhBxnC,KAAIglC,UACf,GAEA,CAAA5F,IAAA,iBAAA77B,MAIA,WAA+G,IAAA+/E,EAAhG7P,EAAUzuC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAUm4C,EAAan4C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAK8Y,EAAOjX,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EAAEi2C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAcjG,GAbI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiBuV,IACjB/iC,EAAW+iC,EACXA,EAAgBn9E,KAAKw6E,QAAQoC,eAAez5C,KACrCykC,GAAAA,SAAeuV,KACtBlhC,EAAUkhC,EACVA,EAAgBn9E,KAAKw6E,QAAQoC,eAAez5C,MAG3CiX,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKujF,eAAgB9P,EAAY0J,EAAelhC,GAE9E,IAAIj8C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,SACNyH,KAAM,UACN5G,MAAO45E,IAEZ/iC,GANH,CASA,IAAMghC,EAAU,uCAEhB,IAAK3H,EACD,OAAOr5B,EAASghC,GAEfxT,GAAAA,QAAc6L,KACfA,EAAa,CAACA,IAAY,IAEEvmC,EAFFC,EAAAC,GAERqmC,GAAU,IAAhC,IAAAtmC,EAAAE,MAAAH,EAAAC,EAAArO,KAAAwO,MAAkC,KAAzBxwB,EAASowB,EAAA3pC,MACd,IAAKqkE,GAAAA,SAAe9qD,GAChB,OAAOs9B,EAASghC,EACxB,CAAC,OAAA7tC,GAAAJ,EAAAJ,EAAAQ,EAAA,SAAAJ,EAAAjpC,GAAA,CAED,IAAM4gB,EAAO,CACTqoD,cAAex0B,GAAMwkC,GACrB1J,WAAYA,GAGhBgI,GAAkBz7E,KAAKw6E,QAAS,yBAA0B11D,EAAa,QAATw+D,EAAErnC,SAAO,IAAAqnC,OAAA,EAAPA,EAASjmE,cACpEmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GAtBrB,CAuBd,GAEA,CAAAnO,IAAA,iBAAA77B,MAIA,WAA+G,IAAAigF,EAAhGC,EAAUz+C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAUm4C,EAAan4C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAK8Y,EAAOjX,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EAAEi2C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAcjG,GAbI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiBuV,IACjB/iC,EAAW+iC,EACXA,EAAgBn9E,KAAKw6E,QAAQoC,eAAez5C,KACrCykC,GAAAA,SAAeuV,KACtBlhC,EAAUkhC,EACVA,EAAgBn9E,KAAKw6E,QAAQoC,eAAez5C,MAG3CiX,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAK0jF,eAAgBD,EAAYtG,EAAelhC,GAE9E,IAAIj8C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,SACNyH,KAAM,UACN5G,MAAO45E,GAEX,CACIz6E,KAAM,aACNyH,KAAM,UACN5G,MAAOkgF,EACP5I,IAAK,IAEVzgC,GAZH,CAeA,IAAMt1B,EAAO,CACTqoD,cAAex0B,GAAMwkC,GACrBvJ,YAAa3wC,SAASwgD,IAG1BhI,GAAkBz7E,KAAKw6E,QAAS,yBAA0B11D,EAAa,QAAT0+D,EAAEvnC,SAAO,IAAAunC,OAAA,EAAPA,EAASnmE,cACpEmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GATrB,CAUd,GAEA,CAAAnO,IAAA,eAAA77B,MAIA,WAAgI,IAAAogF,EAAnHF,EAAUz+C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAU4+C,EAAU5+C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAUy5C,EAAYz5C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAK8Y,EAAOjX,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EAAEi2C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAclH,GAbI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiB6W,IACjBrkC,EAAWqkC,EACXA,EAAez+E,KAAKw6E,QAAQoC,eAAez5C,KACpCykC,GAAAA,SAAe6W,KACtBxiC,EAAUwiC,EACVA,EAAez+E,KAAKw6E,QAAQoC,eAAez5C,MAG1CiX,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAK6jF,aAAcJ,EAAYG,EAAYnF,EAAcxiC,GAEvF,IAAIj8C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,QACNyH,KAAM,UACN5G,MAAOk7E,GAEX,CACI/7E,KAAM,aACNyH,KAAM,UACN5G,MAAOkgF,EACP5I,IAAK,GAET,CACIn4E,KAAM,eACNyH,KAAM,UACN5G,MAAOqgF,IAEZxpC,GAjBH,CAoBA,IAAMt1B,EAAO,CACTqoD,cAAex0B,GAAM8lC,GACrB7K,YAAa3wC,SAASwgD,GACtB1P,gBAAiB6P,GAGrBnI,GAAkBz7E,KAAKw6E,QAAS,0BAA2B11D,EAAa,QAAT6+D,EAAE1nC,SAAO,IAAA0nC,OAAA,EAAPA,EAAStmE,cACrEmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GAVrB,CAWd,GAEA,CAAAnO,IAAA,oBAAA77B,MAKA,SAAkBugF,EAAWC,EAAcC,GAAuF,IAAAC,EAA3Eh8D,EAAY+c,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAK8Y,EAAOjX,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EAAEi2C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAcpH,GAbI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiB3/C,IACjBmyB,EAAWnyB,EACXA,EAAejoB,KAAKw6E,QAAQoC,eAAez5C,KACpCykC,GAAAA,SAAe3/C,KACtBg0B,EAAUh0B,EACVA,EAAejoB,KAAKw6E,QAAQoC,eAAez5C,MAG1CiX,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKkkF,kBAAmBJ,EAAWC,EAAcC,EAAY/7D,EAAcg0B,GAEzG,IAAIj8C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,QACNyH,KAAM,UACN5G,MAAO0kB,GAEX,CACIvlB,KAAM,aACNyH,KAAM,mBACN5G,MAAOugF,GAEX,CACIphF,KAAM,gBACNyH,KAAM,mBACN5G,MAAOwgF,GAEX,CACIrhF,KAAM,cACNyH,KAAM,mBACN5G,MAAOygF,IAEZ5pC,GArBH,CAwBA,IAAMt1B,EAAO,CACTqoD,cAAex0B,GAAM1wB,GACrBisD,eAAgBmH,GAASyI,GACzB3P,oBAAqB4P,EACrB3P,gBAAiB,KACjBC,qBAAsB2P,GAG1BvI,GAAkBz7E,KAAKw6E,QAAS,yBAA0B11D,EAAa,QAATm/D,EAAEhoC,SAAO,IAAAgoC,OAAA,EAAPA,EAAS5mE,cACpEmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GAZrB,CAad,GAEA,CAAAnO,IAAA,sBAAA77B,MAMA,SAAoB4gF,EAAgBr7E,EAAmBs7E,EAAiBn7E,GAA+F,IAAAo7E,EAA3Ep8D,EAAY+c,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAK8Y,EAAOjX,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EAAEi2C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAczJ,GAbI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiB3/C,IACjBmyB,EAAWnyB,EACXA,EAAejoB,KAAKw6E,QAAQoC,eAAez5C,KACpCykC,GAAAA,SAAe3/C,KACtBg0B,EAAUh0B,EACVA,EAAejoB,KAAKw6E,QAAQoC,eAAez5C,MAG1CiX,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKskF,oBAAqBH,EAAgBr7E,EAAmBs7E,EAAiBn7E,EAAoBgf,EAAcg0B,GAE9I,IAAIj8C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,QACNyH,KAAM,UACN5G,MAAO0kB,GAEX,CACIvlB,KAAM,mBACNyH,KAAM,mBACN5G,MAAO4gF,GAEX,CACIzhF,KAAM,oBACNyH,KAAM,mBACN5G,MAAO6gF,GAEX,CACI1hF,KAAM,sBACNyH,KAAM,mBACN5G,MAAOuF,GAEX,CACIpG,KAAM,uBACNyH,KAAM,mBACN5G,MAAO0F,IAEZmxC,GA1BH,CA6BA,IAAMt1B,EAAO,CACTqoD,cAAex0B,GAAM1wB,GACrBisD,eAAgBmH,GAAS8I,GACzBhQ,oBAAqBrrE,EACrBsrE,gBAAiBiH,GAAS+I,GAC1B/P,qBAAsBprE,GAG1BwyE,GAAkBz7E,KAAKw6E,QAAS,yBAA0B11D,EAAa,QAATu/D,EAAEpoC,SAAO,IAAAooC,OAAA,EAAPA,EAAShnE,cACpEmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GAZrB,CAad,GAEA,CAAAnO,IAAA,uBAAA77B,MAKA,WAAwJ,IAAAghF,EAAnIC,EAAUx/C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAU8+C,EAAS9+C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAUy/C,EAAWz/C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,EAAG/c,EAAY+c,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAK8Y,EAAOjX,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EAAEi2C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAc1I,GAbI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiB3/C,IACjBmyB,EAAWnyB,EACXA,EAAejoB,KAAKw6E,QAAQoC,eAAez5C,KACpCykC,GAAAA,SAAe3/C,KACtBg0B,EAAUh0B,EACVA,EAAejoB,KAAKw6E,QAAQoC,eAAez5C,MAG1CiX,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAK0kF,qBAAsBF,EAAYV,EAAWW,EAAax8D,EAAcg0B,GAE3G,IAAIj8C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,QACNyH,KAAM,UACN5G,MAAO0kB,GAEX,CACIvlB,KAAM,aACNyH,KAAM,mBACN5G,MAAOugF,GAEX,CACIphF,KAAM,eACNyH,KAAM,UACN5G,MAAOkhF,EACP5J,IAAK,GAET,CACIn4E,KAAM,aACNyH,KAAM,UACN5G,MAAOihF,EACP3J,IAAK,IAEVzgC,GAvBH,CA0BA,IAAMt1B,EAAO,CACTqoD,cAAex0B,GAAM1wB,GACrBusD,YAAavxC,SAASuhD,GACtBvW,SAAUoN,GAASyI,GACnB1vD,MAAO6O,SAASwhD,IAGpBhJ,GAAkBz7E,KAAKw6E,QAAS,yBAA0B11D,EAAa,QAATy/D,EAAEtoC,SAAO,IAAAsoC,OAAA,EAAPA,EAASlnE,cACpEmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GAXrB,CAYd,GAEA,CAAAnO,IAAA,yBAAA77B,MAKA,WAA0J,IAAAohF,EAAnIH,EAAUx/C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAU8+C,EAAS9+C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAUy/C,EAAWz/C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,EAAG/c,EAAY+c,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAK8Y,EAAOjX,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EAAEi2C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAc5I,GAbI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiB3/C,IACjBmyB,EAAWnyB,EACXA,EAAejoB,KAAKw6E,QAAQoC,eAAez5C,KACpCykC,GAAAA,SAAe3/C,KACtBg0B,EAAUh0B,EACVA,EAAejoB,KAAKw6E,QAAQoC,eAAez5C,MAG1CiX,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAK4kF,uBAAwBJ,EAAYV,EAAWW,EAAax8D,EAAcg0B,GAE7G,IAAIj8C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,QACNyH,KAAM,UACN5G,MAAO0kB,GAEX,CACIvlB,KAAM,aACNyH,KAAM,mBACN5G,MAAOugF,GAEX,CACIphF,KAAM,eACNyH,KAAM,UACN5G,MAAOkhF,EACP5J,IAAK,GAET,CACIn4E,KAAM,aACNyH,KAAM,UACN5G,MAAOihF,EACP3J,IAAK,IAEVzgC,GAvBH,CA0BA,IAAMt1B,EAAO,CACTqoD,cAAex0B,GAAM1wB,GACrBusD,YAAavxC,SAASuhD,GACtBvW,SAAUoN,GAASyI,GACnB1vD,MAAO6O,SAASwhD,IAGpBhJ,GAAkBz7E,KAAKw6E,QAAS,2BAA4B11D,EAAa,QAAT6/D,EAAE1oC,SAAO,IAAA0oC,OAAA,EAAPA,EAAStnE,cACtEmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GAXrB,CAYd,GAEA,CAAAnO,IAAA,sBAAA77B,MAKA,WAMsC,IAAAshF,EANlBL,EAAUx/C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GACV8+C,EAAS9+C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GACT8/C,EAAe9/C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,EAClB+/C,EAAmB//C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,EACtB/c,EAAY+c,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAC3C8Y,EAAOjX,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EACPi2C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAcxB,GAbI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiB3/C,IACjBmyB,EAAWnyB,EACXA,EAAejoB,KAAKw6E,QAAQoC,eAAez5C,KACpCykC,GAAAA,SAAe3/C,KACtBg0B,EAAUh0B,EACVA,EAAejoB,KAAKw6E,QAAQoC,eAAez5C,MAG1CiX,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKglF,oBAAqBR,EAAYV,EAAWgB,EAAiBC,EAAqB98D,EAAcg0B,GAEnI,IAAIj8C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,QACNyH,KAAM,UACN5G,MAAO0kB,GAEX,CACIvlB,KAAM,aACNyH,KAAM,mBACN5G,MAAOugF,GAEX,CACIphF,KAAM,kBACNyH,KAAM,UACN5G,MAAOuhF,EACPjK,IAAK,GAET,CACIn4E,KAAM,sBACNyH,KAAM,UACN5G,MAAOwhF,EACPlK,IAAK,GAET,CACIn4E,KAAM,aACNyH,KAAM,UACN5G,MAAOihF,EACP3J,IAAK,IAEVzgC,GA7BH,CAgCA,IAAMt1B,EAAO,CACTqoD,cAAex0B,GAAM1wB,GACrBusD,YAAavxC,SAASuhD,GACtBvW,SAAUjuE,KAAKw6E,QAAQyK,UAAUnB,GAAW3iD,QAAQ,MAAO,IAC3D/M,MAAO6O,SAAS6hD,GAChBpwD,SAAUuO,SAAS8hD,IAGvBtJ,GAAkBz7E,KAAKw6E,QAAS,8BAA+B11D,EAAa,QAAT+/D,EAAE5oC,SAAO,IAAA4oC,OAAA,EAAPA,EAASxnE,cACzEmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GAZrB,CAad,GAEA,CAAAnO,IAAA,gBAAA77B,MAGA,WAIgC,IAAA2hF,EAJlBlvD,EAAegP,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GACf45C,EAAiB55C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GACjB/c,EAAY+c,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAC3C8Y,EAAOjX,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EACPi2C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAclB,GAbI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiB3/C,IACjBmyB,EAAWnyB,EACXA,EAAejoB,KAAKw6E,QAAQoC,eAAez5C,KACpCykC,GAAAA,SAAe3/C,KACtBg0B,EAAUh0B,EACVA,EAAejoB,KAAKw6E,QAAQoC,eAAez5C,MAG1CiX,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKmlF,cAAenvD,EAAiB4oD,EAAmB32D,EAAcg0B,GAEpG,IAAIj8C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,QACNyH,KAAM,UACN5G,MAAO0kB,GAEX,CACIvlB,KAAM,WACNyH,KAAM,UACN5G,MAAOyyB,GAEX,CACItzB,KAAM,oBACNyH,KAAM,UACN5G,MAAOq7E,EACP/D,IAAK,EACLC,IAAK,MAEV1gC,GAlBH,CAqBA,IAAMt1B,EAAO,CACTqoD,cAAex0B,GAAM1wB,GACrB2lD,iBAAkBj1B,GAAM3iB,GACxBw6C,8BAA+BoO,GAGnCnD,GAAkBz7E,KAAKw6E,QAAS,wBAAyB11D,EAAa,QAATogE,EAAEjpC,SAAO,IAAAipC,OAAA,EAAPA,EAAS7nE,cACnEmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GAVrB,CAWd,GAEA,CAAAnO,IAAA,oBAAA77B,MAGA,WAIoC,IAAA6hF,EAJlBpvD,EAAegP,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GACfxO,EAAiBwO,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GACjB/c,EAAY+c,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAC3C8Y,EAAOjX,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EACPi2C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAetB,GAbI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiB3/C,IACjBmyB,EAAWnyB,EACXA,EAAejoB,KAAKw6E,QAAQoC,eAAez5C,KACpCykC,GAAAA,SAAe3/C,KACtBg0B,EAAUh0B,EACVA,EAAejoB,KAAKw6E,QAAQoC,eAAez5C,MAG1CiX,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKqlF,kBAAmBrvD,EAAiBQ,EAAmBvO,EAAcg0B,GAExG,IAAIj8C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,QACNyH,KAAM,UACN5G,MAAO0kB,GAEX,CACIvlB,KAAM,WACNyH,KAAM,UACN5G,MAAOyyB,GAEX,CACItzB,KAAM,oBACNyH,KAAM,UACN5G,MAAOizB,EACPqkD,IAAK,EACLC,IAAK,MAEV1gC,GAlBH,CAqBA,IAAMt1B,EAAO,CACTqoD,cAAex0B,GAAM1wB,GACrB2lD,iBAAkBj1B,GAAM3iB,GACxBy6C,oBAAqBj6C,GAGzBilD,GAAkBz7E,KAAKw6E,QAAS,4BAA6B11D,EAAa,QAATsgE,EAAEnpC,SAAO,IAAAmpC,OAAA,EAAPA,EAAS/nE,cACvEmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GAVrB,CAWd,GAAC,CAAAnO,IAAA,mBAAA77B,MAED,SAAiB+hF,EAAan7E,GAC1B,GAAIm7E,EAAa,CACb,GAAIA,EAAYn7E,OAASA,IACjBm7E,EAAYhQ,kBACZ1N,GAAAA,SAAe0d,EAAYhQ,mBAC3B1N,GAAAA,UAAgB0d,EAAY/tE,YAC7B+tE,EAAY/tE,UAAY,IACvB+tE,EAAY19C,KAEhB,OAAO,EACV,IAC+Bwf,EAD/BC,EAAAja,GACek4C,EAAY19C,MAAI,IAAhC,IAAAyf,EAAAha,MAAA+Z,EAAAC,EAAAvoB,KAAAwO,MAAkC,KAAzBlO,EAAGgoB,EAAA7jD,MACR,IAAKvD,KAAKw6E,QAAQS,UAAU77C,EAAIx8B,WACxBglE,GAAAA,UAAgBxoC,EAAI9pB,SACrB8pB,EAAI9pB,OAASgwE,EAAY/tE,WACzB6nB,EAAI9pB,OAAS,GACH,IAATnL,IAAem7E,EAAY7tE,WAE/B,OAAO,CAEf,CAAC,OAAA81B,GAAA8Z,EAAAta,EAAAQ,EAAA,SAAA8Z,EAAAnjD,GAAA,CACL,CACA,OAAO,CACX,GAAC,CAAAk7B,IAAA,2BAAA77B,MAED,WAOE,IAAAgiF,EANEt9D,EAAY+c,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAC3CqiD,EAAgBxgD,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAChBygD,EAAkBzgD,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAClB0gD,EAAkB1gD,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAClBiX,EAAOjX,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EACPi2C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAsBR,GApBI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiB8d,KACjBtrC,EAAWsrC,EACXA,GAAqB,GAGrB9d,GAAAA,WAAiB6d,KACjBrrC,EAAWqrC,EACXA,EAAqBC,GAAqB,GAG1C9d,GAAAA,WAAiB4d,KACjBprC,EAAWorC,EACXA,EAAmBC,EAAqBC,GAAqB,IAG5DtrC,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAK2lF,yBAA0B19D,EAAcu9D,EAAkBC,EAAoBC,EAAoBzpC,GAErI,IAAKj8C,KAAKw6E,QAAQS,UAAUhzD,GACxB,OAAOmyB,EAAS,iCAEpB,IAAKp6C,KAAK4lF,iBAAiBJ,EAAkB,GACzC,OAAOprC,EAAS,qCAGpB,IAAKp6C,KAAK4lF,iBAAiBH,EAAoB,GAC3C,OAAOrrC,EAAS,uCAGfxY,MAAMkH,QAAQ48C,KACfA,EAAqB,CAACA,IACzB,IAE+Cn+B,EAF/CC,EAAApa,GAE6Bs4C,GAAkB,IAAhD,IAAAl+B,EAAAna,MAAAka,EAAAC,EAAA1oB,KAAAwO,MAAkD,KAAzCu4C,EAAiBt+B,EAAAhkD,MACtB,IAAKvD,KAAK4lF,iBAAiBC,EAAmB,GAC1C,OAAOzrC,EAAS,sCAExB,CAAC,OAAA7M,GAAAia,EAAAza,EAAAQ,EAAA,SAAAia,EAAAtjD,GAAA,CAED,IAAM4gB,EAAO,CACTqoD,cAAex0B,GAAM1wB,IAEzB,GAAIu9D,EAAkB,CAClB,IAAMM,EAAoBxK,GAAakK,GAEnC,SAAUM,UACHA,EAAkB37E,KAE7B2a,EAAK6D,MAAQm9D,CACjB,CACA,GAAIL,EAAoB,CACpB,IAAMM,EAAsBzK,GAAamK,GAEzCM,EAAoB57E,KAAO,UAC3B2a,EAAK+D,QAAUk9D,CACnB,CACA,GAAIL,EAAoB,CACpB,IAAMM,EAAsB1K,GAAaoK,GAEzCM,EAAoBtsC,SAAQ,SAACusC,GACzBA,EAAkB97E,KAAO,QAC7B,IACA2a,EAAKqwD,QAAU6Q,CACnB,CAEAvK,GAAkBz7E,KAAKw6E,QAAS,kCAAmC11D,EAAa,QAATygE,EAAEtpC,SAAO,IAAAspC,OAAA,EAAPA,EAASloE,cAC7EmmC,MAAK,SAAAgB,GAAW,OAAIpK,EAAS,KAAMoK,EAAY,IAAC,OAC1C,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GACnC,GAAC,CAAAnO,IAAA,UAAA77B,OAAAm5E,EAAAj1C,IAAAC,IAAAA,MAED,SAAA+mB,EAAcjK,EAAavI,EAAS7B,GAAQ,IAAA8rC,EAAAlZ,EAAA,OAAAtlC,IAAAA,MAAA,SAAAonB,GAAA,cAAAA,EAAA/mB,KAAA+mB,EAAA9mB,MAAA,OAIvC,GAHG4/B,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGV7B,EAAQ,CAAA0U,EAAA9mB,KAAA,eAAA8mB,EAAAzmB,OAAA,SACFroC,KAAKq8E,cAAcr8E,KAAKmmF,QAAS3hC,EAAavI,IAAQ,UAEtD,QAFsDiqC,EAE7DjqC,SAAO,IAAAiqC,IAAPA,EAASvG,QAAO,CAAA7wB,EAAA9mB,KAAA,QAasD,OAZhEglC,EAAWxoB,EAAYw3B,SAAShP,SAAS,GAC/CyO,GAAkBz7E,KAAKw6E,QAASxN,EAAS7iE,KAAM6iE,EAASlwD,UAAUvZ,MAAOypE,EAASK,cAAe,CAC7F+I,UAAW5xB,EAAYw3B,SAAS5F,UAChCtxD,KAAM0/B,EAAYw3B,SAASl3D,KAC3BoxD,gBAAiB1xB,EAAYw3B,SAAS9F,gBACtCC,eAAgB3xB,EAAYw3B,SAAS7F,eACrCxxD,WAAY6/B,EAAYw3B,SAASr3D,WACjCS,UAAWo/B,EAAYw3B,SAAS52D,YACjCo+B,MAAK,SAACa,GACLA,EAAGlM,UAAYqM,EAAYrM,UAC3BkM,EAAG63B,QAAU13B,EAAY03B,QACzB9hC,EAAS,KAAMiK,EACnB,IAAE,OAAO,SAAC9W,GAAG,OAAK6M,EAAS,yCAAyC,IAAE0U,EAAAzmB,OAAA,iBAI1EroC,KAAKw6E,QAAQqB,SACRvB,QACG,uBACA91B,EACA,QAEHhB,MAAK,SAAA4iC,GAIF,MAHmC,kBAAxB5hC,EAAY03B,UACnBkK,EAAe5hC,YAAYA,YAAY03B,QAAU13B,EAAY03B,SAE1DX,GACH6K,EAAe5hC,YAAYA,YAAW+rB,GAAAA,GAAA,GAE/B/rB,EAAYw3B,SAAShP,SAAS,GAAGlwD,UAAUvZ,OAAK,IACnD8pE,cAAe7oB,EAAYw3B,SAAShP,SAAS,GAAGK,gBAEpD,CAAEvoD,KAAM0/B,EAAYw3B,SAASl3D,KAAMsxD,UAAW5xB,EAAYw3B,SAAS5F,WACnEh8B,EAER,IAAE,OACK,SAAA7M,GAAG,OAAI6M,EAAS,yCAAyC,IAAE,wBAAA0U,EAAArmB,OAAA,GAAAgmB,EAAA,UACzE,SAAAc,EAAAG,EAAAG,GAAA,OAAA6sB,EAAAl1C,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,mBAAA77B,OAAAk5E,EAAAh1C,IAAAC,IAAAA,MAED,SAAA0nB,EAAuB5K,GAAW,IAAAvI,EAAA7B,EAAAisC,EAAArhD,UAAA,OAAA0C,IAAAA,MAAA,SAAA2nB,GAAA,cAAAA,EAAAtnB,KAAAsnB,EAAArnB,MAAA,OAAgC,GAA9BiU,EAAOoqC,EAAAhiF,OAAA,QAAAF,IAAAkiF,EAAA,GAAAA,EAAA,GAAG,CAAC,EAAGjsC,EAAQisC,EAAAhiF,OAAA,QAAAF,IAAAkiF,EAAA,IAAAA,EAAA,GACzC,CAAAh3B,EAAArnB,KAAA,eAAAqnB,EAAAhnB,OAAA,SACFroC,KAAKq8E,cAAcr8E,KAAKsmF,iBAAkB9hC,EAAavI,IAAQ,WAEtEuI,EAAYrM,UAAS,CAAAkX,EAAArnB,KAAA,eAAAqnB,EAAAhnB,OAAA,SACd+R,EAAS,+DAA6D,WAE7E6B,EAAQn3B,KAAM,CAAFuqC,EAAArnB,KAAA,SAGkC,GAFnB,QAAvBiU,EAAQsqC,aACRtqC,EAAQn3B,KAAO9kB,KAAKw6E,QAAQ7hC,MAAMsD,EAAQn3B,OAC9Cm3B,EAAQn3B,KAAOm3B,EAAQn3B,KAAKqc,QAAQ,MAAO,IACf,IAAxB8a,EAAQn3B,KAAKzgB,OAAY,CAAAgrD,EAAArnB,KAAA,gBAAAqnB,EAAAhnB,OAAA,SAClB+R,EAAS,0BAAwB,QAC5CoK,EAAYw3B,SAASl3D,KAAOm3B,EAAQn3B,KAAK,YAGzCm3B,EAAQuqC,UAAW,CAAFn3B,EAAArnB,KAAA,SACsC,GAAvDiU,EAAQuqC,UAAYvjD,SAA6B,IAApBgZ,EAAQuqC,aACjC1lD,MAAMmb,EAAQuqC,YAAchiC,EAAYw3B,SAASr3D,WAAas3B,EAAQuqC,WAAa1gD,KAAKoxB,MAAQ,KAAI,CAAA7H,EAAArnB,KAAA,gBAAAqnB,EAAAhnB,OAAA,SAC7F+R,EAAS,+BAA6B,QACjDoK,EAAYw3B,SAASr3D,YAAcs3B,EAAQuqC,UAAU,QAGzDxmF,KAAKmmF,QAAQ3hC,EAAa,CAAEm7B,QAAS1jC,EAAQ0jC,SAAWvlC,GAAS,yBAAAiV,EAAA5mB,OAAA,GAAA2mB,EAAA,UACpE,SAAAgB,GAAA,OAAAqsB,EAAAj1C,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,mBAAA77B,OAAAi5E,EAAA/0C,IAAAC,IAAAA,MAED,SAAA8nB,EAAuBhL,EAAagiC,EAAWvqC,GAAO,IAAAwqC,EAAArsC,EAAAssC,EAAA1hD,UAAA,OAAA0C,IAAAA,MAAA,SAAA+nB,GAAA,cAAAA,EAAA1nB,KAAA0nB,EAAAznB,MAAA,OAIjD,GAJmDoS,EAAQssC,EAAAriF,OAAA,QAAAF,IAAAuiF,EAAA,IAAAA,EAAA,GACxD9e,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGV7B,EAAQ,CAAAqV,EAAAznB,KAAA,eAAAynB,EAAApnB,OAAA,SACFroC,KAAKq8E,cAAcr8E,KAAK2mF,iBAAkBniC,EAAagiC,EAAWvqC,IAAQ,OAErFj8C,KAAKsmF,iBAAiB9hC,EAAa,CAACgiC,UAAAA,EAAW7G,QAAgB,QAAT8G,EAAExqC,SAAO,IAAAwqC,OAAA,EAAPA,EAAS9G,SAAUvlC,GAAU,wBAAAqV,EAAAhnB,OAAA,GAAA+mB,EAAA,UACxF,SAAAwB,EAAAG,EAAAI,GAAA,OAAAirB,EAAAh1C,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,gBAAA77B,OAAAg5E,EAAA90C,IAAAC,IAAAA,MAED,SAAAioB,EAAoBnL,EAAa1/B,GAAI,IAAA8hE,EAAAL,EAAAtqC,EAAA7B,EAAAysC,EAAA7hD,UAAA,OAAA0C,IAAAA,MAAA,SAAAkoB,GAAA,cAAAA,EAAA7nB,KAAA6nB,EAAA5nB,MAAA,OAYhC,GAZkCu+C,EAAUM,EAAAxiF,OAAA,QAAAF,IAAA0iF,EAAA,GAAAA,EAAA,GAAG,OAAQ5qC,EAAO4qC,EAAAxiF,OAAA,EAAAwiF,EAAA,QAAA1iF,EAAEi2C,EAAQysC,EAAAxiF,OAAA,QAAAF,IAAA0iF,EAAA,IAAAA,EAAA,GACrEjf,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiB2e,IACjBnsC,EAAWmsC,EACXA,EAAa,QACN3e,GAAAA,SAAe2e,KACtBtqC,EAAUsqC,EACVA,EAAa,QAGZnsC,EAAQ,CAAAwV,EAAA5nB,KAAA,eAAA4nB,EAAAvnB,OAAA,SACFroC,KAAKq8E,cAAcr8E,KAAK8mF,cAAetiC,EAAa1/B,EAAMyhE,EAAYtqC,IAAQ,OAEzFj8C,KAAKsmF,iBAAiB9hC,EAAa,CAAC1/B,KAAAA,EAAMyhE,WAAAA,EAAY5G,QAAgB,QAATiH,EAAE3qC,SAAO,IAAA2qC,OAAA,EAAPA,EAASjH,SAAUvlC,GAAU,wBAAAwV,EAAAnnB,OAAA,GAAAknB,EAAA,UAC/F,SAAA6B,EAAAC,GAAA,OAAA8qB,EAAA/0C,MAAA,KAAAxC,UAAA,MAAAo3C,CAAA,CAvsFkC,G,qkBC1GvC,IAAM2K,GAAqB,4BAErBC,GAAqB,gCAE3B,SAASruC,GAAMp1C,GACX,OAAOyiE,GAAQpjE,QAAQ+1C,MAAMp1C,EACjC,CAAC,IAEoB0jF,GAAG,WACpB,SAAAA,IAA6B,IAAjBzM,EAAOx1C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GACf,GADuBuJ,IAAA,KAAA04C,IAClBzM,IAAYA,aAAmBxU,GAChC,MAAM,IAAI5jC,MAAM,gCAEpBpiC,KAAKw6E,QAAUA,EACfx6E,KAAKq8E,cAAgBC,KAAct8E,MACnCA,KAAKihF,MAAQ,CACTC,UAAW,CAAC,GAEhBlhF,KAAKi3E,UAAY,IAAIsD,GAAUC,EACnC,CAkoDC,IAAA0M,EAxCAC,EALAC,EALAC,EALAC,EALAC,EA1ZDC,EAtDAC,EAnEAC,EA/CCC,EAvCA35B,EA5FA45B,EAjBAC,EAxEAC,EAvJAC,EAjFAC,EAhXAC,EA4lBA,OA5yBAv5C,IAAAu4C,EAAA,EAAA7nD,IAAA,cAAA77B,MAED,SAAYy9C,GACR,OAAAuvB,GAAAA,GAAA,GACOvvB,GAAK,IACRt+C,KAAM1C,KAAKw6E,QAAQgB,OAAOx6B,EAAMt+C,MAChCsnB,KAAMg3B,EAAMh3B,MAAQhqB,KAAKw6E,QAAQgB,OAAOx6B,EAAMh3B,MAC9CU,YAAas2B,EAAMt2B,aAAe1qB,KAAKw6E,QAAQgB,OAAOx6B,EAAMt2B,aAC5DvR,IAAK6nC,EAAM7nC,KAAOnZ,KAAKw6E,QAAQgB,OAAOx6B,EAAM7nC,MAEpD,GAAC,CAAAimB,IAAA,kBAAA77B,MAED,WAAkC,IAAlB62C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GACpB,IAAKoV,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKkoF,iBACnCloF,KAAKw6E,QAAQqB,SAASvB,QAAQ,sBAAsB92B,MAAK,SAAA3M,GACrDuD,EAAS,KAAMvD,EACnB,IAAE,OAAO,SAAAtJ,GAAG,OAAI6M,EAAS7M,EAAI,GACjC,GAAC,CAAAnO,IAAA,2BAAA77B,MAED,WAA2C,IAAlB62C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAC7B,IAAKoV,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKmoF,0BAEnCnoF,KAAKw6E,QAAQ4N,aAAa9N,QAAQ,8BAA8B92B,MAAK,SAAA3M,GACjEuD,EAAS,KAAMvD,EACnB,IAAE,OAAO,SAAAtJ,GAAG,OAAI6M,EAAS7M,EAAI,GACjC,GAAC,CAAAnO,IAAA,WAAA77B,MAED,WAA8D,IAArDszC,EAAK7R,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQ6N,aAAcjuC,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAMhD,OALI4iC,GAAAA,WAAiB/wB,KACjBuD,EAAWvD,EACXA,EAAQ72C,KAAKw6E,QAAQ6N,cAGpBjuC,GAGS,IAAVvD,EACOuD,EAAS,iCAEP,YAATvD,IACAA,EAAQ,GAEC,UAATA,EACO72C,KAAKkoF,gBAAgB9tC,GAE5BtZ,MAAM+V,IAAU+wB,GAAAA,MAAY/wB,GACrB72C,KAAKsoF,eAAezxC,EAAOuD,QAEtCp6C,KAAKuoF,iBAAiB1xC,EAAOuD,IAdlBp6C,KAAKq8E,cAAcr8E,KAAKwoF,SAAU3xC,EAejD,GAAC,CAAAzX,IAAA,iBAAA77B,MAED,SAAeklF,GAA6B,IAAlBruC,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAC9B,IAAKoV,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKsoF,eAAgBG,GAEnDzoF,KAAKw6E,QAAQqB,SAASvB,QAAQ,sBAAuB,CACjD/2E,MAAOklF,GACR,QAAQjlC,MAAK,SAAA3M,GACZ,IAAKvX,OAAOsI,KAAKiP,GAAOxyC,OACpB,OAAO+1C,EAAS,mBAEpBA,EAAS,KAAMvD,EACnB,IAAE,OAAO,SAAAtJ,GAAG,OAAI6M,EAAS7M,EAAI,GACjC,GAAC,CAAAnO,IAAA,mBAAA77B,MAED,SAAiB04E,GAA2B,IAAlB7hC,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAC9B,OAAKoV,GAGAwtB,GAAAA,UAAgBqU,IAAYA,EAAU,EAChC7hC,EAAS,sCAEpBp6C,KAAKw6E,QAAQqB,SAASvB,QAAQ,uBAAwB,CAClDjwD,IAAK4Y,SAASg5C,IACf,QAAQz4B,MAAK,SAAA3M,GACZ,IAAKvX,OAAOsI,KAAKiP,GAAOxyC,OACpB,OAAO+1C,EAAS,mBAEpBA,EAAS,KAAMvD,EACnB,IAAE,OAAO,SAAAtJ,GAAG,OAAI6M,EAAS7M,EAAI,IAZlBvtC,KAAKq8E,cAAcr8E,KAAKuoF,iBAAkBtM,EAazD,GAAC,CAAA78C,IAAA,2BAAA77B,MAED,WAA8E,IAArDszC,EAAK7R,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQ6N,aAAcjuC,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAMhE,GALI4iC,GAAAA,WAAiB/wB,KACjBuD,EAAWvD,EACXA,EAAQ72C,KAAKw6E,QAAQ6N,eAGpBjuC,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAK0oF,yBAA0B7xC,GAE7D72C,KAAKwoF,SAAS3xC,GAAO2M,MAAK,SAAAhU,GAAyB,IAAAm5C,EAAAn5C,EAAvBo5C,aACxBxuC,EAAS,WAD2B,IAAAuuC,EAAG,GAAEA,GACbtkF,OAChC,IAAE,OAAO,SAAAkpC,GAAG,OAAI6M,EAAS7M,EAAI,GACjC,GAAC,CAAAnO,IAAA,0BAAA77B,MAED,WAAoF,IAA5DszC,EAAK7R,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQ6N,aAAc7/C,EAAKxD,UAAA3gC,OAAA,EAAA2gC,UAAA,QAAA7gC,EAAEi2C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAWtE,GAVI4iC,GAAAA,WAAiBp/B,KACjB4R,EAAW5R,EACXA,EAAQ,GAGRo/B,GAAAA,WAAiB/wB,KACjBuD,EAAWvD,EACXA,EAAQ72C,KAAKw6E,QAAQ6N,eAGpBjuC,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAK6oF,wBAAyBhyC,EAAOrO,GAEnExoC,KAAKwoF,SAAS3xC,GAAO2M,MAAK,SAAA4E,GAA4B,IAAA0gC,EAAA1gC,EAA1BwgC,aAAAA,OAAY,IAAAE,GAAQA,EACvCF,EAEoB,iBAATpgD,EACRA,GAAS,GAAKA,EAAQogD,EAAavkF,OACnC+1C,EAAS,KAAMwuC,EAAapgD,IAE5B4R,EAAS,sCAEbA,EAAS,KAAMwuC,GAPfxuC,EAAS,iCAQjB,IAAE,OAAO,SAAA7M,GAAG,OAAI6M,EAAS7M,EAAI,GACjC,GAAC,CAAAnO,IAAA,iBAAA77B,MAED,SAAewlF,GAAiC,IAAlB3uC,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAClC,IAAKoV,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKgpF,eAAgBD,GAEnD/oF,KAAKw6E,QAAQqB,SAASvB,QAAQ,4BAA6B,CACvD/2E,MAAOwlF,GACR,QAAQvlC,MAAK,SAAAgB,GACZ,IAAKllB,OAAOsI,KAAK4c,GAAangD,OAC1B,OAAO+1C,EAAS,yBAEpBA,EAAS,KAAMoK,EACnB,IAAE,OAAO,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GACjC,GAAC,CAAAnO,IAAA,0BAAA77B,MAED,SAAwBwlF,GAAiC,IAAlB3uC,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAC3C,IAAKoV,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKipF,wBAAyBF,GAE5D/oF,KAAKw6E,QAAQ4N,aAAa9N,QAAQ,oCAAqC,CACnE/2E,MAAOwlF,GACR,QAAQvlC,MAAK,SAAAgB,GACZ,IAAKllB,OAAOsI,KAAK4c,GAAangD,OAC1B,OAAO+1C,EAAS,yBAEpBA,EAAS,KAAMoK,EACnB,IAAE,OAAO,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GACjC,GAAC,CAAAnO,IAAA,gCAAA77B,MAED,SAA8BwlF,GAAiC,IAAlB3uC,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GACjD,OAAOhlC,KAAKkpF,wBAAwBH,EAAe,CAAC/I,WAAW,GAAQ5lC,EAC3E,GAAC,CAAAhb,IAAA,qBAAA77B,MAED,SAAmBwlF,GAAiC,IAAlB3uC,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GACtC,OAAOhlC,KAAKkpF,wBAAwBH,EAAe,CAAC/I,WAAW,GAAO5lC,EAC1E,GAAC,CAAAhb,IAAA,0BAAA77B,MAED,SAAwBwlF,EAAe9sC,GAA2B,IAAlB7B,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GACpD,IAAKoV,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKkpF,wBAAyBH,EAAe9sC,GAE3Ej8C,KAAKw6E,QAAQv+B,EAAQ+jC,UAAY,eAAiB,YAAY1F,QAAQ,SAAD/2C,OAAU0Y,EAAQ+jC,UAAY,WAAa,GAAE,2BAA2B,CACzIz8E,MAAOwlF,GACR,QAAQvlC,MAAK,SAAAgB,GACZpK,EAAS,KAAMoK,EACnB,IAAE,OAAO,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,GACjC,GAAC,CAAAnO,IAAA,2BAAA77B,MAED,WAA8G,IAArFX,EAAOoiC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAKoJ,EAAKvH,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,GAAI8F,EAAM9F,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,EAAGoV,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAWhG,OAVI4iC,GAAAA,WAAiB98B,KACjBsP,EAAWtP,EACXA,EAAS,GAGT88B,GAAAA,WAAiBr7B,KACjB6N,EAAW7N,EACXA,EAAQ,IAGP6N,GAGLx3C,EAAU5C,KAAKw6E,QAAQ53E,QAAQ+1C,MAAM/1C,GAE9B5C,KAAKmpF,uBAAuBvmF,EAAS,KAAM2pC,EAAOzB,EAAQsP,IAJtDp6C,KAAKq8E,cAAcr8E,KAAKopF,yBAA0BxmF,EAAS2pC,EAAOzB,EAKjF,GAAC,CAAA1L,IAAA,6BAAA77B,MAED,WAAgH,IAArFX,EAAOoiC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAKoJ,EAAKvH,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,GAAI8F,EAAM9F,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,EAAGoV,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAWlG,OAVI4iC,GAAAA,WAAiB98B,KACjBsP,EAAWtP,EACXA,EAAS,GAGT88B,GAAAA,WAAiBr7B,KACjB6N,EAAW7N,EACXA,EAAQ,IAGP6N,GAGLx3C,EAAU5C,KAAKw6E,QAAQ53E,QAAQ+1C,MAAM/1C,GAE9B5C,KAAKmpF,uBAAuBvmF,EAAS,OAAQ2pC,EAAOzB,EAAQsP,IAJxDp6C,KAAKq8E,cAAcr8E,KAAKqpF,2BAA4BzmF,EAAS2pC,EAAOzB,EAKnF,GAAC,CAAA1L,IAAA,yBAAA77B,OAAA0kF,EAAAxgD,IAAAC,IAAAA,MAED,SAAAC,IAAA,IAAA/kC,EAAA0mF,EAAA/8C,EAAAzB,EAAAsP,EAAAmvC,EAAAC,EAAA/zE,EAAAE,EAAA0kE,EAAAr1C,UAAA,OAAA0C,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAmBK,GAnBwBplC,EAAOy3E,EAAAh2E,OAAA,QAAAF,IAAAk2E,EAAA,GAAAA,EAAA,GAAGr6E,KAAKw6E,QAAQoC,eAAez5C,IAAKmmD,EAASjP,EAAAh2E,OAAA,QAAAF,IAAAk2E,EAAA,GAAAA,EAAA,GAAG,MAAO9tC,EAAK8tC,EAAAh2E,OAAA,QAAAF,IAAAk2E,EAAA,GAAAA,EAAA,GAAG,GAAIvvC,EAAMuvC,EAAAh2E,OAAA,QAAAF,IAAAk2E,EAAA,GAAAA,EAAA,GAAG,EAAGjgC,EAAQigC,EAAAh2E,OAAA,QAAAF,IAAAk2E,EAAA,IAAAA,EAAA,GACnHzS,GAAAA,WAAiB98B,KACjBsP,EAAWtP,EACXA,EAAS,GAGT88B,GAAAA,WAAiBr7B,KACjB6N,EAAW7N,EACXA,EAAQ,IAGRq7B,GAAAA,WAAiB0hB,KACjBlvC,EAAWkvC,EACXA,EAAY,OAGZ1hB,GAAAA,WAAiBhlE,KACjBw3C,EAAWx3C,EACXA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,KAGrCiX,EAAQ,CAAAtS,EAAAE,KAAA,gBAAAF,EAAAO,OAAA,SACFroC,KAAKq8E,cAAcr8E,KAAKmpF,uBAAwBvmF,EAAS0mF,EAAW/8C,EAAOzB,IAAO,WAExF,CAAC,KAAM,OAAQ,OAAOi8B,SAASuiB,GAAU,CAAAxhD,EAAAE,KAAA,gBAAAF,EAAAO,OAAA,SACnC+R,EAAS,+DAA6D,WAEhE,OAAbkvC,EAAkB,CAAAxhD,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,GAAAD,EAAAE,KAAA,GAEWC,QAAQC,IAAI,CACjCloC,KAAKmpF,uBAAuBvmF,EAAS,OAAQ2pC,EAAOzB,GACpD9qC,KAAKmpF,uBAAuBvmF,EAAS,KAAM2pC,EAAOzB,KACpD,QAHa,OAGby+C,EAAAzhD,EAAAM,KAAAohD,EAAA7xC,KAAA4xC,EAAA,GAHK9zE,EAAI+zE,EAAA,GAAE7zE,EAAE6zE,EAAA,GAAA1hD,EAAAO,OAAA,SAKR+R,EAAS,KAAM,GAAA7W,OAAA2jC,IACfzxD,EAAKgxB,KAAI,SAAA4d,GAAE,OAAKA,EAAGilC,UAAY,OAAQjlC,CAAE,KAAE6iB,IAC3CvxD,EAAG8wB,KAAI,SAAA4d,GAAE,OAAKA,EAAGilC,UAAY,KAAMjlC,CAAE,MAC1Cjb,MAAK,SAAClK,EAAG0c,GACP,OAAOA,EAAEogC,SAAS52D,UAAY8Z,EAAE88C,SAAS52D,SAC7C,MAAG,eAAA0iB,EAAAC,KAAA,GAAAD,EAAA6b,GAAA7b,EAAA,UAAAA,EAAAO,OAAA,SAEI+R,EAAQtS,EAAA6b,KAAI,WAItB3jD,KAAKw6E,QAAQS,UAAUr4E,GAAQ,CAAAklC,EAAAE,KAAA,gBAAAF,EAAAO,OAAA,SACzB+R,EAAS,6BAA2B,cAE1CwtB,GAAAA,UAAgBr7B,IAAUA,EAAQ,GAAMzB,GAAUyB,EAAQ,GAAE,CAAAzE,EAAAE,KAAA,gBAAAF,EAAAO,OAAA,SACtD+R,EAAS,2BAAyB,WAExCwtB,GAAAA,UAAgB98B,MAAWA,EAAS,GAAC,CAAAhD,EAAAE,KAAA,gBAAAF,EAAAO,OAAA,SAC/B+R,EAAS,4BAA0B,QAE9Cx3C,EAAU5C,KAAKw6E,QAAQ53E,QAAQ+1C,MAAM/1C,GAErC5C,KAAKw6E,QAAQ4N,aAAa9N,QAAQ,kCAAD/2C,OAAmC+lD,EAAS,QAAQ,CACjF1yE,QAAS,CACLhU,QAAAA,GAEJkoC,OAAAA,EACAyB,MAAAA,GACD,QAAQiX,MAAK,SAAA0F,GAAmB,IAAjB1E,EAAW0E,EAAX1E,YACdpK,EAAS,KAAMoK,EACnB,IAAE,OAAO,SAAAjX,GAAG,OAAI6M,EAAS7M,EAAI,IAAE,yBAAAzF,EAAAW,OAAA,GAAAd,EAAA,oBAClC,kBAAAsgD,EAAAzgD,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,aAAA77B,MAED,WAAwE,IAA7DX,EAAOoiC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAKiX,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAM1D,OALI4iC,GAAAA,WAAiBhlE,KACjBw3C,EAAWx3C,EACXA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,KAGrCiX,EAGAp6C,KAAKw6E,QAAQS,UAAUr4E,IAG5BA,EAAU5C,KAAKw6E,QAAQ53E,QAAQ+1C,MAAM/1C,QAErC5C,KAAKw6E,QAAQ4N,aAAa9N,QAAQ,4BAA6B,CAC3D13E,QAAAA,GACD,QAAQ4gD,MAAK,SAAA5sC,GACZwjC,EAAS,KAAMxjC,EACnB,IAAE,OAAO,SAAA22B,GAAG,OAAI6M,EAAS7M,EAAI,KARlB6M,EAAS,4BAHTp6C,KAAKq8E,cAAcr8E,KAAK6W,WAAYjU,EAYnD,GAAC,CAAAw8B,IAAA,iBAAA77B,MAED,WAA6C,IAA9B+T,EAAE0tB,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAUoV,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAC/B,IAAKoV,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKypF,eAAgBnyE,GAEnDtX,KAAK0pF,mBAAmBpyE,EAAI,CAAC0oE,WAAW,GAAO5lC,EACnD,GAAC,CAAAhb,IAAA,qBAAA77B,MAED,SAAmB+T,EAAI2kC,EAAS7B,GACxBp6C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,YACNyH,KAAM,MACN5G,MAAO+T,GAEX,CACI5U,KAAM,YACNyH,KAAM,SACN2wE,IAAK,GACLD,IAAK,EACLt3E,MAAO+T,IAEZ8iC,KAGC9iC,EAAGs/B,WAAW,QACdt/B,EAAKA,EAAGyrB,MAAM,IAGlB/iC,KAAKw6E,QAAQv+B,EAAQ+jC,UAAY,eAAiB,YAAY1F,QAAQ,SAAD/2C,OAAU0Y,EAAQ+jC,UAAY,WAAa,GAAE,mBAAmB,CACjI1M,WAAYh8D,GACb,QAAQksC,MAAK,SAAA5sC,GACZwjC,EAAS,KAAMxjC,EACnB,IAAE,OAAO,SAAA22B,GAAG,OAAI6M,EAAS7M,EAAI,IACjC,GAAC,CAAAnO,IAAA,aAAA77B,MAED,WAAwE,IAA7DX,EAAOoiC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAKiX,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAM1D,GALI4iC,GAAAA,WAAiBhlE,KACjBw3C,EAAWx3C,EACXA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,MAGrCiX,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAK2P,WAAY/M,GAE/C5C,KAAK6W,WAAWjU,GAAS4gD,MAAK,SAAAmmC,GAAmB,IAAAC,EAAAD,EAAjBv/E,QAC5BgwC,EAAS,UAD0B,IAAAwvC,EAAG,EAACA,EAE3C,IAAE,OAAO,SAAAr8C,GAAG,OAAI6M,EAAS7M,EAAI,GACjC,GAAC,CAAAnO,IAAA,wBAAA77B,MAED,WAAmF,IAA7DX,EAAOoiC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAKiX,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAMrE,OALI4iC,GAAAA,WAAiBhlE,KACjBw3C,EAAWx3C,EACXA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,KAGrCiX,EAGAp6C,KAAKw6E,QAAQS,UAAUr4E,IAG5BA,EAAU5C,KAAKw6E,QAAQ53E,QAAQ+1C,MAAM/1C,QAErC5C,KAAKw6E,QAAQqB,SAASvB,QAAQ,oBAAqB,CAC/C13E,QAAAA,GACD,QAAQ4gD,MAAK,SAAA5sC,GACZwjC,EAAS,KAAMxjC,EACnB,IAAE,OAAO,SAAA22B,GAAG,OAAI6M,EAAS7M,EAAI,KARlB6M,EAAS,4BAHTp6C,KAAKq8E,cAAcr8E,KAAK6pF,sBAAuBjnF,EAY9D,GAAC,CAAAw8B,IAAA,4BAAA77B,MAED,SAA0B+T,GAAsB,IAAlB8iC,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAClC,IAAKoV,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAK8pF,0BAA2BxyE,GAE9DtX,KAAK0pF,mBAAmBpyE,EAAI,CAAC0oE,WAAW,GAAQ5lC,EACpD,GAAC,CAAAhb,IAAA,wBAAA77B,MAED,WAAmF,IAA7DX,EAAOoiC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAKiX,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAMrE,GALI4iC,GAAAA,WAAiBhlE,KACjBw3C,EAAWx3C,EACXA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,MAGrCiX,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAK+pF,sBAAuBnnF,GAE1D5C,KAAK6pF,sBAAsBjnF,GAAS4gD,MAAK,SAAAwmC,GAAmB,IAAAC,EAAAD,EAAjB5/E,QACvCgwC,EAAS,UADqC,IAAA6vC,EAAG,EAACA,EAEtD,IAAE,OAAO,SAAA18C,GAAG,OAAI6M,EAAS7M,EAAI,GACjC,GAAC,CAAAnO,IAAA,eAAA77B,MAED,WAA0E,IAA7DX,EAAOoiC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAKiX,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAM5D,OALI4iC,GAAAA,WAAiBhlE,KACjBw3C,EAAWx3C,EACXA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,KAGrCiX,EAGAp6C,KAAKw6E,QAAQS,UAAUr4E,IAG5BA,EAAU5C,KAAKw6E,QAAQ53E,QAAQ+1C,MAAM/1C,QAErC5C,KAAKw6E,QAAQqB,SAASvB,QAAQ,uBAAwB,CAClD13E,QAAAA,GACD,QAAQ4gD,MAAK,SAAA0mC,GAAoE,IAAAC,EAAAD,EAAlEE,YAAAA,OAAW,IAAAD,EAAG,EAACA,EAAAE,EAAAH,EAAEI,aAAAA,OAAY,IAAAD,EAAG,EAACA,EAAAE,EAAAL,EAAEM,QAAAA,OAAO,IAAAD,EAAG,EAACA,EAAAE,EAAAP,EAAEQ,SAC9DtwC,EAAS,KAAOkwC,EAAeF,SADuC,IAAAK,EAAG,EAACA,GAChBD,GAC9D,IAAE,OAAO,SAAAj9C,GAAG,OAAI6M,EAAS7M,EAAI,KARlB6M,EAAS,4BAHTp6C,KAAKq8E,cAAcr8E,KAAK2qF,aAAc/nF,EAYrD,GAAC,CAAAw8B,IAAA,2BAAA77B,MAED,WAAsF,IAAAy8B,EAAA,KAA7Dp9B,EAAOoiC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAKiX,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAMxE,OALI4iC,GAAAA,WAAiBhlE,KACjBw3C,EAAWx3C,EACXA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,KAGrCiX,EAGAp6C,KAAKw6E,QAAQS,UAAUr4E,IAG5BA,EAAU5C,KAAKw6E,QAAQ53E,QAAQ+1C,MAAM/1C,QAErC5C,KAAKw6E,QAAQqB,SAASvB,QAAQ,gCAAiC,CAC3D13E,QAAAA,GACD,QAAQ4gD,MAAK,SAAAonC,GAA0B,IAAAC,EAAAD,EAAxBE,WAAAA,OAAU,IAAAD,GAAQA,EAChC,IAAKC,EACD,OAAO1wC,EAAS,KAAM,CAAC,GAE3B,IAAMgG,EAAS0qC,EAAWrkD,KAAI,SAAAua,GAC1B,OAAOhhB,EAAK+qD,YAAY/pC,EAC5B,IAAG1Y,QAAO,SAAC8X,EAAQY,GACf,OAAOZ,EAAOY,EAAMt+C,MAAQs+C,EAAOZ,CACvC,GAAG,CAAC,GAEJhG,EAAS,KAAMgG,EACnB,IAAE,OAAO,SAAA7S,GAAG,OAAI6M,EAAS7M,EAAI,KAjBlB6M,EAAS,4BAHTp6C,KAAKq8E,cAAcr8E,KAAKgrF,yBAA0BpoF,EAqBjE,GAAC,CAAAw8B,IAAA,iBAAA77B,MAED,WAAkD,IAAA42C,EAAA,KAAnC6iC,EAAOh4C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAUoV,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GACpC,OAAKoV,GAGDwtB,GAAAA,UAAgBoV,KAChBA,EAAUA,EAAQt6C,YAEjBklC,GAAAA,SAAeoV,IAAaA,EAAQ34E,YAGzCrE,KAAKw6E,QAAQqB,SAASvB,QAAQ,6BAA8B,CACxD/2E,MAAOvD,KAAKw6E,QAAQa,SAAS2B,IAC9B,QAAQx5B,MAAK,SAAAxC,GACZ,IAAKA,EAAMt+C,KACP,OAAO03C,EAAS,wBAEpBA,EAAS,KAAMD,EAAK4wC,YAAY/pC,GACpC,IAAE,OAAO,SAAAzT,GAAG,OAAI6M,EAAS7M,EAAI,IATlB6M,EAAS,8BANTp6C,KAAKq8E,cAAcr8E,KAAKirF,eAAgBjO,EAgBvD,GAAC,CAAA59C,IAAA,YAAA77B,MAED,WAA4B,IAAAy3C,EAAA,KAAlBZ,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GACd,IAAKoV,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKkrF,WAEnClrF,KAAKw6E,QAAQqB,SAASvB,QAAQ,oBAAoB92B,MAAK,SAAA2nC,GAAkB,IAAAC,EAAAD,EAAhBE,MACrDjxC,EAAS,WADiD,IAAAgxC,EAAG,GAAEA,GAC1C3kD,KAAI,SAAA6kD,GAAA,IAAAC,EAAAD,EAAE1oF,QAAU+2E,EAAI4R,EAAJ5R,KAAM6R,EAAID,EAAJC,KAAI,SAAAjoD,OACxCyX,EAAKw/B,QAAQgB,OAAO7B,GAAK,KAAAp2C,OAAIioD,EAAI,IAE5C,IAAE,OAAO,SAAAj+C,GAAG,OAAI6M,EAAS7M,EAAI,GACjC,GAAC,CAAAnO,IAAA,gBAAA77B,MAED,WAAqD,IAAvCioC,EAAKxG,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,EAAGyG,EAAGzG,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,GAAIoV,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAWvC,OAVI4iC,GAAAA,WAAiBn8B,KACjB2O,EAAW3O,EACXA,EAAM,IAGNm8B,GAAAA,WAAiBp8B,KACjB4O,EAAW5O,EACXA,EAAQ,GAGP4O,GAGAwtB,GAAAA,UAAgBp8B,IAAUA,EAAQ,EAC5B4O,EAAS,oCAEfwtB,GAAAA,UAAgBn8B,IAAQA,GAAOD,EACzB4O,EAAS,sCAEpBp6C,KAAKw6E,QAAQqB,SAASvB,QAAQ,6BAA8B,CACxDmR,SAAUxoD,SAASuI,GACnBkgD,OAAQzoD,SAASwI,GAAO,GACzB,QAAQ+X,MAAK,SAAAmoC,GAAkB,IAAAC,EAAAD,EAAhB90C,MACduD,EAAS,UADU,IAAAwxC,EAAG,GAAEA,EAE5B,IAAE,OAAO,SAAAr+C,GAAG,OAAI6M,EAAS7M,EAAI,IAblBvtC,KAAKq8E,cAAcr8E,KAAK6rF,cAAergD,EAAOC,EAc7D,GAAC,CAAArM,IAAA,2BAAA77B,MAED,WAA2C,IAAlB62C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAC7B,IAAKoV,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAK8rF,0BAEnC9rF,KAAKw6E,QAAQqB,SAASvB,QAAQ,wBAAwB92B,MAAK,SAAAuoC,GAAsB,IAAAC,EAAAD,EAApBE,UACzD7xC,EAAS,UADyD,IAAA4xC,EAAG,GAAEA,EAE3E,IAAE,OAAO,SAAAz+C,GAAG,OAAI6M,EAAS7M,EAAI,GACjC,GAAC,CAAAnO,IAAA,aAAA77B,MAED,WAAoD,IAAAqhD,EAAA,KAAzCrY,EAAKvH,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,EAAG8F,EAAM9F,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,EAAGoV,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAWtC,OAVI4iC,GAAAA,WAAiB98B,KACjBsP,EAAWtP,EACXA,EAAS,GAGT88B,GAAAA,WAAiBr7B,KACjB6N,EAAW7N,EACXA,EAAQ,GAGP6N,GAGAwtB,GAAAA,UAAgBr7B,IAAUA,EAAQ,GAAMzB,GAAUyB,EAAQ,EACpD6N,EAAS,2BAEfwtB,GAAAA,UAAgB98B,IAAWA,EAAS,EAC9BsP,EAAS,2BAEf7N,OAMLvsC,KAAKw6E,QAAQqB,SAASvB,QAAQ,oCAAqC,CAC/DxvC,OAAQ7H,SAAS6H,GACjByB,MAAOtJ,SAASsJ,IACjB,QAAQiX,MAAK,SAAA0oC,GAAuB,IAAAC,EAAAD,EAArBpB,WACd1wC,EAAS,WADe,IAAA+xC,EAAG,GAAEA,GACH1lD,KAAI,SAAAua,GAAK,OAAI4D,EAAKmmC,YAAY/pC,EAAM,IAClE,IAAE,OAAO,SAAAzT,GAAG,OAAI6M,EAAS7M,EAAI,IAVlBvtC,KAAKw6E,QAAQqB,SAASvB,QAAQ,4BAA4B92B,MAAK,SAAA4oC,GAAuB,IAAAC,EAAAD,EAArBtB,WACpE1wC,EAAS,WADqE,IAAAiyC,EAAG,GAAEA,GACzD5lD,KAAI,SAAAua,GAAK,OAAI4D,EAAKmmC,YAAY/pC,EAAM,IAClE,IAAE,OAAO,SAAAzT,GAAG,OAAI6M,EAAS7M,EAAI,IAXtBvtC,KAAKq8E,cAAcr8E,KAAKssF,WAAY//C,EAAOzB,EAoB1D,GAAC,CAAA1L,IAAA,yBAAA77B,MAED,WAAyC,IAAlB62C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAC3B,IAAKoV,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKusF,wBAEnCvsF,KAAKw6E,QAAQqB,SAASvB,QAAQ,iCAAiC92B,MAAK,SAAAgpC,GAAgB,IAAAC,EAAAD,EAAdniE,IAAAA,OAAG,IAAAoiE,GAAI,EAACA,EAC1E,IAAY,GAARpiE,EACA,OAAO+vB,EAAS,4CAEpBA,EAAS,KAAMpF,KAAK03C,MAAMriE,EAAM,KACpC,IAAE,OAAO,SAAAkjB,GAAG,OAAI6M,EAAS7M,EAAI,GACjC,GAAC,CAAAnO,IAAA,cAAA77B,MAED,SAAYyyB,GAAmC,IAAAkqC,EAAA,KAAlB9lB,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GACjC,OAAKoV,EAGAp6C,KAAKw6E,QAAQS,UAAUjlD,QAGxBh2B,KAAKihF,MAAMC,UAAUlrD,GACrBokB,EAAS,KAAMp6C,KAAKihF,MAAMC,UAAUlrD,KAIxCA,EAAkBh2B,KAAKw6E,QAAQ53E,QAAQ+1C,MAAM3iB,GAE7Ch2B,KAAKw6E,QAAQqB,SAASvB,QAAQ,qBAAsB,CAChD/2E,MAAOyyB,IACRwtB,MAAK,SAAAwpB,GACJ,GAAIA,EAAS5qC,MACT,OAAOgY,EAAS,2BACpB8lB,EAAK+gB,MAAMC,UAAUlrD,GAAmBg3C,EACxC5yB,EAAS,KAAM4yB,EACnB,IAAE,OAAO,SAAAz/B,GAAG,OAAI6M,EAAS7M,EAAI,MAhBlB6M,EAAS,qCAHTp6C,KAAKq8E,cAAcr8E,KAAK2sF,YAAa32D,EAoBpD,GAAC,CAAAoJ,IAAA,gBAAA77B,OAAAykF,EAAAvgD,IAAAC,IAAAA,MAED,SAAA+b,IAAA,IAAAx/C,EAAAk0C,EAAAv1C,EAAAgqF,EAAAxyC,EAAAkmC,EAAAt7C,UAAA,OAAA0C,IAAAA,MAAA,SAAAgc,GAAA,cAAAA,EAAA3b,KAAA2b,EAAA1b,MAAA,OAUK,GAVe/jC,EAAOq8E,EAAAj8E,OAAA,QAAAF,IAAAm8E,EAAA,IAAAA,EAAA,GAAUnoC,EAASmoC,EAAAj8E,OAAA,QAAAF,IAAAm8E,EAAA,IAAAA,EAAA,GAAU19E,EAAO09E,EAAAj8E,OAAA,QAAAF,IAAAm8E,EAAA,GAAAA,EAAA,GAAGtgF,KAAKw6E,QAAQoC,eAAehT,OAAQgjB,IAAatM,EAAAj8E,OAAA,QAAAF,IAAAm8E,EAAA,KAAAA,EAAA,GAASlmC,EAAQkmC,EAAAj8E,OAAA,QAAAF,IAAAm8E,EAAA,IAAAA,EAAA,GAC5H1Y,GAAAA,WAAiBhlE,KACjBw3C,EAAWx3C,EACXA,EAAU5C,KAAKw6E,QAAQoC,eAAehT,OACtCgjB,GAAgB,GAGhBhlB,GAAAA,WAAiBglB,KACjBxyC,EAAWwyC,EACXA,GAAgB,GAGfxyC,EAAQ,CAAAsJ,EAAA1b,KAAA,eAAA0b,EAAArb,OAAA,SACFroC,KAAKq8E,cAAcr8E,KAAKksE,cAAejoE,EAASk0C,EAAWv1C,EAASgqF,IAAc,UAExFhlB,GAAAA,MAAY3jE,GAAQ,CAAAy/C,EAAA1b,KAAA,gBAAA0b,EAAArb,OAAA,SACd+R,EAAS,+BAA6B,YAE7C6sC,EAAI4F,gBAAgB5oF,EAASrB,EAASu1C,EAAWy0C,GAAc,CAAAlpC,EAAA1b,KAAA,gBAAA0b,EAAArb,OAAA,SACxD+R,EAAS,MAAM,IAAK,QAE/BA,EAAS,4BAA4B,yBAAAsJ,EAAAjb,OAAA,GAAAgb,EAAA,UACxC,kBAAAukC,EAAAxgD,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,kBAAA77B,MAuBD,WAAoF,IAApEU,EAAO+gC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAUmT,EAASnT,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAUiX,EAAOjX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGoV,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAMtE,GALI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,IAGV7B,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAK8sF,gBAAiB7oF,EAASk0C,EAAW8D,GAExE,IAEI7B,EAAS,KADa6sC,EAAI6F,gBAAgB7oF,EAASk0C,GAEvD,CAAE,MAAMm/B,GACJl9B,EAASk9B,EACb,CACJ,GAAC,CAAAl4C,IAAA,kBAAA77B,MAMD,SAAgB8kD,EAAQthB,EAAOxjC,EAAO40C,GAA2E,IAAhEv1C,EAAOoiC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAehT,OAAQxvB,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAMnG,OALI4iC,GAAAA,WAAiBhlE,KACjBw3C,EAAWx3C,EACXA,EAAU5C,KAAKw6E,QAAQoC,eAAehT,QAGrCxvB,EAGD6sC,EAAI8F,gBAAgB1kC,EAAQthB,EAAOxjC,EAAO40C,EAAWv1C,GAC9Cw3C,EAAS,MAAM,QAE1BA,EAAS,4BALEp6C,KAAKq8E,cAAcr8E,KAAK+sF,gBAAiB1kC,EAAQthB,EAAOxjC,EAAO40C,EAAWv1C,EAMzF,GAAC,CAAAw8B,IAAA,OAAA77B,OAAAwkF,EAAAtgD,IAAAC,IAAAA,MAkBD,SAAA+mB,IAAA,IAAAjK,EAAAnN,EAAAu1C,EAAAI,EAAA5yC,EAAA6yC,EAAAC,EAAAloD,UAAA,OAAA0C,IAAAA,MAAA,SAAAonB,GAAA,cAAAA,EAAA/mB,KAAA+mB,EAAA9mB,MAAA,OAkBK,GAlBMwc,EAAW0oC,EAAA7oF,OAAA,QAAAF,IAAA+oF,EAAA,IAAAA,EAAA,GAAU71C,EAAU61C,EAAA7oF,OAAA,QAAAF,IAAA+oF,EAAA,GAAAA,EAAA,GAAGltF,KAAKw6E,QAAQ2S,kBAAmBP,IAAaM,EAAA7oF,OAAA,QAAAF,IAAA+oF,EAAA,KAAAA,EAAA,GAASF,EAAQE,EAAA7oF,OAAA,QAAAF,IAAA+oF,EAAA,IAAAA,EAAA,GAAU9yC,EAAQ8yC,EAAA7oF,OAAA,QAAAF,IAAA+oF,EAAA,IAAAA,EAAA,GAErHtlB,GAAAA,WAAiBolB,KACjB5yC,EAAW4yC,EACXA,GAAW,GAGXplB,GAAAA,WAAiBglB,KACjBxyC,EAAWwyC,EACXA,GAAgB,EAChBI,GAAW,GAGXplB,GAAAA,WAAiBvwB,KACjB+C,EAAW/C,EACXA,EAAar3C,KAAKw6E,QAAQ2S,kBAC1BP,GAAgB,EAChBI,GAAW,GAIV5yC,EAAQ,CAAA0U,EAAA9mB,KAAA,gBAAA8mB,EAAAzmB,OAAA,SACFroC,KAAKq8E,cAAcr8E,KAAK4xD,KAAMpN,EAAanN,EAAYu1C,EAAeI,IAAS,YAGtFplB,GAAAA,SAAepjB,GAAc,CAAFsK,EAAA9mB,KAAA,YAEtB4/B,GAAAA,MAAYpjB,GAAY,CAAAsK,EAAA9mB,KAAA,gBAAA8mB,EAAAzmB,OAAA,SAClB+R,EAAS,+BAA6B,QAG8B,OAH9B0U,EAAA/mB,KAAA,GAGvCklD,EAAehG,EAAImG,WAAW5oC,EAAanN,EAAYu1C,GAAc99B,EAAAzmB,OAAA,SACpE+R,EAAS,KAAM6yC,IAAa,QAAAn+B,EAAA/mB,KAAA,GAAA+mB,EAAAnL,GAAAmL,EAAA,UAEnC1U,EAAQ0U,EAAAnL,IAAK,WAIhBikB,GAAAA,SAAepjB,GAAY,CAAAsK,EAAA9mB,KAAA,gBAAA8mB,EAAAzmB,OAAA,SACrB+R,EAAS,iCAA+B,WAE9C4yC,IAAYxoC,EAAYrM,UAAS,CAAA2W,EAAA9mB,KAAA,gBAAA8mB,EAAAzmB,OAAA,SAC3B+R,EAAS,kCAAgC,WAAA0U,EAAA/mB,KAAA,GAG3CilD,EAAU,CAAFl+B,EAAA9mB,KAAA,SAGM,GAFChoC,KAAKw6E,QAAQ53E,QAAQ+1C,MACjC34C,KAAKw6E,QAAQ53E,QAAQkmE,eAAezxB,IACtC9D,gBAEcvzC,KAAKw6E,QAAQ53E,QAAQ+1C,MAAM6L,EAAYw3B,SAAShP,SAAS,GAAGlwD,UAAUvZ,MAAM4pE,eAAc,CAAAre,EAAA9mB,KAAA,gBAAA8mB,EAAAzmB,OAAA,SAC/F+R,EAAS,sDAAoD,WAEnEy8B,GAAQryB,GAAc,CAAFsK,EAAA9mB,KAAA,gBAAA8mB,EAAAzmB,OAAA,SACd+R,EAAS,wBAAsB,eAAA0U,EAAAzmB,OAAA,SAGvC+R,EAAS,KACZwtB,GAAAA,OAAAA,gBAA6BvwB,EAAYmN,KAC5C,QAAAsK,EAAA/mB,KAAA,GAAA+mB,EAAAlL,GAAAkL,EAAA,UAED1U,EAAQ0U,EAAAlL,IAAK,yBAAAkL,EAAArmB,OAAA,GAAAgmB,EAAA,4BAEpB,kBAAAs5B,EAAAvgD,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,gBAAA77B,MA6BD,SAAcU,GAAsF,IAA7EozC,EAAUrS,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQ2S,kBAAmBlxC,EAAOjX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGoV,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAWtF,GAVI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiBvwB,KACjB+C,EAAW/C,EACXA,EAAar3C,KAAKw6E,QAAQ2S,oBAGzB/yC,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKqtF,cAAeppF,EAASozC,GAE3D,IAEI,OAAO+C,EAAS,KADK6sC,EAAIoG,cAAcppF,EAASozC,GAEpD,CAAE,MAAOigC,GACLl9B,EAASk9B,EACb,CACJ,GAAC,CAAAl4C,IAAA,iBAAA77B,MAMD,SAAe8kD,EAAQthB,EAAOxjC,GAAsE,IAA/D8zC,EAAUrS,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQ2S,kBAAmB/yC,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAMtF,GALI4iC,GAAAA,WAAiBvwB,KACjB+C,EAAW/C,EACXA,EAAar3C,KAAKw6E,QAAQ2S,oBAGzB/yC,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKoxD,eAAgB/I,EAAQthB,EAAOxjC,EAAO8zC,GAEzE,IAEI,OAAO+C,EAAS,KADK6sC,EAAI71B,eAAe/I,EAAQthB,EAAOxjC,EAAO8zC,GAElE,CAAE,MAAOigC,GACLl9B,EAASk9B,EACb,CACJ,GAAC,CAAAl4C,IAAA,YAAA77B,OAAAukF,EAAArgD,IAAAC,IAAAA,MAMD,SAAA0nB,IAAA,IAAA5K,EAAAnN,EAAAh6B,EAAA+8B,EAAAx3C,EAAA0qF,EAAAC,EAAAlH,EAAArhD,UAAA,OAAA0C,IAAAA,MAAA,SAAA2nB,GAAA,cAAAA,EAAAtnB,KAAAsnB,EAAArnB,MAAA,OAWK,GAXWwc,EAAW6hC,EAAAhiF,OAAA,QAAAF,IAAAkiF,EAAA,IAAAA,EAAA,GAAUhvC,EAAUgvC,EAAAhiF,OAAA,QAAAF,IAAAkiF,EAAA,GAAAA,EAAA,GAAGrmF,KAAKw6E,QAAQ2S,kBAAmB9vE,EAAYgpE,EAAAhiF,OAAA,QAAAF,IAAAkiF,EAAA,IAAAA,EAAA,GAAUjsC,EAAQisC,EAAAhiF,OAAA,QAAAF,IAAAkiF,EAAA,IAAAA,EAAA,GAExGze,GAAAA,WAAiBvqD,KACjB+8B,EAAW/8B,EACXA,EAAe,GAGfuqD,GAAAA,WAAiBvwB,KACjB+C,EAAW/C,EACXA,EAAar3C,KAAKw6E,QAAQ2S,kBAC1B9vE,EAAe,GAGd+8B,EAAQ,CAAAiV,EAAArnB,KAAA,eAAAqnB,EAAAhnB,OAAA,SACFroC,KAAKq8E,cAAcr8E,KAAKwtF,UAAWhpC,EAAanN,EAAYh6B,IAAa,UAE/EuqD,GAAAA,SAAepjB,IAAiBA,EAAYw3B,UAAax3B,EAAYw3B,SAAShP,SAAQ,CAAA3d,EAAArnB,KAAA,gBAAAqnB,EAAAhnB,OAAA,SAChF+R,EAAS,iCAA+B,WAI9CoK,EAAYw3B,SAAShP,SAAS,GAAGK,iBAAiBhwD,EAAe,GAAC,CAAAgyC,EAAArnB,KAAA,SAKsC,OAHzGwc,EAAYw3B,SAAShP,SAAS,GAAGK,cAAgBhwD,EAG3Cza,EAAU5C,KAAKw6E,QAAQ53E,QAAQ+1C,MAAM34C,KAAKw6E,QAAQ53E,QAAQkmE,eAAezxB,IAAa9D,cAAa8b,EAAArnB,KAAA,GAChFhoC,KAAKytF,cAAcjpC,EAAannC,GAAa,QAAtD,GAEe,sBAFzBiwE,EAAUj+B,EAAAjnB,MAEDa,OAAOx9B,KAA2B,CAAA4jD,EAAArnB,KAAA,gBAAAqnB,EAAAhnB,OAAA,SACtC+R,EAASkzC,EAAWrkD,OAAOhlC,UAAQ,QAO3C,GAJCspF,GAAW,EACfD,EAAWjY,WAAWztC,KAAKnB,KAAI,SAAArH,GACvBA,EAAIx8B,UAAYA,IAChB2qF,GAAW,EACnB,IAEKA,EAAQ,CAAAl+B,EAAArnB,KAAA,gBAAAqnB,EAAAhnB,OAAA,SACF+R,EAAS/C,EAAa,+BAA6B,YAE1Di2C,EAAWI,gBAA+D,GAA9CJ,EAAWI,cAActsD,QAAQx+B,GAAc,CAAAysD,EAAArnB,KAAA,gBAAAqnB,EAAAhnB,OAAA,SACpE+R,EAAS/C,EAAa,8BAA4B,YAIzDi2C,EAAW9oC,cAAe8oC,EAAW9oC,YAAYA,YAAW,CAAA6K,EAAArnB,KAAA,SAC5Dwc,EAAc8oC,EAAW9oC,YAAYA,YACjCnnC,EAAe,IACfmnC,EAAYw3B,SAAShP,SAAS,GAAGK,cAAgBhwD,GACpDgyC,EAAArnB,KAAA,wBAAAqnB,EAAAhnB,OAAA,SAEM+R,EAAS,iCAA+B,WAAAiV,EAAAtnB,KAAA,GAM9C8uC,GAAQryB,GAAc,CAAF6K,EAAArnB,KAAA,gBAAAqnB,EAAAhnB,OAAA,SACd+R,EAAS,wBAAsB,eAAAiV,EAAAhnB,OAAA,SAEnC+R,EAAS,KAAMwtB,GAAAA,OAAAA,gBAA6BvwB,EAAYmN,KAAa,QAAA6K,EAAAtnB,KAAA,GAAAsnB,EAAA1L,GAAA0L,EAAA,UAE5EjV,EAAQiV,EAAA1L,IAAK,yBAAA0L,EAAA5mB,OAAA,GAAA2mB,EAAA,oBAEpB,kBAAA04B,EAAAtgD,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,kBAAA77B,OAAAskF,EAAApgD,IAAAC,IAAAA,MAED,SAAA8nB,EAAsBhL,GAAW,IAAApK,EAAAssC,EAAA1hD,UAAA,OAAA0C,IAAAA,MAAA,SAAA+nB,GAAA,cAAAA,EAAA1nB,KAAA0nB,EAAAznB,MAAA,OAAkB,GAAhBoS,EAAQssC,EAAAriF,OAAA,QAAAF,IAAAuiF,EAAA,IAAAA,EAAA,GAC1B,CAAAj3B,EAAAznB,KAAA,eAAAynB,EAAApnB,OAAA,SACFroC,KAAKq8E,cAAcr8E,KAAK2tF,gBAAiBnpC,IAAY,UAE3DojB,GAAAA,SAAepjB,GAAY,CAAAiL,EAAAznB,KAAA,eAAAynB,EAAApnB,OAAA,SACrB+R,EAAS,iCAA+B,OAGnDp6C,KAAKw6E,QAAQqB,SAASvB,QAClB,yBACA91B,EACA,QACFhB,MAAK,SAAAva,GACHmR,EAAS,KAAMnR,EACnB,IAAE,OAAO,SAAAsE,GAAG,OAAI6M,EAAS7M,EAAI,IAAE,wBAAAkiB,EAAAhnB,OAAA,GAAA+mB,EAAA,UAClC,SAAAloB,GAAA,OAAAugD,EAAArgD,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,gBAAA77B,OAAAqkF,EAAAngD,IAAAC,IAAAA,MAED,SAAAioB,EAAoBnL,EAAannC,GAAY,IAAA+8B,EAAAysC,EAAA7hD,UAAA,OAAA0C,IAAAA,MAAA,SAAAkoB,GAAA,cAAAA,EAAA7nB,KAAA6nB,EAAA5nB,MAAA,OAIxC,GAJ0CoS,EAAQysC,EAAAxiF,OAAA,QAAAF,IAAA0iF,EAAA,IAAAA,EAAA,GAC/Cjf,GAAAA,WAAiBvqD,KACjB+8B,EAAW/8B,EACXA,OAAelZ,GAGdi2C,EAAQ,CAAAwV,EAAA5nB,KAAA,eAAA4nB,EAAAvnB,OAAA,SACFroC,KAAKq8E,cAAcr8E,KAAKytF,cAAejpC,EAAannC,IAAa,UAEvEuqD,GAAAA,SAAepjB,IAAiBA,EAAYw3B,UAAax3B,EAAYw3B,SAAShP,SAAQ,CAAApd,EAAA5nB,KAAA,eAAA4nB,EAAAvnB,OAAA,SAChF+R,EAAS,iCAA+B,OAMlD,GAJGwtB,GAAAA,UAAgBvqD,GAChBmnC,EAAYw3B,SAAShP,SAAS,GAAGK,cAAgBpqC,SAAS5lB,GACO,iBAAnDmnC,EAAYw3B,SAAShP,SAAS,GAAGK,gBAC/C7oB,EAAYw3B,SAAShP,SAAS,GAAGK,cAAgB,GAGhDzF,GAAAA,SAAepjB,GAAY,CAAAoL,EAAA5nB,KAAA,eAAA4nB,EAAAvnB,OAAA,SACrB+R,EAAS,iCAA+B,OAGnDp6C,KAAKw6E,QAAQqB,SAASvB,QAClB,uBACA91B,EACA,QACFhB,MAAK,SAAAva,GACHmR,EAAS,KAAMnR,EACnB,IAAE,OAAO,SAAAsE,GAAG,OAAI6M,EAAS7M,EAAI,IAAE,yBAAAqiB,EAAAnnB,OAAA,GAAAknB,EAAA,UAClC,SAAArN,EAAAqG,GAAA,OAAAi/B,EAAApgD,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,qBAAA77B,MAED,WAA8E,IAA3DqqF,EAAiB5oD,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAUiX,EAAOjX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGoV,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAMhE,OALI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGV7B,EAGAwtB,GAAAA,SAAegmB,GAGfhmB,GAAAA,SAAe3rB,GAGf2xC,EAAkBz1C,WAAcyvB,GAAAA,QAAcgmB,EAAkBz1C,gBAGrEn4C,KAAKw6E,QAAQqB,SAASvB,QAClB,8BACAsT,EACA,QACFpqC,MAAK,SAAAva,GACCA,EAAOA,SACPA,EAAOub,YAAcopC,GACzBxzC,EAAS,KAAMnR,EACnB,IAAE,OAAO,SAAAsE,GAAG,OAAI6M,EAAS7M,EAAI,IAVlB6M,EAAS,6BAHTA,EAAS,4BAHTA,EAAS,gCAHTp6C,KAAKq8E,cAAcr8E,KAAK6tF,mBAAoBD,EAAmB3xC,EAoB9E,GAAC,CAAA7c,IAAA,qBAAA77B,MAED,WAAiF,IAA9DuqF,EAAoB9oD,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAUiX,EAAOjX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGoV,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAMnE,GALI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,IAGV7B,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAK+tF,mBAAoBD,EAAsB7xC,GAE7E,IAAK2rB,GAAAA,MAAYkmB,GACb,OAAO1zC,EAAS,oCAEpB,IAAKwtB,GAAAA,SAAe3rB,GAChB,OAAO7B,EAAS,4BAEpB,IAAM4b,EAAS,CACXxR,YAAaspC,GAGjB9tF,KAAKw6E,QAAQqB,SAASvB,QAClB,sBACCtkB,EACD,QACFxS,MAAK,SAAAva,GACCA,EAAOA,SACPA,EAAOub,YAAchgB,KAAKwd,MAAM/Y,EAAOub,aACvCvb,EAAO+kD,eAAiBF,GAE5B1zC,EAAS,KAAMnR,EACnB,IAAE,OAAO,SAAAsE,GAAG,OAAI6M,EAAS7M,EAAI,GACjC,GAAC,CAAAnO,IAAA,kBAAA77B,OAAAyqD,EAAAvmB,IAAAC,IAAAA,MAED,SAAAooB,IAAA,IAAAn6C,EAAA+X,EAAAuuB,EAAA7B,EAAAx3C,EAAA4hD,EAAAopC,EAAA3kD,EAAA2yC,EAAA52C,UAAA,OAAA0C,IAAAA,MAAA,SAAAsoB,GAAA,cAAAA,EAAAjoB,KAAAioB,EAAAhoB,MAAA,OAOwC,GAPlBryB,EAAEimE,EAAAv3E,OAAA,QAAAF,IAAAy3E,EAAA,IAAAA,EAAA,GAAUluD,EAAMkuD,EAAAv3E,OAAA,QAAAF,IAAAy3E,EAAA,IAAAA,EAAA,GAAU3/B,EAAO2/B,EAAAv3E,OAAA,QAAAF,IAAAy3E,EAAA,GAAAA,EAAA,GAAG,CAAC,EAAGxhC,EAAQwhC,EAAAv3E,OAAA,QAAAF,IAAAy3E,EAAA,IAAAA,EAAA,GAChEhU,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGQ,iBAAZA,IACPA,EAAU,CAAC5E,WAAY4E,IAEtB7B,EAAQ,CAAA4V,EAAAhoB,KAAA,eAAAgoB,EAAA3nB,OAAA,SACFroC,KAAKq8E,cAAcr8E,KAAKiuF,gBAAiBt4E,EAAI+X,EAAQuuB,IAAQ,UAEnEj8C,KAAKw6E,QAAQS,UAAUtlE,GAAG,CAAAq6C,EAAAhoB,KAAA,gBAAAgoB,EAAA3nB,OAAA,SACpB+R,EAAS,+BAA6B,WAE5CwtB,GAAAA,UAAgBl6C,MAAWA,GAAU,GAAC,CAAAsiC,EAAAhoB,KAAA,gBAAAgoB,EAAA3nB,OAAA,SAChC+R,EAAS,4BAA0B,QAM5C,IAJF6B,EAAOs0B,GAAA,CACHl5B,WAAYr3C,KAAKw6E,QAAQ2S,kBACzBvqF,QAAS5C,KAAKw6E,QAAQoC,eAAez5C,KAClC8Y,IAGM5E,YAAe4E,EAAQr5C,QAAO,CAAAotD,EAAAhoB,KAAA,gBAAAgoB,EAAA3nB,OAAA,SAChC+R,EAAS,gEAA8D,QAGgC,OAHhC4V,EAAAjoB,KAAA,GAGxEnlC,EAAUq5C,EAAQ5E,WAAar3C,KAAKw6E,QAAQ53E,QAAQkmE,eAAe7sB,EAAQ5E,YAAc4E,EAAQr5C,QAAOotD,EAAAhoB,KAAA,GACpFhoC,KAAKw6E,QAAQ0T,mBAAmBrR,QAAQlnE,EAAI+X,EAAQ9qB,GAAQ,QAArE,OAAX4hD,EAAWwL,EAAA5nB,KAAA4nB,EAAAhoB,KAAG,GACYhoC,KAAK4xD,KAAKpN,EAAavI,EAAQ5E,iBAAclzC,GAAU,QAAhE,OAAjBypF,EAAiB59B,EAAA5nB,KAAA4nB,EAAAhoB,KAAG,GACLhoC,KAAK6tF,mBAAmBD,GAAkB,QAAnD,OAAN3kD,EAAM+mB,EAAA5nB,KAAA4nB,EAAA3nB,OAAA,SAEL+R,EAAS,KAAMnR,IAAO,eAAA+mB,EAAAjoB,KAAA,GAAAioB,EAAArM,GAAAqM,EAAA,UAAAA,EAAA3nB,OAAA,SAEtB+R,EAAQ4V,EAAArM,KAAI,yBAAAqM,EAAAvnB,OAAA,GAAAqnB,EAAA,oBAE1B,kBAAA9B,EAAAxmB,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,YAAA77B,OAAAokF,EAAAlgD,IAAAC,IAAAA,MAED,SAAAipB,IAAA,IAAAh7C,EAAA+X,EAAAsvD,EAAA/gC,EAAA7B,EAAAx3C,EAAA4hD,EAAAopC,EAAA3kD,EAAAklD,EAAAnpD,UAAA,OAAA0C,IAAAA,MAAA,SAAAkpB,GAAA,cAAAA,EAAA7oB,KAAA6oB,EAAA5oB,MAAA,OAOwC,GAPxBryB,EAAEw4E,EAAA9pF,OAAA,QAAAF,IAAAgqF,EAAA,IAAAA,EAAA,GAAUzgE,EAAMygE,EAAA9pF,OAAA,QAAAF,IAAAgqF,EAAA,IAAAA,EAAA,GAAUnR,EAAOmR,EAAA9pF,OAAA,QAAAF,IAAAgqF,EAAA,IAAAA,EAAA,GAAUlyC,EAAOkyC,EAAA9pF,OAAA,QAAAF,IAAAgqF,EAAA,GAAAA,EAAA,GAAG,CAAC,EAAG/zC,EAAQ+zC,EAAA9pF,OAAA,QAAAF,IAAAgqF,EAAA,IAAAA,EAAA,GAC3EvmB,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGQ,iBAAZA,IACPA,EAAU,CAAC5E,WAAY4E,IAEtB7B,EAAQ,CAAAwW,EAAA5oB,KAAA,eAAA4oB,EAAAvoB,OAAA,SACFroC,KAAKq8E,cAAcr8E,KAAKi9E,UAAWtnE,EAAI+X,EAAQsvD,EAAS/gC,IAAQ,UAEtEj8C,KAAKw6E,QAAQS,UAAUtlE,GAAG,CAAAi7C,EAAA5oB,KAAA,gBAAA4oB,EAAAvoB,OAAA,SACpB+R,EAAS,+BAA6B,WAE5CwtB,GAAAA,UAAgBl6C,MAAWA,GAAU,GAAC,CAAAkjC,EAAA5oB,KAAA,gBAAA4oB,EAAAvoB,OAAA,SAChC+R,EAAS,4BAA0B,QAGd,GAD5BwtB,GAAAA,UAAgBoV,KAChBA,EAAUA,EAAQt6C,YAEjBklC,GAAAA,SAAeoV,GAAQ,CAAApsB,EAAA5oB,KAAA,gBAAA4oB,EAAAvoB,OAAA,SACjB+R,EAAS,8BAA4B,QAM9C,IAJF6B,EAAOs0B,GAAA,CACHl5B,WAAYr3C,KAAKw6E,QAAQ2S,kBACzBvqF,QAAS5C,KAAKw6E,QAAQoC,eAAez5C,KAClC8Y,IAGM5E,YAAe4E,EAAQr5C,QAAO,CAAAguD,EAAA5oB,KAAA,gBAAA4oB,EAAAvoB,OAAA,SAChC+R,EAAS,gEAA8D,QAGgC,OAHhCwW,EAAA7oB,KAAA,GAGxEnlC,EAAUq5C,EAAQ5E,WAAar3C,KAAKw6E,QAAQ53E,QAAQkmE,eAAe7sB,EAAQ5E,YAAc4E,EAAQr5C,QAAOguD,EAAA5oB,KAAA,GACpFhoC,KAAKw6E,QAAQ0T,mBAAmBjR,UAAUtnE,EAAI+X,EAAQsvD,EAASp6E,GAAQ,QAAhF,OAAX4hD,EAAWoM,EAAAxoB,KAAAwoB,EAAA5oB,KAAG,GACYhoC,KAAK4xD,KAAKpN,EAAavI,EAAQ5E,iBAAclzC,GAAU,QAAhE,OAAjBypF,EAAiBh9B,EAAAxoB,KAAAwoB,EAAA5oB,KAAG,GACLhoC,KAAK6tF,mBAAmBD,GAAkB,QAAnD,OAAN3kD,EAAM2nB,EAAAxoB,KAAAwoB,EAAAvoB,OAAA,SAEL+R,EAAS,KAAMnR,IAAO,eAAA2nB,EAAA7oB,KAAA,GAAA6oB,EAAAjN,GAAAiN,EAAA,UAAAA,EAAAvoB,OAAA,SAEtB+R,EAAQwW,EAAAjN,KAAI,yBAAAiN,EAAAnoB,OAAA,GAAAkoB,EAAA,oBAE1B,kBAAAg3B,EAAAngD,MAAA,KAAAxC,UAAA,IAED,CAAA5F,IAAA,gBAAA77B,OAAAmkF,EAAAjgD,IAAAC,IAAAA,MAWA,SAAAmpB,IAAA,IAAAnjC,EAAAkoC,EAAA/lC,EAAAosB,EAAAnsB,EAAAsqB,EAAAx3C,EAAAwrF,EAAAR,EAAA3kD,EAAAolD,EAAArpD,UAAA,OAAA0C,IAAAA,MAAA,SAAAopB,GAAA,cAAAA,EAAA/oB,KAAA+oB,EAAA9oB,MAAA,OAqBwC,GArBpBta,EAAM2gE,EAAAhqF,OAAA,QAAAF,IAAAkqF,EAAA,GAAAA,EAAA,GAAG,EAAGz4B,EAAQy4B,EAAAhqF,OAAA,QAAAF,IAAAkqF,EAAA,GAAAA,EAAA,GAAG,EAAGx+D,EAAQw+D,EAAAhqF,OAAA,QAAAF,IAAAkqF,EAAA,GAAAA,EAAA,GAAG,YAAapyC,EAAOoyC,EAAAhqF,OAAA,QAAAF,IAAAkqF,EAAA,GAAAA,EAAA,GAAG,CAAC,EAAGv+D,EAAeu+D,EAAAhqF,OAAA,QAAAF,IAAAkqF,EAAA,GAAAA,EAAA,QAAGlqF,EAAWi2C,EAAQi0C,EAAAhqF,OAAA,QAAAF,IAAAkqF,EAAA,IAAAA,EAAA,GACjHzmB,GAAAA,WAAiB93C,KACjBsqB,EAAWtqB,EACXA,OAAkB3rB,GAElByjE,GAAAA,WAAiBhS,KACjBxb,EAAWwb,EACXA,EAAW,GAGXgS,GAAAA,WAAiB/3C,KACjBuqB,EAAWvqB,EACXA,EAAW,aAGX+3C,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGQ,iBAAZA,IACPA,EAAU,CAAC5E,WAAY4E,IAEtB7B,EAAQ,CAAA0W,EAAA9oB,KAAA,gBAAA8oB,EAAAzoB,OAAA,SACFroC,KAAKq8E,cAAcr8E,KAAKu9E,cAAe7vD,EAAQkoC,EAAU/lC,EAAUosB,EAASnsB,IAAgB,WAElG,CAAC,YAAa,UAAUi3C,SAASl3C,GAAS,CAAAihC,EAAA9oB,KAAA,gBAAA8oB,EAAAzoB,OAAA,SACpC+R,EAAS,gEAA8D,WAE7EwtB,GAAAA,UAAgBl6C,MAAWA,GAAU,GAAC,CAAAojC,EAAA9oB,KAAA,gBAAA8oB,EAAAzoB,OAAA,SAChC+R,EAAS,4BAA0B,WAEzCwtB,GAAAA,UAAgBhS,MAAaA,EAAW,GAAC,CAAA9E,EAAA9oB,KAAA,gBAAA8oB,EAAAzoB,OAAA,SACnC+R,EAAS,iDAA+C,QAMjE,IAJF6B,EAAOs0B,GAAA,CACHl5B,WAAYr3C,KAAKw6E,QAAQ2S,kBACzBvqF,QAAS5C,KAAKw6E,QAAQoC,eAAez5C,KAClC8Y,IAGM5E,YAAe4E,EAAQr5C,QAAO,CAAAkuD,EAAA9oB,KAAA,gBAAA8oB,EAAAzoB,OAAA,SAChC+R,EAAS,gEAA8D,QAGgC,OAHhC0W,EAAA/oB,KAAA,GAGxEnlC,EAAUq5C,EAAQ5E,WAAar3C,KAAKw6E,QAAQ53E,QAAQkmE,eAAe7sB,EAAQ5E,YAAc4E,EAAQr5C,QAAOkuD,EAAA9oB,KAAA,GAClFhoC,KAAKw6E,QAAQ0T,mBAAmB3Q,cAAc7vD,EAAQkoC,EAAU/lC,EAAUjtB,EAASktB,GAAgB,QAA5G,OAAbytD,EAAazsB,EAAA1oB,KAAA0oB,EAAA9oB,KAAG,GACUhoC,KAAK4xD,KAAK2rB,EAAethC,EAAQ5E,iBAAclzC,GAAU,QAAlE,OAAjBypF,EAAiB98B,EAAA1oB,KAAA0oB,EAAA9oB,KAAG,GACLhoC,KAAK6tF,mBAAmBD,GAAkB,QAAnD,OAAN3kD,EAAM6nB,EAAA1oB,KAAA0oB,EAAAzoB,OAAA,SAEL+R,EAAS,KAAMnR,IAAO,eAAA6nB,EAAA/oB,KAAA,GAAA+oB,EAAAnN,GAAAmN,EAAA,UAAAA,EAAAzoB,OAAA,SAEtB+R,EAAQ0W,EAAAnN,KAAI,yBAAAmN,EAAAroB,OAAA,GAAAooB,EAAA,oBAE1B,kBAAA62B,EAAAlgD,MAAA,KAAAxC,UAAA,IAED,CAAA5F,IAAA,kBAAA77B,OAAAkkF,EAAAhgD,IAAAC,IAAAA,MAQA,SAAAupB,IAAA,IAAAphC,EAAAosB,EAAAnsB,EAAAsqB,EAAAx3C,EAAA0rF,EAAAV,EAAA3kD,EAAAslD,EAAAvpD,UAAA,OAAA0C,IAAAA,MAAA,SAAAwpB,GAAA,cAAAA,EAAAnpB,KAAAmpB,EAAAlpB,MAAA,OAiBwC,GAjBlBnY,EAAQ0+D,EAAAlqF,OAAA,QAAAF,IAAAoqF,EAAA,GAAAA,EAAA,GAAG,YAAatyC,EAAOsyC,EAAAlqF,OAAA,QAAAF,IAAAoqF,EAAA,GAAAA,EAAA,GAAG,CAAC,EAAGz+D,EAAey+D,EAAAlqF,OAAA,QAAAF,IAAAoqF,EAAA,GAAAA,EAAA,QAAGpqF,EAAWi2C,EAAQm0C,EAAAlqF,OAAA,QAAAF,IAAAoqF,EAAA,IAAAA,EAAA,GACzF3mB,GAAAA,WAAiB93C,KACjBsqB,EAAWtqB,EACXA,OAAkB3rB,GAGlByjE,GAAAA,WAAiB/3C,KACjBuqB,EAAWvqB,EACXA,EAAW,aAGX+3C,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGQ,iBAAZA,IACPA,EAAU,CAAC5E,WAAY4E,IAEtB7B,EAAQ,CAAA8W,EAAAlpB,KAAA,gBAAAkpB,EAAA7oB,OAAA,SACFroC,KAAKq8E,cAAcr8E,KAAKizB,gBAAiBpD,EAAUosB,EAASnsB,IAAgB,WAElF,CAAC,YAAa,UAAUi3C,SAASl3C,GAAS,CAAAqhC,EAAAlpB,KAAA,gBAAAkpB,EAAA7oB,OAAA,SACpC+R,EAAS,gEAA8D,QAMhF,IAJF6B,EAAOs0B,GAAA,CACHl5B,WAAYr3C,KAAKw6E,QAAQ2S,kBACzBvqF,QAAS5C,KAAKw6E,QAAQoC,eAAez5C,KAClC8Y,IAGM5E,YAAe4E,EAAQr5C,QAAO,CAAAsuD,EAAAlpB,KAAA,gBAAAkpB,EAAA7oB,OAAA,SAChC+R,EAAS,gEAA8D,QAGgC,OAHhC8W,EAAAnpB,KAAA,GAGxEnlC,EAAUq5C,EAAQ5E,WAAar3C,KAAKw6E,QAAQ53E,QAAQkmE,eAAe7sB,EAAQ5E,YAAc4E,EAAQr5C,QAAOsuD,EAAAlpB,KAAA,GAChFhoC,KAAKw6E,QAAQ0T,mBAAmBj7D,gBAAgBpD,EAAUjtB,EAASktB,GAAgB,QAA5F,OAAfmD,EAAei+B,EAAA9oB,KAAA8oB,EAAAlpB,KAAG,GACQhoC,KAAK4xD,KAAK3+B,EAAiBgpB,EAAQ5E,iBAAclzC,GAAU,QAApE,OAAjBypF,EAAiB18B,EAAA9oB,KAAA8oB,EAAAlpB,KAAG,GACLhoC,KAAK6tF,mBAAmBD,GAAkB,QAAnD,OAAN3kD,EAAMioB,EAAA9oB,KAAA8oB,EAAA7oB,OAAA,SAEL+R,EAAS,KAAMnR,IAAO,eAAAioB,EAAAnpB,KAAA,GAAAmpB,EAAAvN,GAAAuN,EAAA,UAAAA,EAAA7oB,OAAA,SAEtB+R,EAAQ8W,EAAAvN,KAAI,yBAAAuN,EAAAzoB,OAAA,GAAAwoB,EAAA,oBAE1B,kBAAAw2B,EAAAjgD,MAAA,KAAAxC,UAAA,IAED,CAAA5F,IAAA,gBAAA77B,OAAAikF,EAAA//C,IAAAC,IAAAA,MAUA,SAAA2pB,IAAA,IAAApnD,EAAAgyC,EAAA7B,EAAAx3C,EAAA4rF,EAAAZ,EAAA3kD,EAAAwlD,EAAAzpD,UAAA,OAAA0C,IAAAA,MAAA,SAAA4pB,GAAA,cAAAA,EAAAvpB,KAAAupB,EAAAtpB,MAAA,OAOwC,GAPpB/9B,EAAWwkF,EAAApqF,OAAA,QAAAF,IAAAsqF,EAAA,IAAAA,EAAA,GAAUxyC,EAAOwyC,EAAApqF,OAAA,QAAAF,IAAAsqF,EAAA,GAAAA,EAAA,GAAG,CAAC,EAAGr0C,EAAQq0C,EAAApqF,OAAA,QAAAF,IAAAsqF,EAAA,IAAAA,EAAA,GACvD7mB,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGQ,iBAAZA,IACPA,EAAU,CAAC5E,WAAY4E,IAEtB7B,EAAU,CAAFkX,EAAAtpB,KAAA,eAAAspB,EAAAjpB,OAAA,SACFroC,KAAKq8E,cAAcr8E,KAAK6iF,cAAe54E,EAAagyC,IAAQ,UAGlE2rB,GAAAA,SAAe39D,IAAiBA,EAAY5F,OAAM,CAAAitD,EAAAtpB,KAAA,eAAAspB,EAAAjpB,OAAA,SAC5C+R,EAAS,0BAAwB,OAO1C,IAJF6B,EAAOs0B,GAAA,CACHl5B,WAAYr3C,KAAKw6E,QAAQ2S,kBACzBvqF,QAAS5C,KAAKw6E,QAAQoC,eAAez5C,KAClC8Y,IAGM5E,YAAe4E,EAAQr5C,QAAO,CAAA0uD,EAAAtpB,KAAA,gBAAAspB,EAAAjpB,OAAA,SAChC+R,EAAS,gEAA8D,QAGgC,OAHhCkX,EAAAvpB,KAAA,GAGxEnlC,EAAUq5C,EAAQ5E,WAAar3C,KAAKw6E,QAAQ53E,QAAQkmE,eAAe7sB,EAAQ5E,YAAc4E,EAAQr5C,QAAO0uD,EAAAtpB,KAAA,GAClFhoC,KAAKw6E,QAAQ0T,mBAAmBrL,cAAc54E,EAAarH,GAAQ,QAA5E,OAAbigF,EAAavxB,EAAAlpB,KAAAkpB,EAAAtpB,KAAG,GACUhoC,KAAK4xD,KAAKixB,EAAe5mC,EAAQ5E,iBAAclzC,GAAU,QAAlE,OAAjBypF,EAAiBt8B,EAAAlpB,KAAAkpB,EAAAtpB,KAAG,GACLhoC,KAAK6tF,mBAAmBD,GAAkB,QAAnD,OAAN3kD,EAAMqoB,EAAAlpB,KAAAkpB,EAAAjpB,OAAA,SAEL+R,EAAS,KAAMnR,IAAO,eAAAqoB,EAAAvpB,KAAA,GAAAupB,EAAA3N,GAAA2N,EAAA,UAAAA,EAAAjpB,OAAA,SAEtB+R,EAAQkX,EAAA3N,KAAI,yBAAA2N,EAAA7oB,OAAA,GAAA4oB,EAAA,oBAE1B,kBAAAm2B,EAAAhgD,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,cAAA77B,MAED,WACI,OAAOvD,KAAK4xD,KAAIpqB,MAATxnC,KAAIglC,UACf,GAAC,CAAA5F,IAAA,YAAA77B,MAED,WACI,OAAOvD,KAAKi9E,UAASz1C,MAAdxnC,KAAIglC,UACf,GAAC,CAAA5F,IAAA,OAAA77B,MAED,WACI,OAAOvD,KAAKiuF,gBAAezmD,MAApBxnC,KAAIglC,UACf,GAAC,CAAA5F,IAAA,UAAA77B,MAED,WACI,OAAOvD,KAAKiuF,gBAAezmD,MAApBxnC,KAAIglC,UACf,GAAC,CAAA5F,IAAA,YAAA77B,MAED,WACI,OAAOvD,KAAK6tF,mBAAkBrmD,MAAvBxnC,KAAIglC,UACf,GAAC,CAAA5F,IAAA,eAAA77B,MAED,WACI,OAAOvD,KAAK+tF,mBAAkBvmD,MAAvBxnC,KAAIglC,UACf,GAAC,CAAA5F,IAAA,kBAAA77B,MAED,WACI,OAAOvD,KAAK4xD,KAAIpqB,MAATxnC,KAAIglC,UACf,GAEA,CAAA5F,IAAA,cAAA77B,MAGA,WAAkD,IAAtCkgF,EAAUz+C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAUoV,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GACpC,OAAKoV,GAGAwtB,GAAAA,UAAgB6b,IAAeA,EAAa,EACtCrpC,EAAS,oCAEpBp6C,KAAKw6E,QAAQqB,SAASvB,QAAQ,yBAA0B,CACpDhjE,GAAI2rB,SAASwgD,IACd,QAAQjgC,MAAK,SAAAkrC,GACZt0C,EAAS,KAAMs0C,EACnB,IAAE,OAAO,SAAAnhD,GAAG,OAAI6M,EAAS7M,EAAI,IATlBvtC,KAAKq8E,cAAcr8E,KAAK2uF,YAAalL,EAUpD,GAEA,CAAArkD,IAAA,gBAAA77B,MAGA,WAAgC,IAAlB62C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAClB,IAAKoV,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAK4uF,eAEnC5uF,KAAKw6E,QAAQqB,SAASvB,QAAQ,uBAAwB,CAAC,EAAG,QAAQ92B,MAAK,SAAAqrC,GAAsB,IAAAC,EAAAD,EAApBE,UACrE30C,EAAS,UADqE,IAAA00C,EAAG,GAAEA,EAEvF,IAAE,OAAO,SAAAvhD,GAAG,OAAI6M,EAAS7M,EAAI,GACjC,GAEA,CAAAnO,IAAA,qBAAA77B,MAGA,WAAqC,IAAlB62C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GACvB,IAAKoV,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKgvF,oBAEnChvF,KAAKw6E,QAAQqB,SAASvB,QAAQ,4BAA6B,CAAC,EAAG,QAAQ92B,MAAK,SAAAyrC,GAA2B,IAAAC,EAAAD,EAAzBE,eAC1E/0C,EAAS,UAD+E,IAAA80C,EAAG,GAAEA,EAEjG,IAAE,OAAO,SAAA3hD,GAAG,OAAI6M,EAAS7M,EAAI,GACjC,GAEA,CAAAnO,IAAA,sBAAA77B,MAGA,WAAiF,IAA7DX,EAAOoiC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAKiX,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GACnE,OAAKoV,EAGAp6C,KAAKw6E,QAAQS,UAAUr4E,QAG5B5C,KAAKw6E,QAAQqB,SAASvB,QAAQ,4BAA6B,CACvD13E,QAAS5C,KAAKw6E,QAAQ53E,QAAQ+1C,MAAM/1C,IACrC,QAAQ4gD,MAAK,SAAA4rC,GACZh1C,EAAS,KAAMg1C,EACnB,IAAE,OAAO,SAAA7hD,GAAG,OAAI6M,EAAS7M,EAAI,IANlB6M,EAAS,4BAHTp6C,KAAKq8E,cAAcr8E,KAAKqvF,oBAAqBzsF,EAU5D,GAEA,CAAAw8B,IAAA,yBAAA77B,MAGA,WAAoK,IAA7I+rF,EAAWtqD,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAK3V,EAASwX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAK8Y,EAAOjX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,CAAEg7C,WAAW,GAAQ5lC,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAiBtJ,OAhBG4iC,GAAAA,WAAiB3rB,KAChB7B,EAAW6B,EACXA,EAAU,CAAE+jC,WAAW,IAGxBpY,GAAAA,WAAiBp6C,KAChB4sB,EAAW5sB,EACXA,EAAYxtB,KAAKw6E,QAAQoC,eAAez5C,KAGzCykC,GAAAA,WAAiB0nB,KAChBl1C,EAAWk1C,EACXA,EAActvF,KAAKw6E,QAAQoC,eAAez5C,IAC1C3V,EAAYxtB,KAAKw6E,QAAQoC,eAAez5C,KAGvCiX,EAGAp6C,KAAKw6E,QAAQS,UAAUqU,IAGvBtvF,KAAKw6E,QAAQS,UAAUztD,QAG5BxtB,KAAKw6E,QAAQv+B,EAAQ+jC,UAAY,eAAiB,YAAY1F,QAAQ,SAAD/2C,OAAU0Y,EAAQ+jC,UAAY,WAAa,GAAE,2BAA2B,CACzIsP,YAAa32C,GAAM22C,GACnB9hE,UAAWmrB,GAAMnrB,IAClB,QAAQg2B,MAAK,SAAA4rC,GACZh1C,EAAS,KAAMg1C,EACnB,IAAE,OAAO,SAAA7hD,GAAG,OAAI6M,EAAS7M,EAAI,IAVlB6M,EAAS,4BAHTp6C,KAAKq8E,cAAcr8E,KAAKuvF,uBAAwBD,EAAa9hE,EAAWyuB,EAcvF,GAEA,CAAA7c,IAAA,qCAAA77B,MAGA,WAA+H,IAA5FX,EAAOoiC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAK8Y,EAAOjX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,CAAEg7C,WAAW,GAAQ5lC,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAWjH,OAVG4iC,GAAAA,WAAiB3rB,KAChB7B,EAAW6B,EACXA,EAAU,CAAE+jC,WAAW,IAGxBpY,GAAAA,WAAiBhlE,KAChBw3C,EAAWx3C,EACXA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,KAGrCiX,EAGAp6C,KAAKw6E,QAAQS,UAAUr4E,QAG5B5C,KAAKw6E,QAAQv+B,EAAQ+jC,UAAY,eAAiB,YAAY1F,QAAQ,SAAD/2C,OAAU0Y,EAAQ+jC,UAAY,WAAa,GAAE,uCAAuC,CACrJz8E,MAAOo1C,GAAM/1C,IACd,QAAQ4gD,MAAK,SAAA4rC,GACZh1C,EAAS,KAAMg1C,EACnB,IAAE,OAAO,SAAA7hD,GAAG,OAAI6M,EAAS7M,EAAI,IANlB6M,EAAS,4BAHTp6C,KAAKq8E,cAAcr8E,KAAKwvF,mCAAoC5sF,EAASq5C,EAUpF,GAEA,CAAA7c,IAAA,yBAAA77B,MAGA,WAA2I,IAApHX,EAAOoiC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAKtT,EAAQmV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,YAAaiX,EAAOjX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,CAAEg7C,WAAW,GAAQ5lC,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAgB7H,OAfG4iC,GAAAA,WAAiB3rB,KAChB7B,EAAW6B,EACXA,EAAU,CAAE+jC,WAAW,IAGxBpY,GAAAA,WAAiB/3C,KAChBuqB,EAAWvqB,EACXA,EAAW,aAGZ+3C,GAAAA,WAAiBhlE,KAChBw3C,EAAWx3C,EACXA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,KAGrCiX,EAGAp6C,KAAKw6E,QAAQS,UAAUr4E,QAGxB5C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,WACNyH,KAAM,WACN5G,MAAOssB,EACPrtB,IAAK,gEAEV43C,IAGHp6C,KAAKw6E,QAAQv+B,EAAQ+jC,UAAY,eAAiB,YAAY1F,QAAQ,SAAD/2C,OAAU0Y,EAAQ+jC,UAAY,WAAa,GAAE,2BAA2B,CACzI7S,cAAex0B,GAAM/1C,GACrBuH,KAAmB,WAAb0lB,EAAwB,EAAI,GACnC,QAAQ2zB,MAAK,SAAA4rC,GACZh1C,EAAS,KAAMg1C,EACnB,IAAE,OAAO,SAAA7hD,GAAG,OAAI6M,EAAS7M,EAAI,KAjBlB6M,EAAS,4BAHTp6C,KAAKq8E,cAAcr8E,KAAKyvF,uBAAwB7sF,EAASitB,EAAUosB,EAqBlF,GAEA,CAAA7c,IAAA,4BAAA77B,MAGA,WAAsH,IAA5FX,EAAOoiC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAK8Y,EAAOjX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,CAAEg7C,WAAW,GAAQ5lC,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAWxG,OAVG4iC,GAAAA,WAAiB3rB,KAChB7B,EAAW6B,EACXA,EAAU,CAAE+jC,WAAW,IAGxBpY,GAAAA,WAAiBhlE,KAChBw3C,EAAWx3C,EACXA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,KAGrCiX,EAGAp6C,KAAKw6E,QAAQS,UAAUr4E,QAG5B5C,KAAKw6E,QAAQv+B,EAAQ+jC,UAAY,eAAiB,YAAY1F,QAAQ,SAAD/2C,OAAU0Y,EAAQ+jC,UAAY,WAAa,GAAE,8BAA8B,CAC5I7S,cAAex0B,GAAM/1C,IACtB,QAAQ4gD,MAAK,SAAA1+B,GACZs1B,EAAS,KAAMt1B,EACnB,IAAE,OAAO,SAAAyoB,GAAG,OAAI6M,EAAS7M,EAAI,IANlB6M,EAAS,4BAHTp6C,KAAKq8E,cAAcr8E,KAAK0vF,0BAA2B9sF,EAASq5C,EAU3E,GAEA,CAAA7c,IAAA,+BAAA77B,MAGA,WAAiJ,IAApHX,EAAOoiC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhlC,KAAKw6E,QAAQoC,eAAez5C,IAAK/d,EAAS4f,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGc,KAAKoxB,MAAOjb,EAAOjX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,CAAEg7C,WAAW,GAAQ5lC,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAgBnI,OAfG4iC,GAAAA,WAAiB3rB,KAChB7B,EAAW6B,EACXA,EAAU,CAAE+jC,WAAW,IAGxBpY,GAAAA,WAAiBxiD,KAChBg1B,EAAWh1B,EACXA,EAAY0gB,KAAKoxB,OAGlB0Q,GAAAA,WAAiBhlE,KAChBw3C,EAAWx3C,EACXA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,KAGrCiX,EAGAp6C,KAAKw6E,QAAQS,UAAUr4E,IAGvBglE,GAAAA,UAAgBxiD,IAAcA,EAAY,EACpCg1B,EAAS,mCAEpBp6C,KAAKw6E,QAAQv+B,EAAQ+jC,UAAY,eAAiB,YAAY1F,QAAQ,SAAD/2C,OAAU0Y,EAAQ+jC,UAAY,WAAa,GAAE,iCAAiC,CAC/I7S,cAAex0B,GAAM/1C,GACrBwiB,UAAWA,GACZ,QAAQo+B,MAAK,SAAA1+B,GACZs1B,EAAS,KAAMt1B,EACnB,IAAE,OAAO,SAAAyoB,GAAG,OAAI6M,EAAS7M,EAAI,IAVlB6M,EAAS,4BAHTp6C,KAAKq8E,cAAcr8E,KAAK2vF,6BAA8B/sF,EAASwiB,EAAW62B,EAezF,GAEA,CAAA7c,IAAA,kBAAA77B,MAGA,WAAsD,IAAtCihF,EAAUx/C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAUoV,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GACxC,OAAKoV,GAGAwtB,GAAAA,UAAgB4c,IAAeA,EAAa,EACtCpqC,EAAS,oCAEpBp6C,KAAKw6E,QAAQqB,SAASvB,QAAQ,yBAA0B,CACpDhjE,GAAIktE,GACL,QAAQhhC,MAAK,SAAAosC,GACZx1C,EAAS,KAAMw1C,EACnB,IAAE,OAAO,SAAAriD,GAAG,OAAI6M,EAAS7M,EAAI,IATlBvtC,KAAKq8E,cAAcr8E,KAAK6vF,gBAAiBrL,EAUxD,GAEA,CAAAplD,IAAA,gBAAA77B,MAGA,WAAgC,IAAlB62C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAClB,IAAKoV,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAK8vF,eAEnC9vF,KAAKw6E,QAAQqB,SAASvB,QAAQ,uBAAwB,CAAC,EAAG,QAAQ92B,MAAK,SAAAusC,GAAsB,IAAAC,EAAAD,EAApBE,UACrE71C,EAAS,UADqE,IAAA41C,EAAG,GAAEA,EAEvF,GAAG,QAAO,OAAO,SAAAziD,GAAG,OAAI6M,EAAS7M,EAAI,GACzC,GAEA,CAAAnO,IAAA,yBAAA77B,MAGA,WAAiE,IAA1CgpC,EAAKvH,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,GAAI8F,EAAM9F,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,EAAGoV,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GASnD,GARI4iC,GAAAA,WAAiB98B,KACjBsP,EAAWtP,EACXA,EAAS,GAET88B,GAAAA,WAAiBr7B,KACjB6N,EAAW7N,EACXA,EAAQ,KAEP6N,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKkwF,uBAAwB3jD,EAAOzB,GAElE9qC,KAAKw6E,QAAQqB,SAASvB,QAAQ,kCAAmC,CAC7D/tC,MAAAA,EACAzB,OAAAA,GACD,QAAQ0Y,MAAK,SAAA2sC,GAAsB,IAAAC,EAAAD,EAApBF,UACd71C,EAAS,UADc,IAAAg2C,EAAG,GAAEA,EAEhC,IAAE,OAAO,SAAA7iD,GAAG,OAAI6M,EAAS7M,EAAI,GACjC,GAEA,CAAAnO,IAAA,cAAA77B,MAGA,WAA8B,IAAlB62C,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAChB,IAAKoV,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKqwF,aAEnCrwF,KAAKw6E,QAAQqB,SAASvB,QAAQ,qBAAsB,CAAC,EAAG,QAAQ92B,MAAK,SAAAja,GACjE6Q,EAAS,KAAM7Q,EACnB,GAAG,QAAO,OAAO,SAAAgE,GAAG,OAAI6M,EAAS7M,EAAI,GACzC,GAAC,CAAAnO,IAAA,qBAAA77B,MAGD,WAAsD,IAAAg9D,EAAA,KAAnCyc,EAAOh4C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAUoV,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GACxC,OAAKoV,GAGDwtB,GAAAA,UAAgBoV,KAChBA,EAAUA,EAAQt6C,YAEjBklC,GAAAA,SAAeoV,IAAaA,EAAQ34E,YAGzCrE,KAAKw6E,QAAQqB,SAASvB,QAAQ,iCAAkC,CAC5D/2E,MAAOvD,KAAKw6E,QAAQa,SAAS2B,IAC9B,QAAQx5B,MAAK,SAAAxC,GACZ,GAAIpf,MAAMkH,QAAQkY,EAAM8pC,YACpB1wC,EAAS,KAAM4G,EAAM8pC,WAAWrkD,KAAI,SAAAO,GAAC,OAAIu5B,EAAKwqB,YAAY/jD,EAAE,UACzD,IAAKga,EAAMt+C,KACd,OAAO03C,EAAS,wBAEpBA,EAAS,KAAMmmB,EAAKwqB,YAAY/pC,GACpC,IAAE,OAAO,SAAAzT,GAAG,OAAI6M,EAAS7M,EAAI,IAXlB6M,EAAS,8BANTp6C,KAAKq8E,cAAcr8E,KAAKswF,mBAAoBtT,EAkB3D,GAAC,CAAA59C,IAAA,eAAA77B,MAED,WAAgD,IAAAo9D,EAAA,KAAnCqc,EAAOh4C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAUoV,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAClC,OAAKoV,GAGDwtB,GAAAA,UAAgBoV,KAChBA,EAAUA,EAAQt6C,YAEjBklC,GAAAA,SAAeoV,IAAaA,EAAQ34E,YAGzCrE,KAAKw6E,QAAQqB,SAASvB,QAAQ,2BAA4B,CACtD/2E,MAAOy5E,GACR,QAAQx5B,MAAK,SAAAxC,GACZ,IAAKA,EAAMt+C,KACP,OAAO03C,EAAS,wBAEpBA,EAAS,KAAMumB,EAAKoqB,YAAY/pC,GACpC,IAAE,OAAO,SAAAzT,GAAG,OAAI6M,EAAS7M,EAAI,IATlB6M,EAAS,8BANTp6C,KAAKq8E,cAAcr8E,KAAKuwF,aAAcvT,EAgBrD,GAAC,CAAA59C,IAAA,YAAA77B,OAAAgkF,EAAA9/C,IAAAC,IAAAA,MAED,SAAAkmB,EAAgBhrD,GAAO,IAAAq5C,EAAA7B,EAAAo2C,EAAAxrD,UAAA,OAAA0C,IAAAA,MAAA,SAAAmmB,GAAA,cAAAA,EAAA9lB,KAAA8lB,EAAA7lB,MAAA,OACM,OADUoS,EAAQo2C,EAAAnsF,OAAA,QAAAF,IAAAqsF,EAAA,IAAAA,EAAA,IAAtBv0C,EAAOu0C,EAAAnsF,OAAA,QAAAF,IAAAqsF,EAAA,GAAAA,EAAA,GAAG,CAAC,GACxBxQ,WAAY,EAAKnyB,EAAAxlB,OAAA,SAClBroC,KAAKywF,WAAW7tF,EAASq5C,EAAS7B,IAAS,wBAAAyT,EAAAplB,OAAA,GAAAmlB,EAAA,UACrD,SAAAhF,GAAA,OAAA2+B,EAAA//C,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,uBAAA77B,OAAA+jF,EAAA7/C,IAAAC,IAAAA,MAED,SAAAgpD,EAA2B9tF,GAAO,IAAAq5C,EAAA7B,EAAAu2C,EAAA3rD,UAAA,OAAA0C,IAAAA,MAAA,SAAAkpD,GAAA,cAAAA,EAAA7oD,KAAA6oD,EAAA5oD,MAAA,OACJ,OADoBoS,EAAQu2C,EAAAtsF,OAAA,QAAAF,IAAAwsF,EAAA,IAAAA,EAAA,IAAtB10C,EAAO00C,EAAAtsF,OAAA,QAAAF,IAAAwsF,EAAA,GAAAA,EAAA,GAAG,CAAC,GACnC3Q,WAAY,EAAM4Q,EAAAvoD,OAAA,SACnBroC,KAAKywF,WAAW7tF,EAASq5C,EAAS7B,IAAS,wBAAAw2C,EAAAnoD,OAAA,GAAAioD,EAAA,UACrD,SAAAvhC,GAAA,OAAAm4B,EAAA9/C,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,eAAA77B,OAAA8jF,EAAA5/C,IAAAC,IAAAA,MAED,SAAAmpD,EAAmBjuF,GAAO,IAAAq5C,EAAA7B,EAAA02C,EAAA9rD,UAAA,OAAA0C,IAAAA,MAAA,SAAAqpD,GAAA,cAAAA,EAAAhpD,KAAAgpD,EAAA/oD,MAAA,OACG,OADaoS,EAAQ02C,EAAAzsF,OAAA,QAAAF,IAAA2sF,EAAA,IAAAA,EAAA,IAAtB70C,EAAO60C,EAAAzsF,OAAA,QAAAF,IAAA2sF,EAAA,GAAAA,EAAA,GAAG,CAAC,GAC3B9Q,WAAY,EAAK+Q,EAAA1oD,OAAA,SAClBroC,KAAKgxF,cAAcpuF,EAASq5C,EAAS7B,IAAS,wBAAA22C,EAAAtoD,OAAA,GAAAooD,EAAA,UACxD,SAAAthC,GAAA,OAAA83B,EAAA7/C,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,0BAAA77B,OAAA6jF,EAAA3/C,IAAAC,IAAAA,MAED,SAAAupD,EAA8BruF,GAAO,IAAAq5C,EAAA7B,EAAA82C,EAAAlsD,UAAA,OAAA0C,IAAAA,MAAA,SAAAypD,GAAA,cAAAA,EAAAppD,KAAAopD,EAAAnpD,MAAA,OACP,OADuBoS,EAAQ82C,EAAA7sF,OAAA,QAAAF,IAAA+sF,EAAA,IAAAA,EAAA,IAAtBj1C,EAAOi1C,EAAA7sF,OAAA,QAAAF,IAAA+sF,EAAA,GAAAA,EAAA,GAAG,CAAC,GACtClR,WAAY,EAAMmR,EAAA9oD,OAAA,SACnBroC,KAAKgxF,cAAcpuF,EAASq5C,EAAS7B,IAAS,wBAAA+2C,EAAA1oD,OAAA,GAAAwoD,EAAA,UACxD,SAAAvhC,GAAA,OAAA03B,EAAA5/C,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,aAAA77B,OAAA4jF,EAAA1/C,IAAAC,IAAAA,MAED,SAAA0pD,IAAA,IAAAxuF,EAAAq5C,EAAA7B,EAAAt1B,EAAAusE,EAAArsD,UAAA,OAAA0C,IAAAA,MAAA,SAAA4pD,GAAA,cAAAA,EAAAvpD,KAAAupD,EAAAtpD,MAAA,OAYK,GAZYplC,EAAOyuF,EAAAhtF,OAAA,QAAAF,IAAAktF,EAAA,GAAAA,EAAA,GAAGrxF,KAAKw6E,QAAQoC,eAAez5C,IAAK8Y,EAAOo1C,EAAAhtF,OAAA,EAAAgtF,EAAA,QAAAltF,EAAEi2C,EAAQi3C,EAAAhtF,OAAA,QAAAF,IAAAktF,EAAA,IAAAA,EAAA,GACrEzpB,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiBhlE,IACjBw3C,EAAWx3C,EACXA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,KAC/BykC,GAAAA,SAAehlE,KACtBq5C,EAAUr5C,EACVA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,KAGrCiX,EAAQ,CAAAk3C,EAAAtpD,KAAA,eAAAspD,EAAAjpD,OAAA,SACFroC,KAAKq8E,cAAcr8E,KAAKywF,WAAY7tF,EAASq5C,IAAQ,WAE5Dj8C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,SACNyH,KAAM,UACN5G,MAAOX,IAEZw3C,GAAS,CAAAk3C,EAAAtpD,KAAA,eAAAspD,EAAAjpD,OAAA,iBAGNvjB,EAAO,CACTliB,QAAS+1C,GAAM/1C,IAGnB5C,KAAKw6E,QAAQv+B,EAAQ+jC,UAAY,eAAiB,YAAY1F,QAAQ,SAAD/2C,OAAU0Y,EAAQ+jC,UAAY,WAAa,GAAE,cAAcl7D,EAAM,QACjI0+B,MAAK,WAAiB,IAAhBva,EAAMjE,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEb,QAA6B,IAAlBiE,EAAOsoD,OACd,OAAOn3C,EAAS,cAEpBA,EAAS,KAAMnR,EAAOsoD,OAC1B,IAAE,OAAO,SAAAhkD,GAAG,OAAI6M,EAAS7M,EAAI,IAAE,yBAAA+jD,EAAA7oD,OAAA,GAAA2oD,EAAA,UACtC,kBAAAjK,EAAA3/C,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,gBAAA77B,OAAA2jF,EAAAz/C,IAAAC,IAAAA,MAGD,SAAA8pD,IAAA,IAAA5uF,EAAAq5C,EAAA7B,EAAAt1B,EAAA2sE,EAAAzsD,UAAA,OAAA0C,IAAAA,MAAA,SAAAgqD,GAAA,cAAAA,EAAA3pD,KAAA2pD,EAAA1pD,MAAA,OAYK,GAZeplC,EAAO6uF,EAAAptF,OAAA,QAAAF,IAAAstF,EAAA,GAAAA,EAAA,GAAGzxF,KAAKw6E,QAAQoC,eAAez5C,IAAK8Y,EAAOw1C,EAAAptF,OAAA,EAAAotF,EAAA,QAAAttF,EAAEi2C,EAAQq3C,EAAAptF,OAAA,QAAAF,IAAAstF,EAAA,IAAAA,EAAA,GACxE7pB,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGX2rB,GAAAA,WAAiBhlE,IACjBw3C,EAAWx3C,EACXA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,KAC/BykC,GAAAA,SAAehlE,KACtBq5C,EAAUr5C,EACVA,EAAU5C,KAAKw6E,QAAQoC,eAAez5C,KAGrCiX,EAAQ,CAAAs3C,EAAA1pD,KAAA,eAAA0pD,EAAArpD,OAAA,SACFroC,KAAKq8E,cAAcr8E,KAAKgxF,cAAepuF,EAASq5C,IAAQ,WAE/Dj8C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,SACNyH,KAAM,UACN5G,MAAOX,IAEZw3C,GAAS,CAAAs3C,EAAA1pD,KAAA,eAAA0pD,EAAArpD,OAAA,iBAGNvjB,EAAO,CACTliB,QAAS+1C,GAAM/1C,IAGnB5C,KAAKw6E,QAAQv+B,EAAQ+jC,UAAY,eAAiB,YAAY1F,QAAQ,SAAD/2C,OAAU0Y,EAAQ+jC,UAAY,WAAa,GAAE,iBAAiBl7D,EAAM,QACpI0+B,MAAK,WAAiB,IAAhBva,EAAMjE,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEb,QAAgC,IAArBiE,EAAOvL,UACd,OAAO0c,EAAS,cAEpBA,EAAS,KAAMnR,EAAOvL,UAC1B,IAAE,OAAO,SAAA6P,GAAG,OAAI6M,EAAS7M,EAAI,IAAE,yBAAAmkD,EAAAjpD,OAAA,GAAA+oD,EAAA,UACtC,kBAAAtK,EAAA1/C,MAAA,KAAAxC,UAAA,OAAA5F,IAAA,kBAAA77B,MAjlCD,SAAuBU,EAASrB,EAASu1C,GAAiC,IAAtBy0C,IAAa5nD,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,KAAAA,UAAA,GAC7D/gC,EAAUA,EAAQk9B,QAAQ,MAAO,IACjCgX,EAAYA,EAAUhX,QAAQ,MAAO,IACrC,IAAMwwD,EAAe,GAAHpuD,OAAA2jC,IACXv1B,GAAYi7C,EAAgB7F,GAAqBC,KAAmB9f,IACpEU,GAAAA,KAAAA,iBAA4B3jE,KAI7BuzC,EAAYsB,GADIrG,GAAU,IAAI1J,WAAW4oD,IACC,CAC5C5iD,QAA0C,MAAjCoJ,EAAUpN,UAAU,IAAK,KAAe,EAAI,EACrDnL,EAAG,KAAOuY,EAAUpN,UAAU,EAAG,IACjCsC,EAAG,KAAO8K,EAAUpN,UAAU,GAAI,OAGhC6mD,EAAc/tD,EAAiB2T,EAAUizB,OAAO,GAGtD,OAFsBzE,GAAQpjE,QAAQivF,QAAQD,IAEtB5rB,GAAQpjE,QAAQivF,QAAQjvF,EACpD,GAAC,CAAAw8B,IAAA,kBAAA77B,MAmBD,SAAuBU,EAASk0C,GAC5B,OAAOyvB,GAAAA,QAAAA,cAA4B3jE,EAASk0C,EAChD,GAAC,CAAA/Y,IAAA,kBAAA77B,MAiBD,SAAuB8kD,EAAQthB,EAAOxjC,EAAO40C,EAAWv1C,GACpDu1C,EAAYA,EAAUhX,QAAQ,MAAO,IAErC,IACMqW,EAAYsB,GADI8uB,GAAAA,kBAAAA,KAA6Bvf,EAAQthB,EAAOxjC,GAClB,CAC5CwrC,QAA0C,MAAjCoJ,EAAUpN,UAAU,IAAK,KAAe,EAAI,EACrDnL,EAAG,KAAOuY,EAAUpN,UAAU,EAAG,IACjCsC,EAAG,KAAO8K,EAAUpN,UAAU,GAAI,OAGhC6mD,EAAc/tD,EAAiB2T,EAAUizB,OAAO,GAGtD,OAFsBzE,GAAQpjE,QAAQivF,QAAQD,IAEtB5rB,GAAQpjE,QAAQivF,QAAQjvF,EACpD,GAAC,CAAAw8B,IAAA,aAAA77B,MAmED,SAAkBU,EAASozC,GAAkC,IAAtBu1C,IAAa5nD,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,KAAAA,UAAA,GAChD/gC,EAAUA,EAAQk9B,QAAQ,MAAO,IACjC,IAAM59B,EAAQ,KAAHggC,OAAQ8T,EAAWlW,QAAQ,MAAO,KACvC0wB,EAAa,IAAIza,GAAW7zC,GAC5BouF,EAAe,GAAHpuD,OAAA2jC,IACXv1B,GAAYi7C,EAAgB7F,GAAqBC,KAAmB9f,IACpEU,GAAAA,KAAAA,iBAA4B3jE,KAE7BojE,EAAgB50B,GAAU,IAAI1J,WAAW4oD,IACzCx5C,EAAY0Z,EAAWD,KAAKyV,GAOlC,MANqB,CACjB,KACAlvB,EAAUvY,EAAEmL,UAAU,GACtBoN,EAAU9K,EAAEtC,UAAU,GACtB8B,OAAOsL,EAAUxV,GAAGD,SAAS,KAC/BiE,KAAK,GAEX,GAAC,CAAAvH,IAAA,gBAAA77B,MAgCD,SAAqBU,EAASozC,GAC1B,OAAOuwB,GAAAA,QAAAA,YAA0B3jE,EAASozC,EAC9C,GAAC,CAAAjY,IAAA,iBAAA77B,MAmBD,SAAsB8kD,EAAQthB,EAAOxjC,EAAO8zC,GACxC,OAAOuwB,GAAAA,OAAAA,eAA4Bvf,EAAQthB,EAAOxjC,EAAO8zC,EAC7D,KAAC4vC,CAAA,CAvzBmB,G,qkBCZxB,IAAM6K,GAAsB,SAAA57D,GAGxB,GAFAA,EAAIsqC,gBAAkBtqC,EAAIsqC,gBAAkBtqC,EAAIsqC,gBAAgBjtB,cAAgB,aAChFrd,EAAI/rB,KAAO+rB,EAAI/rB,KAAO+rB,EAAI/rB,KAAKopC,cAAgB,GAC/B,aAAbrd,EAAI/rB,MAAoC,YAAb+rB,EAAI/rB,KAAoB,MAAO,KAC7D,IAAI4nF,EAAQ,IAAInqB,GAAAA,YAAAA,UAA4B,CAAC1xC,IAC7C,MAAgB,UAAbA,EAAI/rB,KACE4nF,EAAMruB,SAASxtC,EAAIxzB,MAAMw5C,OAAO0rB,GAAAA,YAAAA,YAAAA,SAElCmqB,EAAMzuB,YAAYptC,EAAIxzB,MAAMw5C,OAAO0rB,GAAAA,YAAAA,YAAAA,QAC9C,EAEMoqB,GAAe,SAAC97D,EAAKyK,GACvB,OAAO+qC,GAAoBx1C,EAAKyK,EACpC,EAEqBsxD,GAAM,WACvB,SAAAA,EAAYjlB,EAAU92C,GAAKqY,IAAA,KAAA0jD,GACvBjyF,KAAKw6E,QAAUxN,EAASwN,QACxBx6E,KAAKgtE,SAAWA,EAEhBhtE,KAAKk2B,IAAMA,EACXl2B,KAAK0C,KAAOwzB,EAAIxzB,OAASwzB,EAAIxzB,KAAOwzB,EAAI/rB,MAExCnK,KAAKo/D,OAASlpC,EAAIkpC,QAAU,GAC5Bp/D,KAAK+gE,QAAU7qC,EAAI6qC,SAAW,GAE9B/gE,KAAKugF,iBAAmBuR,GAAoB57D,GAC5Cl2B,KAAKm4C,UAAYn4C,KAAKw6E,QAAQrM,KAAKnuE,KAAKugF,kBAAkB,GAAOx9C,MAAM,EAAG,GAC1E/iC,KAAKq8E,cAAgBC,KAAct8E,MAEnCA,KAAKkyF,eAAiB,CAClB7sE,SAAUrlB,KAAKw6E,QAAQn1D,SACvBiR,UAAW,EACXsoD,kBAAmB,IACnBuT,oBAAoB,EAE5B,CA+PC,IAAAC,EAvIAC,EA9EAC,EA2TA,OArWA5jD,IAAAujD,EAAA,EAAA7yD,IAAA,cAAA77B,MAED,SAAYuhB,GACR,OAAOktE,GAAahyF,KAAKo/D,OAAQ,KAAOt6C,EAC5C,GAAC,CAAAsa,IAAA,WAAA77B,MAED,WAAkB,IAAAy8B,EAAA,KACZo/C,EAAe,GACnB,GAAGp/E,KAAKk2B,MAAQ,SAASkP,KAAKplC,KAAKk2B,IAAI/rB,MAAO,SAAA8sC,EAAAjS,UAAA3gC,OAFpCi1C,EAAI,IAAA1X,MAAAqV,GAAAf,EAAA,EAAAA,EAAAe,EAAAf,IAAJoD,EAAIpD,GAAAlR,UAAAkR,GAGVkpC,EAAevU,GAAoB7qE,KAAKk2B,IAAKojB,EACjD,CACA,MAAO,CACHr5C,KAAM,WAAoC,IAAnCg8C,EAAOjX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGoV,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAUzB,OATI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAEfA,EAAOs0B,GAAAA,GAAA,GACFt0B,GAAO,IACVmjC,aAAAA,IAGKp/C,EAAKkuB,MAAM,GAAI,GAAIjS,EAAS7B,EACvC,EACAm4C,KAAM,WAAiF,IAAhFt2C,EAAOjX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGqS,EAAUrS,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhF,EAAKw6C,QAAQ2S,kBAAmB/yC,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GActE,OAbI4iC,GAAAA,WAAiBvwB,KACjB+C,EAAW/C,EACXA,EAAarX,EAAKw6C,QAAQ2S,mBAE1BvlB,GAAAA,WAAiB3rB,KACnB7B,EAAW6B,EACXA,EAAU,CAAC,GAEbA,EAAOs0B,GAAAA,GAAA,GACFt0B,GAAO,IACVmjC,aAAAA,IAGKp/C,EAAKwyD,MAAM,GAAI,GAAIv2C,EAAS5E,EAAY+C,EACnD,EACAq4C,MAAO,kBAAmBzyD,EAAK0yD,OAAMlrD,MAAXxH,EAAIgF,UAAsB,EAE1D,GAAC,CAAA5F,IAAA,QAAA77B,OAAA+uF,EAAA7qD,IAAAC,IAAAA,MAED,SAAAC,EAAYZ,EAAOuS,GAAI,IAAA2C,EAAA7B,EAAAomB,EAAAiT,EAAAt5B,EAAA,KAAAkgC,EAAAr1C,UAAA,OAAA0C,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAIlB,GAJoBiU,EAAOo+B,EAAAh2E,OAAA,QAAAF,IAAAk2E,EAAA,GAAAA,EAAA,GAAG,CAAC,EAAGjgC,EAAQigC,EAAAh2E,OAAA,QAAAF,IAAAk2E,EAAA,IAAAA,EAAA,GACvCzS,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGV7B,EAAQ,CAAAtS,EAAAE,KAAA,eAAAF,EAAAO,OAAA,SACFroC,KAAKq8E,cAAcr8E,KAAKkuD,MAAOnnB,EAAOuS,EAAM2C,IAAQ,UAE3DlV,EAAM1iC,SAAWi1C,EAAKj1C,OAAM,CAAAyjC,EAAAE,KAAA,eAAAF,EAAAO,OAAA,SACrB+R,EAAS,oCAAkC,UAEjDp6C,KAAKgtE,SAASpqE,QAAO,CAAAklC,EAAAE,KAAA,eAAAF,EAAAO,OAAA,SACf+R,EAAS,sCAAoC,UAEnDp6C,KAAKgtE,SAAS2lB,SAAQ,CAAA7qD,EAAAE,KAAA,gBAAAF,EAAAO,OAAA,SAChB+R,EAAS,oEAAkE,QAEhE,GAAfomB,EAAmBxgE,KAAKk2B,IAAxBsqC,gBAEF,CAAC,OAAQ,QAAQuG,SAASvG,EAAgBjtB,eAAc,CAAAzL,EAAAE,KAAA,gBAAAF,EAAAO,OAAA,SAClD+R,EAAS,kCAAD7W,OAAmCi9B,EAAe,uBAAoB,QAEzFvkB,EAAOs0B,GAAAA,GAAAA,GAAA,GACAvwE,KAAKkyF,gBAAc,IACtBz8E,KAAMzV,KAAKw6E,QAAQoC,eAAez5C,KAC/B8Y,GAAO,IACV6jC,aAAa,IAGXrM,EAAan6B,EAAK7S,KAAI,SAACljC,EAAOilC,GAAK,MAAM,CAC3Cr+B,KAAM48B,EAAMyB,GACZjlC,MAAAA,EACH,IAEDvD,KAAKw6E,QAAQ0T,mBAAmBvgB,qBAC5B3tE,KAAKgtE,SAASpqE,QACd5C,KAAKugF,iBACLtkC,EACAw3B,IACAx3B,EAAQxmC,MAAOzV,KAAKw6E,QAAQ53E,QAAQ+1C,MAAMsD,EAAQxmC,OAClD,SAAC83B,EAAKiX,GACF,GAAIjX,EACA,OAAO6M,EAAS7M,GAEpB,IAAKq6B,GAAAA,YAAkBpjB,EAAa,mBAChC,OAAOpK,EAAS,qBAEpB,IAEI,IAAMzV,EAAM6f,EAAYouC,gBAAgB,GAAGvuF,OAC3C,GAAY,IAARsgC,GAAaA,EAAM,IAAO,EAAG,CAC7B,IAAIniC,EAAM,qDACV,GAAY,IAARmiC,EAAW,CACXniC,GAAO,mBAGP,IAFA,IAAIqwF,EAAO,GACPC,EAAQtuC,EAAYouC,gBAAgB,GAAG7nD,UAAU,GAC5CnK,EAAI,EAAGA,EAAI+D,EAAM,EAAG/D,GAAK,GAC9BiyD,GAAQ14C,EAAKqgC,QAAQgB,OAAOsX,EAAM/nD,UAAUnK,EAAGA,EAAI,KAEvDp+B,GAAOqwF,EAAK1xD,QAAQ,uBAAwB,KAAKA,QAAQ,MAAO,KAAKA,QAAQ,QAAS,GAC1F,CACA,OAAOiZ,EAAS53C,EACpB,CAEA,IAAIm+B,EAASqxD,GAAa73C,EAAKjkB,IAAK,KAAOsuB,EAAYouC,gBAAgB,IAMvE,OAJsB,IAAlBjyD,EAAOt8B,QAA+C,IAA/Bi7B,OAAOsI,KAAKjH,GAAQt8B,SAC3Cs8B,EAASA,EAAO,IAGbyZ,EAAS,KAAMzZ,EAC1B,CAAE,MAAO22C,GACL,OAAOl9B,EAASk9B,EACpB,CACJ,IAAG,yBAAAxvC,EAAAW,OAAA,GAAAd,EAAA,UACV,SAAAL,EAAAgb,GAAA,OAAAgwC,EAAA9qD,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,QAAA77B,OAAA8uF,EAAA5qD,IAAAC,IAAAA,MAED,SAAA+mB,EAAY1nB,EAAOuS,GAAI,IAAA2C,EAAA5E,EAAA+C,EAAAomB,EAAAiT,EAAA7wE,EAAA4hD,EAAAopC,EAAAmF,EAAAxlD,EAAAylD,EAAAh4C,EAAA,KAAAkyC,EAAAloD,UAAA,OAAA0C,IAAAA,MAAA,SAAAonB,GAAA,cAAAA,EAAA/mB,KAAA+mB,EAAA9mB,MAAA,OASlB,GAToBiU,EAAOixC,EAAA7oF,OAAA,QAAAF,IAAA+oF,EAAA,GAAAA,EAAA,GAAG,CAAC,EAAG71C,EAAU61C,EAAA7oF,OAAA,QAAAF,IAAA+oF,EAAA,GAAAA,EAAA,GAAGltF,KAAKw6E,QAAQ2S,kBAAmB/yC,EAAQ8yC,EAAA7oF,OAAA,QAAAF,IAAA+oF,EAAA,IAAAA,EAAA,GACpFtlB,GAAAA,WAAiBvwB,KACjB+C,EAAW/C,EACXA,EAAar3C,KAAKw6E,QAAQ2S,mBAG1BvlB,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGV7B,EAAQ,CAAA0U,EAAA9mB,KAAA,eAAA8mB,EAAAzmB,OAAA,SACFroC,KAAKq8E,cAAcr8E,KAAKwyF,MAAOzrD,EAAOuS,EAAM2C,EAAS5E,IAAW,UAEvEtQ,EAAM1iC,SAAWi1C,EAAKj1C,OAAM,CAAAyqD,EAAA9mB,KAAA,cACtB,IAAI5F,MAAM,mCAAkC,UAEjDpiC,KAAKgtE,SAASpqE,QAAO,CAAAksD,EAAA9mB,KAAA,gBAAA8mB,EAAAzmB,OAAA,SACf+R,EAAS,sCAAoC,WAEnDp6C,KAAKgtE,SAAS2lB,SAAQ,CAAA7jC,EAAA9mB,KAAA,gBAAA8mB,EAAAzmB,OAAA,SAChB+R,EAAS,oEAAkE,QAEhE,GAAfomB,EAAmBxgE,KAAKk2B,IAAxBsqC,iBAEH,CAAC,OAAQ,QAAQuG,SAASvG,EAAgBjtB,eAAc,CAAAub,EAAA9mB,KAAA,gBAAA8mB,EAAAzmB,OAAA,SACjD+R,EAAS,kCAAD7W,OAAmCi9B,EAAe,uBAAoB,QAkB4B,MAfhH,CAAC,WAAWuG,SAASvG,EAAgBjtB,iBACtC0I,EAAQ3lB,UAAY,GAExB2lB,EAAOs0B,GAAAA,GAAA,GACAvwE,KAAKkyF,gBAAc,IACtBz8E,KAAMzV,KAAKw6E,QAAQoC,eAAez5C,KAC/B8Y,GAGDw3B,EAAan6B,EAAK7S,KAAI,SAACljC,EAAOilC,GAAK,MAAM,CAC3Cr+B,KAAM48B,EAAMyB,GACZjlC,MAAAA,EACH,IAAEurD,EAAA/mB,KAAA,GAGOnlC,EAAUy0C,EAAar3C,KAAKw6E,QAAQ53E,QAAQkmE,eAAezxB,GAAcr3C,KAAKw6E,QAAQoC,eAAehT,OAAM9a,EAAA9mB,KAAA,GACvFhoC,KAAKw6E,QAAQ0T,mBAAmBvgB,qBACtD3tE,KAAKgtE,SAASpqE,QACd5C,KAAKugF,iBACLtkC,EACAw3B,EACAzzE,KAAKw6E,QAAQ53E,QAAQ+1C,MAAM/1C,IAC9B,QANgB,IAAX4hD,EAAWsK,EAAA1mB,MAQAa,QAAWub,EAAYvb,OAAOA,OAAM,CAAA6lB,EAAA9mB,KAAA,gBAAA8mB,EAAAzmB,OAAA,SAC1C+R,EAAS,kBAAoB5V,KAAKC,UAAU+f,EAAa,KAAM,KAAG,eAAAsK,EAAA9mB,KAAA,GAG7ChoC,KAAKw6E,QAAQwG,IAAIpvB,KAAKpN,EAAYA,YAAanN,GAAW,QAAnE,IAAjBu2C,EAAiB9+B,EAAA1mB,MAEA+P,UAAW,CAAF2W,EAAA9mB,KAAA,YACvBqP,EAAU,CAAAyX,EAAA9mB,KAAA,gBAAA8mB,EAAAzmB,OAAA,SACJ+R,EAAS,wCAAsC,eAAA0U,EAAAzmB,OAAA,SAEnD+R,EAAS,iCAA+B,eAAA0U,EAAA9mB,KAAA,GAG3BhoC,KAAKw6E,QAAQwG,IAAI6M,mBAAmBD,GAAkB,QAA/D,KAATmF,EAASjkC,EAAA1mB,MAED38B,KAAM,CAAFqjD,EAAA9mB,KAAA,SAM2C,OALnDuF,EAAM,CACRpG,MAAO4rD,EAAUtnF,KACjBxH,QAAS8uF,EAAUtnF,MAEnBsnF,EAAU9uF,UACVspC,EAAItpC,QAAUjE,KAAKw6E,QAAQgB,OAAOuX,EAAU9uF,UAAS6qD,EAAAzmB,OAAA,SAClD+R,EAAS7M,IAAI,WAGnB0O,EAAQk2C,mBAAkB,CAAArjC,EAAA9mB,KAAA,gBAAA8mB,EAAAzmB,OAAA,SACpB+R,EAAS,KAAMwzC,EAAkB9mB,OAAK,QAE3CksB,EAAW,eAAAxjD,EAAA/H,IAAAC,IAAAA,MAAG,SAAA+b,IAAA,IAAAjb,EAAA7H,EAAA6oB,EAAA82B,EAAAt7C,UAAA,OAAA0C,IAAAA,MAAA,SAAAgc,GAAA,cAAAA,EAAA3b,KAAA2b,EAAA1b,MAAA,OAAgB,IAATQ,EAAK83C,EAAAj8E,OAAA,QAAAF,IAAAm8E,EAAA,GAAAA,EAAA,GAAG,MAChBrkC,EAAQg3C,WAAa,IAAG,CAAAvvC,EAAA1b,KAAA,eAAA0b,EAAArb,OAAA,SAC5B+R,EAAS,CACZjT,MAAO,sCACPqd,YAAaopC,KACf,cAAAlqC,EAAA1b,KAAA,EAGegT,EAAKw/B,QAAQwG,IAAIkS,mBAAmBtF,EAAkB9mB,MAAK,OAApE,GAANnmC,EAAM+iB,EAAAtb,KAEP9I,OAAOsI,KAAKjH,GAAQt8B,OAAQ,CAAFq/C,EAAA1b,KAAA,eAAA0b,EAAArb,OAAA,SACpBwtB,YAAW,WACdm9B,EAAYxqD,EAAQ,EACxB,GAAG,MAAK,WAGR7H,EAAOsI,QAA4B,WAAlBtI,EAAOsI,OAAmB,CAAAya,EAAA1b,KAAA,gBAAA0b,EAAArb,OAAA,SACpC+R,EAAS,CACZjT,MAAO6T,EAAKw/B,QAAQgB,OAAO76C,EAAOwyD,YAClC3uC,YAAaopC,EACbjtD,OAAAA,KACF,WAGDinC,GAAAA,YAAkBjnC,EAAQ,kBAAmB,CAAF+iB,EAAA1b,KAAA,gBAAA0b,EAAArb,OAAA,SACrC+R,EAAS,CACZjT,MAAO,sBAAwB3C,KAAKC,UAAU9D,EAAQ,KAAM,GAC5D6jB,YAAaopC,EACbjtD,OAAAA,KACF,YAGFsb,EAAQm3C,YAAW,CAAA1vC,EAAA1b,KAAA,gBAAA0b,EAAArb,OAAA,SACZ+R,EAAS,KAAMzZ,IAAO,QAMhC,GAFsB,KAFnB6oB,EAAUwoC,GAAah3C,EAAK9kB,IAAK,KAAOyK,EAAOzd,eAAe,KAEtD7e,QAAgD,IAAhCi7B,OAAOsI,KAAK4hB,GAASnlD,SAC7CmlD,EAAUA,EAAQ,KAGlBvN,EAAQo3C,SAAU,CAAF3vC,EAAA1b,KAAA,gBAAA0b,EAAArb,OAAA,SACT+R,EAAS,KAAM,CAACwzC,EAAkB9mB,KAAMtd,KAAS,eAAA9F,EAAArb,OAAA,SAGrD+R,EAAS,KAAMoP,IAAQ,yBAAA9F,EAAAjb,OAAA,GAAAgb,EAAA,KACjC,kBA9CgB,OAAAjU,EAAAhI,MAAA,KAAAxC,UAAA,KAgDjBguD,IAAclkC,EAAA9mB,KAAA,wBAAA8mB,EAAA/mB,KAAA,GAAA+mB,EAAAnL,GAAAmL,EAAA,UAAAA,EAAAzmB,OAAA,SAEP+R,EAAQ0U,EAAAnL,KAAI,yBAAAmL,EAAArmB,OAAA,GAAAgmB,EAAA,oBAE1B,SAAA9F,EAAAC,GAAA,OAAAypC,EAAA7qD,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,SAAA77B,OAAA6uF,EAAA3qD,IAAAC,IAAAA,MAED,SAAA8nB,IAAA,IAAAvT,EAAA7B,EAAAk5C,EAAAC,EAAAC,EAAAC,EAAAC,EAAA9uC,EAAA,KAAA8hC,EAAA1hD,UAAA,OAAA0C,IAAAA,MAAA,SAAA+nB,GAAA,cAAAA,EAAA1nB,KAAA0nB,EAAAznB,MAAA,OAIK,GAJQiU,EAAOyqC,EAAAriF,OAAA,QAAAF,IAAAuiF,EAAA,GAAAA,EAAA,GAAG,CAAC,EAAGtsC,EAAQssC,EAAAriF,OAAA,QAAAF,IAAAuiF,EAAA,IAAAA,EAAA,GAC3B9e,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGV2rB,GAAAA,WAAiBxtB,GAAS,CAAAqV,EAAAznB,KAAA,cACrB,IAAI5F,MAAM,oCAAmC,UAElDpiC,KAAKgtE,SAASpqE,QAAO,CAAA6sD,EAAAznB,KAAA,eAAAynB,EAAApnB,OAAA,SACf+R,EAAS,sCAAoC,UAEnDp6C,KAAKk2B,IAAI/rB,MAAS,SAASi7B,KAAKplC,KAAKk2B,IAAI/rB,MAAK,CAAAslD,EAAAznB,KAAA,eAAAynB,EAAApnB,OAAA,SACxC+R,EAAS,2CAAyC,UAExDp6C,KAAKw6E,QAAQmZ,YAAW,CAAAlkC,EAAAznB,KAAA,gBAAAynB,EAAApnB,OAAA,SAClB+R,EAAS,+BAA6B,QAqEhD,OAnEGk5C,GAAW,EACXC,GAAY,EACZC,EAAQ1tD,KAAKoxB,MAAQ,IAEnBu8B,EAAS,eAAArrC,EAAA3gB,IAAAC,IAAAA,MAAG,SAAA0nB,IAAA,IAAA4G,EAAA49B,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAtsD,IAAAA,MAAA,SAAA2nB,GAAA,cAAAA,EAAAtnB,KAAAsnB,EAAArnB,MAAA,OAoBT,OApBSqnB,EAAAtnB,KAAA,EAGJiuB,EAAS,CACXw9B,MAAAA,EACAS,UAAWrvC,EAAKliD,KAChB0mC,KAAM,kBACN8qD,YAAa,SACbC,QAASl4C,EAAQk4C,SAGlBl4C,EAAQJ,OACPma,EAAOna,KAAOI,EAAQJ,MAGtBI,EAAQw8B,eACJ,QAAQrzC,KAAK6W,EAAQw8B,cACrBziB,EAAOo+B,iBAAkB,EAEzBp+B,EAAOq+B,eAAgB,GAC9BhlC,EAAArnB,KAAA,EAEoB4c,EAAK41B,QAAQpC,MAAMkc,2BAA2B1vC,EAAKooB,SAASpqE,QAASozD,GAAO,OAuB/D,OAvB5B49B,EAAMvkC,EAAAjnB,KAAAyrD,EACUD,EAAOxqD,MAAK,SAAClK,EAAG0c,GAAC,OAAKA,EAAE/E,MAAQ3X,EAAE2X,KAAK,IAACi9C,EAAAn8C,KAAAk8C,EAAA,GAAvDE,EAAWD,EAAA,GACZE,EAAYJ,EAAO5sC,QAAO,SAACoxB,EAAO5vC,GAEpC,QAAIyT,EAAQw8B,cAAgBL,EAAMK,cAC9Bx8B,EAAQw8B,aAAallC,gBAAkB6kC,EAAMK,aAAallC,eAI5CqgD,EAAO7wD,MAAM,EAAGyF,GAAO22C,MAAK,SAAAoV,GAAU,OACpD/vD,KAAKC,UAAU8vD,IAAe/vD,KAAKC,UAAU2zC,EAAM,KAMlDmb,KAGEnb,EAAMvhC,MAAQ08C,GACzB,IAEIQ,IACAR,EAAYQ,EAAYl9C,OAAMwY,EAAAhnB,OAAA,SAE3B2rD,GAAS,eAAA3kC,EAAAtnB,KAAA,GAAAsnB,EAAA1L,GAAA0L,EAAA,SAAAA,EAAAhnB,OAAA,SAETJ,QAAQusD,OAAMnlC,EAAA1L,KAAI,yBAAA0L,EAAA5mB,OAAA,GAAA2mB,EAAA,mBAGhC,kBApDc,OAAAhH,EAAA5gB,MAAA,KAAAxC,UAAA,KAsDT0uD,EAAe,WACbJ,GACAmB,cAAcnB,GAElBA,EAAWoB,aAAY,WACnBjB,IAAYjwC,MAAK,SAAAowC,GAAM,OAAIA,EAAOl6C,SAAQ,SAAA0+B,GACtCh+B,EAAS,KAAMwtB,GAAAA,WAAiBwQ,EAAOxzB,EAAK1uB,KAChD,GAAE,IAAC,OAAO,SAAAqX,GAAG,OAAI6M,EAAS7M,EAAI,GAClC,GAAG,IACP,EAACkiB,EAAAznB,KAAA,GAEKyrD,IAAW,QACF,OAAfC,IAAejkC,EAAApnB,OAAA,SAER,CACHmD,MAAOkoD,EACPjrD,KAAM,WACG6qD,IAGLmB,cAAcnB,GACdA,GAAW,EACf,IACH,yBAAA7jC,EAAAhnB,OAAA,GAAA+mB,EAAA,UACJ,kBAAA4iC,EAAA5qD,MAAA,KAAAxC,UAAA,MAAAitD,CAAA,CA1XsB,GCdNjwF,GAAQ,WACzB,SAAAA,IAAwD,IAA5Cw4E,EAAOx1C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAU9O,EAAG8O,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,GAAIpiC,EAAOoiC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAC1C,GADkDuJ,IAAA,KAAAvsC,IAC7Cw4E,IAAYA,aAAmBxU,GAChC,MAAM,IAAI5jC,MAAM,gCAEpBpiC,KAAKw6E,QAAUA,EACfx6E,KAAKq8E,cAAgBC,KAAct8E,MAEnCA,KAAK4C,QAAUA,EACf5C,KAAKk2B,IAAMA,EAEXl2B,KAAK20F,eAAgB,EACrB30F,KAAKo2B,UAAW,EAChBp2B,KAAK2yF,UAAW,EAChB3yF,KAAKuzF,WAAY,EAEjBvzF,KAAK40F,QAAU,CAAC,EAChB50F,KAAK60F,gBAAkB,CAAC,EACxB70F,KAAK80F,MAAQ,GAET90F,KAAKw6E,QAAQS,UAAUr4E,GACvB5C,KAAK2yF,UAAW,EACf3yF,KAAK4C,SAAU,EAEpB5C,KAAK+0F,QAAQ7+D,EACjB,CA+JC,IAAA8+D,EA5BAC,EAtGAC,EA7BAC,EAwNA,OAxNAzmD,IAAA1sC,EAAA,EAAAo9B,IAAA,aAAA77B,OAAA4xF,EAAA1tD,IAAAC,IAAAA,MAED,SAAAC,IAAA,IAAAsU,EAAA23C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAh0D,EAAA,KAAAq6C,EAAAr1C,UAAA,OAAA0C,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAA6B,OAAZiU,EAAOo+B,EAAAh2E,OAAA,QAAAF,IAAAk2E,EAAA,GAAAA,EAAA,GAAG,CAAC,EAACvyC,EAAAE,KAAA,EACJhoC,KAAKw6E,QAAQpC,MAAMkc,2BAA2Bt0F,KAAK4C,QAASq5C,GAAQ,OAuBlD,OAvBjC23C,EAAM9rD,EAAAM,KAAAyrD,EACUD,EAAOxqD,MAAK,SAAClK,EAAG0c,GAAC,OAAKA,EAAE/E,MAAQ3X,EAAE2X,KAAK,IAACi9C,EAAAn8C,KAAAk8C,EAAA,GAAvDE,EAAWD,EAAA,GACZE,EAAYJ,EAAO5sC,QAAO,SAACoxB,EAAO5vC,GAEpC,QAAIyT,EAAQw8B,cAAgBL,EAAMK,cAC9Bx8B,EAAQw8B,aAAallC,gBAAkB6kC,EAAMK,aAAallC,eAI5CqgD,EAAO7wD,MAAM,EAAGyF,GAAO22C,MAAK,SAAAoV,GAAU,OACpD/vD,KAAKC,UAAU8vD,IAAe/vD,KAAKC,UAAU2zC,EAAM,KAMlDp4C,EAAKuzD,aAGHnb,EAAMvhC,MAAQ7W,EAAKuzD,WAC9B,IAEIQ,IACA/zF,KAAKuzF,UAAYQ,EAAYl9C,OAAM/O,EAAAO,OAAA,SAEhC2rD,GAAS,wBAAAlsD,EAAAW,OAAA,GAAAd,EAAA,UACnB,kBAAAwtD,EAAA3tD,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,sBAAA77B,OAAA2xF,EAAAztD,IAAAC,IAAAA,MAED,SAAA+b,IAAA,IAAAxH,EAAA7B,EAAAD,EAAA,KAAAmmC,EAAAt7C,UAAA,OAAA0C,IAAAA,MAAA,SAAAgc,GAAA,cAAAA,EAAA3b,KAAA2b,EAAA1b,MAAA,OAO0C,GAPhBiU,EAAOqkC,EAAAj8E,OAAA,QAAAF,IAAAm8E,EAAA,GAAAA,EAAA,GAAG,CAAC,EAAGlmC,EAAQkmC,EAAAj8E,OAAA,EAAAi8E,EAAA,QAAAn8E,EACxCyjE,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGXj8C,KAAK20F,eACLF,cAAcz0F,KAAK20F,eAElB30F,KAAKw6E,QAAQmZ,YAAW,CAAAjwC,EAAA1b,KAAA,cACnB,IAAI5F,MAAM,kCAAiC,UAEhDpiC,KAAK4C,QAAO,CAAA8gD,EAAA1b,KAAA,cACP,IAAI5F,MAAM,8CAA6C,OAEnC,OAA9BpiC,KAAKo1F,cAAgBh7C,EAASsJ,EAAA1b,KAAA,GACxBhoC,KAAKq1F,WAAWp5C,GAAQ,QAE9Bj8C,KAAK20F,cAAgBD,aAAY,WAC7Bv6C,EAAKk7C,WAAWp5C,GAASuH,MAAK,SAAAwwC,GAAS,OAAIA,EAAUt6C,SAAQ,SAAA0+B,GACzDj+B,EAAKi7C,eAAiBj7C,EAAKi7C,cAAchd,EAC7C,GAAE,IAAC,OAAO,SAAA7qC,GACN6tB,QAAQj0B,MAAM,2BAA4BoG,EAC9C,GACJ,GAAG,KAAM,yBAAAmW,EAAAjb,OAAA,GAAAgb,EAAA,UACZ,kBAAAyxC,EAAA1tD,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,qBAAA77B,MAED,WACSvD,KAAK20F,gBAGVF,cAAcz0F,KAAK20F,eACnB30F,KAAK20F,eAAgB,EACrB30F,KAAKo1F,eAAgB,EACzB,GAAC,CAAAh2D,IAAA,cAAA77B,MAED,SAAYy0E,GACR,OAAOh4E,KAAK2/B,eAAeq4C,IAAah4E,KAAKs1F,UAAU31D,eAAeq4C,EAC1E,GAAC,CAAA54C,IAAA,UAAA77B,MAED,SAAQ2yB,GAAK,IAAA8kB,EAAA,KACTh7C,KAAKk2B,IAAMA,EACXl2B,KAAK40F,QAAU,CAAC,EAEhB50F,KAAK80F,MAAMp7C,SAAQ,SAAAha,GAAI,cAAWsb,EAAKtb,EAAK,IAE5CxJ,EAAIwjB,SAAQ,SAAAlJ,GAGR,GAAKA,EAAKrmC,OAAQ,qBAAqBi7B,KAAKoL,EAAKrmC,MAAjD,CAGA,IAAMwgC,EAAS,IAAIsnD,GAAOj3C,EAAMxK,GAC1B+kD,EAAa5qD,EAAO6qD,SAASC,KAAK9qD,GAGpCjoC,EAGAioC,EAHAjoC,KACA69E,EAEA51C,EAFA41C,iBACApoC,EACAxN,EADAwN,UAGJ6C,EAAK45C,QAAQlyF,GAAQ6yF,EACrBv6C,EAAK45C,QAAQrU,GAAoBgV,EACjCv6C,EAAK45C,QAAQz8C,GAAao9C,EAE1Bv6C,EAAK65C,gBAAgBnyF,GAAQioC,EAC7BqQ,EAAK65C,gBAAgBtU,GAAoB51C,EACzCqQ,EAAK65C,gBAAgB18C,GAAaxN,EAE7BqQ,EAAK+8B,YAAYr1E,KAClBs4C,EAAKt4C,GAAQ6yF,EACbv6C,EAAK85C,MAAMlwD,KAAKliC,IAGfs4C,EAAK+8B,YAAYwI,KAClBvlC,EAAKulC,GAAoBgV,EACzBv6C,EAAK85C,MAAMlwD,KAAK27C,IAGfvlC,EAAK+8B,YAAY5/B,KAClB6C,EAAK7C,GAAao9C,EAClBv6C,EAAK85C,MAAMlwD,KAAKuT,GA/BV,CAiCd,GACJ,GAAC,CAAA/Y,IAAA,cAAA77B,MAED,SAAYuhB,GAER,IAAM4wE,EAAa5wE,EAAKimB,UAAU,EAAG,GAC/B4qD,EAAY7wE,EAAKimB,UAAU,GAEjC,IAAK/qC,KAAK60F,gBAAgBa,GACtB,MAAM,IAAItzD,MAAM,mBAAqBszD,EAAa,cAItD,MAAO,CACHhzF,KAHmB1C,KAAK60F,gBAAgBa,GAGnBhzF,KACrBszD,OAAQh2D,KAAK60F,gBAAgBa,GAAYE,YAAYD,GAE7D,GAAC,CAAAv2D,IAAA,MAAA77B,OAAA0xF,EAAAxtD,IAAAC,IAAAA,MAED,SAAA+mB,EAAUxS,GAAO,IAAA5E,EAAA+C,EAAAx3C,EAAA4hD,EAAAopC,EAAA5gB,EAAAkgB,EAAAloD,UAAA,OAAA0C,IAAAA,MAAA,SAAAonB,GAAA,cAAAA,EAAA/mB,KAAA+mB,EAAA9mB,MAAA,OAIZ,GAJcqP,EAAU61C,EAAA7oF,OAAA,QAAAF,IAAA+oF,EAAA,GAAAA,EAAA,GAAGltF,KAAKw6E,QAAQ2S,kBAAmB/yC,EAAQ8yC,EAAA7oF,OAAA,QAAAF,IAAA+oF,EAAA,IAAAA,EAAA,GAChEtlB,GAAAA,WAAiBvwB,KACjB+C,EAAW/C,EACXA,EAAar3C,KAAKw6E,QAAQ2S,mBAGzB/yC,EAAQ,CAAA0U,EAAA9mB,KAAA,eAAA8mB,EAAAzmB,OAAA,SACFroC,KAAKq8E,cAAcr8E,KAAI,IAAMi8C,EAAS5E,IAAW,OAGO,OAHPyX,EAAA/mB,KAAA,EAGlDnlC,EAAU5C,KAAKw6E,QAAQ53E,QAAQkmE,eAAezxB,GAAWyX,EAAA9mB,KAAA,EACrChoC,KAAKw6E,QAAQ0T,mBAAmBpd,oBAAoB70B,EAASr5C,GAAQ,OAA9E,OAAX4hD,EAAWsK,EAAA1mB,KAAA0mB,EAAA9mB,KAAG,GACYhoC,KAAKw6E,QAAQwG,IAAIpvB,KAAKpN,EAAanN,GAAW,QAAvD,OAAjBu2C,EAAiB9+B,EAAA1mB,KAAA0mB,EAAA9mB,KAAG,GACHhoC,KAAKw6E,QAAQwG,IAAI6M,mBAAmBD,GAAkB,QAA/D,KAAR5gB,EAAQle,EAAA1mB,MAED38B,KAAI,CAAAqjD,EAAA9mB,KAAA,gBAAA8mB,EAAAzmB,OAAA,SACN+R,EAAS,CACZjT,MAAO6lC,EAASvhE,KAChBxH,QAASjE,KAAKw6E,QAAQgB,OAAOxO,EAAS/oE,YACxC,eAAA6qD,EAAA9mB,KAAA,GAEA4/B,GAAAA,MAAY,KAAK,eAAA9Y,EAAAzmB,OAAA,SAChBroC,KAAK61F,GAAGjI,EAAkBhgB,iBAAkBxzB,IAAS,eAAA0U,EAAA/mB,KAAA,GAAA+mB,EAAAnL,GAAAmL,EAAA,SAAAA,EAAAzmB,OAAA,SAErD+R,EAAQ0U,EAAAnL,KAAI,yBAAAmL,EAAArmB,OAAA,GAAAgmB,EAAA,mBAE1B,SAAAnnB,GAAA,OAAA2tD,EAAAztD,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,KAAA77B,OAAAyxF,EAAAvtD,IAAAC,IAAAA,MAED,SAAA0nB,EAASp5B,GAAe,IAAAokB,EAAA4yB,EAAAqZ,EAAArhD,UAAA,OAAA0C,IAAAA,MAAA,SAAA2nB,GAAA,cAAAA,EAAAtnB,KAAAsnB,EAAArnB,MAAA,OAAkB,GAAhBoS,EAAQisC,EAAAhiF,OAAA,QAAAF,IAAAkiF,EAAA,IAAAA,EAAA,GACjB,CAAAh3B,EAAArnB,KAAA,eAAAqnB,EAAAhnB,OAAA,SACFroC,KAAKq8E,cAAcr8E,KAAK61F,GAAI7/D,IAAgB,cAAAq5B,EAAAtnB,KAAA,EAAAsnB,EAAArnB,KAAA,EAG5BhoC,KAAKw6E,QAAQwG,IAAI2L,YAAY32D,GAAgB,OAAtD,IAARg3C,EAAQ3d,EAAAjnB,MAEAwlC,iBAAgB,CAAAve,EAAArnB,KAAA,eAAAqnB,EAAAhnB,OAAA,SACnB+R,EAAS,kBAAoB5V,KAAKC,UAAUuoC,EAAU,KAAM,KAAG,OAMO,OAJjFhtE,KAAK4C,QAAUoqE,EAASY,iBACxB5tE,KAAKo2B,SAAW42C,EAAS52C,SACzBp2B,KAAK2yF,UAAW,EAEhB3yF,KAAK+0F,QAAQ/nB,EAAS92C,KAAM82C,EAAS92C,IAAI+6C,OAASjE,EAAS92C,IAAI+6C,OAAc,IAAI5hB,EAAAhnB,OAAA,SAE1E+R,EAAS,KAAMp6C,OAAK,WAAAqvD,EAAAtnB,KAAA,GAAAsnB,EAAA1L,GAAA0L,EAAA,UAEvBA,EAAA1L,GAAGjhB,WAAWqkC,SAAS,kBAAiB,CAAA1X,EAAArnB,KAAA,gBAAAqnB,EAAAhnB,OAAA,SACjC+R,EAAS,kDAAgD,eAAAiV,EAAAhnB,OAAA,SAE7D+R,EAAQiV,EAAA1L,KAAI,yBAAA0L,EAAA5mB,OAAA,GAAA2mB,EAAA,mBAE1B,SAAA9M,GAAA,OAAA0yC,EAAAxtD,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,SAAA77B,MAED,WAAuC,IAAhC04C,EAAOjX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGoV,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAMzB,GALI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,IAGV2rB,GAAAA,WAAiBxtB,GAClB,MAAM,IAAIhY,MAAM,8BAEpB,IAAMriC,EAAOC,KAEb,MAAO,CACHwrC,MAAK,WAAwB,IAAvBsqD,EAAa9wD,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GACf,OAAK8wD,GAKL/1F,EAAKg2F,oBAAoB95C,EAAS7B,GAAUoJ,MAAK,WAC7CsyC,GACJ,IAAE,OAAO,SAAAvoD,GACLuoD,EAAcvoD,EAClB,IAEOvtC,OAVHD,EAAKg2F,oBAAoB95C,EAAS7B,GAC3Bp6C,KAUf,EACAyoC,KAAI,WACA1oC,EAAKi2F,oBACT,EAER,KAACh0F,CAAA,CAjPwB,GCDRi0F,GAAM,WAEvB,SAAAA,IAA2C,IAA/Bzb,EAAOx1C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAUiX,EAAOjX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpC,GADqCuJ,IAAA,KAAA0nD,IAChCzb,IAAYA,aAAmBxU,GAChC,MAAM,IAAI5jC,MAAM,gCACpBpiC,KAAKw6E,QAAUA,EACfx6E,KAAKk2F,iBAAmB,CAAC,YACzBl2F,KAAKm2F,eAAiBl6C,EAAQk6C,cAClC,CAuDC,OAvDAznD,IAAAunD,EAAA,EAAA72D,IAAA,WAAA77B,MAED,SAAS0yF,EAAQh6C,GACb,IAAIm6C,EAAkB,CAClBC,SAAU,QACV10C,WAAY,CAAC,GAEb1Y,EAAS,CACTqtD,KAAM,GACNC,QAAS,GACTC,QAAS,IAEb,GAAIx2F,KAAKm2F,eAEL,OADAltD,EAAO9B,MAAQ,iDACR8B,EAEX,IAAMwtD,EAAS,IAAIR,EAAOj2F,KAAKw6E,SAI/B,GAHI5S,GAAAA,WAAiB6uB,EAAOL,mBACxBA,EAAkBK,EAAOL,gBAAgBn6C,KAEzCy6C,KAAAA,UAAiB1wB,GAAQnvC,QAASu/D,EAAgBC,UAgClD,MAAM,IAAIj0D,MAAM,6DA/BhB,GAAIg0D,EAAgBO,UAAW,CAE3B,IAAIjsD,EAAY+rD,EAAO9e,YAAYj1E,KAC/Bk0F,EAAoBlsD,EAAUK,UAAU,EAAG,GAAGwI,cAAgB7I,EAAUK,UAAU,GAClFL,IAAcksD,IACd5wB,GAAQt7B,GAAaurD,EACrBj2F,KAAKw6E,QAAQoc,GAAqBH,EAClCxtD,EAAOqtD,KAAK1xD,KAAK8F,GAEzB,MAEI,IAAK,IAAImuB,KAAau9B,EAAgBz0C,WAClC,GAAK3hD,KAAKw6E,QAAQ76C,eAAek5B,GAAjC,CAGA,IAAI+7B,EAAUwB,EAAgBz0C,WAAWkX,GACrCq9B,EAAmBl2F,KAAKw6E,QAAQ3hB,GAAWq9B,kBAAoB,GACnE,IAAK,IAAIvrD,KAAUiqD,EACA,gBAAXjqD,GAA6B3qC,KAAKw6E,QAAQ3hB,GAAWluB,KACpDurD,EAAiBnvB,SAASp8B,IACpB,KAAKvF,KAAKuF,IAEjB1B,EAAOutD,QAAQ5xD,KAAK+F,IAGxB3qC,KAAKw6E,QAAQ3hB,GAAWluB,GAAUiqD,EAAQjqD,GAAQ8qD,KAAKz1F,KAAKw6E,QAAQ3hB,IACpE5vB,EAAOstD,QAAQ3xD,KAAK+F,GAZxB,CAmBZ,OAAO1B,CACX,KAACgtD,CAAA,CA/DsB,GCJ3B,MAAM,GAA+Bv2F,QAAQ,mB,eCMxBm3F,GAAK,WAEtB,SAAAA,IAA6B,IAAjBrc,EAAOx1C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GACf,GADuBuJ,IAAA,KAAAsoD,KAClBrc,GAAaA,aAAmBxU,IACjC,MAAM,IAAI5jC,MAAM,gCACpBpiC,KAAKw6E,QAAUA,EACfx6E,KAAKq8E,cAAgBC,KAAct8E,KACvC,CAoJC,OApJA0uC,IAAAmoD,EAAA,EAAAz3D,IAAA,YAAA77B,MAED,WAA4D,IAAAy8B,EAAA,KAAlD2zD,EAAW3uD,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAU8xD,EAAW9xD,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,cACzC,IAAK2uD,EACD,OAAO3zF,KAAKw6E,QAAQmZ,aAAc,EAKtC,GAHI/rB,GAAAA,SAAe+rB,KACfA,EAAc,IAAIoD,GAAUrd,aAAaia,KAExC3zF,KAAKw6E,QAAQwc,gBAAgBrD,GAC9B,MAAM,IAAIvxD,MAAM,iCAEpBpiC,KAAKw6E,QAAQmZ,YAAcA,EAC3B3zF,KAAKw6E,QAAQmZ,YAAYsD,YAAc,kBAAMj3D,EAAKw6C,QAAQmZ,YAAYrZ,QAAQwc,GAAatzC,MAAK,kBAAM,CAAI,IAAC,OAAO,kBAAM,CAAK,GAAC,CAClI,GAAC,CAAApkB,IAAA,6BAAA77B,MAED,WAAoF,IAAzDyyB,EAAegP,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAUiX,EAAOjX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGoV,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAEtE07C,EAgBIphD,OAAOqK,OAAO,CACdutD,eAAgB,EAChBjD,WAAW,EACXC,aAAa,EACbr4C,KAAM,GACNs7C,KAAM,GACPl7C,GArBCi7C,EAAcxW,EAAdwW,eACA1D,EAAK9S,EAAL8S,MACA4D,EAAa1W,EAAb0W,cACAnD,EAASvT,EAATuT,UACAC,EAAWxT,EAAXwT,YACAr4C,EAAI6kC,EAAJ7kC,KACAs7C,EAAIzW,EAAJyW,KACA9C,EAAa3T,EAAb2T,cACAD,EAAe1T,EAAf0T,gBACAiD,EAA4B3W,EAA5B2W,6BACAC,EAAmB5W,EAAnB4W,oBACAj+B,EAAWqnB,EAAXrnB,YACA+5B,EAAW1S,EAAX0S,YACAhqD,EAAIs3C,EAAJt3C,KACA+qD,EAAOzT,EAAPyT,QASJ,IAAK/5C,EACD,OAAOp6C,KAAKq8E,cAAcr8E,KAAKs0F,2BAA4Bt+D,EAAiBimB,GAIhF,GAFAm7C,EAAgBA,GAAiBF,GAAkB1D,GAE9CxzF,KAAKw6E,QAAQmZ,YACd,OAAOv5C,EAAS,8BAEpB,IAAMm9C,EAAc,GAEpB,IAAKv3F,KAAKw6E,QAAQS,UAAUjlD,GACxB,OAAOokB,EAAS,qCAEpB,GAAI65C,IAAcj+D,EACd,OAAOokB,EAAS,6DAEpB,QAA6B,IAAlBg9C,IAAkCxvB,GAAAA,UAAgBwvB,GACzD,OAAOh9C,EAAS,kCAEpB,IAAKwtB,GAAAA,UAAgB/rB,GACjB,OAAOzB,EAAS,yBAOpB,GALIyB,EAAO,MACPuf,QAAQo8B,KAAK,4CACb37C,EAAO,MAGN+rB,GAAAA,UAAgBuvB,GACjB,OAAO/8C,EAAS,yBAEpB,GAAI85C,IAAgBD,EAChB,OAAO75C,EAAS,0DAEhBpkB,GACAuhE,EAAY3yD,KAAK5kC,KAAKw6E,QAAQ53E,QAAQivF,QAAQ77D,IAE9Ci+D,GACAsD,EAAY3yD,KAAKqvD,GAEjBC,GACAqD,EAAY3yD,KAAKsvD,GAErB,IAAMuD,EAAK,CACP57C,KAAAA,EACAs7C,KAAAA,GAwBJ,MArBuB,WAAnBjwD,IAAOitD,IAAwB70D,OAAOsI,KAAKusD,GAAS9vF,OAAS,IAC7DozF,EAAGtD,QAAU3vD,KAAKC,UAAU0vD,IAG5BiD,IACAK,EAAGL,cAAgBK,EAAGjE,MAAQ4D,GAG9B/C,IACAoD,EAAGC,eAAiBrD,GAEpBD,IAAoBC,IACpBoD,EAAGE,iBAAmBvD,GAEtBhrD,IACAquD,EAAGruD,KAAOA,IAEdiwB,EAAcA,GAAei+B,GAAuBD,KAEhDI,EAAGp+B,YAAcA,GAEdr5D,KAAKw6E,QAAQmZ,YAAYrZ,QAAQ,kBAAD/2C,OAAmBg0D,EAAY5wD,KAAK,KAAI,KAAApD,OAAIq0D,KAAAA,UAAsBH,KAAOj0C,MAAK,WAAkB,IAAjB1+B,EAAIkgB,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GACtH,OAAKlgB,EAGA8iD,GAAAA,QAAc9iD,GAGZs1B,EAAS,MACI,IAAhBg5C,EAAuBtuE,EAAOA,EAAK2hB,KAAI,SAAA2xC,GAAK,OAAIxQ,GAAAA,SAAewQ,EAAM,KAH9Dh+B,EAASt1B,GAHTs1B,EAAS,yBAQxB,IAAE,OAAO,SAAA7M,GAAG,OAAI6M,EAAU7M,EAAIsqD,UAAYtqD,EAAIsqD,SAAS/yE,MAASyoB,EAAI,GACxE,GAAC,CAAAnO,IAAA,2BAAA77B,MAGD,WAAgF,IAAvDwlF,EAAa/jD,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAUiX,EAAOjX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGoV,EAAQpV,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAOlE,OALI4iC,GAAAA,WAAiB3rB,KACjB7B,EAAW6B,EACXA,EAAU,CAAC,GAGV7B,EAGAp6C,KAAKw6E,QAAQmZ,YAGX3zF,KAAKw6E,QAAQmZ,YAAYrZ,QAAQ,qBAAD/2C,OAAsBwlD,IAAiBvlC,MAAK,WAAkB,IAAjB1+B,EAAIkgB,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GACpF,OAAKlgB,EAGA8iD,GAAAA,QAAc9iD,GAGZs1B,EAAS,MACY,IAAxB6B,EAAQm3C,YAAuBtuE,EAAOA,EAAK2hB,KAAI,SAAA2xC,GAAK,OAAIxQ,GAAAA,SAAewQ,EAAM,KAHtEh+B,EAASt1B,GAHTs1B,EAAS,yBAQxB,IAAE,OAAO,SAAA7M,GAAG,OAAI6M,EAAU7M,EAAIsqD,UAAYtqD,EAAIsqD,SAAS/yE,MAASyoB,EAAI,IAZzD6M,EAAS,8BAHTp6C,KAAKq8E,cAAcr8E,KAAK83F,yBAA0B/O,EAAe9sC,EAgBhF,KAAC46C,CAAA,CA3JqB,G,qkBCLa,IAElBkB,GAAS,WAC1B,SAAAA,EAAYC,GAAqE,IAAxDhyB,EAAOhhC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAUizD,EAASjzD,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAUqS,EAAUrS,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAQuJ,IAAA,KAAAwpD,GAC3E/3F,KAAKi4F,UAAYA,EACjB,IAAQC,EAAuGF,EAAvGE,SAAUrc,EAA6Fmc,EAA7Fnc,SAAUuM,EAAmF4P,EAAnF5P,aAAcuL,EAAqEqE,EAArErE,YAAawE,EAAwDH,EAAxDG,mBAAoBC,EAAoCJ,EAApCI,mBAAoBC,EAAgBL,EAAhBK,YAC/Fr4F,KAAKs4F,UAAY,IAAItyB,EAAQkyB,GAAYrc,EAAUqc,GAAY9P,EAAc8P,GAAYvE,EAAat8C,GACtGr3C,KAAKi7E,UAAYj7E,KAAKi4F,UAAUhd,UAChCj7E,KAAK4nE,MAAQ5nE,KAAKi4F,UAAUrwB,MAC5B5nE,KAAKu4F,sBAAsBJ,GAC3Bn4F,KAAKw4F,sBAAsBJ,GAC3Bp4F,KAAKy4F,WAAWJ,GAChBr4F,KAAKq8E,cAAgBC,KAAct8E,MACnCA,KAAKi3E,UAAY,IAAIsD,GAAUv6E,KAAKs4F,WAEpC,IAAMv4F,EAAOC,KACbA,KAAKs4F,UAAUtX,IAAIpvB,KAAO,WACtB,OAAO7xD,EAAK6xD,KAAIpqB,MAATznC,EAAIilC,UACf,EACAhlC,KAAKs4F,UAAUtX,IAAIwM,UAAY,WAC3B,OAAOztF,EAAKytF,UAAShmD,MAAdznC,EAAIilC,UACf,EAEAo2B,QAAQo8B,KAAK,+MACjB,CAg9BC,IAAAkB,EArBAC,EArBAC,EAtEAC,EArBAC,EArBAC,EAtJAC,EAhEAC,EAxDDC,EArBCC,EAnBAC,EAhEDC,EAxBCC,EAtBAC,EArBAC,EArBAC,EA1FAC,EA/DAC,EAxDDC,EA5DC7R,EAvDAD,EAi8BA,OAr+BAp5C,IAAAqpD,EAAA,EAAA34D,IAAA,wBAAA77B,MACD,SAAsB40F,GAClB,IAAKn4F,KAAKi7E,UAAUkd,GAChB,MAAM,IAAI/1D,MAAM,yCACpBpiC,KAAKm4F,mBAAqBA,CAC9B,GAAC,CAAA/4D,IAAA,wBAAA77B,MAED,SAAsB60F,GAClB,IAAKp4F,KAAKi7E,UAAUmd,GAChB,MAAM,IAAIh2D,MAAM,yCACpBpiC,KAAKo4F,mBAAqBA,CAC9B,GAAC,CAAAh5D,IAAA,aAAA77B,MAED,SAAW80F,GACP,IAAKr4F,KAAK4nE,MAAMgQ,SAASygB,KAAiBA,EACtC,MAAM,IAAIj2D,MAAM,iCACpBpiC,KAAKmvC,QAAUkpD,CACnB,GAAC,CAAAj5D,IAAA,kBAAA77B,MAED,SAAgBqjE,EAAapiB,GACE,iBAAhBoiB,IACPA,EAAc5mE,KAAK4nE,MAAMn8D,KAAKs5B,iBAAiB6hC,IAEnD,IAAIizB,EAAiB75F,KAAK4nE,MAAMn8D,KAAKs5B,iBAAiB/kC,KAAKmvC,SAEvD2qD,EAAU95F,KAAK4nE,MAAMn8D,KAAKs5B,iBAAiByf,EAAYsiB,MAAMvjC,OAAOs2D,GACpEE,EAAc/5F,KAAKs4F,UAAU1wB,MAAM6R,YAAYtpC,OAAO2pD,GAEpD3hD,EAAYn4C,KAAK4nE,MAAM2R,OAAO1S,UAAU7mE,KAAK4nE,MAAMn8D,KAAKs5B,iBAAiBg1D,EAAY54D,QAAQ,MAAO,KAAMylC,GAOhH,OALIhlC,MAAMkH,QAAQ0b,EAAYrM,WACrBqM,EAAYrM,UAAU4uB,SAAS5uB,IAChCqM,EAAYrM,UAAUvT,KAAKuT,GAE/BqM,EAAYrM,UAAY,CAACA,GACtBqM,CACX,GAAC,CAAAplB,IAAA,YAAA77B,OAAAukF,EAAArgD,IAAAC,IAAAA,MAED,SAAAC,IAAA,IAAA6c,EAAAnN,EAAAh6B,EAAA+8B,EAAAx3C,EAAA0qF,EAAAC,EAAAlT,EAAAr1C,UAAA,OAAA0C,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAUK,GAVWwc,EAAW61B,EAAAh2E,OAAA,QAAAF,IAAAk2E,EAAA,IAAAA,EAAA,GAAUhjC,EAAUgjC,EAAAh2E,OAAA,QAAAF,IAAAk2E,EAAA,GAAAA,EAAA,GAAGr6E,KAAKs4F,UAAUnL,kBAAmB9vE,EAAYg9D,EAAAh2E,OAAA,QAAAF,IAAAk2E,EAAA,IAAAA,EAAA,GAAUjgC,EAAQigC,EAAAh2E,OAAA,QAAAF,IAAAk2E,EAAA,IAAAA,EAAA,GAC1Gr6E,KAAK4nE,MAAMiQ,WAAWx6D,KACtB+8B,EAAW/8B,EACXA,EAAe,GAGfrd,KAAK4nE,MAAMiQ,WAAWxgC,KACtB+C,EAAW/C,EACXA,EAAar3C,KAAKi4F,UAAU9K,kBAC5B9vE,EAAe,GAGd+8B,EAAU,CAAFtS,EAAAE,KAAA,eAAAF,EAAAO,OAAA,SAASroC,KAAKq8E,cAAcr8E,KAAKwtF,UAAWhpC,EAAanN,EAAYh6B,IAAa,UAE1Frd,KAAK4nE,MAAMwP,SAAS5yB,IAAiBA,EAAYw3B,UAAax3B,EAAYw3B,SAAShP,SAAQ,CAAAllC,EAAAE,KAAA,gBAAAF,EAAAO,OAAA,SAAS+R,EAAS,iCAA+B,WAE5IoK,EAAYw3B,SAAShP,SAAS,GAAGK,iBAAiBhwD,EAAe,GAAC,CAAAyqB,EAAAE,KAAA,SAK0C,OAH7Gwc,EAAYw3B,SAAShP,SAAS,GAAGK,cAAgBhwD,EAG3Cza,EAAU5C,KAAKs4F,UAAU11F,QAAQ+1C,MAAM34C,KAAKs4F,UAAU11F,QAAQkmE,eAAezxB,IAAa9D,cAAazL,EAAAE,KAAA,GACpFhoC,KAAKs4F,UAAUtX,IAAIyM,cAAcjpC,EAAannC,GAAa,QAApE,GAEe,sBAFzBiwE,EAAUxlD,EAAAM,MAEDa,OAAOx9B,KAA2B,CAAAq8B,EAAAE,KAAA,gBAAAF,EAAAO,OAAA,SACtC+R,EAASkzC,EAAWrkD,OAAOhlC,UAAQ,QAM3C,GAHCspF,GAAW,EACfD,EAAWjY,WAAWztC,KAAKnB,KAAI,SAAArH,GACvBA,EAAIx8B,UAAYA,IAAS2qF,GAAW,EAC5C,IAEKA,EAAU,CAAFzlD,EAAAE,KAAA,gBAAAF,EAAAO,OAAA,SAAS+R,EAAS/C,EAAa,+BAA6B,YAErEi2C,EAAWI,gBAA+D,GAA9CJ,EAAWI,cAActsD,QAAQx+B,GAAc,CAAAklC,EAAAE,KAAA,gBAAAF,EAAAO,OAAA,SACpE+R,EAAS/C,EAAa,8BAA4B,YAIzDi2C,EAAW9oC,cAAe8oC,EAAW9oC,YAAYA,YAAW,CAAA1c,EAAAE,KAAA,UAC5Dwc,EAAc8oC,EAAW9oC,YAAYA,aACzBw3B,SAAShP,SAAS,GAAGK,cAAgBhwD,EAAayqB,EAAAE,KAAA,wBAAAF,EAAAO,OAAA,SAEvD+R,EAAS,iCAA+B,eAAAtS,EAAAC,KAAA,GAAAD,EAAAO,OAAA,SAK5C+R,EAAS,KAAMp6C,KAAKkwD,gBAAgB7Y,EAAYmN,KAAa,QAAA1c,EAAAC,KAAA,GAAAD,EAAA6b,GAAA7b,EAAA,UAEpEsS,EAAQtS,EAAA6b,IAAK,yBAAA7b,EAAAW,OAAA,GAAAd,EAAA,oBAEpB,kBAAAmgD,EAAAtgD,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,OAAA77B,OAAAwkF,EAAAtgD,IAAAC,IAAAA,MAED,SAAA+b,IAAA,IAAAe,EAAAnN,EAAAu1C,EAAAI,EAAA5yC,EAAA6yC,EAAA3M,EAAAt7C,UAAA,OAAA0C,IAAAA,MAAA,SAAAgc,GAAA,cAAAA,EAAA3b,KAAA2b,EAAA1b,MAAA,OAiBK,GAjBMwc,EAAW87B,EAAAj8E,OAAA,QAAAF,IAAAm8E,EAAA,IAAAA,EAAA,GAAUjpC,EAAUipC,EAAAj8E,OAAA,QAAAF,IAAAm8E,EAAA,GAAAA,EAAA,GAAGtgF,KAAKs4F,UAAUnL,kBAAmBP,IAAatM,EAAAj8E,OAAA,QAAAF,IAAAm8E,EAAA,KAAAA,EAAA,GAAS0M,EAAQ1M,EAAAj8E,OAAA,QAAAF,IAAAm8E,EAAA,IAAAA,EAAA,GAAUlmC,EAAQkmC,EAAAj8E,OAAA,QAAAF,IAAAm8E,EAAA,IAAAA,EAAA,GACvHtgF,KAAK4nE,MAAMiQ,WAAWmV,KACtB5yC,EAAW4yC,EACXA,GAAW,GAGXhtF,KAAK4nE,MAAMiQ,WAAW+U,KACtBxyC,EAAWwyC,EACXA,GAAgB,EAChBI,GAAW,GAGXhtF,KAAK4nE,MAAMiQ,WAAWxgC,KACtB+C,EAAW/C,EACXA,EAAar3C,KAAKs4F,UAAUnL,kBAC5BP,GAAgB,EAChBI,GAAW,GAGV5yC,EAAQ,CAAAsJ,EAAA1b,KAAA,gBAAA0b,EAAArb,OAAA,SACFroC,KAAKq8E,cAAcr8E,KAAK4xD,KAAMpN,EAAanN,EAAYu1C,EAAeI,IAAS,YAGtFhtF,KAAK4nE,MAAMgQ,SAASpzB,GAAc,CAAFd,EAAA1b,KAAA,YAE3BhoC,KAAK4nE,MAAMkQ,MAAMtzB,GAAY,CAAAd,EAAA1b,KAAA,gBAAA0b,EAAArb,OAAA,SACvB+R,EAAS,+BAA6B,QAG6C,OAH7CsJ,EAAA3b,KAAA,GAGvCklD,EAAejtF,KAAKs4F,UAAUtX,IAAIoM,WAAW5oC,EAAanN,EAAYu1C,GAAclpC,EAAArb,OAAA,SACnF+R,EAAS,KAAM6yC,IAAa,QAAAvpC,EAAA3b,KAAA,GAAA2b,EAAAC,GAAAD,EAAA,UAEnCtJ,EAAQsJ,EAAAC,IAAK,WAIhB3jD,KAAK4nE,MAAMwP,SAAS5yB,GAAY,CAAAd,EAAA1b,KAAA,gBAAA0b,EAAArb,OAAA,SAC1B+R,EAAS,iCAA+B,WAE9C4yC,IAAYxoC,EAAYrM,UAAS,CAAAuL,EAAA1b,KAAA,gBAAA0b,EAAArb,OAAA,SAC3B+R,EAAS,kCAAgC,WAAAsJ,EAAA3b,KAAA,GAG3CilD,EAAU,CAAFtpC,EAAA1b,KAAA,SAGM,GAFChoC,KAAKs4F,UAAU11F,QAAQ+1C,MACnC34C,KAAKs4F,UAAU11F,QAAQkmE,eAAezxB,IACxC9D,gBACcvzC,KAAKs4F,UAAU11F,QAAQ+1C,MAAM6L,EAAYw3B,SAAShP,SAAS,GAAGlwD,UAAUvZ,MAAM4pE,eAAc,CAAAzpB,EAAA1b,KAAA,gBAAA0b,EAAArb,OAAA,SACjG+R,EAAS,sDAAoD,eAAAsJ,EAAArb,OAAA,SAErE+R,EAAS,KACZp6C,KAAKkwD,gBAAgB7Y,EAAYmN,KACpC,QAAAd,EAAA3b,KAAA,GAAA2b,EAAAE,GAAAF,EAAA,UAEDtJ,EAAQsJ,EAAAE,IAAK,yBAAAF,EAAAjb,OAAA,GAAAgb,EAAA,4BAEpB,kBAAAskC,EAAAvgD,MAAA,KAAAxC,UAAA,IAED,CAAA5F,IAAA,aAAA77B,OAAAq2F,EAAAnyD,IAAAC,IAAAA,MAGA,SAAA+mB,EACIn4B,EACA0jE,EACA30E,GAAQ,IAAA42B,EAAA5E,EAAA+C,EAAA6/C,EAAAhxD,EAAAikD,EAAAloD,UAAA,OAAA0C,IAAAA,MAAA,SAAAonB,GAAA,cAAAA,EAAA/mB,KAAA+mB,EAAA9mB,MAAA,OAYP,GAXDiU,EAAOixC,EAAA7oF,OAAA,QAAAF,IAAA+oF,EAAA,GAAAA,EAAA,GAAG,CAAC,EACX71C,EAAU61C,EAAA7oF,OAAA,QAAAF,IAAA+oF,EAAA,GAAAA,EAAA,GAAGltF,KAAKi4F,UAAU9K,kBAC5B/yC,EAAQ8yC,EAAA7oF,OAAA,QAAAF,IAAA+oF,EAAA,IAAAA,EAAA,GAEJltF,KAAK4nE,MAAMiQ,WAAWxgC,KACtB+C,EAAW/C,EACXA,EAAar3C,KAAKi4F,UAAU9K,mBAE5BntF,KAAK4nE,MAAMiQ,WAAW57B,KACtB7B,EAAW6B,EACXA,EAAU,CAAC,GAEV7B,EAAU,CAAF0U,EAAA9mB,KAAA,eAAA8mB,EAAAzmB,OAAA,SACFroC,KAAKq8E,cAAcr8E,KAAKk6F,WAAY5jE,EAAW0jE,EAAY30E,EAAU42B,EAAS5E,IAAW,WAEhGr3C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,YACNyH,KAAM,UACN5G,MAAO+yB,EACPukD,IAAK,GAET,CACIn4E,KAAM,aACNyH,KAAM,UACN5G,MAAOy2F,EACPnf,IAAK,GAET,CACIn4E,KAAM,WACNyH,KAAM,UACN5G,MAAO8hB,EACPw1D,IAAK,IAEVzgC,GAAW,CAAF0U,EAAA9mB,KAAA,eAAA8mB,EAAAzmB,OAAA,iBAOV,OAJF4T,EAAOs0B,GAAA,CACHj6C,UAAWuW,OAAOvW,GAAauW,OAAOmtD,GACtC30E,SAAAA,GACG42B,GACL6S,EAAA/mB,KAAA,GAAA+mB,EAAA9mB,KAAA,GAEiChoC,KAAKi4F,UAAUjrB,WAAW6oB,GAAG71F,KAAKm4F,oBAAmB,QAA9D,OAAhB8B,EAAgBnrC,EAAA1mB,KAAA0mB,EAAA9mB,KAAG,GACJiyD,EAAiBE,aAAa5H,KAAKt2C,EAAS5E,GAAW,QAAhE,OAANpO,EAAM6lB,EAAA1mB,KAAA0mB,EAAAzmB,OAAA,SACL+R,EAAS,KAAMnR,IAAO,eAAA6lB,EAAA/mB,KAAA,GAAA+mB,EAAAnL,GAAAmL,EAAA,UAAAA,EAAAzmB,OAAA,SAEtB+R,EAAQ0U,EAAAnL,KAAI,yBAAAmL,EAAArmB,OAAA,GAAAgmB,EAAA,oBAE1B,SAAAnnB,EAAAgb,EAAAqG,GAAA,OAAAixC,EAAApyD,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,eAAA77B,OAAAo2F,EAAAlyD,IAAAC,IAAAA,MAED,SAAA0nB,EACIl7B,EACA2qD,EACAmb,EACA30E,GAAQ,IAAA42B,EAAA5E,EAAA+C,EAAA6/C,EAAAhxD,EAAAo9C,EAAArhD,UAAA,OAAA0C,IAAAA,MAAA,SAAA2nB,GAAA,cAAAA,EAAAtnB,KAAAsnB,EAAArnB,MAAA,OAWP,GAVDiU,EAAOoqC,EAAAhiF,OAAA,QAAAF,IAAAkiF,EAAA,GAAAA,EAAA,GAAG,CAAC,EACXhvC,EAAUgvC,EAAAhiF,OAAA,QAAAF,IAAAkiF,EAAA,GAAAA,EAAA,GAAGrmF,KAAKi4F,UAAU9K,kBAC5B/yC,EAAQisC,EAAAhiF,OAAA,QAAAF,IAAAkiF,EAAA,IAAAA,EAAA,GACJrmF,KAAK4nE,MAAMiQ,WAAWxgC,KACtB+C,EAAW/C,EACXA,EAAar3C,KAAKi4F,UAAU9K,mBAE5BntF,KAAK4nE,MAAMiQ,WAAW57B,KACtB7B,EAAW6B,EACXA,EAAU,CAAC,GAEV7B,EAAU,CAAFiV,EAAArnB,KAAA,eAAAqnB,EAAAhnB,OAAA,SACFroC,KAAKq8E,cAAcr8E,KAAKo6F,aAAclmE,EAAS2qD,EAAYmb,EAAY30E,EAAU42B,EAAS5E,IAAW,WAE5Gr3C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,aACNyH,KAAM,UACN5G,MAAOs7E,EACPhE,IAAK,GAET,CACIn4E,KAAM,aACNyH,KAAM,UACN5G,MAAOy2F,EACPnf,IAAK,GAET,CACIn4E,KAAM,WACNyH,KAAM,UACN5G,MAAO8hB,EACPw1D,IAAK,GAET,CACIn4E,KAAM,UACNyH,KAAM,UACN5G,MAAO2wB,EACP2mD,IAAK,IAEVzgC,GAAW,CAAFiV,EAAArnB,KAAA,eAAAqnB,EAAAhnB,OAAA,iBASV,OANF4T,EAAOs0B,GAAAA,GAAA,CACHr8C,QAAAA,EACA2qD,WAAAA,EACAx5D,SAAAA,GACG42B,GAAO,IACV3lB,UAAW0jE,IACb3qC,EAAAtnB,KAAA,GAAAsnB,EAAArnB,KAAA,GAEiChoC,KAAKi4F,UAAUjrB,WAAW6oB,GAAG71F,KAAKm4F,oBAAmB,QAA9D,OAAhB8B,EAAgB5qC,EAAAjnB,KAAAinB,EAAArnB,KAAG,GACJiyD,EAAiBI,aAAanmE,EAAS2qD,GAAY0T,KAAKt2C,EAAS5E,GAAW,QAA3FpO,EAAMomB,EAAAjnB,KACZgS,EAAS,KAAMnR,GAAQomB,EAAArnB,KAAA,wBAAAqnB,EAAAtnB,KAAA,GAAAsnB,EAAA1L,GAAA0L,EAAA,UAAAA,EAAAhnB,OAAA,SAEhB+R,EAAQiV,EAAA1L,KAAI,yBAAA0L,EAAA5mB,OAAA,GAAA2mB,EAAA,oBAE1B,SAAAxG,EAAAuG,EAAAI,EAAAG,GAAA,OAAAiqC,EAAAnyD,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,aAAA77B,OAAAm2F,EAAAjyD,IAAAC,IAAAA,MAED,SAAA8nB,EACI+wB,EACAl2D,EACA1J,EACA0E,EACA2Q,GAAe,IAAAimB,EAAA5E,EAAA+C,EAAAnR,EAAAqxD,EAAAL,EAAAvT,EAAA1hD,UAAA,OAAA0C,IAAAA,MAAA,SAAA+nB,GAAA,cAAAA,EAAA1nB,KAAA0nB,EAAAznB,MAAA,OAYd,GAXDiU,EAAOyqC,EAAAriF,OAAA,QAAAF,IAAAuiF,EAAA,GAAAA,EAAA,GAAG,CAAC,EACXrvC,EAAUqvC,EAAAriF,OAAA,QAAAF,IAAAuiF,EAAA,GAAAA,EAAA,GAAG1mF,KAAKi4F,UAAU9K,kBAC5B/yC,EAAQssC,EAAAriF,OAAA,QAAAF,IAAAuiF,EAAA,IAAAA,EAAA,GAEJ1mF,KAAK4nE,MAAMiQ,WAAWxgC,KACtB+C,EAAW/C,EACXA,EAAar3C,KAAKi4F,UAAU9K,mBAE5BntF,KAAK4nE,MAAMiQ,WAAW57B,KACtB7B,EAAW6B,EACXA,EAAU,CAAC,GAEV7B,EAAU,CAAFqV,EAAAznB,KAAA,eAAAynB,EAAApnB,OAAA,SACFroC,KAAKq8E,cAAcr8E,KAAKu6F,WAAYha,EAAkBl2D,EAAK1J,EAAK0E,EAAU2Q,EAAiBimB,EAAS5E,IAAW,WAEtHr3C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,mBACNyH,KAAM,mBACN5G,MAAOg9E,GAEX,CACI79E,KAAM,MACNyH,KAAM,UACN5G,MAAO8mB,EACPwwD,IAAK,GAET,CACIn4E,KAAM,MACNyH,KAAM,UACN5G,MAAOod,EACPk6D,IAAK,GAET,CACIn4E,KAAM,WACNyH,KAAM,UACN5G,MAAO8hB,EACPw1D,IAAK,GAET,CACIn4E,KAAM,kBACNyH,KAAM,UACN5G,MAAOyyB,IAEZokB,GAAW,CAAFqV,EAAAznB,KAAA,eAAAynB,EAAApnB,OAAA,iBAWS,GARrB4T,EAAOs0B,GAAAA,GAAA,CACHlrD,SAAAA,GACG42B,GAAO,IACV3lB,UAAW3V,EACXuT,QAAS,GACT2qD,WAAY,IACdpvB,EAAA1nB,KAAA,GAEMkB,EAAS,KACY,YAArBs3C,EAA8B,CAAA9wB,EAAAznB,KAAA,gBAAAynB,EAAAznB,KAAA,GACAhoC,KAAKi4F,UAAUjrB,WAAW6oB,GAAG7/D,GAAgB,QAAtD,OAAfskE,EAAe7qC,EAAArnB,KAAAqnB,EAAAznB,KAAG,GACTsyD,EAAgBE,QAAQx6F,KAAKm4F,mBAAoB9tE,GAAKkoE,KAAKt2C,EAAS5E,GAAW,QAA9FpO,EAAMwmB,EAAArnB,KAAAqnB,EAAAznB,KAAG,GAAH,qBAAAynB,EAAAznB,KAAG,GAEsBhoC,KAAKi4F,UAAUjrB,WAAW6oB,GAAG71F,KAAKm4F,oBAAmB,QAA9E8B,EAAgBxqC,EAAArnB,KAAAqnB,EAAA9L,GACd48B,EAAgB9wB,EAAAznB,KACf,iBADeynB,EAAA9L,GACD,GAGd,kBAHc8L,EAAA9L,GAGC,GAGf,iBAHe8L,EAAA9L,GAGD,GAGd,iBAHc8L,EAAA9L,GAGA,2BAAA8L,EAAAznB,KAAA,GARAiyD,EAAiBQ,aAAazkE,EAAiB3L,GAAKkoE,KAAKt2C,EAAS5E,GAAW,QAGC,QAGlB,QAGA,QAArE,OAANpO,EAAMwmB,EAAArnB,KAAAqnB,EAAApnB,OAAA,YATA,eAAAonB,EAAAznB,KAAG,GAGMiyD,EAAiBS,cAAc1kE,EAAiB3L,GAAKkoE,KAAKt2C,EAAS5E,GAA5E,eAAAoY,EAAAznB,KAAG,GAGMiyD,EAAiBU,aAAatwE,GAAKkoE,KAAKt2C,EAAS5E,GAA1D,eAAAoY,EAAAznB,KAAG,GAGMiyD,EAAiBW,aAAavwE,GAAKkoE,KAAKt2C,EAAS5E,GAA1D,eAAAoY,EAAApnB,OAAA,oBAMlB+R,EAAS,KAAMnR,GAAQwmB,EAAAznB,KAAA,wBAAAynB,EAAA1nB,KAAA,GAAA0nB,EAAA7L,GAAA6L,EAAA,UAAAA,EAAApnB,OAAA,SAEhB+R,EAAQqV,EAAA7L,KAAI,yBAAA6L,EAAAhnB,OAAA,GAAA+mB,EAAA,oBAE1B,SAAAK,EAAAO,EAAAY,EAAAG,EAAAI,GAAA,OAAAmoC,EAAAlyD,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,eAAA77B,OAAAk2F,EAAAhyD,IAAAC,IAAAA,MAED,SAAAioB,EACItlC,EACAhF,EACA2Q,GAAe,IAAAimB,EAAA5E,EAAA+C,EAAAysC,EAAA7hD,UAAA,OAAA0C,IAAAA,MAAA,SAAAkoB,GAAA,cAAAA,EAAA7nB,KAAA6nB,EAAA5nB,MAAA,OAKmB,OAJlCiU,EAAO4qC,EAAAxiF,OAAA,QAAAF,IAAA0iF,EAAA,GAAAA,EAAA,GAAG,CAAC,EACXxvC,EAAUwvC,EAAAxiF,OAAA,QAAAF,IAAA0iF,EAAA,GAAAA,EAAA,GAAG7mF,KAAKi4F,UAAU9K,kBAC5B/yC,EAAQysC,EAAAxiF,OAAA,QAAAF,IAAA0iF,EAAA,IAAAA,EAAA,GAE0Bj3B,EAAAvnB,OAAA,SAC3BroC,KAAKu6F,WADa,UAGrBlwE,EACA,EACAhF,EACA2Q,EACAimB,EACA5E,EACA+C,IACH,wBAAAwV,EAAAnnB,OAAA,GAAAknB,EAAA,UACJ,SAAA6B,EAAAC,EAAAopC,GAAA,OAAApB,EAAAjyD,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,gBAAA77B,OAAAi2F,EAAA/xD,IAAAC,IAAAA,MAED,SAAAooB,EACIx4C,EACA+N,EACA2Q,GAAe,IAAAimB,EAAA5E,EAAA+C,EAAAwhC,EAAA52C,UAAA,OAAA0C,IAAAA,MAAA,SAAAsoB,GAAA,cAAAA,EAAAjoB,KAAAioB,EAAAhoB,MAAA,OAKmB,OAJlCiU,EAAO2/B,EAAAv3E,OAAA,QAAAF,IAAAy3E,EAAA,GAAAA,EAAA,GAAG,CAAC,EACXvkC,EAAUukC,EAAAv3E,OAAA,QAAAF,IAAAy3E,EAAA,GAAAA,EAAA,GAAG57E,KAAKi4F,UAAU9K,kBAC5B/yC,EAAQwhC,EAAAv3E,OAAA,QAAAF,IAAAy3E,EAAA,IAAAA,EAAA,GAE0B5rB,EAAA3nB,OAAA,SAC3BroC,KAAKu6F,WADa,UAGrBjjF,EACA,EACA+N,EACA2Q,EACAimB,EACA5E,EACA+C,IACH,wBAAA4V,EAAAvnB,OAAA,GAAAqnB,EAAA,UACJ,SAAAgrC,EAAAC,EAAAC,GAAA,OAAAxB,EAAAhyD,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,eAAA77B,OAAAg2F,EAAA9xD,IAAAC,IAAAA,MAED,SAAAipB,EACItmC,EACA2vE,EACA30E,EACA2Q,GAAe,IAAAimB,EAAA5E,EAAA+C,EAAA+zC,EAAAnpD,UAAA,OAAA0C,IAAAA,MAAA,SAAAkpB,GAAA,cAAAA,EAAA7oB,KAAA6oB,EAAA5oB,MAAA,OAKwB,OAJvCiU,EAAOkyC,EAAA9pF,OAAA,QAAAF,IAAAgqF,EAAA,GAAAA,EAAA,GAAG,CAAC,EACX92C,EAAU82C,EAAA9pF,OAAA,QAAAF,IAAAgqF,EAAA,GAAAA,EAAA,GAAGnuF,KAAKi4F,UAAU9K,kBAC5B/yC,EAAQ+zC,EAAA9pF,OAAA,QAAAF,IAAAgqF,EAAA,IAAAA,EAAA,GAE+Bv9B,EAAAvoB,OAAA,SAChCroC,KAAKu6F,WADa,eAGrBlwE,EACA2vE,EACA30E,EACA2Q,EACAimB,EACA5E,EACA+C,IACH,wBAAAwW,EAAAnoB,OAAA,GAAAkoB,EAAA,UACJ,SAAAsqC,EAAAC,EAAAC,EAAAC,GAAA,OAAA7B,EAAA/xD,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,gBAAA77B,OAAA+1F,EAAA7xD,IAAAC,IAAAA,MAED,SAAAmpB,EACIv5C,EACA0iF,EACA30E,EACA2Q,GAAe,IAAAimB,EAAA5E,EAAA+C,EAAAi0C,EAAArpD,UAAA,OAAA0C,IAAAA,MAAA,SAAAopB,GAAA,cAAAA,EAAA/oB,KAAA+oB,EAAA9oB,MAAA,OAKyB,OAJxCiU,EAAOoyC,EAAAhqF,OAAA,QAAAF,IAAAkqF,EAAA,GAAAA,EAAA,GAAG,CAAC,EACXh3C,EAAUg3C,EAAAhqF,OAAA,QAAAF,IAAAkqF,EAAA,GAAAA,EAAA,GAAGruF,KAAKi4F,UAAU9K,kBAC5B/yC,EAAQi0C,EAAAhqF,OAAA,QAAAF,IAAAkqF,EAAA,IAAAA,EAAA,GAEgCv9B,EAAAzoB,OAAA,SACjCroC,KAAKu6F,WADa,gBAGrBjjF,EACA0iF,EACA30E,EACA2Q,EACAimB,EACA5E,EACA+C,IACH,wBAAA0W,EAAAroB,OAAA,GAAAooB,EAAA,UACJ,SAAAwqC,EAAAC,EAAAC,EAAAC,GAAA,OAAAlC,EAAA9xD,MAAA,KAAAxC,UAAA,IAED,CAAA5F,IAAA,aAAA77B,OAAA81F,EAAA5xD,IAAAC,IAAAA,MAGA,SAAAupB,EACIt6B,EACA8kE,EACAp2E,EACAk7D,GAAgB,IAAAtkC,EAAA5E,EAAA+C,EAAA6/C,EAAAhxD,EAAAslD,EAAAvpD,UAAA,OAAA0C,IAAAA,MAAA,SAAAwpB,GAAA,cAAAA,EAAAnpB,KAAAmpB,EAAAlpB,MAAA,OAYf,GAXDiU,EAAOsyC,EAAAlqF,OAAA,QAAAF,IAAAoqF,EAAA,GAAAA,EAAA,GAAG,CAAC,EACXl3C,EAAUk3C,EAAAlqF,OAAA,QAAAF,IAAAoqF,EAAA,GAAAA,EAAA,GAAGvuF,KAAKi4F,UAAU9K,kBAC5B/yC,EAAQm0C,EAAAlqF,OAAA,EAAAkqF,EAAA,QAAApqF,EAEJnE,KAAK4nE,MAAMiQ,WAAWxgC,KACtB+C,EAAW/C,EACXA,EAAar3C,KAAKi4F,UAAU9K,mBAE5BntF,KAAK4nE,MAAMiQ,WAAW57B,KACtB7B,EAAW6B,EACXA,EAAU,CAAC,GAEV7B,EAAU,CAAF8W,EAAAlpB,KAAA,eAAAkpB,EAAA7oB,OAAA,SACFroC,KAAKq8E,cAAcr8E,KAAK07F,WAAY/kE,EAAS8kE,EAAYp2E,EAAUk7D,EAAkBtkC,EAAS5E,IAAW,WAEhHr3C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,UACNyH,KAAM,mBACN5G,MAAOozB,GAEX,CACIj0B,KAAM,aACNyH,KAAM,UACN5G,MAAOk4F,EACP5gB,IAAK,GAET,CACIn4E,KAAM,WACNyH,KAAM,UACN5G,MAAO8hB,EACPw1D,IAAK,IAEVzgC,GAAW,CAAF8W,EAAAlpB,KAAA,eAAAkpB,EAAA7oB,OAAA,iBAQV,OALF1R,EAAUA,EAAQigB,WAAW,MAAQjgB,EAAW,KAAOA,EACvDslB,EAAOs0B,GAAAA,GAAA,CACHlrD,SAAAA,GACG42B,GAAO,IACV3lB,UAAWmlE,IACbvqC,EAAAnpB,KAAA,GAAAmpB,EAAAlpB,KAAA,GAEiChoC,KAAKi4F,UAAUjrB,WAAW6oB,GAAG71F,KAAKm4F,oBAAmB,QACnE,GADX8B,EAAgB/oC,EAAA9oB,KAClBa,EAAS,KACY,iBAArBs3C,EAAmC,CAAArvB,EAAAlpB,KAAA,gBAAAkpB,EAAAlpB,KAAA,GACpBiyD,EAAiB0B,aAAahlE,GAAS47D,KAAKt2C,EAAS5E,GAAW,QAA/EpO,EAAMioB,EAAA9oB,KAAA8oB,EAAAlpB,KAAG,GAAH,iBACsB,kBAArBu4C,EAAoC,CAAArvB,EAAAlpB,KAAA,gBAAAkpB,EAAAlpB,KAAA,GAC5BiyD,EAAiB2B,cAAcjlE,GAAS47D,KAAKt2C,EAAS5E,GAAW,QAAhFpO,EAAMioB,EAAA9oB,KAAA8oB,EAAAlpB,KAAG,GAAH,cAENoS,EAAS,IAAIhY,MAAM,iCAAiC,QAExDgY,EAAS,KAAMnR,GAAQioB,EAAAlpB,KAAA,wBAAAkpB,EAAAnpB,KAAA,GAAAmpB,EAAAvN,GAAAuN,EAAA,UAAAA,EAAA7oB,OAAA,SAEhB+R,EAAQ8W,EAAAvN,KAAI,yBAAAuN,EAAAzoB,OAAA,GAAAwoB,EAAA,oBAE1B,SAAA4qC,EAAAC,EAAAC,EAAAC,GAAA,OAAA3C,EAAA7xD,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,eAAA77B,OAAA61F,EAAA3xD,IAAAC,IAAAA,MAED,SAAA2pB,EACI16B,EACA8kE,EACAp2E,GAAQ,IAAA42B,EAAA5E,EAAA+C,EAAAq0C,EAAAzpD,UAAA,OAAA0C,IAAAA,MAAA,SAAA4pB,GAAA,cAAAA,EAAAvpB,KAAAupB,EAAAtpB,MAAA,OAK+B,OAJvCiU,EAAOwyC,EAAApqF,OAAA,QAAAF,IAAAsqF,EAAA,GAAAA,EAAA,GAAG,CAAC,EACXp3C,EAAUo3C,EAAApqF,OAAA,QAAAF,IAAAsqF,EAAA,GAAAA,EAAA,GAAGzuF,KAAKi4F,UAAU9K,kBAC5B/yC,EAAQq0C,EAAApqF,OAAA,QAAAF,IAAAsqF,EAAA,IAAAA,EAAA,GAE+Bn9B,EAAAjpB,OAAA,SAChCroC,KAAK07F,WACR/kE,EACA8kE,EACAp2E,EAJqB,eAMrB42B,EACA5E,EACA+C,IAAS,wBAAAkX,EAAA7oB,OAAA,GAAA4oB,EAAA,UAChB,SAAA4qC,EAAAC,EAAAC,GAAA,OAAA/C,EAAA5xD,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,gBAAA77B,OAAA41F,EAAA1xD,IAAAC,IAAAA,MAED,SAAAkmB,EACIj3B,EACA8kE,EACAp2E,GAAQ,IAAA42B,EAAA5E,EAAA+C,EAAAo2C,EAAAxrD,UAAA,OAAA0C,IAAAA,MAAA,SAAAmmB,GAAA,cAAAA,EAAA9lB,KAAA8lB,EAAA7lB,MAAA,OAKgC,OAJxCiU,EAAOu0C,EAAAnsF,OAAA,QAAAF,IAAAqsF,EAAA,GAAAA,EAAA,GAAG,CAAC,EACXn5C,EAAUm5C,EAAAnsF,OAAA,QAAAF,IAAAqsF,EAAA,GAAAA,EAAA,GAAGxwF,KAAKi4F,UAAU9K,kBAC5B/yC,EAAQo2C,EAAAnsF,OAAA,QAAAF,IAAAqsF,EAAA,IAAAA,EAAA,GAEgC3iC,EAAAxlB,OAAA,SACjCroC,KAAK07F,WACR/kE,EACA8kE,EACAp2E,EAJqB,gBAMrB42B,EACA5E,EACA+C,IAAS,wBAAAyT,EAAAplB,OAAA,GAAAmlB,EAAA,UAChB,SAAAwuC,EAAAC,EAAAC,GAAA,OAAAnD,EAAA3xD,MAAA,KAAAxC,UAAA,IAED,CAAA5F,IAAA,cAAA77B,OAAA21F,EAAAzxD,IAAAC,IAAAA,MAGA,SAAAgpD,EACIp6D,EACAimE,EACAl3E,GAAQ,IAAA42B,EAAA5E,EAAA+C,EAAA6/C,EAAAhxD,EAAA0nD,EAAA3rD,UAAA,OAAA0C,IAAAA,MAAA,SAAAkpD,GAAA,cAAAA,EAAA7oD,KAAA6oD,EAAA5oD,MAAA,OAYP,GAXDiU,EAAO00C,EAAAtsF,OAAA,QAAAF,IAAAwsF,EAAA,GAAAA,EAAA,GAAG,CAAC,EACXt5C,EAAUs5C,EAAAtsF,OAAA,QAAAF,IAAAwsF,EAAA,GAAAA,EAAA,GAAG3wF,KAAKi4F,UAAU9K,kBAC5B/yC,EAAQu2C,EAAAtsF,OAAA,QAAAF,IAAAwsF,EAAA,IAAAA,EAAA,GAEJ3wF,KAAK4nE,MAAMiQ,WAAWxgC,KACtB+C,EAAW/C,EACXA,EAAar3C,KAAKi4F,UAAU9K,mBAE5BntF,KAAK4nE,MAAMiQ,WAAW57B,KACtB7B,EAAW6B,EACXA,EAAU,CAAC,GAEV7B,EAAU,CAAFw2C,EAAA5oD,KAAA,eAAA4oD,EAAAvoD,OAAA,SACFroC,KAAKq8E,cAAcr8E,KAAKw8F,YAAalmE,EAAWimE,EAAal3E,EAAU42B,EAAS5E,IAAW,WAElGr3C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,YACNyH,KAAM,UACN5G,MAAO+yB,EACPukD,IAAK,GAET,CACIn4E,KAAM,cACNyH,KAAM,UACN5G,MAAOg5F,EACP1hB,IAAK,GAET,CACIn4E,KAAM,WACNyH,KAAM,UACN5G,MAAO8hB,EACPw1D,IAAK,IAEVzgC,GAAW,CAAFw2C,EAAA5oD,KAAA,eAAA4oD,EAAAvoD,OAAA,iBAOV,OAJF4T,EAAOs0B,GAAA,CACHj6C,UAAWuW,OAAOvW,GAAauW,OAAO0vD,GACtCl3E,SAAAA,GACG42B,GACL20C,EAAA7oD,KAAA,GAAA6oD,EAAA5oD,KAAA,GAEiChoC,KAAKs4F,UAAUtrB,WAAW6oB,GAAG71F,KAAKo4F,oBAAmB,QAA9D,OAAhB6B,EAAgBrJ,EAAAxoD,KAAAwoD,EAAA5oD,KAAG,GACJiyD,EAAiBwC,cAAclK,KAAKt2C,EAAS5E,GAAW,QAAjE,OAANpO,EAAM2nD,EAAAxoD,KAAAwoD,EAAAvoD,OAAA,SACL+R,EAAS,KAAMnR,IAAO,eAAA2nD,EAAA7oD,KAAA,GAAA6oD,EAAAjtC,GAAAitC,EAAA,UAAAA,EAAAvoD,OAAA,SAEtB+R,EAAQw2C,EAAAjtC,KAAI,yBAAAitC,EAAAnoD,OAAA,GAAAioD,EAAA,oBAE1B,SAAAgM,EAAAC,EAAAC,GAAA,OAAA1D,EAAA1xD,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,gBAAA77B,OAAA01F,EAAAxxD,IAAAC,IAAAA,MAED,SAAAmpD,EACI38D,EACA2qD,EACA0d,EACAl3E,GAAQ,IAAA42B,EAAA5E,EAAA+C,EAAA6/C,EAAAhxD,EAAA6nD,EAAA9rD,UAAA,OAAA0C,IAAAA,MAAA,SAAAqpD,GAAA,cAAAA,EAAAhpD,KAAAgpD,EAAA/oD,MAAA,OAYP,GAXDiU,EAAO60C,EAAAzsF,OAAA,QAAAF,IAAA2sF,EAAA,GAAAA,EAAA,GAAG,CAAC,EACXz5C,EAAUy5C,EAAAzsF,OAAA,QAAAF,IAAA2sF,EAAA,GAAAA,EAAA,GAAG9wF,KAAKi4F,UAAU9K,kBAC5B/yC,EAAQ02C,EAAAzsF,OAAA,QAAAF,IAAA2sF,EAAA,IAAAA,EAAA,GAEJ9wF,KAAK4nE,MAAMiQ,WAAWxgC,KACtB+C,EAAW/C,EACXA,EAAar3C,KAAKi4F,UAAU9K,mBAE5BntF,KAAK4nE,MAAMiQ,WAAW57B,KACtB7B,EAAW6B,EACXA,EAAU,CAAC,GAEV7B,EAAU,CAAF22C,EAAA/oD,KAAA,eAAA+oD,EAAA1oD,OAAA,SACFroC,KAAKq8E,cAAcr8E,KAAK68F,cAAe3oE,EAAS2qD,EAAY0d,EAAal3E,EAAU42B,EAAS5E,IAAW,WAE9Gr3C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,UACNyH,KAAM,UACN5G,MAAO2wB,EACP2mD,IAAK,GAET,CACIn4E,KAAM,aACNyH,KAAM,UACN5G,MAAOs7E,EACPhE,IAAK,GAET,CACIn4E,KAAM,cACNyH,KAAM,UACN5G,MAAOg5F,EACP1hB,IAAK,GAET,CACIn4E,KAAM,WACNyH,KAAM,UACN5G,MAAO8hB,EACPw1D,IAAK,IAEVzgC,GAAW,CAAF22C,EAAA/oD,KAAA,eAAA+oD,EAAA1oD,OAAA,iBASV,OANF4T,EAAOs0B,GAAA,CACHsO,WAAAA,EACA3qD,QAAAA,EACAoC,UAAWimE,EACXl3E,SAAAA,GACG42B,GACL80C,EAAAhpD,KAAA,GAAAgpD,EAAA/oD,KAAA,GAEiChoC,KAAKs4F,UAAUtrB,WAAW6oB,GAAG71F,KAAKo4F,oBAAmB,QAA9D,OAAhB6B,EAAgBlJ,EAAA3oD,KAAA2oD,EAAA/oD,KAAG,GACJiyD,EAAiB6C,cAAc5oE,EAAS2qD,GAAY0T,KAAKt2C,EAAS5E,GAAW,QAAtF,OAANpO,EAAM8nD,EAAA3oD,KAAA2oD,EAAA1oD,OAAA,SACL+R,EAAS,KAAMnR,IAAO,eAAA8nD,EAAAhpD,KAAA,GAAAgpD,EAAAptC,GAAAotC,EAAA,UAAAA,EAAA1oD,OAAA,SAEtB+R,EAAQ22C,EAAAptC,KAAI,yBAAAotC,EAAAtoD,OAAA,GAAAooD,EAAA,oBAE1B,SAAAkM,EAAAC,EAAAC,EAAAC,GAAA,OAAAjE,EAAAzxD,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,cAAA77B,OAAAy1F,EAAAvxD,IAAAC,IAAAA,MAED,SAAA0pD,EACI7Q,EACA4c,EACAZ,EACAl3E,EACA2Q,GAAe,IAAAimB,EAAA5E,EAAA+C,EAAAq5B,EAAA7wE,EAAA4hD,EAAAopC,EAAAmF,EAAAxlD,EAAAylD,EAAAhzD,EAAA,KAAAqxD,EAAArsD,UAAA,OAAA0C,IAAAA,MAAA,SAAA4pD,GAAA,cAAAA,EAAAvpD,KAAAupD,EAAAtpD,MAAA,OAYd,GAXDiU,EAAOo1C,EAAAhtF,OAAA,QAAAF,IAAAktF,EAAA,GAAAA,EAAA,GAAG,CAAC,EACXh6C,EAAUg6C,EAAAhtF,OAAA,QAAAF,IAAAktF,EAAA,GAAAA,EAAA,GAAGrxF,KAAKi4F,UAAU9K,kBAC5B/yC,EAAQi3C,EAAAhtF,OAAA,QAAAF,IAAAktF,EAAA,IAAAA,EAAA,GAEJrxF,KAAK4nE,MAAMiQ,WAAWxgC,KACtB+C,EAAW/C,EACXA,EAAar3C,KAAKi4F,UAAU9K,mBAE5BntF,KAAK4nE,MAAMiQ,WAAW57B,KACtB7B,EAAW6B,EACXA,EAAU,CAAC,GAEV7B,EAAU,CAAFk3C,EAAAtpD,KAAA,eAAAspD,EAAAjpD,OAAA,SACFroC,KAAKq8E,cAAcr8E,KAAKo9F,YAAa7c,EAAkB4c,EAASZ,EAAal3E,EAAU2Q,EAAiBimB,EAAS5E,IAAW,WAEnIr3C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,mBACNyH,KAAM,mBACN5G,MAAOg9E,GAEX,CACI79E,KAAM,UACNyH,KAAM,UACN5G,MAAO45F,EACPtiB,IAAK,GAET,CACIn4E,KAAM,cACNyH,KAAM,UACN5G,MAAOg5F,EACP1hB,IAAK,GAET,CACIn4E,KAAM,WACNyH,KAAM,UACN5G,MAAO8hB,EACPw1D,IAAK,GAET,CACIn4E,KAAM,kBACNyH,KAAM,UACN5G,MAAOyyB,IAEZokB,GAAW,CAAFk3C,EAAAtpD,KAAA,eAAAspD,EAAAjpD,OAAA,iBAgB6G,OAbzH4T,EAAOs0B,GAAAA,GAAA,CACHlrD,SAAAA,GACG42B,GAAO,IACV3lB,UAAWimE,IAET9oB,EAAa,CACf,CACItpE,KAAM,UACN5G,MAAO45F,IAEd7L,EAAAvpD,KAAA,GAGSnlC,EAAUy0C,EAAar3C,KAAKs4F,UAAU11F,QAAQkmE,eAAezxB,GAAcr3C,KAAKs4F,UAAU1b,eAAehT,OAAM0nB,EAAAtpD,KAAA,GAC3FhoC,KAAKs4F,UAAUpK,mBAAmBvgB,qBACxD33C,EACAuqD,EACAtkC,EACAw3B,EACAzzE,KAAKs4F,UAAU11F,QAAQ+1C,MAAM/1C,IAChC,QANgB,IAAX4hD,EAAW8sC,EAAAlpD,MAOAa,QAAWub,EAAYvb,OAAOA,OAAM,CAAAqoD,EAAAtpD,KAAA,gBAAAspD,EAAAjpD,OAAA,SAC1C+R,EAAS,kBAAoB5V,KAAKC,UAAU+f,EAAYA,YAAa,KAAM,KAAG,eAAA8sC,EAAAtpD,KAAA,GAGzDhoC,KAAKs4F,UAAUtX,IAAIpvB,KAAKpN,EAAYA,YAAanN,GAAW,QAArE,IAAjBu2C,EAAiB0D,EAAAlpD,MAEA+P,UAAW,CAAFm5C,EAAAtpD,KAAA,YACvBqP,EAAU,CAAAi6C,EAAAtpD,KAAA,gBAAAspD,EAAAjpD,OAAA,SACJ+R,EAAS,wCAAsC,eAAAk3C,EAAAjpD,OAAA,SAEnD+R,EAAS,iCAA+B,eAAAk3C,EAAAtpD,KAAA,GAG3BhoC,KAAKs4F,UAAUtX,IAAI6M,mBAAmBD,GAAkB,QAAjE,KAATmF,EAASzB,EAAAlpD,MACD38B,KAAM,CAAF6lF,EAAAtpD,KAAA,SAM6C,OALrDuF,EAAM,CACRpG,MAAO4rD,EAAUtnF,KACjBxH,QAAS8uF,EAAUtnF,MAEnBsnF,EAAU9uF,UACVspC,EAAItpC,QAAUjE,KAAKs4F,UAAU9c,OAAOuX,EAAU9uF,UAASqtF,EAAAjpD,OAAA,SACpD+R,EAAS7M,IAAI,WAGnB0O,EAAQk2C,mBAAkB,CAAAb,EAAAtpD,KAAA,gBAAAspD,EAAAjpD,OAAA,SACpB+R,EAAS,KAAMwzC,EAAkB9mB,OAAK,QAE3CksB,EAAW,eAAAxjD,EAAA/H,IAAAC,IAAAA,MAAG,SAAAupD,IAAA,IAAAzoD,EAAA7H,EAAA6oB,EAAA0nC,EAAAlsD,UAAA,OAAA0C,IAAAA,MAAA,SAAAypD,GAAA,cAAAA,EAAAppD,KAAAopD,EAAAnpD,MAAA,OAAgB,GACnB,KADUQ,EAAK0oD,EAAA7sF,OAAA,QAAAF,IAAA+sF,EAAA,GAAAA,EAAA,GAAG,GAChB,CAAAC,EAAAnpD,KAAA,eAAAmpD,EAAA9oD,OAAA,SACJ+R,EAAS,CACZjT,MAAO,sCACPqd,YAAaopC,KACf,cAAAuD,EAAAnpD,KAAA,EAGehI,EAAKs4D,UAAUtX,IAAIkS,mBAAmBtF,EAAkB9mB,MAAK,OAAtE,GAANnmC,EAAMwwD,EAAA/oD,KAEP9I,OAAOsI,KAAKjH,GAAQt8B,OAAQ,CAAF8sF,EAAAnpD,KAAA,eAAAmpD,EAAA9oD,OAAA,SACpBwtB,YAAW,WACdm9B,EAAYxqD,EAAQ,EACxB,GAAG,MAAK,WAGR7H,EAAOsI,QAA2B,UAAjBtI,EAAOsI,OAAkB,CAAAkoD,EAAAnpD,KAAA,gBAAAmpD,EAAA9oD,OAAA,SACnC+R,EAAS,CACZjT,MAAOnH,EAAKs4D,UAAU9c,OAAO76C,EAAOwyD,YACpC3uC,YAAaopC,EACbjtD,OAAAA,KACF,WAGDX,EAAK4nC,MAAMmQ,YAAYp3C,EAAQ,kBAAmB,CAAFwwD,EAAAnpD,KAAA,gBAAAmpD,EAAA9oD,OAAA,SAC1C+R,EAAS,CACZjT,MAAO,sBAAwB3C,KAAKC,UAAU9D,EAAQ,KAAM,GAC5D6jB,YAAaopC,EACbjtD,OAAAA,KACF,YAGFsb,EAAQm3C,YAAW,CAAAjC,EAAAnpD,KAAA,gBAAAmpD,EAAA9oD,OAAA,SACZ+R,EAAS,KAAMzZ,IAAO,QAKR,OADF,KAFnB6oB,EAAUwoC,aAAahyD,EAAK+gC,QAAS,KAAOpgC,EAAOzd,eAAe,KAE1D7e,SACRmlD,EAAUA,EAAQ,IAAG2nC,EAAA9oD,OAAA,SAElB+R,EAAS,KAAMoP,IAAQ,yBAAA2nC,EAAA1oD,OAAA,GAAAwoD,EAAA,KACjC,kBAzCgB,OAAAzhD,EAAAhI,MAAA,KAAAxC,UAAA,KA2CjBguD,IAAc1B,EAAAtpD,KAAA,wBAAAspD,EAAAvpD,KAAA,GAAAupD,EAAA3tC,GAAA2tC,EAAA,UAAAA,EAAAjpD,OAAA,SAEP+R,EAAQk3C,EAAA3tC,KAAI,yBAAA2tC,EAAA7oD,OAAA,GAAA2oD,EAAA,oBAE1B,SAAAiM,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAzE,EAAAxxD,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,gBAAA77B,OAAAw1F,EAAAtxD,IAAAC,IAAAA,MAED,SAAA8pD,EACInnE,EACAkyE,EACAl3E,EACA2Q,EACAimB,GAAO,IAAA5E,EAAA+C,EAAAq3C,EAAAzsD,UAAA,OAAA0C,IAAAA,MAAA,SAAAgqD,GAAA,cAAAA,EAAA3pD,KAAA2pD,EAAA1pD,MAAA,OAIuC,OAH9CqP,EAAUo6C,EAAAptF,OAAA,QAAAF,IAAAstF,EAAA,GAAAA,EAAA,GAAGzxF,KAAKi4F,UAAU9K,kBAC5B/yC,EAAQq3C,EAAAptF,OAAA,QAAAF,IAAAstF,EAAA,IAAAA,EAAA,GAEsCC,EAAArpD,OAAA,SACvCroC,KAAKo9F,YADa,sBAGrB/yE,EACAkyE,EACAl3E,EACA2Q,EACAimB,EACA5E,EACA+C,IAAS,wBAAAs3C,EAAAjpD,OAAA,GAAA+oD,EAAA,UAChB,SAAAkM,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAA/E,EAAAvxD,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,iBAAA77B,OAAAu1F,EAAArxD,IAAAC,IAAAA,MAED,SAAAq2D,EACIzmF,EACAilF,EACAl3E,EACA2Q,EACAimB,GAAO,IAAA5E,EAAA+C,EAAA4jD,EAAAh5D,UAAA,OAAA0C,IAAAA,MAAA,SAAAu2D,GAAA,cAAAA,EAAAl2D,KAAAk2D,EAAAj2D,MAAA,OAIuC,OAH9CqP,EAAU2mD,EAAA35F,OAAA,QAAAF,IAAA65F,EAAA,GAAAA,EAAA,GAAGh+F,KAAKi4F,UAAU9K,kBAC5B/yC,EAAQ4jD,EAAA35F,OAAA,QAAAF,IAAA65F,EAAA,IAAAA,EAAA,GAEsCC,EAAA51D,OAAA,SACvCroC,KAAKo9F,YADa,sBAGrB9lF,EACAilF,EACAl3E,EACA2Q,EACAimB,EACA5E,EACA+C,IAAS,wBAAA6jD,EAAAx1D,OAAA,GAAAs1D,EAAA,UAChB,SAAAG,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAxF,EAAAtxD,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,aAAA77B,OAAAs1F,EAAApxD,IAAAC,IAAAA,MAGD,SAAA62D,EACIl0E,EACAhF,EACA42B,GAAO,IAAA5E,EAAA+C,EAAAx3C,EAAA47F,EAAAh6C,EAAAopC,EAAAmF,EAAAxlD,EAAAkxD,EAAAz5D,UAAA,OAAA0C,IAAAA,MAAA,SAAAg3D,GAAA,cAAAA,EAAA32D,KAAA22D,EAAA12D,MAAA,OAYN,GAXDqP,EAAUonD,EAAAp6F,OAAA,QAAAF,IAAAs6F,EAAA,GAAAA,EAAA,GAAGz+F,KAAKi4F,UAAU9K,kBAC5B/yC,EAAQqkD,EAAAp6F,OAAA,QAAAF,IAAAs6F,EAAA,IAAAA,EAAA,GAEJz+F,KAAK4nE,MAAMiQ,WAAWxgC,KACtB+C,EAAW/C,EACXA,EAAar3C,KAAKi4F,UAAU9K,mBAG5BntF,KAAK4nE,MAAMiQ,WAAW57B,KACtB7B,EAAW6B,EACXA,EAAU,CAAC,GAEV7B,EAAU,CAAFskD,EAAA12D,KAAA,eAAA02D,EAAAr2D,OAAA,SACFroC,KAAKq8E,cAAcr8E,KAAK2+F,WAAYt0E,EAAKhF,EAAU42B,EAAS5E,IAAW,WAE9Er3C,KAAKi3E,UAAU6F,SAAS,CACxB,CACIp6E,KAAM,MACNyH,KAAM,UACN5G,MAAO8mB,EACPwwD,IAAK,GAET,CACIn4E,KAAM,WACNyH,KAAM,UACN5G,MAAO8hB,EACPw1D,IAAK,IAEVzgC,GAAW,CAAFskD,EAAA12D,KAAA,eAAA02D,EAAAr2D,OAAA,iBAMgD,OANhDq2D,EAAA32D,KAAA,EAKFnlC,EAAU5C,KAAKs4F,UAAU11F,QAAQkmE,eAAezxB,GAChDmnD,EAAax+F,KAAKs4F,UAAU11F,QAAQ+1C,MAAM/1C,GAAQ87F,EAAA12D,KAAA,GAC9BhoC,KAAKs4F,UAAUzc,SAASvB,QAAQ,qBAAsB,CAC5EnN,cAAeqxB,EACf9wE,OAAQrD,GACT,QAAO,QAHO,OAAXm6B,EAAWk6C,EAAAt2D,KAAAs2D,EAAA12D,KAAG,GAKYhoC,KAAKs4F,UAAUtX,IAAIpvB,KAAKpN,EAAanN,GAAW,QAAzD,IAAjBu2C,EAAiB8Q,EAAAt2D,MAEA+P,UAAW,CAAFumD,EAAA12D,KAAA,YACvBqP,EAAU,CAAAqnD,EAAA12D,KAAA,gBAAA02D,EAAAr2D,OAAA,SACJ+R,EAAS,wCAAsC,eAAAskD,EAAAr2D,OAAA,SAEnD+R,EAAS,iCAA+B,eAAAskD,EAAA12D,KAAA,GAG3BhoC,KAAKs4F,UAAUtX,IAAI6M,mBAAmBD,GAAkB,QAAjE,KAATmF,EAAS2L,EAAAt2D,MACD38B,KAAM,CAAFizF,EAAA12D,KAAA,SAM6C,OALrDuF,EAAM,CACRpG,MAAO4rD,EAAUtnF,KACjBxH,QAAS8uF,EAAUtnF,MAEnBsnF,EAAU9uF,UACVspC,EAAItpC,QAAUjE,KAAKi4F,UAAUzc,OAAOuX,EAAU9uF,UAASy6F,EAAAr2D,OAAA,SACpD+R,EAAS7M,IAAI,eAAAmxD,EAAAr2D,OAAA,SAEjB+R,EAAS,KAAMwzC,EAAkB9mB,OAAK,eAAA43B,EAAA32D,KAAA,GAAA22D,EAAA/6C,GAAA+6C,EAAA,SAAAA,EAAAr2D,OAAA,SAEtC+R,EAAQskD,EAAA/6C,KAAI,yBAAA+6C,EAAAj2D,OAAA,GAAA81D,EAAA,mBAE1B,SAAAK,EAAAC,EAAAC,GAAA,OAAAjG,EAAArxD,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,gBAAA77B,OAAAq1F,EAAAnxD,IAAAC,IAAAA,MAED,SAAAq3D,EACI9zC,EACA+zC,EACA35E,GAAQ,IAAA42B,EAAA5E,EAAA+C,EAAA6kD,EAAAj6D,UAAA,OAAA0C,IAAAA,MAAA,SAAAw3D,GAAA,cAAAA,EAAAn3D,KAAAm3D,EAAAl3D,MAAA,OAKyC,OAJjDiU,EAAOgjD,EAAA56F,OAAA,QAAAF,IAAA86F,EAAA,GAAAA,EAAA,GAAG,CAAC,EACX5nD,EAAU4nD,EAAA56F,OAAA,QAAAF,IAAA86F,EAAA,GAAAA,EAAA,GAAGj/F,KAAKs4F,UAAUnL,kBAC5B/yC,EAAQ6kD,EAAA56F,OAAA,QAAAF,IAAA86F,EAAA,IAAAA,EAAA,GAEyCC,EAAA72D,OAAA,SAC1CroC,KAAKo9F,YADa,yBAGrBnyC,EACA+zC,EACA35E,EACArlB,KAAKo4F,mBACLn8C,EACA5E,EACA+C,IACH,wBAAA8kD,EAAAz2D,OAAA,GAAAs2D,EAAA,UACJ,SAAAI,EAAAC,EAAAC,GAAA,OAAAzG,EAAApxD,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,eAAA77B,OAAAo1F,EAAAlxD,IAAAC,IAAAA,MAED,SAAA43D,EACIr0C,EACAs0C,EACAl6E,GAAQ,IAAA42B,EAAA5E,EAAA+C,EAAAolD,EAAAx6D,UAAA,OAAA0C,IAAAA,MAAA,SAAA+3D,GAAA,cAAAA,EAAA13D,KAAA03D,EAAAz3D,MAAA,OAK+B,OAJvCiU,EAAOujD,EAAAn7F,OAAA,QAAAF,IAAAq7F,EAAA,GAAAA,EAAA,GAAG,CAAC,EACXnoD,EAAUmoD,EAAAn7F,OAAA,QAAAF,IAAAq7F,EAAA,GAAAA,EAAA,GAAGx/F,KAAKi4F,UAAU9K,kBAC5B/yC,EAAQolD,EAAAn7F,OAAA,QAAAF,IAAAq7F,EAAA,IAAAA,EAAA,GAE+BC,EAAAp3D,OAAA,SAChCroC,KAAKu6F,WADa,eAGrBtvC,EACAs0C,EACAl6E,EACArlB,KAAKm4F,mBACLl8C,EACA5E,EACA+C,IACH,wBAAAqlD,EAAAh3D,OAAA,GAAA62D,EAAA,UACJ,SAAAI,EAAAC,EAAAC,GAAA,OAAAjH,EAAAnxD,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,eAAA77B,OAAAm1F,EAAAjxD,IAAAC,IAAAA,MAED,SAAAm4D,EACI50C,EACA60C,EACAz6E,GAAQ,IAAA42B,EAAA5E,EAAA+C,EAAA2lD,EAAA/6D,UAAA,OAAA0C,IAAAA,MAAA,SAAAs4D,GAAA,cAAAA,EAAAj4D,KAAAi4D,EAAAh4D,MAAA,OAK+B,OAJvCiU,EAAO8jD,EAAA17F,OAAA,QAAAF,IAAA47F,EAAA,GAAAA,EAAA,GAAG,CAAC,EACX1oD,EAAU0oD,EAAA17F,OAAA,QAAAF,IAAA47F,EAAA,GAAAA,EAAA,GAAG//F,KAAKi4F,UAAU9K,kBAC5B/yC,EAAQ2lD,EAAA17F,OAAA,QAAAF,IAAA47F,EAAA,IAAAA,EAAA,GAE+BC,EAAA33D,OAAA,SAChCroC,KAAKu6F,WADa,eAGrBtvC,EACA60C,EACAz6E,EACArlB,KAAKm4F,mBACLl8C,EACA5E,EACA+C,IACH,wBAAA4lD,EAAAv3D,OAAA,GAAAo3D,EAAA,UACJ,SAAAI,EAAAC,EAAAC,GAAA,OAAAzH,EAAAlxD,MAAA,KAAAxC,UAAA,MAAA+yD,CAAA,CA3/ByB,GCc9B,IAAMqI,GAAkB,QAElBC,GAAY,KAEGr6B,GAAO,SAAAs6B,GAAApsD,IAAA8xB,EAAAs6B,GAAA,IAkZvBC,EAzJAnmB,EAjKAomB,E,IAxFuBrsD,G,EAAA6xB,E,qZAWxB,SAAAA,IAEwF,IAAAhmC,EAGhF67C,EALI5/B,EAAOjX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAEfojD,EAAYpjD,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAU2uD,EAAW3uD,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAUgzD,EAAWhzD,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAUqS,EAAUrS,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAAQuJ,IAAA,KAAAy3B,GAClFhmC,EAAAmU,EAAAl0C,KAAA,MAGA,IAAI65E,GAAU,EACV2mB,GAAe,EAqElB,MAnEsB,WAAnBv5D,IAAO+U,KAAyBA,EAAQ4/B,UAAY5/B,EAAQi8C,WAC5Drc,EAAW5/B,EAAQ4/B,UAAY5/B,EAAQi8C,SACvCF,EAAc5P,EACdA,EAAensC,EAAQmsC,cAAgBnsC,EAAQi8C,SAC/CvE,EAAc13C,EAAQ03C,aAAe13C,EAAQi8C,SAC7Cpe,EAAU79B,EAAQ69B,UAAW,EAC7B2mB,EAAexkD,EAAQwkD,cAAgB3mB,EACvCziC,EAAa4E,EAAQ5E,YAErBwkC,EAAW5/B,EAEX2rB,GAAAA,SAAeiU,KACfA,EAAW,IAAIkb,GAAUrd,aAAamC,IAEtCjU,GAAAA,SAAewgB,KACfA,EAAe,IAAI2O,GAAUrd,aAAa0O,IAE1CxgB,GAAAA,SAAe+rB,KACfA,EAAc,IAAIoD,GAAUrd,aAAaia,IAE7C3zD,EAAKo4C,MAAQ,IAAIye,GAAKxiD,IAAArU,IACtBA,EAAKkuD,mBAAqB,IAAI9R,GAAkB/nC,IAAArU,IAChDA,EAAKghD,IAAM,IAAIiG,GAAG5yC,IAAArU,IAClBA,EAAKy2D,OAAS,IAAIR,GAAM5hD,IAAArU,GAAOic,GAC/Bjc,EAAK4nC,MAAQA,GAEb5nC,EAAK0gE,YAAY7kB,GACjB77C,EAAK2gE,gBAAgBvY,GACrBpoD,EAAK4gE,eAAejN,GAEpB3zD,EAAK+2D,UAAYA,GACjB/2D,EAAK03C,UAAYA,KAEjB13C,EAAKqoD,cAAe,EACpBroD,EAAKmtD,mBAAoB,EACzBntD,EAAK48C,eAAiB,CAClBz5C,KAAK,EACLymC,QAAQ,GAGZ,CACI,OAAQ,QAAS,SAAU,WAC3B,UAAW,YAAa,YAAa,cACrC,QAAS,UAAW,cAAe,YACnC,gBAAiB,UAAW,UAAW,eAAgB,gBACzDlwB,SAAQ,SAAAta,GACNY,EAAKZ,GAAO4mC,EAAQ5mC,EACxB,IAE2B,WAAvB8H,IAAO8wD,KAA6BA,EAAYnc,UAAYmc,EAAYE,UACxEl4D,EAAKs4D,UAAY,IAAIP,GAAUC,EAAahyB,EAAO3xB,IAAArU,GAAQqX,GAE3DA,EAAaA,GAAc2gD,EAG3B3gD,GACArX,EAAK6gE,cAAcxpD,GACvBrX,EAAK8gE,gBAAkBV,GACvBpgE,EAAK3a,SAAWg7E,GAChBrgE,EAAKq8C,cAAgBC,KAAajoC,IAAArU,IAE9B85C,GACA95C,EAAK+gE,kBAAkBjnB,GAGvB2mB,GACAzgE,EAAKghE,eAAeP,GACvBzgE,CACL,CA4UC,OA5UA0O,IAAAs3B,EAAA,EAAA5mC,IAAA,qBAAA77B,OAAAi9F,EAAA/4D,IAAAC,IAAAA,MAED,SAAAC,IAAA,IAAAs5D,EAAA,OAAAv5D,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE+BhoC,KAAKghF,IAAIqP,cAAa,OAAvC4Q,EAAQn5D,EAAAM,KACdpoC,KAAK8gG,gBAAkBG,EAASC,eAAeC,YACA,IAA3CnhG,KAAK8gG,gBAAgB19D,MAAM,KAAK/+B,SAChCrE,KAAK8gG,iBAAmB,MAC3Bh5D,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA6b,GAAA7b,EAAA,SAED9nC,KAAK8gG,gBAAkBV,GAAgB,yBAAAt4D,EAAAW,OAAA,GAAAd,EAAA,kBAE9C,kBAAA64D,EAAAh5D,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,kBAAA77B,MAED,WAAiC,IAAjB04E,EAAOj3C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GACnB,GAAI,EAAC,EAAO,SAAU,WAAY,GAAG+hC,SAASkV,GAC1C,OAAOj8E,KAAKqoF,aAAepM,EAG/B,IAAKrU,GAAAA,UAAgBqU,KAAaA,EAC9B,MAAM,IAAI75C,MAAM,6BAEpBpiC,KAAKqoF,aAAerzC,KAAKosD,IAAInlB,EACjC,GAAC,CAAA78C,IAAA,gBAAA77B,MAED,SAAc8zC,GACV,IACIr3C,KAAK0D,WACD1D,KAAK4C,QAAQkmE,eAAezxB,GAEpC,CAAE,MAAA6nC,GACE,MAAM,IAAI98C,MAAM,+BACpB,CAEApiC,KAAKmtF,kBAAoB91C,EACzBr3C,KAAKqhG,KAAK,oBAAqBhqD,EACnC,GAAC,CAAAjY,IAAA,aAAA77B,MAED,SAAWX,GACP,IAAK5C,KAAKi7E,UAAUr4E,GAChB,MAAM,IAAIw/B,MAAM,4BAEpB,IAAMe,EAAMnjC,KAAK4C,QAAQ+1C,MAAM/1C,GACzBgnE,EAAS5pE,KAAK4C,QAAQivF,QAAQjvF,GAEhC5C,KAAKmtF,mBAAqBntF,KAAK4C,QAAQkmE,eAAe9oE,KAAKmtF,qBAAuBvjB,IAClF5pE,KAAKmtF,mBAAoB,GAE7BntF,KAAK48E,eAAiB,CAClBz5C,IAAAA,EACAymC,OAAAA,GAGJ5pE,KAAKqhG,KAAK,iBAAkB,CAAEl+D,IAAAA,EAAKymC,OAAAA,GACvC,GAAC,CAAAxqC,IAAA,oBAAA77B,MAED,SAAkBszB,GACd,OAAO6/D,KAAAA,UAAiB12F,KAAK8gG,gBAAiBjqE,EAClD,GAAC,CAAAuI,IAAA,kBAAA77B,MAED,SAAgB0Z,GACZ,OAAOqiB,OAAOsJ,OAAOmuD,IAAW5X,MAAK,SAAAmiB,GAAa,OAAIrkF,aAAoBqkF,CAAa,GAC3F,GAAC,CAAAliE,IAAA,cAAA77B,MAED,SAAYs4E,GAIR,GAHIjU,GAAAA,SAAeiU,KACfA,EAAW,IAAIkb,GAAUrd,aAAamC,KAErC77E,KAAKg3F,gBAAgBnb,GACtB,MAAM,IAAIz5C,MAAM,8BAEpBpiC,KAAK67E,SAAWA,EAChB77E,KAAK67E,SAAS0lB,cAAc,qBAChC,GAAC,CAAAniE,IAAA,kBAAA77B,MAED,SAAgB6kF,GAIZ,GAHIxgB,GAAAA,SAAewgB,KACfA,EAAe,IAAI2O,GAAUrd,aAAa0O,KAEzCpoF,KAAKg3F,gBAAgB5O,GACtB,MAAM,IAAIhmD,MAAM,kCAEpBpiC,KAAKooF,aAAeA,EACpBpoF,KAAKooF,aAAamZ,cAAc,6BACpC,GAAC,CAAAniE,IAAA,iBAAA77B,MAED,WAA0B,IAAAi+F,GACtBA,EAAAxhG,KAAKo4E,OAAMqpB,UAASj6D,MAAAg6D,EAAAx8D,UACxB,GAAC,CAAA5F,IAAA,YAAA77B,MAED,WAAyB,IAAdu2E,EAAO90C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,CAAC,EACZ62C,EAAW,IAAIkb,GAAUrd,aAAa15E,KAAK67E,SAASlC,KAAM,KAAO,GAAO,EAAOG,GAC/EsO,EAAe,IAAI2O,GAAUrd,aAAa15E,KAAKooF,aAAazO,KAAM,KAAO,GAAO,EAAOG,GACvF6Z,EAAc,IAAIoD,GAAUrd,aAAa15E,KAAK2zF,YAAYha,KAAM,KAAO,GAAO,EAAOG,GAE3F95E,KAAK0gG,YAAY7kB,GACjB77E,KAAK2gG,gBAAgBvY,GACrBpoF,KAAK4gG,eAAejN,EACxB,GAAC,CAAAv0D,IAAA,oBAAA77B,MAED,WAAiC,IAAdu2E,EAAO90C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpB62C,EAAW,IAAIkb,GAAUrd,aAAa15E,KAAK67E,SAASlC,KAAM,KAAO,GAAO,EAAOG,GAC/EsO,EAAe,IAAI2O,GAAUrd,aAAa15E,KAAKooF,aAAazO,KAAM,KAAO,GAAO,EAAOG,GAE7F95E,KAAK0gG,YAAY7kB,GACjB77E,KAAK2gG,gBAAgBvY,EACzB,GAAC,CAAAhpD,IAAA,iBAAA77B,MAED,WAA8B,IAAdu2E,EAAO90C,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,CAAC,EACjB2uD,EAAc,IAAIoD,GAAUrd,aAAa15E,KAAK2zF,YAAYha,KAAM,KAAO,GAAO,EAAOG,GAC3F95E,KAAK4gG,eAAejN,EACxB,GAAC,CAAAv0D,IAAA,mBAAA77B,MAED,WACI,MAAO,CACHs4E,SAAU77E,KAAK67E,SACfuM,aAAcpoF,KAAKooF,aACnBuL,YAAa3zF,KAAK2zF,YAE1B,GAAC,CAAAv0D,IAAA,kBAAA77B,MAED,WACI,OAAOvD,KAAK0hG,kBAChB,GAAC,CAAAtiE,IAAA,iBAAA77B,MAGD,WAA0B,QAAAo+F,EAAA1qD,EAAAjS,UAAA3gC,OAAR2xD,EAAM,IAAAp0B,MAAAqV,GAAAf,EAAA,EAAAA,EAAAe,EAAAf,IAAN8f,EAAM9f,GAAAlR,UAAAkR,GA0BpB,MAxByB,WAArBhP,IAAO8uB,EAAO,MACdA,EAAO,GAAK,CACRkhC,eAAgBlhC,EAAO,IAAM,EAC7Bi+B,UAAWj+B,EAAO,KAAM,EACxBk+B,YAAal+B,EAAO,KAAM,EAC1Bna,KAAMma,EAAO,IAAM,GACnBmhC,KAAMnhC,EAAO,IAAM,GAEvBA,EAAO+O,OAAO,EAAG,GAGZ6C,GAAAA,WAAiB5R,EAAO,MAErB4R,GAAAA,WAAiB5R,EAAO,GAAGmhC,OAC3BnhC,EAAO,GAAKA,EAAO,GAAGmhC,KACtBnhC,EAAO,GAAGmhC,KAAO,GACVvvB,GAAAA,WAAiB5R,EAAO,GAAGna,QAClCma,EAAO,GAAKA,EAAO,GAAGna,KACtBma,EAAO,GAAGna,KAAO,GACjBma,EAAO,GAAGmhC,KAAO,MAKtBwK,EAAA3hG,KAAKo4E,OAAMkc,2BAA0B9sD,MAAAm6D,EAAI3rC,EACpD,GAAC,CAAA52B,IAAA,0BAAA77B,MAED,WAAmC,IAAAq+F,EAC/B,OAAOA,EAAA5hG,KAAKo4E,OAAM0f,yBAAwBtwD,MAAAo6D,EAAA58D,UAC9C,GAAC,CAAA5F,IAAA,WAAA77B,MAED,WACI,OAAO,IAAIvB,GAAShC,KADZglC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,GAAWA,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAE1B,GAAC,CAAA5F,IAAA,cAAA77B,OAAA62E,EAAA3yC,IAAAC,IAAAA,MA6KD,SAAA+b,IAAA,IAAArJ,EAAAkmC,EAAAt7C,UAAA,OAAA0C,IAAAA,MAAA,SAAAgc,GAAA,cAAAA,EAAA3b,KAAA2b,EAAA1b,MAAA,OAAkC,GAAhBoS,EAAQkmC,EAAAj8E,OAAA,QAAAF,IAAAm8E,EAAA,IAAAA,EAAA,GACT,CAAA58B,EAAA1b,KAAA,eAAA0b,EAAArb,OAAA,SACFroC,KAAKq8E,cAAcr8E,KAAKi3F,cAAY,OAEhC,OAFgCvzC,EAAAC,GAExCvJ,EAAQsJ,EAAA1b,KAAA,EACKhoC,KAAK67E,SAASob,cAAa,cAAAvzC,EAAAE,GAAAF,EAAAtb,KAAAsb,EAAA1b,KAAA,EACvBhoC,KAAKooF,aAAa6O,cAAa,OACtB,GADsBvzC,EAAA6K,GAAA7K,EAAAtb,KAAAsb,EAAAm+C,GACtC7hG,KAAK2zF,aAAWjwC,EAAAm+C,GAAA,CAAAn+C,EAAA1b,KAAA,gBAAA0b,EAAA1b,KAAA,GAAUhoC,KAAK2zF,YAAYsD,cAAa,QAAAvzC,EAAAm+C,GAAAn+C,EAAAtb,KAAA,QAA1D,OAA0Dsb,EAAAo+C,GAAAp+C,EAAAm+C,GAAAn+C,EAAAq+C,GAAA,CAFrElmB,SAAQn4B,EAAAE,GACRwkC,aAAY1kC,EAAA6K,GACZolC,YAAWjwC,EAAAo+C,IAAAp+C,EAAArb,OAAA,YAAAqb,EAAAC,IAHC,KAAID,EAAAq+C,KAAA,yBAAAr+C,EAAAjb,OAAA,GAAAgb,EAAE,KAAF,KAKvB,kBAAA22B,EAAA5yC,MAAA,KAAAxC,UAAA,OAAA5F,IAAA,UAAAK,IApLD,WACI,MAAO,CACHoyD,QAAO,SAACjvF,GACJ,OAAKglE,GAAAA,MAAYhlE,GAGVglE,GAAAA,OAAAA,sBACHA,GAAAA,KAAAA,iBAA4BhlE,EAAQu+B,QAAQ,MAAO0C,KAH5CjhC,CAKf,EACA+1C,MAAK,SAAC/1C,GACF,OAAIglE,GAAAA,MAAYhlE,GACLA,EAAQ2wC,cAAcpS,QAAQ,MAAO0C,GAEzC+jC,GAAAA,KAAAA,iBACHA,GAAAA,OAAAA,oBAAiChlE,IACnC2wC,aACN,EACAu1B,eAAc,SAACzxB,GAA4B,IAAhB9S,EAAMS,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GAC7B,IACI,OAAO4iC,GAAAA,OAAAA,YAAyBvwB,EAAY9S,EAChD,CAAE,MAAAy9D,GACE,OAAO,CACX,CACJ,EAER,GAAC,CAAA5iE,IAAA,OAAA77B,MAED,SAAYw+B,GACR,OADsBiD,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,KAAAA,UAAA,GACE,GAAP,MAAayN,GAAUszB,OAAOtwD,KAAKssB,EAAQ,UAAUW,WAAWqI,UAAU,EAC/F,GAAC,CAAA3L,IAAA,QAAA77B,MAED,SAAa21E,GACT,GAAItR,GAAAA,UAAgBsR,GAChB,OAAOlT,EAAQi8B,aAAa/oB,GAEhC,GAAItR,GAAAA,YAAkBsR,GAClB,OAAOlT,EAAQi8B,YAAY/oB,GAE/B,GAAmB,WAAfhyC,IAAOgyC,GACP,OAAOlT,EAAQqV,SAAS72C,KAAKC,UAAUy0C,IAE3C,GAAItR,GAAAA,SAAesR,GAAM,CACrB,GAAI,UAAU9zC,KAAK8zC,GACf,OAAOA,EAEX,IAAMgpB,SAAShpB,IAAS,QAAQ9zC,KAAK8zC,GACjC,OAAOlT,EAAQqV,SAASnC,EAChC,CAEA,IAAIjwC,EAAS+8B,EAAQi8B,YAAY/oB,GACjC,GAAe,UAAXjwC,EACA,MAAM,IAAI7G,MAAM,uDAEhB,OAAO6G,CAEf,GAAC,CAAA7J,IAAA,SAAA77B,MAED,SAAc4/B,GACV,GAAIykC,GAAAA,MAAYzkC,GAEZ,OADAA,EAAMA,EAAIhC,QAAQ,MAAO,IAClB4kC,OAAOtwD,KAAK0tB,EAAK,OAAOT,SAAS,QAExC,MAAM,IAAIN,MAAM,6CAExB,GAAC,CAAAhD,IAAA,WAAA77B,MAED,SAAgBw+B,GACZ,IAAK6lC,GAAAA,SAAe7lC,GAChB,MAAM,IAAIK,MAAM,gDAEpB,MAAO,KAAO2jC,OAAOtwD,KAAKssB,EAAQ,QAAQW,SAAS,MACvD,GAAC,CAAAtD,IAAA,UAAA77B,MAED,SAAe4/B,GACX,GAAIykC,GAAAA,MAAYzkC,GAAM,CAClB,IAAIb,EAAM,GACN1B,EAAI,EAAGuhE,EAAIh/D,EAAI9+B,OAInB,IAH4B,OAAxB8+B,EAAI4H,UAAU,EAAG,KACjBnK,EAAI,GAEDA,EAAIuhE,EAAGvhE,GAAK,EAAG,CAClB,IAAIn1B,EAAOw3B,SAASE,EAAIsnC,OAAO7pC,EAAG,GAAI,IACtC0B,GAAOjB,OAAOC,aAAa71B,EAC/B,CACA,OAAO62B,CACX,CACI,MAAM,IAAIF,MAAM,6CAExB,GAAC,CAAAhD,IAAA,YAAA77B,MAED,SAAiBw+B,EAAQqjB,GACrB,IAAKwiB,GAAAA,SAAe7lC,GAChB,MAAM,IAAIK,MAAM,gDAEpB,MAAO,KAAO2jC,OAAOtwD,KAAKssB,EAAQ,SAASW,SAAS,OAAO0/D,OAAOh9C,EAAS,IAC/E,GAAC,CAAAhmB,IAAA,YAAA77B,MAGD,SAAiBA,GACb,OAAOyiE,EAAQq8B,YAAY9+F,GAAO++F,UACtC,GAAC,CAAAljE,IAAA,cAAA77B,MAED,SAAmBA,GACf,IAAMwuB,EAASi0C,EAAQq8B,YAAY9+F,GAC7B0lC,EAASlX,EAAO2Q,SAAS,IAE/B,OAAO3Q,EAAOwwE,WAAW,GAAK,MAAQt5D,EAAOwhC,OAAO,GAAK,KAAOxhC,CACpE,GAAC,CAAA7J,IAAA,UAAA77B,MAED,SAAei/F,GACX,IAAMxhB,EAAMhb,EAAQq8B,YAAYG,GAAKC,IAAI,KACzC,OAAO76B,GAAAA,YAAkB46B,GAAOxhB,EAAMA,EAAIt+C,SAAS,GACvD,GAAC,CAAAtD,IAAA,QAAA77B,MAED,SAAay9E,GACT,IAAMwhB,EAAMx8B,EAAQq8B,YAAYrhB,GAAK0hB,MAAM,KAC3C,OAAO96B,GAAAA,YAAkBoZ,GAAOwhB,EAAMA,EAAI9/D,SAAS,GACvD,GAAC,CAAAtD,IAAA,cAAA77B,MAED,WAA+B,IAAZmqB,EAAMsX,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,EACxB,OAAI4iC,GAAAA,YAAkBl6C,GACXA,EAEPk6C,GAAAA,SAAel6C,IAAW,UAAU0X,KAAK1X,GAClC,IAAIgqD,KAAJ,CAAchqD,EAAOyT,QAAQ,KAAM,IAAK,IAE5C,IAAIu2C,KAAJ,CAAchqD,EAAOgV,SAAS,IAAK,GAC9C,GAAC,CAAAtD,IAAA,YAAA77B,MAED,WAAkC,IAAjBX,EAAOoiC,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,IAAAA,UAAA,GACpB,IAAK4iC,GAAAA,SAAehlE,GAChB,OAAO,EAGX,GAAuB,KAAnBA,EAAQyB,OACR,IACI,OAAO2hE,EAAQiV,UACXrT,GAAAA,OAAAA,sBACIA,GAAAA,KAAAA,iBAA4BhlE,IAGxC,CAAE,MAAO2qC,GACL,OAAO,CACX,CAEJ,IACI,OAAOq6B,GAAAA,OAAAA,eAA4BhlE,EACvC,CAAE,MAAO2qC,GACL,OAAO,CACX,CACJ,GAAC,CAAAnO,IAAA,gBAAA77B,OAAAg9F,EAAA94D,IAAAC,IAAAA,MAED,SAAA+mB,IAAA,IAAA73C,EAAA,OAAA8wB,IAAAA,MAAA,SAAAonB,GAAA,cAAAA,EAAA/mB,KAAA+mB,EAAA9mB,MAAA,OACoD,OAA1CpxB,EAAUgxD,GAAAA,SAAAA,kBAAgC9Y,EAAAzmB,OAAA,SAEzCzxB,GAAO,wBAAAk4C,EAAArmB,OAAA,GAAAgmB,EAAA,KACjB,kBAAA8xC,EAAA/4D,MAAA,KAAAxC,UAAA,KAAA5F,IAAA,eAAA77B,MAED,SAAoB04C,GAGhB,OAFgB2rB,GAAAA,SAAAA,eAA8B3rB,EAGlD,GAAC,CAAA7c,IAAA,eAAA77B,MAED,SAAoBuxC,GAA2D,IAAjD4f,EAAI1vB,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAGhB,EAAyByQ,EAAQzP,UAAA3gC,OAAA,QAAAF,IAAA6gC,UAAA,GAAAA,UAAA,GAAG,KAGrE,OAFgB4iC,GAAAA,SAAAA,4BAA2C9yB,EAAU4f,EAAMjgB,EAG/E,KAACuxB,CAAA,CApauB,CAAS28B,MAAYjvD,IAA5BsyB,GAAO,YACL+wB,IAASrjD,IADXsyB,GAAO,YAEL0R,MAAShkC,IAFXsyB,GAAO,qBAGIoW,IAAkB1oC,IAH7BsyB,GAAO,MAIXihB,IAAGvzC,IAJCsyB,GAAO,WAKNhkE,IAAQ0xC,IALTsyB,GAAO,SAMRiwB,IAAMviD,IANLsyB,GAAO,QAOT6wB,IAAKnjD,IAPHsyB,GAAO,U,SAQAtyB,IARPsyB,GAAO,QAST4B,G","sources":["webpack://tronweb/./src/protocol/core/Tron_pb.js","webpack://tronweb/./src/protocol/core/contract/account_contract_pb.js","webpack://tronweb/./src/protocol/core/contract/asset_issue_contract_pb.js","webpack://tronweb/./src/protocol/core/contract/balance_contract_pb.js","webpack://tronweb/./src/protocol/core/contract/common_pb.js","webpack://tronweb/./src/protocol/core/contract/exchange_contract_pb.js","webpack://tronweb/./src/protocol/core/contract/proposal_contract_pb.js","webpack://tronweb/./src/protocol/core/contract/smart_contract_pb.js","webpack://tronweb/./src/protocol/core/contract/storage_contract_pb.js","webpack://tronweb/./src/protocol/core/contract/witness_contract_pb.js","webpack://tronweb/external commonjs \"@tronweb3/google-protobuf\"","webpack://tronweb/external commonjs \"@tronweb3/google-protobuf/google/protobuf/any_pb\"","webpack://tronweb/external commonjs \"@tronweb3/google-protobuf/google/protobuf/any_pb.js\"","webpack://tronweb/webpack/bootstrap","webpack://tronweb/webpack/runtime/compat get default export","webpack://tronweb/webpack/runtime/define property getters","webpack://tronweb/webpack/runtime/hasOwnProperty shorthand","webpack://tronweb/webpack/runtime/make namespace object","webpack://tronweb/external commonjs \"@babel/runtime/helpers/asyncToGenerator\"","webpack://tronweb/external commonjs \"@babel/runtime/helpers/typeof\"","webpack://tronweb/external commonjs \"@babel/runtime/helpers/classCallCheck\"","webpack://tronweb/external commonjs \"@babel/runtime/helpers/createClass\"","webpack://tronweb/external commonjs \"@babel/runtime/helpers/assertThisInitialized\"","webpack://tronweb/external commonjs \"@babel/runtime/helpers/inherits\"","webpack://tronweb/external commonjs \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack://tronweb/external commonjs \"@babel/runtime/helpers/getPrototypeOf\"","webpack://tronweb/external commonjs \"@babel/runtime/helpers/defineProperty\"","webpack://tronweb/external commonjs \"@babel/runtime/regenerator\"","webpack://tronweb/external commonjs \"axios\"","webpack://tronweb/./src/utils/base64.js","webpack://tronweb/./src/utils/bytes.js","webpack://tronweb/external commonjs \"@babel/runtime/helpers/toConsumableArray\"","webpack://tronweb/./src/utils/address.js","webpack://tronweb/./src/utils/code.js","webpack://tronweb/./src/utils/base58.js","webpack://tronweb/external commonjs \"@babel/runtime/helpers/classPrivateFieldSet\"","webpack://tronweb/external commonjs \"@babel/runtime/helpers/classPrivateFieldGet\"","webpack://tronweb/../../src.ts/constants/hashes.ts","webpack://tronweb/../src.ts/_version.ts","webpack://tronweb/../../src.ts/utils/properties.ts","webpack://tronweb/../../src.ts/utils/errors.ts","webpack://tronweb/../../src.ts/utils/data.ts","webpack://tronweb/../../src.ts/utils/maths.ts","webpack://tronweb/../../src.ts/crypto/signature.ts","webpack://tronweb/external node-commonjs \"crypto\"","webpack://tronweb/../../src.ts/crypto/sha2.ts","webpack://tronweb/../../src.ts/crypto/pbkdf2.ts","webpack://tronweb/../../src.ts/utils/utf8.ts","webpack://tronweb/external commonjs \"@noble/hashes/sha3\"","webpack://tronweb/../../src.ts/crypto/keccak.ts","webpack://tronweb/../../src.ts/hash/id.ts","webpack://tronweb/../../src.ts/wordlists/decode-owl.ts","webpack://tronweb/../../src.ts/wordlists/wordlist.ts","webpack://tronweb/../../src.ts/wordlists/wordlist-owl.ts","webpack://tronweb/../../src.ts/wordlists/lang-en.ts","webpack://tronweb/../../src.ts/wallet/mnemonic.ts","webpack://tronweb/../../src.ts/crypto/hmac.ts","webpack://tronweb/../../src.ts/address/address.ts","webpack://tronweb/external commonjs \"@babel/runtime/helpers/slicedToArray\"","webpack://tronweb/external commonjs \"@noble/secp256k1\"","webpack://tronweb/../../src.ts/crypto/signing-key.ts","webpack://tronweb/../../src.ts/transaction/address.ts","webpack://tronweb/external commonjs \"@babel/runtime/helpers/wrapNativeSuper\"","webpack://tronweb/../../../src.ts/abi/coders/abstract-coder.ts","webpack://tronweb/../../src.ts/abi/typed.ts","webpack://tronweb/../../../src.ts/abi/coders/address.ts","webpack://tronweb/../../../src.ts/abi/coders/anonymous.ts","webpack://tronweb/../../../src.ts/abi/coders/array.ts","webpack://tronweb/../../../src.ts/abi/coders/boolean.ts","webpack://tronweb/external commonjs \"@babel/runtime/helpers/get\"","webpack://tronweb/../../../src.ts/abi/coders/bytes.ts","webpack://tronweb/../../../src.ts/abi/coders/fixed-bytes.ts","webpack://tronweb/../../../src.ts/abi/coders/null.ts","webpack://tronweb/../../../src.ts/abi/coders/number.ts","webpack://tronweb/../../../src.ts/abi/coders/string.ts","webpack://tronweb/../../../src.ts/abi/coders/tuple.ts","webpack://tronweb/../../src.ts/abi/fragments.ts","webpack://tronweb/../../src.ts/abi/abi-coder.ts","webpack://tronweb/../../src.ts/address/checks.ts","webpack://tronweb/../../src.ts/constants/strings.ts","webpack://tronweb/../../src.ts/hash/typed-data.ts","webpack://tronweb/../../src.ts/utils/rlp-decode.ts","webpack://tronweb/../../src.ts/utils/rlp-encode.ts","webpack://tronweb/../../src.ts/transaction/accesslist.ts","webpack://tronweb/../../src.ts/transaction/transaction.ts","webpack://tronweb/../../src.ts/providers/provider.ts","webpack://tronweb/../../src.ts/providers/abstract-signer.ts","webpack://tronweb/../../src.ts/wallet/base-wallet.ts","webpack://tronweb/../../src.ts/hash/message.ts","webpack://tronweb/external commonjs \"@noble/hashes/ripemd160\"","webpack://tronweb/../../src.ts/crypto/ripemd160.ts","webpack://tronweb/../../src.ts/crypto/random.ts","webpack://tronweb/../../src.ts/utils/base58.ts","webpack://tronweb/external commonjs \"aes-js\"","webpack://tronweb/external commonjs \"@noble/hashes/scrypt\"","webpack://tronweb/../../src.ts/crypto/scrypt.ts","webpack://tronweb/../../src.ts/utils/uuid.ts","webpack://tronweb/../../src.ts/wallet/utils.ts","webpack://tronweb/../../src.ts/wallet/json-keystore.ts","webpack://tronweb/../../src.ts/wallet/hdwallet.ts","webpack://tronweb/../../src.ts/wallet/json-crowdsale.ts","webpack://tronweb/../../src.ts/wallet/wallet.ts","webpack://tronweb/../../src.ts/wordlists/lang-cz.ts","webpack://tronweb/../../src.ts/wordlists/bit-reader.ts","webpack://tronweb/../../src.ts/wordlists/wordlist-owla.ts","webpack://tronweb/../../src.ts/wordlists/decode-owla.ts","webpack://tronweb/../../src.ts/wordlists/lang-es.ts","webpack://tronweb/../../src.ts/wordlists/lang-fr.ts","webpack://tronweb/../../src.ts/wordlists/lang-ja.ts","webpack://tronweb/../../src.ts/wordlists/lang-ko.ts","webpack://tronweb/../../src.ts/wordlists/lang-it.ts","webpack://tronweb/../../src.ts/wordlists/lang-pt.ts","webpack://tronweb/../../src.ts/wordlists/lang-zh.ts","webpack://tronweb/../../src.ts/wordlists/wordlists.ts","webpack://tronweb/./src/utils/fragments.js","webpack://tronweb/./src/utils/interface.js","webpack://tronweb/./src/utils/ethersUtils.js","webpack://tronweb/./src/utils/typedData.js","webpack://tronweb/external commonjs \"ethereum-cryptography/secp256k1\"","webpack://tronweb/./src/utils/crypto.js","webpack://tronweb/./src/utils/accounts.js","webpack://tronweb/external commonjs \"@ethersproject/abi\"","webpack://tronweb/./src/utils/abi.js","webpack://tronweb/./src/utils/message.js","webpack://tronweb/./src/utils/transaction.js","webpack://tronweb/external commonjs \"validator\"","webpack://tronweb/external commonjs \"bignumber.js\"","webpack://tronweb/./src/utils/index.js","webpack://tronweb/./src/lib/providers/HttpProvider.js","webpack://tronweb/./src/lib/providers/index.js","webpack://tronweb/external commonjs \"eventemitter3\"","webpack://tronweb/external commonjs \"semver\"","webpack://tronweb/external commonjs \"injectpromise\"","webpack://tronweb/./src/paramValidator/index.js","webpack://tronweb/./src/lib/transactionBuilder.js","webpack://tronweb/./src/lib/trx.js","webpack://tronweb/./src/lib/contract/method.js","webpack://tronweb/./src/lib/contract/index.js","webpack://tronweb/./src/lib/plugin.js","webpack://tronweb/external commonjs \"querystring-es3\"","webpack://tronweb/./src/lib/event.js","webpack://tronweb/./src/lib/sidechain.js","webpack://tronweb/./src/index.js"],"sourcesContent":["// source: core/Tron.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('@tronweb3/google-protobuf');\nvar goog = jspb;\nvar global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof window !== 'undefined' && window) ||\n  (typeof global !== 'undefined' && global) ||\n  (typeof self !== 'undefined' && self) ||\n  (function () { return this; }).call(null) ||\n  Function('return this')();\n\nvar google_protobuf_any_pb = require('@tronweb3/google-protobuf/google/protobuf/any_pb.js');\ngoog.object.extend(proto, google_protobuf_any_pb);\ngoog.exportSymbol('TronWebProto.Account', null, global);\ngoog.exportSymbol('TronWebProto.Account.AccountResource', null, global);\ngoog.exportSymbol('TronWebProto.Account.Frozen', null, global);\ngoog.exportSymbol('TronWebProto.AccountId', null, global);\ngoog.exportSymbol('TronWebProto.AccountType', null, global);\ngoog.exportSymbol('TronWebProto.DelegatedResource', null, global);\ngoog.exportSymbol('TronWebProto.Exchange', null, global);\ngoog.exportSymbol('TronWebProto.Key', null, global);\ngoog.exportSymbol('TronWebProto.MarketOrderDetail', null, global);\ngoog.exportSymbol('TronWebProto.Permission', null, global);\ngoog.exportSymbol('TronWebProto.Permission.PermissionType', null, global);\ngoog.exportSymbol('TronWebProto.Proposal', null, global);\ngoog.exportSymbol('TronWebProto.Proposal.State', null, global);\ngoog.exportSymbol('TronWebProto.Transaction', null, global);\ngoog.exportSymbol('TronWebProto.Transaction.Contract', null, global);\ngoog.exportSymbol('TronWebProto.Transaction.Contract.ContractType', null, global);\ngoog.exportSymbol('TronWebProto.Transaction.Result', null, global);\ngoog.exportSymbol('TronWebProto.Transaction.Result.code', null, global);\ngoog.exportSymbol('TronWebProto.Transaction.Result.contractResult', null, global);\ngoog.exportSymbol('TronWebProto.Transaction.raw', null, global);\ngoog.exportSymbol('TronWebProto.Vote', null, global);\ngoog.exportSymbol('TronWebProto.Votes', null, global);\ngoog.exportSymbol('TronWebProto.Witness', null, global);\ngoog.exportSymbol('TronWebProto.authority', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.AccountId = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.AccountId, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.AccountId.displayName = 'TronWebProto.AccountId';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Vote = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.Vote, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Vote.displayName = 'TronWebProto.Vote';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Proposal = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.Proposal.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.Proposal, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Proposal.displayName = 'TronWebProto.Proposal';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Exchange = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.Exchange, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Exchange.displayName = 'TronWebProto.Exchange';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Account = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.Account.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.Account, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Account.displayName = 'TronWebProto.Account';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Account.Frozen = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.Account.Frozen, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Account.Frozen.displayName = 'TronWebProto.Account.Frozen';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Account.AccountResource = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.Account.AccountResource, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Account.AccountResource.displayName = 'TronWebProto.Account.AccountResource';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Key = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.Key, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Key.displayName = 'TronWebProto.Key';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.DelegatedResource = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.DelegatedResource, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.DelegatedResource.displayName = 'TronWebProto.DelegatedResource';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.authority = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.authority, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.authority.displayName = 'TronWebProto.authority';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Permission = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.Permission.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.Permission, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Permission.displayName = 'TronWebProto.Permission';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Witness = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.Witness, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Witness.displayName = 'TronWebProto.Witness';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Votes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.Votes.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.Votes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Votes.displayName = 'TronWebProto.Votes';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.MarketOrderDetail = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.MarketOrderDetail, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.MarketOrderDetail.displayName = 'TronWebProto.MarketOrderDetail';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Transaction = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.Transaction.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.Transaction, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Transaction.displayName = 'TronWebProto.Transaction';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Transaction.Contract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.Transaction.Contract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Transaction.Contract.displayName = 'TronWebProto.Transaction.Contract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Transaction.Result = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.Transaction.Result.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.Transaction.Result, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Transaction.Result.displayName = 'TronWebProto.Transaction.Result';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Transaction.raw = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.Transaction.raw.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.Transaction.raw, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Transaction.raw.displayName = 'TronWebProto.Transaction.raw';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.AccountId.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.AccountId.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.AccountId} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountId.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: msg.getName_asB64(),\n    address: msg.getAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.AccountId}\n */\nTronWebProto.AccountId.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.AccountId;\n  return TronWebProto.AccountId.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.AccountId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.AccountId}\n */\nTronWebProto.AccountId.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.AccountId.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.AccountId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.AccountId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountId.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes name = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AccountId.prototype.getName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes name = 1;\n * This is a type-conversion wrapper around `getName()`\n * @return {string}\n */\nTronWebProto.AccountId.prototype.getName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getName()));\n};\n\n\n/**\n * optional bytes name = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getName()`\n * @return {!Uint8Array}\n */\nTronWebProto.AccountId.prototype.getName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getName()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AccountId} returns this\n */\nTronWebProto.AccountId.prototype.setName = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AccountId.prototype.getAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes address = 2;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nTronWebProto.AccountId.prototype.getAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddress()));\n};\n\n\n/**\n * optional bytes address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.AccountId.prototype.getAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AccountId} returns this\n */\nTronWebProto.AccountId.prototype.setAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Vote.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Vote.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Vote} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Vote.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    voteAddress: msg.getVoteAddress_asB64(),\n    voteCount: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Vote}\n */\nTronWebProto.Vote.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Vote;\n  return TronWebProto.Vote.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Vote} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Vote}\n */\nTronWebProto.Vote.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setVoteAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setVoteCount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Vote.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Vote.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Vote} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Vote.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getVoteAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getVoteCount();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes vote_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Vote.prototype.getVoteAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes vote_address = 1;\n * This is a type-conversion wrapper around `getVoteAddress()`\n * @return {string}\n */\nTronWebProto.Vote.prototype.getVoteAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getVoteAddress()));\n};\n\n\n/**\n * optional bytes vote_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getVoteAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.Vote.prototype.getVoteAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getVoteAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Vote} returns this\n */\nTronWebProto.Vote.prototype.setVoteAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 vote_count = 2;\n * @return {number}\n */\nTronWebProto.Vote.prototype.getVoteCount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Vote} returns this\n */\nTronWebProto.Vote.prototype.setVoteCount = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.Proposal.repeatedFields_ = [6];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Proposal.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Proposal.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Proposal} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Proposal.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    proposalId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    proposerAddress: msg.getProposerAddress_asB64(),\n    parametersMap: (f = msg.getParametersMap()) ? f.toObject(includeInstance, undefined) : [],\n    expirationTime: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    createTime: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    approvalsList: msg.getApprovalsList_asB64(),\n    state: jspb.Message.getFieldWithDefault(msg, 7, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Proposal}\n */\nTronWebProto.Proposal.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Proposal;\n  return TronWebProto.Proposal.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Proposal} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Proposal}\n */\nTronWebProto.Proposal.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setProposalId(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setProposerAddress(value);\n      break;\n    case 3:\n      var value = msg.getParametersMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt64, jspb.BinaryReader.prototype.readInt64, null, 0, 0);\n         });\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpirationTime(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCreateTime(value);\n      break;\n    case 6:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addApprovals(value);\n      break;\n    case 7:\n      var value = /** @type {!TronWebProto.Proposal.State} */ (reader.readEnum());\n      msg.setState(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Proposal.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Proposal.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Proposal} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Proposal.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProposalId();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getProposerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getParametersMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeInt64, jspb.BinaryWriter.prototype.writeInt64);\n  }\n  f = message.getExpirationTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getCreateTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getApprovalsList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      6,\n      f\n    );\n  }\n  f = message.getState();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nTronWebProto.Proposal.State = {\n  PENDING: 0,\n  DISAPPROVED: 1,\n  APPROVED: 2,\n  CANCELED: 3\n};\n\n/**\n * optional int64 proposal_id = 1;\n * @return {number}\n */\nTronWebProto.Proposal.prototype.getProposalId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Proposal} returns this\n */\nTronWebProto.Proposal.prototype.setProposalId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional bytes proposer_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Proposal.prototype.getProposerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes proposer_address = 2;\n * This is a type-conversion wrapper around `getProposerAddress()`\n * @return {string}\n */\nTronWebProto.Proposal.prototype.getProposerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getProposerAddress()));\n};\n\n\n/**\n * optional bytes proposer_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getProposerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.Proposal.prototype.getProposerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getProposerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Proposal} returns this\n */\nTronWebProto.Proposal.prototype.setProposerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * map<int64, int64> parameters = 3;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,number>}\n */\nTronWebProto.Proposal.prototype.getParametersMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,number>} */ (\n      jspb.Message.getMapField(this, 3, opt_noLazyCreate,\n      null));\n};\n\n\n/**\n * Clears values from the map. The map will be non-null.\n * @return {!TronWebProto.Proposal} returns this\n */\nTronWebProto.Proposal.prototype.clearParametersMap = function() {\n  this.getParametersMap().clear();\n  return this;};\n\n\n/**\n * optional int64 expiration_time = 4;\n * @return {number}\n */\nTronWebProto.Proposal.prototype.getExpirationTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Proposal} returns this\n */\nTronWebProto.Proposal.prototype.setExpirationTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional int64 create_time = 5;\n * @return {number}\n */\nTronWebProto.Proposal.prototype.getCreateTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Proposal} returns this\n */\nTronWebProto.Proposal.prototype.setCreateTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * repeated bytes approvals = 6;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\nTronWebProto.Proposal.prototype.getApprovalsList = function() {\n  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 6));\n};\n\n\n/**\n * repeated bytes approvals = 6;\n * This is a type-conversion wrapper around `getApprovalsList()`\n * @return {!Array<string>}\n */\nTronWebProto.Proposal.prototype.getApprovalsList_asB64 = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(\n      this.getApprovalsList()));\n};\n\n\n/**\n * repeated bytes approvals = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getApprovalsList()`\n * @return {!Array<!Uint8Array>}\n */\nTronWebProto.Proposal.prototype.getApprovalsList_asU8 = function() {\n  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getApprovalsList()));\n};\n\n\n/**\n * @param {!(Array<!Uint8Array>|Array<string>)} value\n * @return {!TronWebProto.Proposal} returns this\n */\nTronWebProto.Proposal.prototype.setApprovalsList = function(value) {\n  return jspb.Message.setField(this, 6, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n * @return {!TronWebProto.Proposal} returns this\n */\nTronWebProto.Proposal.prototype.addApprovals = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Proposal} returns this\n */\nTronWebProto.Proposal.prototype.clearApprovalsList = function() {\n  return this.setApprovalsList([]);\n};\n\n\n/**\n * optional State state = 7;\n * @return {!TronWebProto.Proposal.State}\n */\nTronWebProto.Proposal.prototype.getState = function() {\n  return /** @type {!TronWebProto.Proposal.State} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/**\n * @param {!TronWebProto.Proposal.State} value\n * @return {!TronWebProto.Proposal} returns this\n */\nTronWebProto.Proposal.prototype.setState = function(value) {\n  return jspb.Message.setProto3EnumField(this, 7, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Exchange.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Exchange.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Exchange} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Exchange.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    exchangeId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    creatorAddress: msg.getCreatorAddress_asB64(),\n    createTime: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    firstTokenId: msg.getFirstTokenId_asB64(),\n    firstTokenBalance: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    secondTokenId: msg.getSecondTokenId_asB64(),\n    secondTokenBalance: jspb.Message.getFieldWithDefault(msg, 9, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Exchange}\n */\nTronWebProto.Exchange.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Exchange;\n  return TronWebProto.Exchange.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Exchange} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Exchange}\n */\nTronWebProto.Exchange.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExchangeId(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setCreatorAddress(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCreateTime(value);\n      break;\n    case 6:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setFirstTokenId(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFirstTokenBalance(value);\n      break;\n    case 8:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSecondTokenId(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSecondTokenBalance(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Exchange.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Exchange.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Exchange} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Exchange.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getExchangeId();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getCreatorAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getCreateTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getFirstTokenId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      6,\n      f\n    );\n  }\n  f = message.getFirstTokenBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getSecondTokenId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      8,\n      f\n    );\n  }\n  f = message.getSecondTokenBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 exchange_id = 1;\n * @return {number}\n */\nTronWebProto.Exchange.prototype.getExchangeId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Exchange} returns this\n */\nTronWebProto.Exchange.prototype.setExchangeId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional bytes creator_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Exchange.prototype.getCreatorAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes creator_address = 2;\n * This is a type-conversion wrapper around `getCreatorAddress()`\n * @return {string}\n */\nTronWebProto.Exchange.prototype.getCreatorAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getCreatorAddress()));\n};\n\n\n/**\n * optional bytes creator_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCreatorAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.Exchange.prototype.getCreatorAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getCreatorAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Exchange} returns this\n */\nTronWebProto.Exchange.prototype.setCreatorAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional int64 create_time = 3;\n * @return {number}\n */\nTronWebProto.Exchange.prototype.getCreateTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Exchange} returns this\n */\nTronWebProto.Exchange.prototype.setCreateTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional bytes first_token_id = 6;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Exchange.prototype.getFirstTokenId = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * optional bytes first_token_id = 6;\n * This is a type-conversion wrapper around `getFirstTokenId()`\n * @return {string}\n */\nTronWebProto.Exchange.prototype.getFirstTokenId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getFirstTokenId()));\n};\n\n\n/**\n * optional bytes first_token_id = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getFirstTokenId()`\n * @return {!Uint8Array}\n */\nTronWebProto.Exchange.prototype.getFirstTokenId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getFirstTokenId()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Exchange} returns this\n */\nTronWebProto.Exchange.prototype.setFirstTokenId = function(value) {\n  return jspb.Message.setProto3BytesField(this, 6, value);\n};\n\n\n/**\n * optional int64 first_token_balance = 7;\n * @return {number}\n */\nTronWebProto.Exchange.prototype.getFirstTokenBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Exchange} returns this\n */\nTronWebProto.Exchange.prototype.setFirstTokenBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n/**\n * optional bytes second_token_id = 8;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Exchange.prototype.getSecondTokenId = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/**\n * optional bytes second_token_id = 8;\n * This is a type-conversion wrapper around `getSecondTokenId()`\n * @return {string}\n */\nTronWebProto.Exchange.prototype.getSecondTokenId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSecondTokenId()));\n};\n\n\n/**\n * optional bytes second_token_id = 8;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSecondTokenId()`\n * @return {!Uint8Array}\n */\nTronWebProto.Exchange.prototype.getSecondTokenId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSecondTokenId()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Exchange} returns this\n */\nTronWebProto.Exchange.prototype.setSecondTokenId = function(value) {\n  return jspb.Message.setProto3BytesField(this, 8, value);\n};\n\n\n/**\n * optional int64 second_token_balance = 9;\n * @return {number}\n */\nTronWebProto.Exchange.prototype.getSecondTokenBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Exchange} returns this\n */\nTronWebProto.Exchange.prototype.setSecondTokenBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 9, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.Account.repeatedFields_ = [5,7,16,33];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Account.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Account.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Account} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Account.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    accountName: msg.getAccountName_asB64(),\n    type: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    address: msg.getAddress_asB64(),\n    balance: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    votesList: jspb.Message.toObjectList(msg.getVotesList(),\n    TronWebProto.Vote.toObject, includeInstance),\n    assetMap: (f = msg.getAssetMap()) ? f.toObject(includeInstance, undefined) : [],\n    assetv2Map: (f = msg.getAssetv2Map()) ? f.toObject(includeInstance, undefined) : [],\n    frozenList: jspb.Message.toObjectList(msg.getFrozenList(),\n    TronWebProto.Account.Frozen.toObject, includeInstance),\n    netUsage: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    acquiredDelegatedFrozenBalanceForBandwidth: jspb.Message.getFieldWithDefault(msg, 41, 0),\n    delegatedFrozenBalanceForBandwidth: jspb.Message.getFieldWithDefault(msg, 42, 0),\n    oldTronPower: jspb.Message.getFieldWithDefault(msg, 46, 0),\n    tronPower: (f = msg.getTronPower()) && TronWebProto.Account.Frozen.toObject(includeInstance, f),\n    assetOptimized: jspb.Message.getBooleanFieldWithDefault(msg, 60, false),\n    createTime: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    latestOprationTime: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    allowance: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    latestWithdrawTime: jspb.Message.getFieldWithDefault(msg, 12, 0),\n    code: msg.getCode_asB64(),\n    isWitness: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),\n    isCommittee: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),\n    frozenSupplyList: jspb.Message.toObjectList(msg.getFrozenSupplyList(),\n    TronWebProto.Account.Frozen.toObject, includeInstance),\n    assetIssuedName: msg.getAssetIssuedName_asB64(),\n    assetIssuedId: msg.getAssetIssuedId_asB64(),\n    latestAssetOperationTimeMap: (f = msg.getLatestAssetOperationTimeMap()) ? f.toObject(includeInstance, undefined) : [],\n    latestAssetOperationTimev2Map: (f = msg.getLatestAssetOperationTimev2Map()) ? f.toObject(includeInstance, undefined) : [],\n    freeNetUsage: jspb.Message.getFieldWithDefault(msg, 19, 0),\n    freeAssetNetUsageMap: (f = msg.getFreeAssetNetUsageMap()) ? f.toObject(includeInstance, undefined) : [],\n    freeAssetNetUsagev2Map: (f = msg.getFreeAssetNetUsagev2Map()) ? f.toObject(includeInstance, undefined) : [],\n    latestConsumeTime: jspb.Message.getFieldWithDefault(msg, 21, 0),\n    latestConsumeFreeTime: jspb.Message.getFieldWithDefault(msg, 22, 0),\n    accountId: msg.getAccountId_asB64(),\n    accountResource: (f = msg.getAccountResource()) && TronWebProto.Account.AccountResource.toObject(includeInstance, f),\n    codehash: msg.getCodehash_asB64(),\n    ownerPermission: (f = msg.getOwnerPermission()) && TronWebProto.Permission.toObject(includeInstance, f),\n    witnessPermission: (f = msg.getWitnessPermission()) && TronWebProto.Permission.toObject(includeInstance, f),\n    activePermissionList: jspb.Message.toObjectList(msg.getActivePermissionList(),\n    TronWebProto.Permission.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Account}\n */\nTronWebProto.Account.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Account;\n  return TronWebProto.Account.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Account} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Account}\n */\nTronWebProto.Account.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAccountName(value);\n      break;\n    case 2:\n      var value = /** @type {!TronWebProto.AccountType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddress(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBalance(value);\n      break;\n    case 5:\n      var value = new TronWebProto.Vote;\n      reader.readMessage(value,TronWebProto.Vote.deserializeBinaryFromReader);\n      msg.addVotes(value);\n      break;\n    case 6:\n      var value = msg.getAssetMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64, null, \"\", 0);\n         });\n      break;\n    case 56:\n      var value = msg.getAssetv2Map();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64, null, \"\", 0);\n         });\n      break;\n    case 7:\n      var value = new TronWebProto.Account.Frozen;\n      reader.readMessage(value,TronWebProto.Account.Frozen.deserializeBinaryFromReader);\n      msg.addFrozen(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNetUsage(value);\n      break;\n    case 41:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAcquiredDelegatedFrozenBalanceForBandwidth(value);\n      break;\n    case 42:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setDelegatedFrozenBalanceForBandwidth(value);\n      break;\n    case 46:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setOldTronPower(value);\n      break;\n    case 47:\n      var value = new TronWebProto.Account.Frozen;\n      reader.readMessage(value,TronWebProto.Account.Frozen.deserializeBinaryFromReader);\n      msg.setTronPower(value);\n      break;\n    case 60:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAssetOptimized(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCreateTime(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLatestOprationTime(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAllowance(value);\n      break;\n    case 12:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLatestWithdrawTime(value);\n      break;\n    case 13:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setCode(value);\n      break;\n    case 14:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsWitness(value);\n      break;\n    case 15:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsCommittee(value);\n      break;\n    case 16:\n      var value = new TronWebProto.Account.Frozen;\n      reader.readMessage(value,TronWebProto.Account.Frozen.deserializeBinaryFromReader);\n      msg.addFrozenSupply(value);\n      break;\n    case 17:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAssetIssuedName(value);\n      break;\n    case 57:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAssetIssuedId(value);\n      break;\n    case 18:\n      var value = msg.getLatestAssetOperationTimeMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64, null, \"\", 0);\n         });\n      break;\n    case 58:\n      var value = msg.getLatestAssetOperationTimev2Map();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64, null, \"\", 0);\n         });\n      break;\n    case 19:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFreeNetUsage(value);\n      break;\n    case 20:\n      var value = msg.getFreeAssetNetUsageMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64, null, \"\", 0);\n         });\n      break;\n    case 59:\n      var value = msg.getFreeAssetNetUsagev2Map();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64, null, \"\", 0);\n         });\n      break;\n    case 21:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLatestConsumeTime(value);\n      break;\n    case 22:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLatestConsumeFreeTime(value);\n      break;\n    case 23:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAccountId(value);\n      break;\n    case 26:\n      var value = new TronWebProto.Account.AccountResource;\n      reader.readMessage(value,TronWebProto.Account.AccountResource.deserializeBinaryFromReader);\n      msg.setAccountResource(value);\n      break;\n    case 30:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setCodehash(value);\n      break;\n    case 31:\n      var value = new TronWebProto.Permission;\n      reader.readMessage(value,TronWebProto.Permission.deserializeBinaryFromReader);\n      msg.setOwnerPermission(value);\n      break;\n    case 32:\n      var value = new TronWebProto.Permission;\n      reader.readMessage(value,TronWebProto.Permission.deserializeBinaryFromReader);\n      msg.setWitnessPermission(value);\n      break;\n    case 33:\n      var value = new TronWebProto.Permission;\n      reader.readMessage(value,TronWebProto.Permission.deserializeBinaryFromReader);\n      msg.addActivePermission(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Account.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Account.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Account} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Account.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAccountName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      2,\n      f\n    );\n  }\n  f = message.getAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getVotesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      5,\n      f,\n      TronWebProto.Vote.serializeBinaryToWriter\n    );\n  }\n  f = message.getAssetMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);\n  }\n  f = message.getAssetv2Map(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(56, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);\n  }\n  f = message.getFrozenList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      7,\n      f,\n      TronWebProto.Account.Frozen.serializeBinaryToWriter\n    );\n  }\n  f = message.getNetUsage();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getAcquiredDelegatedFrozenBalanceForBandwidth();\n  if (f !== 0) {\n    writer.writeInt64(\n      41,\n      f\n    );\n  }\n  f = message.getDelegatedFrozenBalanceForBandwidth();\n  if (f !== 0) {\n    writer.writeInt64(\n      42,\n      f\n    );\n  }\n  f = message.getOldTronPower();\n  if (f !== 0) {\n    writer.writeInt64(\n      46,\n      f\n    );\n  }\n  f = message.getTronPower();\n  if (f != null) {\n    writer.writeMessage(\n      47,\n      f,\n      TronWebProto.Account.Frozen.serializeBinaryToWriter\n    );\n  }\n  f = message.getAssetOptimized();\n  if (f) {\n    writer.writeBool(\n      60,\n      f\n    );\n  }\n  f = message.getCreateTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n  f = message.getLatestOprationTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      10,\n      f\n    );\n  }\n  f = message.getAllowance();\n  if (f !== 0) {\n    writer.writeInt64(\n      11,\n      f\n    );\n  }\n  f = message.getLatestWithdrawTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      12,\n      f\n    );\n  }\n  f = message.getCode_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      13,\n      f\n    );\n  }\n  f = message.getIsWitness();\n  if (f) {\n    writer.writeBool(\n      14,\n      f\n    );\n  }\n  f = message.getIsCommittee();\n  if (f) {\n    writer.writeBool(\n      15,\n      f\n    );\n  }\n  f = message.getFrozenSupplyList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      16,\n      f,\n      TronWebProto.Account.Frozen.serializeBinaryToWriter\n    );\n  }\n  f = message.getAssetIssuedName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      17,\n      f\n    );\n  }\n  f = message.getAssetIssuedId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      57,\n      f\n    );\n  }\n  f = message.getLatestAssetOperationTimeMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(18, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);\n  }\n  f = message.getLatestAssetOperationTimev2Map(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(58, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);\n  }\n  f = message.getFreeNetUsage();\n  if (f !== 0) {\n    writer.writeInt64(\n      19,\n      f\n    );\n  }\n  f = message.getFreeAssetNetUsageMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(20, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);\n  }\n  f = message.getFreeAssetNetUsagev2Map(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(59, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);\n  }\n  f = message.getLatestConsumeTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      21,\n      f\n    );\n  }\n  f = message.getLatestConsumeFreeTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      22,\n      f\n    );\n  }\n  f = message.getAccountId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      23,\n      f\n    );\n  }\n  f = message.getAccountResource();\n  if (f != null) {\n    writer.writeMessage(\n      26,\n      f,\n      TronWebProto.Account.AccountResource.serializeBinaryToWriter\n    );\n  }\n  f = message.getCodehash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      30,\n      f\n    );\n  }\n  f = message.getOwnerPermission();\n  if (f != null) {\n    writer.writeMessage(\n      31,\n      f,\n      TronWebProto.Permission.serializeBinaryToWriter\n    );\n  }\n  f = message.getWitnessPermission();\n  if (f != null) {\n    writer.writeMessage(\n      32,\n      f,\n      TronWebProto.Permission.serializeBinaryToWriter\n    );\n  }\n  f = message.getActivePermissionList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      33,\n      f,\n      TronWebProto.Permission.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Account.Frozen.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Account.Frozen.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Account.Frozen} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Account.Frozen.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    frozenBalance: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    expireTime: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Account.Frozen}\n */\nTronWebProto.Account.Frozen.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Account.Frozen;\n  return TronWebProto.Account.Frozen.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Account.Frozen} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Account.Frozen}\n */\nTronWebProto.Account.Frozen.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFrozenBalance(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpireTime(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Account.Frozen.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Account.Frozen.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Account.Frozen} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Account.Frozen.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFrozenBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getExpireTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 frozen_balance = 1;\n * @return {number}\n */\nTronWebProto.Account.Frozen.prototype.getFrozenBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account.Frozen} returns this\n */\nTronWebProto.Account.Frozen.prototype.setFrozenBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int64 expire_time = 2;\n * @return {number}\n */\nTronWebProto.Account.Frozen.prototype.getExpireTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account.Frozen} returns this\n */\nTronWebProto.Account.Frozen.prototype.setExpireTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Account.AccountResource.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Account.AccountResource.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Account.AccountResource} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Account.AccountResource.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    energyUsage: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    frozenBalanceForEnergy: (f = msg.getFrozenBalanceForEnergy()) && TronWebProto.Account.Frozen.toObject(includeInstance, f),\n    latestConsumeTimeForEnergy: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    acquiredDelegatedFrozenBalanceForEnergy: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    delegatedFrozenBalanceForEnergy: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    storageLimit: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    storageUsage: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    latestExchangeStorageTime: jspb.Message.getFieldWithDefault(msg, 8, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Account.AccountResource}\n */\nTronWebProto.Account.AccountResource.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Account.AccountResource;\n  return TronWebProto.Account.AccountResource.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Account.AccountResource} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Account.AccountResource}\n */\nTronWebProto.Account.AccountResource.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setEnergyUsage(value);\n      break;\n    case 2:\n      var value = new TronWebProto.Account.Frozen;\n      reader.readMessage(value,TronWebProto.Account.Frozen.deserializeBinaryFromReader);\n      msg.setFrozenBalanceForEnergy(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLatestConsumeTimeForEnergy(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAcquiredDelegatedFrozenBalanceForEnergy(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setDelegatedFrozenBalanceForEnergy(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setStorageLimit(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setStorageUsage(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLatestExchangeStorageTime(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Account.AccountResource.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Account.AccountResource.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Account.AccountResource} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Account.AccountResource.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEnergyUsage();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getFrozenBalanceForEnergy();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      TronWebProto.Account.Frozen.serializeBinaryToWriter\n    );\n  }\n  f = message.getLatestConsumeTimeForEnergy();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getAcquiredDelegatedFrozenBalanceForEnergy();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getDelegatedFrozenBalanceForEnergy();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getStorageLimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getStorageUsage();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getLatestExchangeStorageTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 energy_usage = 1;\n * @return {number}\n */\nTronWebProto.Account.AccountResource.prototype.getEnergyUsage = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account.AccountResource} returns this\n */\nTronWebProto.Account.AccountResource.prototype.setEnergyUsage = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional Frozen frozen_balance_for_energy = 2;\n * @return {?TronWebProto.Account.Frozen}\n */\nTronWebProto.Account.AccountResource.prototype.getFrozenBalanceForEnergy = function() {\n  return /** @type{?TronWebProto.Account.Frozen} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.Account.Frozen, 2));\n};\n\n\n/**\n * @param {?TronWebProto.Account.Frozen|undefined} value\n * @return {!TronWebProto.Account.AccountResource} returns this\n*/\nTronWebProto.Account.AccountResource.prototype.setFrozenBalanceForEnergy = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.Account.AccountResource} returns this\n */\nTronWebProto.Account.AccountResource.prototype.clearFrozenBalanceForEnergy = function() {\n  return this.setFrozenBalanceForEnergy(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.Account.AccountResource.prototype.hasFrozenBalanceForEnergy = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional int64 latest_consume_time_for_energy = 3;\n * @return {number}\n */\nTronWebProto.Account.AccountResource.prototype.getLatestConsumeTimeForEnergy = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account.AccountResource} returns this\n */\nTronWebProto.Account.AccountResource.prototype.setLatestConsumeTimeForEnergy = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int64 acquired_delegated_frozen_balance_for_energy = 4;\n * @return {number}\n */\nTronWebProto.Account.AccountResource.prototype.getAcquiredDelegatedFrozenBalanceForEnergy = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account.AccountResource} returns this\n */\nTronWebProto.Account.AccountResource.prototype.setAcquiredDelegatedFrozenBalanceForEnergy = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional int64 delegated_frozen_balance_for_energy = 5;\n * @return {number}\n */\nTronWebProto.Account.AccountResource.prototype.getDelegatedFrozenBalanceForEnergy = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account.AccountResource} returns this\n */\nTronWebProto.Account.AccountResource.prototype.setDelegatedFrozenBalanceForEnergy = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional int64 storage_limit = 6;\n * @return {number}\n */\nTronWebProto.Account.AccountResource.prototype.getStorageLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account.AccountResource} returns this\n */\nTronWebProto.Account.AccountResource.prototype.setStorageLimit = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * optional int64 storage_usage = 7;\n * @return {number}\n */\nTronWebProto.Account.AccountResource.prototype.getStorageUsage = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account.AccountResource} returns this\n */\nTronWebProto.Account.AccountResource.prototype.setStorageUsage = function(value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n/**\n * optional int64 latest_exchange_storage_time = 8;\n * @return {number}\n */\nTronWebProto.Account.AccountResource.prototype.getLatestExchangeStorageTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account.AccountResource} returns this\n */\nTronWebProto.Account.AccountResource.prototype.setLatestExchangeStorageTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * optional bytes account_name = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Account.prototype.getAccountName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes account_name = 1;\n * This is a type-conversion wrapper around `getAccountName()`\n * @return {string}\n */\nTronWebProto.Account.prototype.getAccountName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAccountName()));\n};\n\n\n/**\n * optional bytes account_name = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAccountName()`\n * @return {!Uint8Array}\n */\nTronWebProto.Account.prototype.getAccountName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAccountName()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setAccountName = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional AccountType type = 2;\n * @return {!TronWebProto.AccountType}\n */\nTronWebProto.Account.prototype.getType = function() {\n  return /** @type {!TronWebProto.AccountType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {!TronWebProto.AccountType} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setType = function(value) {\n  return jspb.Message.setProto3EnumField(this, 2, value);\n};\n\n\n/**\n * optional bytes address = 3;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Account.prototype.getAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes address = 3;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nTronWebProto.Account.prototype.getAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddress()));\n};\n\n\n/**\n * optional bytes address = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.Account.prototype.getAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional int64 balance = 4;\n * @return {number}\n */\nTronWebProto.Account.prototype.getBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * repeated Vote votes = 5;\n * @return {!Array<!TronWebProto.Vote>}\n */\nTronWebProto.Account.prototype.getVotesList = function() {\n  return /** @type{!Array<!TronWebProto.Vote>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.Vote, 5));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.Vote>} value\n * @return {!TronWebProto.Account} returns this\n*/\nTronWebProto.Account.prototype.setVotesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n\n\n/**\n * @param {!TronWebProto.Vote=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.Vote}\n */\nTronWebProto.Account.prototype.addVotes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, TronWebProto.Vote, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearVotesList = function() {\n  return this.setVotesList([]);\n};\n\n\n/**\n * map<string, int64> asset = 6;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,number>}\n */\nTronWebProto.Account.prototype.getAssetMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,number>} */ (\n      jspb.Message.getMapField(this, 6, opt_noLazyCreate,\n      null));\n};\n\n\n/**\n * Clears values from the map. The map will be non-null.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearAssetMap = function() {\n  this.getAssetMap().clear();\n  return this;};\n\n\n/**\n * map<string, int64> assetV2 = 56;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,number>}\n */\nTronWebProto.Account.prototype.getAssetv2Map = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,number>} */ (\n      jspb.Message.getMapField(this, 56, opt_noLazyCreate,\n      null));\n};\n\n\n/**\n * Clears values from the map. The map will be non-null.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearAssetv2Map = function() {\n  this.getAssetv2Map().clear();\n  return this;};\n\n\n/**\n * repeated Frozen frozen = 7;\n * @return {!Array<!TronWebProto.Account.Frozen>}\n */\nTronWebProto.Account.prototype.getFrozenList = function() {\n  return /** @type{!Array<!TronWebProto.Account.Frozen>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.Account.Frozen, 7));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.Account.Frozen>} value\n * @return {!TronWebProto.Account} returns this\n*/\nTronWebProto.Account.prototype.setFrozenList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 7, value);\n};\n\n\n/**\n * @param {!TronWebProto.Account.Frozen=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.Account.Frozen}\n */\nTronWebProto.Account.prototype.addFrozen = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, TronWebProto.Account.Frozen, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearFrozenList = function() {\n  return this.setFrozenList([]);\n};\n\n\n/**\n * optional int64 net_usage = 8;\n * @return {number}\n */\nTronWebProto.Account.prototype.getNetUsage = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setNetUsage = function(value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * optional int64 acquired_delegated_frozen_balance_for_bandwidth = 41;\n * @return {number}\n */\nTronWebProto.Account.prototype.getAcquiredDelegatedFrozenBalanceForBandwidth = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 41, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setAcquiredDelegatedFrozenBalanceForBandwidth = function(value) {\n  return jspb.Message.setProto3IntField(this, 41, value);\n};\n\n\n/**\n * optional int64 delegated_frozen_balance_for_bandwidth = 42;\n * @return {number}\n */\nTronWebProto.Account.prototype.getDelegatedFrozenBalanceForBandwidth = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 42, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setDelegatedFrozenBalanceForBandwidth = function(value) {\n  return jspb.Message.setProto3IntField(this, 42, value);\n};\n\n\n/**\n * optional int64 old_tron_power = 46;\n * @return {number}\n */\nTronWebProto.Account.prototype.getOldTronPower = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 46, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setOldTronPower = function(value) {\n  return jspb.Message.setProto3IntField(this, 46, value);\n};\n\n\n/**\n * optional Frozen tron_power = 47;\n * @return {?TronWebProto.Account.Frozen}\n */\nTronWebProto.Account.prototype.getTronPower = function() {\n  return /** @type{?TronWebProto.Account.Frozen} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.Account.Frozen, 47));\n};\n\n\n/**\n * @param {?TronWebProto.Account.Frozen|undefined} value\n * @return {!TronWebProto.Account} returns this\n*/\nTronWebProto.Account.prototype.setTronPower = function(value) {\n  return jspb.Message.setWrapperField(this, 47, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearTronPower = function() {\n  return this.setTronPower(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.Account.prototype.hasTronPower = function() {\n  return jspb.Message.getField(this, 47) != null;\n};\n\n\n/**\n * optional bool asset_optimized = 60;\n * @return {boolean}\n */\nTronWebProto.Account.prototype.getAssetOptimized = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 60, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setAssetOptimized = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 60, value);\n};\n\n\n/**\n * optional int64 create_time = 9;\n * @return {number}\n */\nTronWebProto.Account.prototype.getCreateTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setCreateTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 9, value);\n};\n\n\n/**\n * optional int64 latest_opration_time = 10;\n * @return {number}\n */\nTronWebProto.Account.prototype.getLatestOprationTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setLatestOprationTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 10, value);\n};\n\n\n/**\n * optional int64 allowance = 11;\n * @return {number}\n */\nTronWebProto.Account.prototype.getAllowance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setAllowance = function(value) {\n  return jspb.Message.setProto3IntField(this, 11, value);\n};\n\n\n/**\n * optional int64 latest_withdraw_time = 12;\n * @return {number}\n */\nTronWebProto.Account.prototype.getLatestWithdrawTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setLatestWithdrawTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 12, value);\n};\n\n\n/**\n * optional bytes code = 13;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Account.prototype.getCode = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, \"\"));\n};\n\n\n/**\n * optional bytes code = 13;\n * This is a type-conversion wrapper around `getCode()`\n * @return {string}\n */\nTronWebProto.Account.prototype.getCode_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getCode()));\n};\n\n\n/**\n * optional bytes code = 13;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCode()`\n * @return {!Uint8Array}\n */\nTronWebProto.Account.prototype.getCode_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getCode()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setCode = function(value) {\n  return jspb.Message.setProto3BytesField(this, 13, value);\n};\n\n\n/**\n * optional bool is_witness = 14;\n * @return {boolean}\n */\nTronWebProto.Account.prototype.getIsWitness = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setIsWitness = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 14, value);\n};\n\n\n/**\n * optional bool is_committee = 15;\n * @return {boolean}\n */\nTronWebProto.Account.prototype.getIsCommittee = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setIsCommittee = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 15, value);\n};\n\n\n/**\n * repeated Frozen frozen_supply = 16;\n * @return {!Array<!TronWebProto.Account.Frozen>}\n */\nTronWebProto.Account.prototype.getFrozenSupplyList = function() {\n  return /** @type{!Array<!TronWebProto.Account.Frozen>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.Account.Frozen, 16));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.Account.Frozen>} value\n * @return {!TronWebProto.Account} returns this\n*/\nTronWebProto.Account.prototype.setFrozenSupplyList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 16, value);\n};\n\n\n/**\n * @param {!TronWebProto.Account.Frozen=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.Account.Frozen}\n */\nTronWebProto.Account.prototype.addFrozenSupply = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, TronWebProto.Account.Frozen, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearFrozenSupplyList = function() {\n  return this.setFrozenSupplyList([]);\n};\n\n\n/**\n * optional bytes asset_issued_name = 17;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Account.prototype.getAssetIssuedName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 17, \"\"));\n};\n\n\n/**\n * optional bytes asset_issued_name = 17;\n * This is a type-conversion wrapper around `getAssetIssuedName()`\n * @return {string}\n */\nTronWebProto.Account.prototype.getAssetIssuedName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAssetIssuedName()));\n};\n\n\n/**\n * optional bytes asset_issued_name = 17;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAssetIssuedName()`\n * @return {!Uint8Array}\n */\nTronWebProto.Account.prototype.getAssetIssuedName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAssetIssuedName()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setAssetIssuedName = function(value) {\n  return jspb.Message.setProto3BytesField(this, 17, value);\n};\n\n\n/**\n * optional bytes asset_issued_ID = 57;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Account.prototype.getAssetIssuedId = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 57, \"\"));\n};\n\n\n/**\n * optional bytes asset_issued_ID = 57;\n * This is a type-conversion wrapper around `getAssetIssuedId()`\n * @return {string}\n */\nTronWebProto.Account.prototype.getAssetIssuedId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAssetIssuedId()));\n};\n\n\n/**\n * optional bytes asset_issued_ID = 57;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAssetIssuedId()`\n * @return {!Uint8Array}\n */\nTronWebProto.Account.prototype.getAssetIssuedId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAssetIssuedId()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setAssetIssuedId = function(value) {\n  return jspb.Message.setProto3BytesField(this, 57, value);\n};\n\n\n/**\n * map<string, int64> latest_asset_operation_time = 18;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,number>}\n */\nTronWebProto.Account.prototype.getLatestAssetOperationTimeMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,number>} */ (\n      jspb.Message.getMapField(this, 18, opt_noLazyCreate,\n      null));\n};\n\n\n/**\n * Clears values from the map. The map will be non-null.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearLatestAssetOperationTimeMap = function() {\n  this.getLatestAssetOperationTimeMap().clear();\n  return this;};\n\n\n/**\n * map<string, int64> latest_asset_operation_timeV2 = 58;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,number>}\n */\nTronWebProto.Account.prototype.getLatestAssetOperationTimev2Map = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,number>} */ (\n      jspb.Message.getMapField(this, 58, opt_noLazyCreate,\n      null));\n};\n\n\n/**\n * Clears values from the map. The map will be non-null.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearLatestAssetOperationTimev2Map = function() {\n  this.getLatestAssetOperationTimev2Map().clear();\n  return this;};\n\n\n/**\n * optional int64 free_net_usage = 19;\n * @return {number}\n */\nTronWebProto.Account.prototype.getFreeNetUsage = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setFreeNetUsage = function(value) {\n  return jspb.Message.setProto3IntField(this, 19, value);\n};\n\n\n/**\n * map<string, int64> free_asset_net_usage = 20;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,number>}\n */\nTronWebProto.Account.prototype.getFreeAssetNetUsageMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,number>} */ (\n      jspb.Message.getMapField(this, 20, opt_noLazyCreate,\n      null));\n};\n\n\n/**\n * Clears values from the map. The map will be non-null.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearFreeAssetNetUsageMap = function() {\n  this.getFreeAssetNetUsageMap().clear();\n  return this;};\n\n\n/**\n * map<string, int64> free_asset_net_usageV2 = 59;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,number>}\n */\nTronWebProto.Account.prototype.getFreeAssetNetUsagev2Map = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,number>} */ (\n      jspb.Message.getMapField(this, 59, opt_noLazyCreate,\n      null));\n};\n\n\n/**\n * Clears values from the map. The map will be non-null.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearFreeAssetNetUsagev2Map = function() {\n  this.getFreeAssetNetUsagev2Map().clear();\n  return this;};\n\n\n/**\n * optional int64 latest_consume_time = 21;\n * @return {number}\n */\nTronWebProto.Account.prototype.getLatestConsumeTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setLatestConsumeTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 21, value);\n};\n\n\n/**\n * optional int64 latest_consume_free_time = 22;\n * @return {number}\n */\nTronWebProto.Account.prototype.getLatestConsumeFreeTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setLatestConsumeFreeTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 22, value);\n};\n\n\n/**\n * optional bytes account_id = 23;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Account.prototype.getAccountId = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 23, \"\"));\n};\n\n\n/**\n * optional bytes account_id = 23;\n * This is a type-conversion wrapper around `getAccountId()`\n * @return {string}\n */\nTronWebProto.Account.prototype.getAccountId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAccountId()));\n};\n\n\n/**\n * optional bytes account_id = 23;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAccountId()`\n * @return {!Uint8Array}\n */\nTronWebProto.Account.prototype.getAccountId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAccountId()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setAccountId = function(value) {\n  return jspb.Message.setProto3BytesField(this, 23, value);\n};\n\n\n/**\n * optional AccountResource account_resource = 26;\n * @return {?TronWebProto.Account.AccountResource}\n */\nTronWebProto.Account.prototype.getAccountResource = function() {\n  return /** @type{?TronWebProto.Account.AccountResource} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.Account.AccountResource, 26));\n};\n\n\n/**\n * @param {?TronWebProto.Account.AccountResource|undefined} value\n * @return {!TronWebProto.Account} returns this\n*/\nTronWebProto.Account.prototype.setAccountResource = function(value) {\n  return jspb.Message.setWrapperField(this, 26, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearAccountResource = function() {\n  return this.setAccountResource(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.Account.prototype.hasAccountResource = function() {\n  return jspb.Message.getField(this, 26) != null;\n};\n\n\n/**\n * optional bytes codeHash = 30;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Account.prototype.getCodehash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 30, \"\"));\n};\n\n\n/**\n * optional bytes codeHash = 30;\n * This is a type-conversion wrapper around `getCodehash()`\n * @return {string}\n */\nTronWebProto.Account.prototype.getCodehash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getCodehash()));\n};\n\n\n/**\n * optional bytes codeHash = 30;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCodehash()`\n * @return {!Uint8Array}\n */\nTronWebProto.Account.prototype.getCodehash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getCodehash()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setCodehash = function(value) {\n  return jspb.Message.setProto3BytesField(this, 30, value);\n};\n\n\n/**\n * optional Permission owner_permission = 31;\n * @return {?TronWebProto.Permission}\n */\nTronWebProto.Account.prototype.getOwnerPermission = function() {\n  return /** @type{?TronWebProto.Permission} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.Permission, 31));\n};\n\n\n/**\n * @param {?TronWebProto.Permission|undefined} value\n * @return {!TronWebProto.Account} returns this\n*/\nTronWebProto.Account.prototype.setOwnerPermission = function(value) {\n  return jspb.Message.setWrapperField(this, 31, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearOwnerPermission = function() {\n  return this.setOwnerPermission(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.Account.prototype.hasOwnerPermission = function() {\n  return jspb.Message.getField(this, 31) != null;\n};\n\n\n/**\n * optional Permission witness_permission = 32;\n * @return {?TronWebProto.Permission}\n */\nTronWebProto.Account.prototype.getWitnessPermission = function() {\n  return /** @type{?TronWebProto.Permission} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.Permission, 32));\n};\n\n\n/**\n * @param {?TronWebProto.Permission|undefined} value\n * @return {!TronWebProto.Account} returns this\n*/\nTronWebProto.Account.prototype.setWitnessPermission = function(value) {\n  return jspb.Message.setWrapperField(this, 32, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearWitnessPermission = function() {\n  return this.setWitnessPermission(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.Account.prototype.hasWitnessPermission = function() {\n  return jspb.Message.getField(this, 32) != null;\n};\n\n\n/**\n * repeated Permission active_permission = 33;\n * @return {!Array<!TronWebProto.Permission>}\n */\nTronWebProto.Account.prototype.getActivePermissionList = function() {\n  return /** @type{!Array<!TronWebProto.Permission>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.Permission, 33));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.Permission>} value\n * @return {!TronWebProto.Account} returns this\n*/\nTronWebProto.Account.prototype.setActivePermissionList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 33, value);\n};\n\n\n/**\n * @param {!TronWebProto.Permission=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.Permission}\n */\nTronWebProto.Account.prototype.addActivePermission = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 33, opt_value, TronWebProto.Permission, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearActivePermissionList = function() {\n  return this.setActivePermissionList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Key.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Key.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Key} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Key.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: msg.getAddress_asB64(),\n    weight: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Key}\n */\nTronWebProto.Key.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Key;\n  return TronWebProto.Key.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Key} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Key}\n */\nTronWebProto.Key.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setWeight(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Key.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Key.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Key} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Key.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getWeight();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Key.prototype.getAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes address = 1;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nTronWebProto.Key.prototype.getAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddress()));\n};\n\n\n/**\n * optional bytes address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.Key.prototype.getAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Key} returns this\n */\nTronWebProto.Key.prototype.setAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 weight = 2;\n * @return {number}\n */\nTronWebProto.Key.prototype.getWeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Key} returns this\n */\nTronWebProto.Key.prototype.setWeight = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.DelegatedResource.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.DelegatedResource.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.DelegatedResource} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.DelegatedResource.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    from: msg.getFrom_asB64(),\n    to: msg.getTo_asB64(),\n    frozenBalanceForBandwidth: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    frozenBalanceForEnergy: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    expireTimeForBandwidth: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    expireTimeForEnergy: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.DelegatedResource}\n */\nTronWebProto.DelegatedResource.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.DelegatedResource;\n  return TronWebProto.DelegatedResource.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.DelegatedResource} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.DelegatedResource}\n */\nTronWebProto.DelegatedResource.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setFrom(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTo(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFrozenBalanceForBandwidth(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFrozenBalanceForEnergy(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpireTimeForBandwidth(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpireTimeForEnergy(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.DelegatedResource.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.DelegatedResource.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.DelegatedResource} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.DelegatedResource.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFrom_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getTo_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getFrozenBalanceForBandwidth();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getFrozenBalanceForEnergy();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getExpireTimeForBandwidth();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getExpireTimeForEnergy();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes from = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.DelegatedResource.prototype.getFrom = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes from = 1;\n * This is a type-conversion wrapper around `getFrom()`\n * @return {string}\n */\nTronWebProto.DelegatedResource.prototype.getFrom_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getFrom()));\n};\n\n\n/**\n * optional bytes from = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getFrom()`\n * @return {!Uint8Array}\n */\nTronWebProto.DelegatedResource.prototype.getFrom_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getFrom()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.DelegatedResource} returns this\n */\nTronWebProto.DelegatedResource.prototype.setFrom = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes to = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.DelegatedResource.prototype.getTo = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes to = 2;\n * This is a type-conversion wrapper around `getTo()`\n * @return {string}\n */\nTronWebProto.DelegatedResource.prototype.getTo_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTo()));\n};\n\n\n/**\n * optional bytes to = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTo()`\n * @return {!Uint8Array}\n */\nTronWebProto.DelegatedResource.prototype.getTo_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTo()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.DelegatedResource} returns this\n */\nTronWebProto.DelegatedResource.prototype.setTo = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional int64 frozen_balance_for_bandwidth = 3;\n * @return {number}\n */\nTronWebProto.DelegatedResource.prototype.getFrozenBalanceForBandwidth = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.DelegatedResource} returns this\n */\nTronWebProto.DelegatedResource.prototype.setFrozenBalanceForBandwidth = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int64 frozen_balance_for_energy = 4;\n * @return {number}\n */\nTronWebProto.DelegatedResource.prototype.getFrozenBalanceForEnergy = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.DelegatedResource} returns this\n */\nTronWebProto.DelegatedResource.prototype.setFrozenBalanceForEnergy = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional int64 expire_time_for_bandwidth = 5;\n * @return {number}\n */\nTronWebProto.DelegatedResource.prototype.getExpireTimeForBandwidth = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.DelegatedResource} returns this\n */\nTronWebProto.DelegatedResource.prototype.setExpireTimeForBandwidth = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional int64 expire_time_for_energy = 6;\n * @return {number}\n */\nTronWebProto.DelegatedResource.prototype.getExpireTimeForEnergy = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.DelegatedResource} returns this\n */\nTronWebProto.DelegatedResource.prototype.setExpireTimeForEnergy = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.authority.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.authority.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.authority} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.authority.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    account: (f = msg.getAccount()) && TronWebProto.AccountId.toObject(includeInstance, f),\n    permissionName: msg.getPermissionName_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.authority}\n */\nTronWebProto.authority.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.authority;\n  return TronWebProto.authority.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.authority} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.authority}\n */\nTronWebProto.authority.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new TronWebProto.AccountId;\n      reader.readMessage(value,TronWebProto.AccountId.deserializeBinaryFromReader);\n      msg.setAccount(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPermissionName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.authority.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.authority.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.authority} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.authority.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAccount();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      TronWebProto.AccountId.serializeBinaryToWriter\n    );\n  }\n  f = message.getPermissionName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional AccountId account = 1;\n * @return {?TronWebProto.AccountId}\n */\nTronWebProto.authority.prototype.getAccount = function() {\n  return /** @type{?TronWebProto.AccountId} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.AccountId, 1));\n};\n\n\n/**\n * @param {?TronWebProto.AccountId|undefined} value\n * @return {!TronWebProto.authority} returns this\n*/\nTronWebProto.authority.prototype.setAccount = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.authority} returns this\n */\nTronWebProto.authority.prototype.clearAccount = function() {\n  return this.setAccount(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.authority.prototype.hasAccount = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes permission_name = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.authority.prototype.getPermissionName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes permission_name = 2;\n * This is a type-conversion wrapper around `getPermissionName()`\n * @return {string}\n */\nTronWebProto.authority.prototype.getPermissionName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPermissionName()));\n};\n\n\n/**\n * optional bytes permission_name = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPermissionName()`\n * @return {!Uint8Array}\n */\nTronWebProto.authority.prototype.getPermissionName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPermissionName()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.authority} returns this\n */\nTronWebProto.authority.prototype.setPermissionName = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.Permission.repeatedFields_ = [7];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Permission.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Permission.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Permission} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Permission.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    type: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    id: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    permissionName: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    threshold: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    parentId: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    operations: msg.getOperations_asB64(),\n    keysList: jspb.Message.toObjectList(msg.getKeysList(),\n    TronWebProto.Key.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Permission}\n */\nTronWebProto.Permission.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Permission;\n  return TronWebProto.Permission.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Permission} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Permission}\n */\nTronWebProto.Permission.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!TronWebProto.Permission.PermissionType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPermissionName(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setThreshold(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setParentId(value);\n      break;\n    case 6:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOperations(value);\n      break;\n    case 7:\n      var value = new TronWebProto.Key;\n      reader.readMessage(value,TronWebProto.Key.deserializeBinaryFromReader);\n      msg.addKeys(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Permission.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Permission.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Permission} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Permission.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getPermissionName();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getThreshold();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getParentId();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n  f = message.getOperations_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      6,\n      f\n    );\n  }\n  f = message.getKeysList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      7,\n      f,\n      TronWebProto.Key.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nTronWebProto.Permission.PermissionType = {\n  OWNER: 0,\n  WITNESS: 1,\n  ACTIVE: 2\n};\n\n/**\n * optional PermissionType type = 1;\n * @return {!TronWebProto.Permission.PermissionType}\n */\nTronWebProto.Permission.prototype.getType = function() {\n  return /** @type {!TronWebProto.Permission.PermissionType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {!TronWebProto.Permission.PermissionType} value\n * @return {!TronWebProto.Permission} returns this\n */\nTronWebProto.Permission.prototype.setType = function(value) {\n  return jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * optional int32 id = 2;\n * @return {number}\n */\nTronWebProto.Permission.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Permission} returns this\n */\nTronWebProto.Permission.prototype.setId = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional string permission_name = 3;\n * @return {string}\n */\nTronWebProto.Permission.prototype.getPermissionName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!TronWebProto.Permission} returns this\n */\nTronWebProto.Permission.prototype.setPermissionName = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional int64 threshold = 4;\n * @return {number}\n */\nTronWebProto.Permission.prototype.getThreshold = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Permission} returns this\n */\nTronWebProto.Permission.prototype.setThreshold = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional int32 parent_id = 5;\n * @return {number}\n */\nTronWebProto.Permission.prototype.getParentId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Permission} returns this\n */\nTronWebProto.Permission.prototype.setParentId = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional bytes operations = 6;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Permission.prototype.getOperations = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * optional bytes operations = 6;\n * This is a type-conversion wrapper around `getOperations()`\n * @return {string}\n */\nTronWebProto.Permission.prototype.getOperations_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOperations()));\n};\n\n\n/**\n * optional bytes operations = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOperations()`\n * @return {!Uint8Array}\n */\nTronWebProto.Permission.prototype.getOperations_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOperations()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Permission} returns this\n */\nTronWebProto.Permission.prototype.setOperations = function(value) {\n  return jspb.Message.setProto3BytesField(this, 6, value);\n};\n\n\n/**\n * repeated Key keys = 7;\n * @return {!Array<!TronWebProto.Key>}\n */\nTronWebProto.Permission.prototype.getKeysList = function() {\n  return /** @type{!Array<!TronWebProto.Key>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.Key, 7));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.Key>} value\n * @return {!TronWebProto.Permission} returns this\n*/\nTronWebProto.Permission.prototype.setKeysList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 7, value);\n};\n\n\n/**\n * @param {!TronWebProto.Key=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.Key}\n */\nTronWebProto.Permission.prototype.addKeys = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, TronWebProto.Key, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Permission} returns this\n */\nTronWebProto.Permission.prototype.clearKeysList = function() {\n  return this.setKeysList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Witness.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Witness.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Witness} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Witness.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: msg.getAddress_asB64(),\n    votecount: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    pubkey: msg.getPubkey_asB64(),\n    url: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    totalproduced: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    totalmissed: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    latestblocknum: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    latestslotnum: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    isjobs: jspb.Message.getBooleanFieldWithDefault(msg, 9, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Witness}\n */\nTronWebProto.Witness.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Witness;\n  return TronWebProto.Witness.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Witness} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Witness}\n */\nTronWebProto.Witness.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setVotecount(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPubkey(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUrl(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalproduced(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalmissed(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLatestblocknum(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLatestslotnum(value);\n      break;\n    case 9:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsjobs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Witness.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Witness.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Witness} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Witness.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getVotecount();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getPubkey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getUrl();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getTotalproduced();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getTotalmissed();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getLatestblocknum();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getLatestslotnum();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getIsjobs();\n  if (f) {\n    writer.writeBool(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Witness.prototype.getAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes address = 1;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nTronWebProto.Witness.prototype.getAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddress()));\n};\n\n\n/**\n * optional bytes address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.Witness.prototype.getAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Witness} returns this\n */\nTronWebProto.Witness.prototype.setAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 voteCount = 2;\n * @return {number}\n */\nTronWebProto.Witness.prototype.getVotecount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Witness} returns this\n */\nTronWebProto.Witness.prototype.setVotecount = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bytes pubKey = 3;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Witness.prototype.getPubkey = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes pubKey = 3;\n * This is a type-conversion wrapper around `getPubkey()`\n * @return {string}\n */\nTronWebProto.Witness.prototype.getPubkey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPubkey()));\n};\n\n\n/**\n * optional bytes pubKey = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPubkey()`\n * @return {!Uint8Array}\n */\nTronWebProto.Witness.prototype.getPubkey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPubkey()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Witness} returns this\n */\nTronWebProto.Witness.prototype.setPubkey = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional string url = 4;\n * @return {string}\n */\nTronWebProto.Witness.prototype.getUrl = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!TronWebProto.Witness} returns this\n */\nTronWebProto.Witness.prototype.setUrl = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional int64 totalProduced = 5;\n * @return {number}\n */\nTronWebProto.Witness.prototype.getTotalproduced = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Witness} returns this\n */\nTronWebProto.Witness.prototype.setTotalproduced = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional int64 totalMissed = 6;\n * @return {number}\n */\nTronWebProto.Witness.prototype.getTotalmissed = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Witness} returns this\n */\nTronWebProto.Witness.prototype.setTotalmissed = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * optional int64 latestBlockNum = 7;\n * @return {number}\n */\nTronWebProto.Witness.prototype.getLatestblocknum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Witness} returns this\n */\nTronWebProto.Witness.prototype.setLatestblocknum = function(value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n/**\n * optional int64 latestSlotNum = 8;\n * @return {number}\n */\nTronWebProto.Witness.prototype.getLatestslotnum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Witness} returns this\n */\nTronWebProto.Witness.prototype.setLatestslotnum = function(value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * optional bool isJobs = 9;\n * @return {boolean}\n */\nTronWebProto.Witness.prototype.getIsjobs = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.Witness} returns this\n */\nTronWebProto.Witness.prototype.setIsjobs = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 9, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.Votes.repeatedFields_ = [2,3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Votes.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Votes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Votes} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Votes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: msg.getAddress_asB64(),\n    oldVotesList: jspb.Message.toObjectList(msg.getOldVotesList(),\n    TronWebProto.Vote.toObject, includeInstance),\n    newVotesList: jspb.Message.toObjectList(msg.getNewVotesList(),\n    TronWebProto.Vote.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Votes}\n */\nTronWebProto.Votes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Votes;\n  return TronWebProto.Votes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Votes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Votes}\n */\nTronWebProto.Votes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = new TronWebProto.Vote;\n      reader.readMessage(value,TronWebProto.Vote.deserializeBinaryFromReader);\n      msg.addOldVotes(value);\n      break;\n    case 3:\n      var value = new TronWebProto.Vote;\n      reader.readMessage(value,TronWebProto.Vote.deserializeBinaryFromReader);\n      msg.addNewVotes(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Votes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Votes.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Votes} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Votes.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getOldVotesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      TronWebProto.Vote.serializeBinaryToWriter\n    );\n  }\n  f = message.getNewVotesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      TronWebProto.Vote.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bytes address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Votes.prototype.getAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes address = 1;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nTronWebProto.Votes.prototype.getAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddress()));\n};\n\n\n/**\n * optional bytes address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.Votes.prototype.getAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Votes} returns this\n */\nTronWebProto.Votes.prototype.setAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * repeated Vote old_votes = 2;\n * @return {!Array<!TronWebProto.Vote>}\n */\nTronWebProto.Votes.prototype.getOldVotesList = function() {\n  return /** @type{!Array<!TronWebProto.Vote>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.Vote, 2));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.Vote>} value\n * @return {!TronWebProto.Votes} returns this\n*/\nTronWebProto.Votes.prototype.setOldVotesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!TronWebProto.Vote=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.Vote}\n */\nTronWebProto.Votes.prototype.addOldVotes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, TronWebProto.Vote, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Votes} returns this\n */\nTronWebProto.Votes.prototype.clearOldVotesList = function() {\n  return this.setOldVotesList([]);\n};\n\n\n/**\n * repeated Vote new_votes = 3;\n * @return {!Array<!TronWebProto.Vote>}\n */\nTronWebProto.Votes.prototype.getNewVotesList = function() {\n  return /** @type{!Array<!TronWebProto.Vote>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.Vote, 3));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.Vote>} value\n * @return {!TronWebProto.Votes} returns this\n*/\nTronWebProto.Votes.prototype.setNewVotesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!TronWebProto.Vote=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.Vote}\n */\nTronWebProto.Votes.prototype.addNewVotes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, TronWebProto.Vote, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Votes} returns this\n */\nTronWebProto.Votes.prototype.clearNewVotesList = function() {\n  return this.setNewVotesList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.MarketOrderDetail.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.MarketOrderDetail.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.MarketOrderDetail} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.MarketOrderDetail.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    makerorderid: msg.getMakerorderid_asB64(),\n    takerorderid: msg.getTakerorderid_asB64(),\n    fillsellquantity: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    fillbuyquantity: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.MarketOrderDetail}\n */\nTronWebProto.MarketOrderDetail.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.MarketOrderDetail;\n  return TronWebProto.MarketOrderDetail.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.MarketOrderDetail} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.MarketOrderDetail}\n */\nTronWebProto.MarketOrderDetail.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setMakerorderid(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTakerorderid(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFillsellquantity(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFillbuyquantity(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.MarketOrderDetail.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.MarketOrderDetail.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.MarketOrderDetail} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.MarketOrderDetail.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMakerorderid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getTakerorderid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getFillsellquantity();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getFillbuyquantity();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes makerOrderId = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.MarketOrderDetail.prototype.getMakerorderid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes makerOrderId = 1;\n * This is a type-conversion wrapper around `getMakerorderid()`\n * @return {string}\n */\nTronWebProto.MarketOrderDetail.prototype.getMakerorderid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getMakerorderid()));\n};\n\n\n/**\n * optional bytes makerOrderId = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMakerorderid()`\n * @return {!Uint8Array}\n */\nTronWebProto.MarketOrderDetail.prototype.getMakerorderid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getMakerorderid()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.MarketOrderDetail} returns this\n */\nTronWebProto.MarketOrderDetail.prototype.setMakerorderid = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes takerOrderId = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.MarketOrderDetail.prototype.getTakerorderid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes takerOrderId = 2;\n * This is a type-conversion wrapper around `getTakerorderid()`\n * @return {string}\n */\nTronWebProto.MarketOrderDetail.prototype.getTakerorderid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTakerorderid()));\n};\n\n\n/**\n * optional bytes takerOrderId = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTakerorderid()`\n * @return {!Uint8Array}\n */\nTronWebProto.MarketOrderDetail.prototype.getTakerorderid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTakerorderid()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.MarketOrderDetail} returns this\n */\nTronWebProto.MarketOrderDetail.prototype.setTakerorderid = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional int64 fillSellQuantity = 3;\n * @return {number}\n */\nTronWebProto.MarketOrderDetail.prototype.getFillsellquantity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.MarketOrderDetail} returns this\n */\nTronWebProto.MarketOrderDetail.prototype.setFillsellquantity = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int64 fillBuyQuantity = 4;\n * @return {number}\n */\nTronWebProto.MarketOrderDetail.prototype.getFillbuyquantity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.MarketOrderDetail} returns this\n */\nTronWebProto.MarketOrderDetail.prototype.setFillbuyquantity = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.Transaction.repeatedFields_ = [2,5];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Transaction.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Transaction.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Transaction} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Transaction.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    rawData: (f = msg.getRawData()) && TronWebProto.Transaction.raw.toObject(includeInstance, f),\n    signatureList: msg.getSignatureList_asB64(),\n    retList: jspb.Message.toObjectList(msg.getRetList(),\n    TronWebProto.Transaction.Result.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Transaction}\n */\nTronWebProto.Transaction.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Transaction;\n  return TronWebProto.Transaction.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Transaction} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Transaction}\n */\nTronWebProto.Transaction.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new TronWebProto.Transaction.raw;\n      reader.readMessage(value,TronWebProto.Transaction.raw.deserializeBinaryFromReader);\n      msg.setRawData(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addSignature(value);\n      break;\n    case 5:\n      var value = new TronWebProto.Transaction.Result;\n      reader.readMessage(value,TronWebProto.Transaction.Result.deserializeBinaryFromReader);\n      msg.addRet(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Transaction.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Transaction} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Transaction.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRawData();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      TronWebProto.Transaction.raw.serializeBinaryToWriter\n    );\n  }\n  f = message.getSignatureList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      2,\n      f\n    );\n  }\n  f = message.getRetList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      5,\n      f,\n      TronWebProto.Transaction.Result.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Transaction.Contract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Transaction.Contract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Transaction.Contract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Transaction.Contract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    type: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    parameter: (f = msg.getParameter()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),\n    provider: msg.getProvider_asB64(),\n    contractname: msg.getContractname_asB64(),\n    permissionId: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Transaction.Contract}\n */\nTronWebProto.Transaction.Contract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Transaction.Contract;\n  return TronWebProto.Transaction.Contract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Transaction.Contract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Transaction.Contract}\n */\nTronWebProto.Transaction.Contract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!TronWebProto.Transaction.Contract.ContractType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    case 2:\n      var value = new google_protobuf_any_pb.Any;\n      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);\n      msg.setParameter(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setProvider(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setContractname(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPermissionId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.Contract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Transaction.Contract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Transaction.Contract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Transaction.Contract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getParameter();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      google_protobuf_any_pb.Any.serializeBinaryToWriter\n    );\n  }\n  f = message.getProvider_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getContractname_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getPermissionId();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nTronWebProto.Transaction.Contract.ContractType = {\n  ACCOUNTCREATECONTRACT: 0,\n  TRANSFERCONTRACT: 1,\n  TRANSFERASSETCONTRACT: 2,\n  VOTEASSETCONTRACT: 3,\n  VOTEWITNESSCONTRACT: 4,\n  WITNESSCREATECONTRACT: 5,\n  ASSETISSUECONTRACT: 6,\n  WITNESSUPDATECONTRACT: 8,\n  PARTICIPATEASSETISSUECONTRACT: 9,\n  ACCOUNTUPDATECONTRACT: 10,\n  FREEZEBALANCECONTRACT: 11,\n  UNFREEZEBALANCECONTRACT: 12,\n  WITHDRAWBALANCECONTRACT: 13,\n  UNFREEZEASSETCONTRACT: 14,\n  UPDATEASSETCONTRACT: 15,\n  PROPOSALCREATECONTRACT: 16,\n  PROPOSALAPPROVECONTRACT: 17,\n  PROPOSALDELETECONTRACT: 18,\n  SETACCOUNTIDCONTRACT: 19,\n  CUSTOMCONTRACT: 20,\n  CREATESMARTCONTRACT: 30,\n  TRIGGERSMARTCONTRACT: 31,\n  GETCONTRACT: 32,\n  UPDATESETTINGCONTRACT: 33,\n  EXCHANGECREATECONTRACT: 41,\n  EXCHANGEINJECTCONTRACT: 42,\n  EXCHANGEWITHDRAWCONTRACT: 43,\n  EXCHANGETRANSACTIONCONTRACT: 44,\n  UPDATEENERGYLIMITCONTRACT: 45,\n  ACCOUNTPERMISSIONUPDATECONTRACT: 46,\n  CLEARABICONTRACT: 48,\n  UPDATEBROKERAGECONTRACT: 49,\n  SHIELDEDTRANSFERCONTRACT: 51,\n  MARKETSELLASSETCONTRACT: 52,\n  MARKETCANCELORDERCONTRACT: 53,\n  FREEZEBALANCEV2CONTRACT: 54,\n  UNFREEZEBALANCEV2CONTRACT: 55,\n  WITHDRAWEXPIREUNFREEZECONTRACT: 56,\n  DELEGATERESOURCECONTRACT: 57,\n  UNDELEGATERESOURCECONTRACT: 58,\n  CANCELALLUNFREEZEV2CONTRACT: 59\n};\n\n/**\n * optional ContractType type = 1;\n * @return {!TronWebProto.Transaction.Contract.ContractType}\n */\nTronWebProto.Transaction.Contract.prototype.getType = function() {\n  return /** @type {!TronWebProto.Transaction.Contract.ContractType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {!TronWebProto.Transaction.Contract.ContractType} value\n * @return {!TronWebProto.Transaction.Contract} returns this\n */\nTronWebProto.Transaction.Contract.prototype.setType = function(value) {\n  return jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * optional google.protobuf.Any parameter = 2;\n * @return {?TronWebProto.Any}\n */\nTronWebProto.Transaction.Contract.prototype.getParameter = function() {\n  return /** @type{?TronWebProto.Any} */ (\n    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 2));\n};\n\n\n/**\n * @param {?TronWebProto.Any|undefined} value\n * @return {!TronWebProto.Transaction.Contract} returns this\n*/\nTronWebProto.Transaction.Contract.prototype.setParameter = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.Transaction.Contract} returns this\n */\nTronWebProto.Transaction.Contract.prototype.clearParameter = function() {\n  return this.setParameter(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.Transaction.Contract.prototype.hasParameter = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bytes provider = 3;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Transaction.Contract.prototype.getProvider = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes provider = 3;\n * This is a type-conversion wrapper around `getProvider()`\n * @return {string}\n */\nTronWebProto.Transaction.Contract.prototype.getProvider_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getProvider()));\n};\n\n\n/**\n * optional bytes provider = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getProvider()`\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.Contract.prototype.getProvider_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getProvider()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Transaction.Contract} returns this\n */\nTronWebProto.Transaction.Contract.prototype.setProvider = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional bytes ContractName = 4;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Transaction.Contract.prototype.getContractname = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes ContractName = 4;\n * This is a type-conversion wrapper around `getContractname()`\n * @return {string}\n */\nTronWebProto.Transaction.Contract.prototype.getContractname_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getContractname()));\n};\n\n\n/**\n * optional bytes ContractName = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getContractname()`\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.Contract.prototype.getContractname_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getContractname()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Transaction.Contract} returns this\n */\nTronWebProto.Transaction.Contract.prototype.setContractname = function(value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n/**\n * optional int32 Permission_id = 5;\n * @return {number}\n */\nTronWebProto.Transaction.Contract.prototype.getPermissionId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.Contract} returns this\n */\nTronWebProto.Transaction.Contract.prototype.setPermissionId = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.Transaction.Result.repeatedFields_ = [26];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Transaction.Result.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Transaction.Result.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Transaction.Result} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Transaction.Result.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    fee: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    ret: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    contractret: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    assetissueid: jspb.Message.getFieldWithDefault(msg, 14, \"\"),\n    withdrawAmount: jspb.Message.getFieldWithDefault(msg, 15, 0),\n    unfreezeAmount: jspb.Message.getFieldWithDefault(msg, 16, 0),\n    exchangeReceivedAmount: jspb.Message.getFieldWithDefault(msg, 18, 0),\n    exchangeInjectAnotherAmount: jspb.Message.getFieldWithDefault(msg, 19, 0),\n    exchangeWithdrawAnotherAmount: jspb.Message.getFieldWithDefault(msg, 20, 0),\n    exchangeId: jspb.Message.getFieldWithDefault(msg, 21, 0),\n    shieldedTransactionFee: jspb.Message.getFieldWithDefault(msg, 22, 0),\n    orderid: msg.getOrderid_asB64(),\n    orderdetailsList: jspb.Message.toObjectList(msg.getOrderdetailsList(),\n    TronWebProto.MarketOrderDetail.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Transaction.Result}\n */\nTronWebProto.Transaction.Result.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Transaction.Result;\n  return TronWebProto.Transaction.Result.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Transaction.Result} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Transaction.Result}\n */\nTronWebProto.Transaction.Result.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFee(value);\n      break;\n    case 2:\n      var value = /** @type {!TronWebProto.Transaction.Result.code} */ (reader.readEnum());\n      msg.setRet(value);\n      break;\n    case 3:\n      var value = /** @type {!TronWebProto.Transaction.Result.contractResult} */ (reader.readEnum());\n      msg.setContractret(value);\n      break;\n    case 14:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAssetissueid(value);\n      break;\n    case 15:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setWithdrawAmount(value);\n      break;\n    case 16:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setUnfreezeAmount(value);\n      break;\n    case 18:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExchangeReceivedAmount(value);\n      break;\n    case 19:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExchangeInjectAnotherAmount(value);\n      break;\n    case 20:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExchangeWithdrawAnotherAmount(value);\n      break;\n    case 21:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExchangeId(value);\n      break;\n    case 22:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setShieldedTransactionFee(value);\n      break;\n    case 25:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOrderid(value);\n      break;\n    case 26:\n      var value = new TronWebProto.MarketOrderDetail;\n      reader.readMessage(value,TronWebProto.MarketOrderDetail.deserializeBinaryFromReader);\n      msg.addOrderdetails(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.Result.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Transaction.Result.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Transaction.Result} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Transaction.Result.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFee();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getRet();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      2,\n      f\n    );\n  }\n  f = message.getContractret();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      3,\n      f\n    );\n  }\n  f = message.getAssetissueid();\n  if (f.length > 0) {\n    writer.writeString(\n      14,\n      f\n    );\n  }\n  f = message.getWithdrawAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      15,\n      f\n    );\n  }\n  f = message.getUnfreezeAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      16,\n      f\n    );\n  }\n  f = message.getExchangeReceivedAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      18,\n      f\n    );\n  }\n  f = message.getExchangeInjectAnotherAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      19,\n      f\n    );\n  }\n  f = message.getExchangeWithdrawAnotherAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      20,\n      f\n    );\n  }\n  f = message.getExchangeId();\n  if (f !== 0) {\n    writer.writeInt64(\n      21,\n      f\n    );\n  }\n  f = message.getShieldedTransactionFee();\n  if (f !== 0) {\n    writer.writeInt64(\n      22,\n      f\n    );\n  }\n  f = message.getOrderid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      25,\n      f\n    );\n  }\n  f = message.getOrderdetailsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      26,\n      f,\n      TronWebProto.MarketOrderDetail.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nTronWebProto.Transaction.Result.code = {\n  SUCESS: 0,\n  FAILED: 1\n};\n\n/**\n * @enum {number}\n */\nTronWebProto.Transaction.Result.contractResult = {\n  DEFAULT: 0,\n  SUCCESS: 1,\n  REVERT: 2,\n  BAD_JUMP_DESTINATION: 3,\n  OUT_OF_MEMORY: 4,\n  PRECOMPILED_CONTRACT: 5,\n  STACK_TOO_SMALL: 6,\n  STACK_TOO_LARGE: 7,\n  ILLEGAL_OPERATION: 8,\n  STACK_OVERFLOW: 9,\n  OUT_OF_ENERGY: 10,\n  OUT_OF_TIME: 11,\n  JVM_STACK_OVER_FLOW: 12,\n  UNKNOWN: 13,\n  TRANSFER_FAILED: 14,\n  INVALID_CODE: 15\n};\n\n/**\n * optional int64 fee = 1;\n * @return {number}\n */\nTronWebProto.Transaction.Result.prototype.getFee = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setFee = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional code ret = 2;\n * @return {!TronWebProto.Transaction.Result.code}\n */\nTronWebProto.Transaction.Result.prototype.getRet = function() {\n  return /** @type {!TronWebProto.Transaction.Result.code} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {!TronWebProto.Transaction.Result.code} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setRet = function(value) {\n  return jspb.Message.setProto3EnumField(this, 2, value);\n};\n\n\n/**\n * optional contractResult contractRet = 3;\n * @return {!TronWebProto.Transaction.Result.contractResult}\n */\nTronWebProto.Transaction.Result.prototype.getContractret = function() {\n  return /** @type {!TronWebProto.Transaction.Result.contractResult} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {!TronWebProto.Transaction.Result.contractResult} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setContractret = function(value) {\n  return jspb.Message.setProto3EnumField(this, 3, value);\n};\n\n\n/**\n * optional string assetIssueID = 14;\n * @return {string}\n */\nTronWebProto.Transaction.Result.prototype.getAssetissueid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setAssetissueid = function(value) {\n  return jspb.Message.setProto3StringField(this, 14, value);\n};\n\n\n/**\n * optional int64 withdraw_amount = 15;\n * @return {number}\n */\nTronWebProto.Transaction.Result.prototype.getWithdrawAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setWithdrawAmount = function(value) {\n  return jspb.Message.setProto3IntField(this, 15, value);\n};\n\n\n/**\n * optional int64 unfreeze_amount = 16;\n * @return {number}\n */\nTronWebProto.Transaction.Result.prototype.getUnfreezeAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setUnfreezeAmount = function(value) {\n  return jspb.Message.setProto3IntField(this, 16, value);\n};\n\n\n/**\n * optional int64 exchange_received_amount = 18;\n * @return {number}\n */\nTronWebProto.Transaction.Result.prototype.getExchangeReceivedAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setExchangeReceivedAmount = function(value) {\n  return jspb.Message.setProto3IntField(this, 18, value);\n};\n\n\n/**\n * optional int64 exchange_inject_another_amount = 19;\n * @return {number}\n */\nTronWebProto.Transaction.Result.prototype.getExchangeInjectAnotherAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setExchangeInjectAnotherAmount = function(value) {\n  return jspb.Message.setProto3IntField(this, 19, value);\n};\n\n\n/**\n * optional int64 exchange_withdraw_another_amount = 20;\n * @return {number}\n */\nTronWebProto.Transaction.Result.prototype.getExchangeWithdrawAnotherAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setExchangeWithdrawAnotherAmount = function(value) {\n  return jspb.Message.setProto3IntField(this, 20, value);\n};\n\n\n/**\n * optional int64 exchange_id = 21;\n * @return {number}\n */\nTronWebProto.Transaction.Result.prototype.getExchangeId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setExchangeId = function(value) {\n  return jspb.Message.setProto3IntField(this, 21, value);\n};\n\n\n/**\n * optional int64 shielded_transaction_fee = 22;\n * @return {number}\n */\nTronWebProto.Transaction.Result.prototype.getShieldedTransactionFee = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setShieldedTransactionFee = function(value) {\n  return jspb.Message.setProto3IntField(this, 22, value);\n};\n\n\n/**\n * optional bytes orderId = 25;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Transaction.Result.prototype.getOrderid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 25, \"\"));\n};\n\n\n/**\n * optional bytes orderId = 25;\n * This is a type-conversion wrapper around `getOrderid()`\n * @return {string}\n */\nTronWebProto.Transaction.Result.prototype.getOrderid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOrderid()));\n};\n\n\n/**\n * optional bytes orderId = 25;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOrderid()`\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.Result.prototype.getOrderid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOrderid()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setOrderid = function(value) {\n  return jspb.Message.setProto3BytesField(this, 25, value);\n};\n\n\n/**\n * repeated MarketOrderDetail orderDetails = 26;\n * @return {!Array<!TronWebProto.MarketOrderDetail>}\n */\nTronWebProto.Transaction.Result.prototype.getOrderdetailsList = function() {\n  return /** @type{!Array<!TronWebProto.MarketOrderDetail>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.MarketOrderDetail, 26));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.MarketOrderDetail>} value\n * @return {!TronWebProto.Transaction.Result} returns this\n*/\nTronWebProto.Transaction.Result.prototype.setOrderdetailsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 26, value);\n};\n\n\n/**\n * @param {!TronWebProto.MarketOrderDetail=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.MarketOrderDetail}\n */\nTronWebProto.Transaction.Result.prototype.addOrderdetails = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 26, opt_value, TronWebProto.MarketOrderDetail, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.clearOrderdetailsList = function() {\n  return this.setOrderdetailsList([]);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.Transaction.raw.repeatedFields_ = [9,11];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Transaction.raw.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Transaction.raw.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Transaction.raw} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Transaction.raw.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    refBlockBytes: msg.getRefBlockBytes_asB64(),\n    refBlockNum: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    refBlockHash: msg.getRefBlockHash_asB64(),\n    expiration: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    authsList: jspb.Message.toObjectList(msg.getAuthsList(),\n    TronWebProto.authority.toObject, includeInstance),\n    data: msg.getData_asB64(),\n    contractList: jspb.Message.toObjectList(msg.getContractList(),\n    TronWebProto.Transaction.Contract.toObject, includeInstance),\n    scripts: msg.getScripts_asB64(),\n    timestamp: jspb.Message.getFieldWithDefault(msg, 14, 0),\n    feeLimit: jspb.Message.getFieldWithDefault(msg, 18, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Transaction.raw}\n */\nTronWebProto.Transaction.raw.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Transaction.raw;\n  return TronWebProto.Transaction.raw.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Transaction.raw} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Transaction.raw}\n */\nTronWebProto.Transaction.raw.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRefBlockBytes(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRefBlockNum(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRefBlockHash(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpiration(value);\n      break;\n    case 9:\n      var value = new TronWebProto.authority;\n      reader.readMessage(value,TronWebProto.authority.deserializeBinaryFromReader);\n      msg.addAuths(value);\n      break;\n    case 10:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setData(value);\n      break;\n    case 11:\n      var value = new TronWebProto.Transaction.Contract;\n      reader.readMessage(value,TronWebProto.Transaction.Contract.deserializeBinaryFromReader);\n      msg.addContract(value);\n      break;\n    case 12:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setScripts(value);\n      break;\n    case 14:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTimestamp(value);\n      break;\n    case 18:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeeLimit(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.raw.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Transaction.raw.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Transaction.raw} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Transaction.raw.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRefBlockBytes_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getRefBlockNum();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getRefBlockHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getExpiration();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getAuthsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      9,\n      f,\n      TronWebProto.authority.serializeBinaryToWriter\n    );\n  }\n  f = message.getData_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      10,\n      f\n    );\n  }\n  f = message.getContractList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      11,\n      f,\n      TronWebProto.Transaction.Contract.serializeBinaryToWriter\n    );\n  }\n  f = message.getScripts_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      12,\n      f\n    );\n  }\n  f = message.getTimestamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      14,\n      f\n    );\n  }\n  f = message.getFeeLimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      18,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes ref_block_bytes = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Transaction.raw.prototype.getRefBlockBytes = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes ref_block_bytes = 1;\n * This is a type-conversion wrapper around `getRefBlockBytes()`\n * @return {string}\n */\nTronWebProto.Transaction.raw.prototype.getRefBlockBytes_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRefBlockBytes()));\n};\n\n\n/**\n * optional bytes ref_block_bytes = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRefBlockBytes()`\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.raw.prototype.getRefBlockBytes_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRefBlockBytes()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Transaction.raw} returns this\n */\nTronWebProto.Transaction.raw.prototype.setRefBlockBytes = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 ref_block_num = 3;\n * @return {number}\n */\nTronWebProto.Transaction.raw.prototype.getRefBlockNum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.raw} returns this\n */\nTronWebProto.Transaction.raw.prototype.setRefBlockNum = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional bytes ref_block_hash = 4;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Transaction.raw.prototype.getRefBlockHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes ref_block_hash = 4;\n * This is a type-conversion wrapper around `getRefBlockHash()`\n * @return {string}\n */\nTronWebProto.Transaction.raw.prototype.getRefBlockHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRefBlockHash()));\n};\n\n\n/**\n * optional bytes ref_block_hash = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRefBlockHash()`\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.raw.prototype.getRefBlockHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRefBlockHash()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Transaction.raw} returns this\n */\nTronWebProto.Transaction.raw.prototype.setRefBlockHash = function(value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n/**\n * optional int64 expiration = 8;\n * @return {number}\n */\nTronWebProto.Transaction.raw.prototype.getExpiration = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.raw} returns this\n */\nTronWebProto.Transaction.raw.prototype.setExpiration = function(value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * repeated authority auths = 9;\n * @return {!Array<!TronWebProto.authority>}\n */\nTronWebProto.Transaction.raw.prototype.getAuthsList = function() {\n  return /** @type{!Array<!TronWebProto.authority>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.authority, 9));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.authority>} value\n * @return {!TronWebProto.Transaction.raw} returns this\n*/\nTronWebProto.Transaction.raw.prototype.setAuthsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 9, value);\n};\n\n\n/**\n * @param {!TronWebProto.authority=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.authority}\n */\nTronWebProto.Transaction.raw.prototype.addAuths = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, TronWebProto.authority, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Transaction.raw} returns this\n */\nTronWebProto.Transaction.raw.prototype.clearAuthsList = function() {\n  return this.setAuthsList([]);\n};\n\n\n/**\n * optional bytes data = 10;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Transaction.raw.prototype.getData = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 10, \"\"));\n};\n\n\n/**\n * optional bytes data = 10;\n * This is a type-conversion wrapper around `getData()`\n * @return {string}\n */\nTronWebProto.Transaction.raw.prototype.getData_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getData()));\n};\n\n\n/**\n * optional bytes data = 10;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getData()`\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.raw.prototype.getData_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getData()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Transaction.raw} returns this\n */\nTronWebProto.Transaction.raw.prototype.setData = function(value) {\n  return jspb.Message.setProto3BytesField(this, 10, value);\n};\n\n\n/**\n * repeated Contract contract = 11;\n * @return {!Array<!TronWebProto.Transaction.Contract>}\n */\nTronWebProto.Transaction.raw.prototype.getContractList = function() {\n  return /** @type{!Array<!TronWebProto.Transaction.Contract>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.Transaction.Contract, 11));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.Transaction.Contract>} value\n * @return {!TronWebProto.Transaction.raw} returns this\n*/\nTronWebProto.Transaction.raw.prototype.setContractList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 11, value);\n};\n\n\n/**\n * @param {!TronWebProto.Transaction.Contract=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.Transaction.Contract}\n */\nTronWebProto.Transaction.raw.prototype.addContract = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, TronWebProto.Transaction.Contract, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Transaction.raw} returns this\n */\nTronWebProto.Transaction.raw.prototype.clearContractList = function() {\n  return this.setContractList([]);\n};\n\n\n/**\n * optional bytes scripts = 12;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Transaction.raw.prototype.getScripts = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, \"\"));\n};\n\n\n/**\n * optional bytes scripts = 12;\n * This is a type-conversion wrapper around `getScripts()`\n * @return {string}\n */\nTronWebProto.Transaction.raw.prototype.getScripts_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getScripts()));\n};\n\n\n/**\n * optional bytes scripts = 12;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getScripts()`\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.raw.prototype.getScripts_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getScripts()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Transaction.raw} returns this\n */\nTronWebProto.Transaction.raw.prototype.setScripts = function(value) {\n  return jspb.Message.setProto3BytesField(this, 12, value);\n};\n\n\n/**\n * optional int64 timestamp = 14;\n * @return {number}\n */\nTronWebProto.Transaction.raw.prototype.getTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.raw} returns this\n */\nTronWebProto.Transaction.raw.prototype.setTimestamp = function(value) {\n  return jspb.Message.setProto3IntField(this, 14, value);\n};\n\n\n/**\n * optional int64 fee_limit = 18;\n * @return {number}\n */\nTronWebProto.Transaction.raw.prototype.getFeeLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.raw} returns this\n */\nTronWebProto.Transaction.raw.prototype.setFeeLimit = function(value) {\n  return jspb.Message.setProto3IntField(this, 18, value);\n};\n\n\n/**\n * optional raw raw_data = 1;\n * @return {?TronWebProto.Transaction.raw}\n */\nTronWebProto.Transaction.prototype.getRawData = function() {\n  return /** @type{?TronWebProto.Transaction.raw} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.Transaction.raw, 1));\n};\n\n\n/**\n * @param {?TronWebProto.Transaction.raw|undefined} value\n * @return {!TronWebProto.Transaction} returns this\n*/\nTronWebProto.Transaction.prototype.setRawData = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.Transaction} returns this\n */\nTronWebProto.Transaction.prototype.clearRawData = function() {\n  return this.setRawData(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.Transaction.prototype.hasRawData = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * repeated bytes signature = 2;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\nTronWebProto.Transaction.prototype.getSignatureList = function() {\n  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 2));\n};\n\n\n/**\n * repeated bytes signature = 2;\n * This is a type-conversion wrapper around `getSignatureList()`\n * @return {!Array<string>}\n */\nTronWebProto.Transaction.prototype.getSignatureList_asB64 = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(\n      this.getSignatureList()));\n};\n\n\n/**\n * repeated bytes signature = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignatureList()`\n * @return {!Array<!Uint8Array>}\n */\nTronWebProto.Transaction.prototype.getSignatureList_asU8 = function() {\n  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getSignatureList()));\n};\n\n\n/**\n * @param {!(Array<!Uint8Array>|Array<string>)} value\n * @return {!TronWebProto.Transaction} returns this\n */\nTronWebProto.Transaction.prototype.setSignatureList = function(value) {\n  return jspb.Message.setField(this, 2, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n * @return {!TronWebProto.Transaction} returns this\n */\nTronWebProto.Transaction.prototype.addSignature = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Transaction} returns this\n */\nTronWebProto.Transaction.prototype.clearSignatureList = function() {\n  return this.setSignatureList([]);\n};\n\n\n/**\n * repeated Result ret = 5;\n * @return {!Array<!TronWebProto.Transaction.Result>}\n */\nTronWebProto.Transaction.prototype.getRetList = function() {\n  return /** @type{!Array<!TronWebProto.Transaction.Result>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.Transaction.Result, 5));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.Transaction.Result>} value\n * @return {!TronWebProto.Transaction} returns this\n*/\nTronWebProto.Transaction.prototype.setRetList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n\n\n/**\n * @param {!TronWebProto.Transaction.Result=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.Transaction.Result}\n */\nTronWebProto.Transaction.prototype.addRet = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, TronWebProto.Transaction.Result, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Transaction} returns this\n */\nTronWebProto.Transaction.prototype.clearRetList = function() {\n  return this.setRetList([]);\n};\n\n\n/**\n * @enum {number}\n */\nTronWebProto.AccountType = {\n  NORMAL: 0,\n  ASSETISSUE: 1,\n  CONTRACT: 2\n};\n\ngoog.object.extend(exports, TronWebProto);\n","// source: core/contract/account_contract.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('@tronweb3/google-protobuf');\nvar goog = jspb;\nvar global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof window !== 'undefined' && window) ||\n  (typeof global !== 'undefined' && global) ||\n  (typeof self !== 'undefined' && self) ||\n  (function () { return this; }).call(null) ||\n  Function('return this')();\n\nvar core_Tron_pb = require('../../core/Tron_pb.js');\ngoog.object.extend(proto, core_Tron_pb);\ngoog.exportSymbol('TronWebProto.AccountCreateContract', null, global);\ngoog.exportSymbol('TronWebProto.AccountPermissionUpdateContract', null, global);\ngoog.exportSymbol('TronWebProto.AccountUpdateContract', null, global);\ngoog.exportSymbol('TronWebProto.SetAccountIdContract', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.AccountCreateContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.AccountCreateContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.AccountCreateContract.displayName = 'TronWebProto.AccountCreateContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.AccountUpdateContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.AccountUpdateContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.AccountUpdateContract.displayName = 'TronWebProto.AccountUpdateContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.SetAccountIdContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.SetAccountIdContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.SetAccountIdContract.displayName = 'TronWebProto.SetAccountIdContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.AccountPermissionUpdateContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.AccountPermissionUpdateContract.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.AccountPermissionUpdateContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.AccountPermissionUpdateContract.displayName = 'TronWebProto.AccountPermissionUpdateContract';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.AccountCreateContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.AccountCreateContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.AccountCreateContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountCreateContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    accountAddress: msg.getAccountAddress_asB64(),\n    type: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.AccountCreateContract}\n */\nTronWebProto.AccountCreateContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.AccountCreateContract;\n  return TronWebProto.AccountCreateContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.AccountCreateContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.AccountCreateContract}\n */\nTronWebProto.AccountCreateContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAccountAddress(value);\n      break;\n    case 3:\n      var value = /** @type {!TronWebProto.AccountType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.AccountCreateContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.AccountCreateContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.AccountCreateContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountCreateContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getAccountAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AccountCreateContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.AccountCreateContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.AccountCreateContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AccountCreateContract} returns this\n */\nTronWebProto.AccountCreateContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes account_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AccountCreateContract.prototype.getAccountAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes account_address = 2;\n * This is a type-conversion wrapper around `getAccountAddress()`\n * @return {string}\n */\nTronWebProto.AccountCreateContract.prototype.getAccountAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAccountAddress()));\n};\n\n\n/**\n * optional bytes account_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAccountAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.AccountCreateContract.prototype.getAccountAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAccountAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AccountCreateContract} returns this\n */\nTronWebProto.AccountCreateContract.prototype.setAccountAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional AccountType type = 3;\n * @return {!TronWebProto.AccountType}\n */\nTronWebProto.AccountCreateContract.prototype.getType = function() {\n  return /** @type {!TronWebProto.AccountType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {!TronWebProto.AccountType} value\n * @return {!TronWebProto.AccountCreateContract} returns this\n */\nTronWebProto.AccountCreateContract.prototype.setType = function(value) {\n  return jspb.Message.setProto3EnumField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.AccountUpdateContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.AccountUpdateContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.AccountUpdateContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountUpdateContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    accountName: msg.getAccountName_asB64(),\n    ownerAddress: msg.getOwnerAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.AccountUpdateContract}\n */\nTronWebProto.AccountUpdateContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.AccountUpdateContract;\n  return TronWebProto.AccountUpdateContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.AccountUpdateContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.AccountUpdateContract}\n */\nTronWebProto.AccountUpdateContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAccountName(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.AccountUpdateContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.AccountUpdateContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.AccountUpdateContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountUpdateContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAccountName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes account_name = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AccountUpdateContract.prototype.getAccountName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes account_name = 1;\n * This is a type-conversion wrapper around `getAccountName()`\n * @return {string}\n */\nTronWebProto.AccountUpdateContract.prototype.getAccountName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAccountName()));\n};\n\n\n/**\n * optional bytes account_name = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAccountName()`\n * @return {!Uint8Array}\n */\nTronWebProto.AccountUpdateContract.prototype.getAccountName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAccountName()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AccountUpdateContract} returns this\n */\nTronWebProto.AccountUpdateContract.prototype.setAccountName = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes owner_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AccountUpdateContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 2;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.AccountUpdateContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.AccountUpdateContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AccountUpdateContract} returns this\n */\nTronWebProto.AccountUpdateContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.SetAccountIdContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.SetAccountIdContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.SetAccountIdContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SetAccountIdContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    accountId: msg.getAccountId_asB64(),\n    ownerAddress: msg.getOwnerAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.SetAccountIdContract}\n */\nTronWebProto.SetAccountIdContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.SetAccountIdContract;\n  return TronWebProto.SetAccountIdContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.SetAccountIdContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.SetAccountIdContract}\n */\nTronWebProto.SetAccountIdContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAccountId(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.SetAccountIdContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.SetAccountIdContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.SetAccountIdContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SetAccountIdContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAccountId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes account_id = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.SetAccountIdContract.prototype.getAccountId = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes account_id = 1;\n * This is a type-conversion wrapper around `getAccountId()`\n * @return {string}\n */\nTronWebProto.SetAccountIdContract.prototype.getAccountId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAccountId()));\n};\n\n\n/**\n * optional bytes account_id = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAccountId()`\n * @return {!Uint8Array}\n */\nTronWebProto.SetAccountIdContract.prototype.getAccountId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAccountId()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.SetAccountIdContract} returns this\n */\nTronWebProto.SetAccountIdContract.prototype.setAccountId = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes owner_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.SetAccountIdContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 2;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.SetAccountIdContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.SetAccountIdContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.SetAccountIdContract} returns this\n */\nTronWebProto.SetAccountIdContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.AccountPermissionUpdateContract.repeatedFields_ = [4];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.AccountPermissionUpdateContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.AccountPermissionUpdateContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountPermissionUpdateContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    owner: (f = msg.getOwner()) && core_Tron_pb.Permission.toObject(includeInstance, f),\n    witness: (f = msg.getWitness()) && core_Tron_pb.Permission.toObject(includeInstance, f),\n    activesList: jspb.Message.toObjectList(msg.getActivesList(),\n    core_Tron_pb.Permission.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.AccountPermissionUpdateContract}\n */\nTronWebProto.AccountPermissionUpdateContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.AccountPermissionUpdateContract;\n  return TronWebProto.AccountPermissionUpdateContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.AccountPermissionUpdateContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.AccountPermissionUpdateContract}\n */\nTronWebProto.AccountPermissionUpdateContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = new core_Tron_pb.Permission;\n      reader.readMessage(value,core_Tron_pb.Permission.deserializeBinaryFromReader);\n      msg.setOwner(value);\n      break;\n    case 3:\n      var value = new core_Tron_pb.Permission;\n      reader.readMessage(value,core_Tron_pb.Permission.deserializeBinaryFromReader);\n      msg.setWitness(value);\n      break;\n    case 4:\n      var value = new core_Tron_pb.Permission;\n      reader.readMessage(value,core_Tron_pb.Permission.deserializeBinaryFromReader);\n      msg.addActives(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.AccountPermissionUpdateContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.AccountPermissionUpdateContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountPermissionUpdateContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getOwner();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      core_Tron_pb.Permission.serializeBinaryToWriter\n    );\n  }\n  f = message.getWitness();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      core_Tron_pb.Permission.serializeBinaryToWriter\n    );\n  }\n  f = message.getActivesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      core_Tron_pb.Permission.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AccountPermissionUpdateContract} returns this\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional Permission owner = 2;\n * @return {?TronWebProto.Permission}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.getOwner = function() {\n  return /** @type{?TronWebProto.Permission} */ (\n    jspb.Message.getWrapperField(this, core_Tron_pb.Permission, 2));\n};\n\n\n/**\n * @param {?TronWebProto.Permission|undefined} value\n * @return {!TronWebProto.AccountPermissionUpdateContract} returns this\n*/\nTronWebProto.AccountPermissionUpdateContract.prototype.setOwner = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.AccountPermissionUpdateContract} returns this\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.clearOwner = function() {\n  return this.setOwner(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.hasOwner = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional Permission witness = 3;\n * @return {?TronWebProto.Permission}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.getWitness = function() {\n  return /** @type{?TronWebProto.Permission} */ (\n    jspb.Message.getWrapperField(this, core_Tron_pb.Permission, 3));\n};\n\n\n/**\n * @param {?TronWebProto.Permission|undefined} value\n * @return {!TronWebProto.AccountPermissionUpdateContract} returns this\n*/\nTronWebProto.AccountPermissionUpdateContract.prototype.setWitness = function(value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.AccountPermissionUpdateContract} returns this\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.clearWitness = function() {\n  return this.setWitness(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.hasWitness = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * repeated Permission actives = 4;\n * @return {!Array<!TronWebProto.Permission>}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.getActivesList = function() {\n  return /** @type{!Array<!TronWebProto.Permission>} */ (\n    jspb.Message.getRepeatedWrapperField(this, core_Tron_pb.Permission, 4));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.Permission>} value\n * @return {!TronWebProto.AccountPermissionUpdateContract} returns this\n*/\nTronWebProto.AccountPermissionUpdateContract.prototype.setActivesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!TronWebProto.Permission=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.Permission}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.addActives = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, TronWebProto.Permission, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.AccountPermissionUpdateContract} returns this\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.clearActivesList = function() {\n  return this.setActivesList([]);\n};\n\n\ngoog.object.extend(exports, TronWebProto);\n","// source: core/contract/asset_issue_contract.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('@tronweb3/google-protobuf');\nvar goog = jspb;\nvar global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof window !== 'undefined' && window) ||\n  (typeof global !== 'undefined' && global) ||\n  (typeof self !== 'undefined' && self) ||\n  (function () { return this; }).call(null) ||\n  Function('return this')();\n\ngoog.exportSymbol('TronWebProto.AssetIssueContract', null, global);\ngoog.exportSymbol('TronWebProto.AssetIssueContract.FrozenSupply', null, global);\ngoog.exportSymbol('TronWebProto.ParticipateAssetIssueContract', null, global);\ngoog.exportSymbol('TronWebProto.TransferAssetContract', null, global);\ngoog.exportSymbol('TronWebProto.UnfreezeAssetContract', null, global);\ngoog.exportSymbol('TronWebProto.UpdateAssetContract', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.AssetIssueContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.AssetIssueContract.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.AssetIssueContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.AssetIssueContract.displayName = 'TronWebProto.AssetIssueContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.AssetIssueContract.FrozenSupply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.AssetIssueContract.FrozenSupply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.AssetIssueContract.FrozenSupply.displayName = 'TronWebProto.AssetIssueContract.FrozenSupply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.TransferAssetContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.TransferAssetContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.TransferAssetContract.displayName = 'TronWebProto.TransferAssetContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.UnfreezeAssetContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.UnfreezeAssetContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.UnfreezeAssetContract.displayName = 'TronWebProto.UnfreezeAssetContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.UpdateAssetContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.UpdateAssetContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.UpdateAssetContract.displayName = 'TronWebProto.UpdateAssetContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.ParticipateAssetIssueContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.ParticipateAssetIssueContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.ParticipateAssetIssueContract.displayName = 'TronWebProto.ParticipateAssetIssueContract';\n}\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.AssetIssueContract.repeatedFields_ = [5];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.AssetIssueContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.AssetIssueContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.AssetIssueContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AssetIssueContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 41, \"\"),\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    name: msg.getName_asB64(),\n    abbr: msg.getAbbr_asB64(),\n    totalSupply: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    frozenSupplyList: jspb.Message.toObjectList(msg.getFrozenSupplyList(),\n    TronWebProto.AssetIssueContract.FrozenSupply.toObject, includeInstance),\n    trxNum: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    precision: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    num: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    startTime: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    endTime: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    order: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    voteScore: jspb.Message.getFieldWithDefault(msg, 16, 0),\n    description: msg.getDescription_asB64(),\n    url: msg.getUrl_asB64(),\n    freeAssetNetLimit: jspb.Message.getFieldWithDefault(msg, 22, 0),\n    publicFreeAssetNetLimit: jspb.Message.getFieldWithDefault(msg, 23, 0),\n    publicFreeAssetNetUsage: jspb.Message.getFieldWithDefault(msg, 24, 0),\n    publicLatestFreeNetTime: jspb.Message.getFieldWithDefault(msg, 25, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.AssetIssueContract}\n */\nTronWebProto.AssetIssueContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.AssetIssueContract;\n  return TronWebProto.AssetIssueContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.AssetIssueContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.AssetIssueContract}\n */\nTronWebProto.AssetIssueContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 41:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setName(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAbbr(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalSupply(value);\n      break;\n    case 5:\n      var value = new TronWebProto.AssetIssueContract.FrozenSupply;\n      reader.readMessage(value,TronWebProto.AssetIssueContract.FrozenSupply.deserializeBinaryFromReader);\n      msg.addFrozenSupply(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTrxNum(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPrecision(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setNum(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setStartTime(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setEndTime(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setOrder(value);\n      break;\n    case 16:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setVoteScore(value);\n      break;\n    case 20:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDescription(value);\n      break;\n    case 21:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setUrl(value);\n      break;\n    case 22:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFreeAssetNetLimit(value);\n      break;\n    case 23:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPublicFreeAssetNetLimit(value);\n      break;\n    case 24:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPublicFreeAssetNetUsage(value);\n      break;\n    case 25:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPublicLatestFreeNetTime(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.AssetIssueContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.AssetIssueContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.AssetIssueContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AssetIssueContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      41,\n      f\n    );\n  }\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getAbbr_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getTotalSupply();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getFrozenSupplyList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      5,\n      f,\n      TronWebProto.AssetIssueContract.FrozenSupply.serializeBinaryToWriter\n    );\n  }\n  f = message.getTrxNum();\n  if (f !== 0) {\n    writer.writeInt32(\n      6,\n      f\n    );\n  }\n  f = message.getPrecision();\n  if (f !== 0) {\n    writer.writeInt32(\n      7,\n      f\n    );\n  }\n  f = message.getNum();\n  if (f !== 0) {\n    writer.writeInt32(\n      8,\n      f\n    );\n  }\n  f = message.getStartTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n  f = message.getEndTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      10,\n      f\n    );\n  }\n  f = message.getOrder();\n  if (f !== 0) {\n    writer.writeInt64(\n      11,\n      f\n    );\n  }\n  f = message.getVoteScore();\n  if (f !== 0) {\n    writer.writeInt32(\n      16,\n      f\n    );\n  }\n  f = message.getDescription_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      20,\n      f\n    );\n  }\n  f = message.getUrl_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      21,\n      f\n    );\n  }\n  f = message.getFreeAssetNetLimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      22,\n      f\n    );\n  }\n  f = message.getPublicFreeAssetNetLimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      23,\n      f\n    );\n  }\n  f = message.getPublicFreeAssetNetUsage();\n  if (f !== 0) {\n    writer.writeInt64(\n      24,\n      f\n    );\n  }\n  f = message.getPublicLatestFreeNetTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      25,\n      f\n    );\n  }\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.AssetIssueContract.FrozenSupply.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.AssetIssueContract.FrozenSupply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.AssetIssueContract.FrozenSupply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AssetIssueContract.FrozenSupply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    frozenAmount: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    frozenDays: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.AssetIssueContract.FrozenSupply}\n */\nTronWebProto.AssetIssueContract.FrozenSupply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.AssetIssueContract.FrozenSupply;\n  return TronWebProto.AssetIssueContract.FrozenSupply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.AssetIssueContract.FrozenSupply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.AssetIssueContract.FrozenSupply}\n */\nTronWebProto.AssetIssueContract.FrozenSupply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFrozenAmount(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFrozenDays(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.AssetIssueContract.FrozenSupply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.AssetIssueContract.FrozenSupply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.AssetIssueContract.FrozenSupply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AssetIssueContract.FrozenSupply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFrozenAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getFrozenDays();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 frozen_amount = 1;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.FrozenSupply.prototype.getFrozenAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract.FrozenSupply} returns this\n */\nTronWebProto.AssetIssueContract.FrozenSupply.prototype.setFrozenAmount = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int64 frozen_days = 2;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.FrozenSupply.prototype.getFrozenDays = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract.FrozenSupply} returns this\n */\nTronWebProto.AssetIssueContract.FrozenSupply.prototype.setFrozenDays = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional string id = 41;\n * @return {string}\n */\nTronWebProto.AssetIssueContract.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 41, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 41, value);\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AssetIssueContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.AssetIssueContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.AssetIssueContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes name = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AssetIssueContract.prototype.getName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes name = 2;\n * This is a type-conversion wrapper around `getName()`\n * @return {string}\n */\nTronWebProto.AssetIssueContract.prototype.getName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getName()));\n};\n\n\n/**\n * optional bytes name = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getName()`\n * @return {!Uint8Array}\n */\nTronWebProto.AssetIssueContract.prototype.getName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getName()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setName = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional bytes abbr = 3;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AssetIssueContract.prototype.getAbbr = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes abbr = 3;\n * This is a type-conversion wrapper around `getAbbr()`\n * @return {string}\n */\nTronWebProto.AssetIssueContract.prototype.getAbbr_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAbbr()));\n};\n\n\n/**\n * optional bytes abbr = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAbbr()`\n * @return {!Uint8Array}\n */\nTronWebProto.AssetIssueContract.prototype.getAbbr_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAbbr()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setAbbr = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional int64 total_supply = 4;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getTotalSupply = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setTotalSupply = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * repeated FrozenSupply frozen_supply = 5;\n * @return {!Array<!TronWebProto.AssetIssueContract.FrozenSupply>}\n */\nTronWebProto.AssetIssueContract.prototype.getFrozenSupplyList = function() {\n  return /** @type{!Array<!TronWebProto.AssetIssueContract.FrozenSupply>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.AssetIssueContract.FrozenSupply, 5));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.AssetIssueContract.FrozenSupply>} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n*/\nTronWebProto.AssetIssueContract.prototype.setFrozenSupplyList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n\n\n/**\n * @param {!TronWebProto.AssetIssueContract.FrozenSupply=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.AssetIssueContract.FrozenSupply}\n */\nTronWebProto.AssetIssueContract.prototype.addFrozenSupply = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, TronWebProto.AssetIssueContract.FrozenSupply, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.clearFrozenSupplyList = function() {\n  return this.setFrozenSupplyList([]);\n};\n\n\n/**\n * optional int32 trx_num = 6;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getTrxNum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setTrxNum = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * optional int32 precision = 7;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getPrecision = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setPrecision = function(value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n/**\n * optional int32 num = 8;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getNum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setNum = function(value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * optional int64 start_time = 9;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getStartTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setStartTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 9, value);\n};\n\n\n/**\n * optional int64 end_time = 10;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getEndTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setEndTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 10, value);\n};\n\n\n/**\n * optional int64 order = 11;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getOrder = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setOrder = function(value) {\n  return jspb.Message.setProto3IntField(this, 11, value);\n};\n\n\n/**\n * optional int32 vote_score = 16;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getVoteScore = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setVoteScore = function(value) {\n  return jspb.Message.setProto3IntField(this, 16, value);\n};\n\n\n/**\n * optional bytes description = 20;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AssetIssueContract.prototype.getDescription = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 20, \"\"));\n};\n\n\n/**\n * optional bytes description = 20;\n * This is a type-conversion wrapper around `getDescription()`\n * @return {string}\n */\nTronWebProto.AssetIssueContract.prototype.getDescription_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDescription()));\n};\n\n\n/**\n * optional bytes description = 20;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDescription()`\n * @return {!Uint8Array}\n */\nTronWebProto.AssetIssueContract.prototype.getDescription_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDescription()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setDescription = function(value) {\n  return jspb.Message.setProto3BytesField(this, 20, value);\n};\n\n\n/**\n * optional bytes url = 21;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AssetIssueContract.prototype.getUrl = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 21, \"\"));\n};\n\n\n/**\n * optional bytes url = 21;\n * This is a type-conversion wrapper around `getUrl()`\n * @return {string}\n */\nTronWebProto.AssetIssueContract.prototype.getUrl_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getUrl()));\n};\n\n\n/**\n * optional bytes url = 21;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getUrl()`\n * @return {!Uint8Array}\n */\nTronWebProto.AssetIssueContract.prototype.getUrl_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getUrl()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setUrl = function(value) {\n  return jspb.Message.setProto3BytesField(this, 21, value);\n};\n\n\n/**\n * optional int64 free_asset_net_limit = 22;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getFreeAssetNetLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setFreeAssetNetLimit = function(value) {\n  return jspb.Message.setProto3IntField(this, 22, value);\n};\n\n\n/**\n * optional int64 public_free_asset_net_limit = 23;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getPublicFreeAssetNetLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setPublicFreeAssetNetLimit = function(value) {\n  return jspb.Message.setProto3IntField(this, 23, value);\n};\n\n\n/**\n * optional int64 public_free_asset_net_usage = 24;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getPublicFreeAssetNetUsage = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setPublicFreeAssetNetUsage = function(value) {\n  return jspb.Message.setProto3IntField(this, 24, value);\n};\n\n\n/**\n * optional int64 public_latest_free_net_time = 25;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getPublicLatestFreeNetTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setPublicLatestFreeNetTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 25, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.TransferAssetContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.TransferAssetContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.TransferAssetContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.TransferAssetContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    assetName: msg.getAssetName_asB64(),\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    toAddress: msg.getToAddress_asB64(),\n    amount: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.TransferAssetContract}\n */\nTronWebProto.TransferAssetContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.TransferAssetContract;\n  return TronWebProto.TransferAssetContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.TransferAssetContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.TransferAssetContract}\n */\nTronWebProto.TransferAssetContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAssetName(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setToAddress(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.TransferAssetContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.TransferAssetContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.TransferAssetContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.TransferAssetContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAssetName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getToAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes asset_name = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.TransferAssetContract.prototype.getAssetName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes asset_name = 1;\n * This is a type-conversion wrapper around `getAssetName()`\n * @return {string}\n */\nTronWebProto.TransferAssetContract.prototype.getAssetName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAssetName()));\n};\n\n\n/**\n * optional bytes asset_name = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAssetName()`\n * @return {!Uint8Array}\n */\nTronWebProto.TransferAssetContract.prototype.getAssetName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAssetName()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.TransferAssetContract} returns this\n */\nTronWebProto.TransferAssetContract.prototype.setAssetName = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes owner_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.TransferAssetContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 2;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.TransferAssetContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.TransferAssetContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.TransferAssetContract} returns this\n */\nTronWebProto.TransferAssetContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional bytes to_address = 3;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.TransferAssetContract.prototype.getToAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes to_address = 3;\n * This is a type-conversion wrapper around `getToAddress()`\n * @return {string}\n */\nTronWebProto.TransferAssetContract.prototype.getToAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getToAddress()));\n};\n\n\n/**\n * optional bytes to_address = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getToAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.TransferAssetContract.prototype.getToAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getToAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.TransferAssetContract} returns this\n */\nTronWebProto.TransferAssetContract.prototype.setToAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional int64 amount = 4;\n * @return {number}\n */\nTronWebProto.TransferAssetContract.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.TransferAssetContract} returns this\n */\nTronWebProto.TransferAssetContract.prototype.setAmount = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.UnfreezeAssetContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.UnfreezeAssetContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.UnfreezeAssetContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UnfreezeAssetContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.UnfreezeAssetContract}\n */\nTronWebProto.UnfreezeAssetContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.UnfreezeAssetContract;\n  return TronWebProto.UnfreezeAssetContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.UnfreezeAssetContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.UnfreezeAssetContract}\n */\nTronWebProto.UnfreezeAssetContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.UnfreezeAssetContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.UnfreezeAssetContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.UnfreezeAssetContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UnfreezeAssetContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UnfreezeAssetContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.UnfreezeAssetContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UnfreezeAssetContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UnfreezeAssetContract} returns this\n */\nTronWebProto.UnfreezeAssetContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.UpdateAssetContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.UpdateAssetContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.UpdateAssetContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UpdateAssetContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    description: msg.getDescription_asB64(),\n    url: msg.getUrl_asB64(),\n    newLimit: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    newPublicLimit: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.UpdateAssetContract}\n */\nTronWebProto.UpdateAssetContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.UpdateAssetContract;\n  return TronWebProto.UpdateAssetContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.UpdateAssetContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.UpdateAssetContract}\n */\nTronWebProto.UpdateAssetContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDescription(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setUrl(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNewLimit(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNewPublicLimit(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateAssetContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.UpdateAssetContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.UpdateAssetContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UpdateAssetContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getDescription_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getUrl_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getNewLimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getNewPublicLimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UpdateAssetContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.UpdateAssetContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateAssetContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UpdateAssetContract} returns this\n */\nTronWebProto.UpdateAssetContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes description = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UpdateAssetContract.prototype.getDescription = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes description = 2;\n * This is a type-conversion wrapper around `getDescription()`\n * @return {string}\n */\nTronWebProto.UpdateAssetContract.prototype.getDescription_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDescription()));\n};\n\n\n/**\n * optional bytes description = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDescription()`\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateAssetContract.prototype.getDescription_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDescription()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UpdateAssetContract} returns this\n */\nTronWebProto.UpdateAssetContract.prototype.setDescription = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional bytes url = 3;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UpdateAssetContract.prototype.getUrl = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes url = 3;\n * This is a type-conversion wrapper around `getUrl()`\n * @return {string}\n */\nTronWebProto.UpdateAssetContract.prototype.getUrl_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getUrl()));\n};\n\n\n/**\n * optional bytes url = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getUrl()`\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateAssetContract.prototype.getUrl_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getUrl()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UpdateAssetContract} returns this\n */\nTronWebProto.UpdateAssetContract.prototype.setUrl = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional int64 new_limit = 4;\n * @return {number}\n */\nTronWebProto.UpdateAssetContract.prototype.getNewLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.UpdateAssetContract} returns this\n */\nTronWebProto.UpdateAssetContract.prototype.setNewLimit = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional int64 new_public_limit = 5;\n * @return {number}\n */\nTronWebProto.UpdateAssetContract.prototype.getNewPublicLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.UpdateAssetContract} returns this\n */\nTronWebProto.UpdateAssetContract.prototype.setNewPublicLimit = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.ParticipateAssetIssueContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.ParticipateAssetIssueContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ParticipateAssetIssueContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    toAddress: msg.getToAddress_asB64(),\n    assetName: msg.getAssetName_asB64(),\n    amount: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.ParticipateAssetIssueContract}\n */\nTronWebProto.ParticipateAssetIssueContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.ParticipateAssetIssueContract;\n  return TronWebProto.ParticipateAssetIssueContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.ParticipateAssetIssueContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.ParticipateAssetIssueContract}\n */\nTronWebProto.ParticipateAssetIssueContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setToAddress(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAssetName(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.ParticipateAssetIssueContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.ParticipateAssetIssueContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ParticipateAssetIssueContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getToAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getAssetName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ParticipateAssetIssueContract} returns this\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes to_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.getToAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes to_address = 2;\n * This is a type-conversion wrapper around `getToAddress()`\n * @return {string}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.getToAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getToAddress()));\n};\n\n\n/**\n * optional bytes to_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getToAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.getToAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getToAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ParticipateAssetIssueContract} returns this\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.setToAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional bytes asset_name = 3;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.getAssetName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes asset_name = 3;\n * This is a type-conversion wrapper around `getAssetName()`\n * @return {string}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.getAssetName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAssetName()));\n};\n\n\n/**\n * optional bytes asset_name = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAssetName()`\n * @return {!Uint8Array}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.getAssetName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAssetName()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ParticipateAssetIssueContract} returns this\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.setAssetName = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional int64 amount = 4;\n * @return {number}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ParticipateAssetIssueContract} returns this\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.setAmount = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\ngoog.object.extend(exports, TronWebProto);\n","// source: core/contract/balance_contract.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('@tronweb3/google-protobuf');\nvar goog = jspb;\nvar global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof window !== 'undefined' && window) ||\n  (typeof global !== 'undefined' && global) ||\n  (typeof self !== 'undefined' && self) ||\n  (function () { return this; }).call(null) ||\n  Function('return this')();\n\nvar core_contract_common_pb = require('../../core/contract/common_pb.js');\ngoog.object.extend(proto, core_contract_common_pb);\ngoog.exportSymbol('TronWebProto.AccountBalanceRequest', null, global);\ngoog.exportSymbol('TronWebProto.AccountBalanceResponse', null, global);\ngoog.exportSymbol('TronWebProto.AccountIdentifier', null, global);\ngoog.exportSymbol('TronWebProto.AccountTrace', null, global);\ngoog.exportSymbol('TronWebProto.BlockBalanceTrace', null, global);\ngoog.exportSymbol('TronWebProto.BlockBalanceTrace.BlockIdentifier', null, global);\ngoog.exportSymbol('TronWebProto.CancelAllUnfreezeV2Contract', null, global);\ngoog.exportSymbol('TronWebProto.DelegateResourceContract', null, global);\ngoog.exportSymbol('TronWebProto.FreezeBalanceContract', null, global);\ngoog.exportSymbol('TronWebProto.FreezeBalanceV2Contract', null, global);\ngoog.exportSymbol('TronWebProto.TransactionBalanceTrace', null, global);\ngoog.exportSymbol('TronWebProto.TransactionBalanceTrace.Operation', null, global);\ngoog.exportSymbol('TronWebProto.TransferContract', null, global);\ngoog.exportSymbol('TronWebProto.UnDelegateResourceContract', null, global);\ngoog.exportSymbol('TronWebProto.UnfreezeBalanceContract', null, global);\ngoog.exportSymbol('TronWebProto.UnfreezeBalanceV2Contract', null, global);\ngoog.exportSymbol('TronWebProto.WithdrawBalanceContract', null, global);\ngoog.exportSymbol('TronWebProto.WithdrawExpireUnfreezeContract', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.FreezeBalanceContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.FreezeBalanceContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.FreezeBalanceContract.displayName = 'TronWebProto.FreezeBalanceContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.UnfreezeBalanceContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.UnfreezeBalanceContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.UnfreezeBalanceContract.displayName = 'TronWebProto.UnfreezeBalanceContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.WithdrawBalanceContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.WithdrawBalanceContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.WithdrawBalanceContract.displayName = 'TronWebProto.WithdrawBalanceContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.TransferContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.TransferContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.TransferContract.displayName = 'TronWebProto.TransferContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.TransactionBalanceTrace = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.TransactionBalanceTrace.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.TransactionBalanceTrace, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.TransactionBalanceTrace.displayName = 'TronWebProto.TransactionBalanceTrace';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.TransactionBalanceTrace.Operation = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.TransactionBalanceTrace.Operation, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.TransactionBalanceTrace.Operation.displayName = 'TronWebProto.TransactionBalanceTrace.Operation';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.BlockBalanceTrace = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.BlockBalanceTrace.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.BlockBalanceTrace, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.BlockBalanceTrace.displayName = 'TronWebProto.BlockBalanceTrace';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.BlockBalanceTrace.BlockIdentifier, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.BlockBalanceTrace.BlockIdentifier.displayName = 'TronWebProto.BlockBalanceTrace.BlockIdentifier';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.AccountTrace = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.AccountTrace, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.AccountTrace.displayName = 'TronWebProto.AccountTrace';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.AccountIdentifier = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.AccountIdentifier, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.AccountIdentifier.displayName = 'TronWebProto.AccountIdentifier';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.AccountBalanceRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.AccountBalanceRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.AccountBalanceRequest.displayName = 'TronWebProto.AccountBalanceRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.AccountBalanceResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.AccountBalanceResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.AccountBalanceResponse.displayName = 'TronWebProto.AccountBalanceResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.FreezeBalanceV2Contract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.FreezeBalanceV2Contract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.FreezeBalanceV2Contract.displayName = 'TronWebProto.FreezeBalanceV2Contract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.UnfreezeBalanceV2Contract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.UnfreezeBalanceV2Contract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.UnfreezeBalanceV2Contract.displayName = 'TronWebProto.UnfreezeBalanceV2Contract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.WithdrawExpireUnfreezeContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.WithdrawExpireUnfreezeContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.WithdrawExpireUnfreezeContract.displayName = 'TronWebProto.WithdrawExpireUnfreezeContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.DelegateResourceContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.DelegateResourceContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.DelegateResourceContract.displayName = 'TronWebProto.DelegateResourceContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.UnDelegateResourceContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.UnDelegateResourceContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.UnDelegateResourceContract.displayName = 'TronWebProto.UnDelegateResourceContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.CancelAllUnfreezeV2Contract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.CancelAllUnfreezeV2Contract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.CancelAllUnfreezeV2Contract.displayName = 'TronWebProto.CancelAllUnfreezeV2Contract';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.FreezeBalanceContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.FreezeBalanceContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.FreezeBalanceContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.FreezeBalanceContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    frozenBalance: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    frozenDuration: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    resource: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    receiverAddress: msg.getReceiverAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.FreezeBalanceContract}\n */\nTronWebProto.FreezeBalanceContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.FreezeBalanceContract;\n  return TronWebProto.FreezeBalanceContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.FreezeBalanceContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.FreezeBalanceContract}\n */\nTronWebProto.FreezeBalanceContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFrozenBalance(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFrozenDuration(value);\n      break;\n    case 10:\n      var value = /** @type {!TronWebProto.ResourceCode} */ (reader.readEnum());\n      msg.setResource(value);\n      break;\n    case 15:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setReceiverAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.FreezeBalanceContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.FreezeBalanceContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.FreezeBalanceContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.FreezeBalanceContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getFrozenBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getFrozenDuration();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getResource();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      10,\n      f\n    );\n  }\n  f = message.getReceiverAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      15,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.FreezeBalanceContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.FreezeBalanceContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.FreezeBalanceContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.FreezeBalanceContract} returns this\n */\nTronWebProto.FreezeBalanceContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 frozen_balance = 2;\n * @return {number}\n */\nTronWebProto.FreezeBalanceContract.prototype.getFrozenBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.FreezeBalanceContract} returns this\n */\nTronWebProto.FreezeBalanceContract.prototype.setFrozenBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int64 frozen_duration = 3;\n * @return {number}\n */\nTronWebProto.FreezeBalanceContract.prototype.getFrozenDuration = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.FreezeBalanceContract} returns this\n */\nTronWebProto.FreezeBalanceContract.prototype.setFrozenDuration = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional ResourceCode resource = 10;\n * @return {!TronWebProto.ResourceCode}\n */\nTronWebProto.FreezeBalanceContract.prototype.getResource = function() {\n  return /** @type {!TronWebProto.ResourceCode} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/**\n * @param {!TronWebProto.ResourceCode} value\n * @return {!TronWebProto.FreezeBalanceContract} returns this\n */\nTronWebProto.FreezeBalanceContract.prototype.setResource = function(value) {\n  return jspb.Message.setProto3EnumField(this, 10, value);\n};\n\n\n/**\n * optional bytes receiver_address = 15;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.FreezeBalanceContract.prototype.getReceiverAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 15, \"\"));\n};\n\n\n/**\n * optional bytes receiver_address = 15;\n * This is a type-conversion wrapper around `getReceiverAddress()`\n * @return {string}\n */\nTronWebProto.FreezeBalanceContract.prototype.getReceiverAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getReceiverAddress()));\n};\n\n\n/**\n * optional bytes receiver_address = 15;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getReceiverAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.FreezeBalanceContract.prototype.getReceiverAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getReceiverAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.FreezeBalanceContract} returns this\n */\nTronWebProto.FreezeBalanceContract.prototype.setReceiverAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 15, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.UnfreezeBalanceContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.UnfreezeBalanceContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.UnfreezeBalanceContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UnfreezeBalanceContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    resource: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    receiverAddress: msg.getReceiverAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.UnfreezeBalanceContract}\n */\nTronWebProto.UnfreezeBalanceContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.UnfreezeBalanceContract;\n  return TronWebProto.UnfreezeBalanceContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.UnfreezeBalanceContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.UnfreezeBalanceContract}\n */\nTronWebProto.UnfreezeBalanceContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 10:\n      var value = /** @type {!TronWebProto.ResourceCode} */ (reader.readEnum());\n      msg.setResource(value);\n      break;\n    case 15:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setReceiverAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.UnfreezeBalanceContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.UnfreezeBalanceContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.UnfreezeBalanceContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UnfreezeBalanceContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getResource();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      10,\n      f\n    );\n  }\n  f = message.getReceiverAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      15,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UnfreezeBalanceContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.UnfreezeBalanceContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UnfreezeBalanceContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UnfreezeBalanceContract} returns this\n */\nTronWebProto.UnfreezeBalanceContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional ResourceCode resource = 10;\n * @return {!TronWebProto.ResourceCode}\n */\nTronWebProto.UnfreezeBalanceContract.prototype.getResource = function() {\n  return /** @type {!TronWebProto.ResourceCode} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/**\n * @param {!TronWebProto.ResourceCode} value\n * @return {!TronWebProto.UnfreezeBalanceContract} returns this\n */\nTronWebProto.UnfreezeBalanceContract.prototype.setResource = function(value) {\n  return jspb.Message.setProto3EnumField(this, 10, value);\n};\n\n\n/**\n * optional bytes receiver_address = 15;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UnfreezeBalanceContract.prototype.getReceiverAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 15, \"\"));\n};\n\n\n/**\n * optional bytes receiver_address = 15;\n * This is a type-conversion wrapper around `getReceiverAddress()`\n * @return {string}\n */\nTronWebProto.UnfreezeBalanceContract.prototype.getReceiverAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getReceiverAddress()));\n};\n\n\n/**\n * optional bytes receiver_address = 15;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getReceiverAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UnfreezeBalanceContract.prototype.getReceiverAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getReceiverAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UnfreezeBalanceContract} returns this\n */\nTronWebProto.UnfreezeBalanceContract.prototype.setReceiverAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 15, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.WithdrawBalanceContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.WithdrawBalanceContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.WithdrawBalanceContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.WithdrawBalanceContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.WithdrawBalanceContract}\n */\nTronWebProto.WithdrawBalanceContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.WithdrawBalanceContract;\n  return TronWebProto.WithdrawBalanceContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.WithdrawBalanceContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.WithdrawBalanceContract}\n */\nTronWebProto.WithdrawBalanceContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.WithdrawBalanceContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.WithdrawBalanceContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.WithdrawBalanceContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.WithdrawBalanceContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.WithdrawBalanceContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.WithdrawBalanceContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.WithdrawBalanceContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.WithdrawBalanceContract} returns this\n */\nTronWebProto.WithdrawBalanceContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.TransferContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.TransferContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.TransferContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.TransferContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    toAddress: msg.getToAddress_asB64(),\n    amount: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.TransferContract}\n */\nTronWebProto.TransferContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.TransferContract;\n  return TronWebProto.TransferContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.TransferContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.TransferContract}\n */\nTronWebProto.TransferContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setToAddress(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.TransferContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.TransferContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.TransferContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.TransferContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getToAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.TransferContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.TransferContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.TransferContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.TransferContract} returns this\n */\nTronWebProto.TransferContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes to_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.TransferContract.prototype.getToAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes to_address = 2;\n * This is a type-conversion wrapper around `getToAddress()`\n * @return {string}\n */\nTronWebProto.TransferContract.prototype.getToAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getToAddress()));\n};\n\n\n/**\n * optional bytes to_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getToAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.TransferContract.prototype.getToAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getToAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.TransferContract} returns this\n */\nTronWebProto.TransferContract.prototype.setToAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional int64 amount = 3;\n * @return {number}\n */\nTronWebProto.TransferContract.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.TransferContract} returns this\n */\nTronWebProto.TransferContract.prototype.setAmount = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.TransactionBalanceTrace.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.TransactionBalanceTrace.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.TransactionBalanceTrace.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.TransactionBalanceTrace} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.TransactionBalanceTrace.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    transactionIdentifier: msg.getTransactionIdentifier_asB64(),\n    operationList: jspb.Message.toObjectList(msg.getOperationList(),\n    TronWebProto.TransactionBalanceTrace.Operation.toObject, includeInstance),\n    type: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    status: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.TransactionBalanceTrace}\n */\nTronWebProto.TransactionBalanceTrace.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.TransactionBalanceTrace;\n  return TronWebProto.TransactionBalanceTrace.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.TransactionBalanceTrace} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.TransactionBalanceTrace}\n */\nTronWebProto.TransactionBalanceTrace.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTransactionIdentifier(value);\n      break;\n    case 2:\n      var value = new TronWebProto.TransactionBalanceTrace.Operation;\n      reader.readMessage(value,TronWebProto.TransactionBalanceTrace.Operation.deserializeBinaryFromReader);\n      msg.addOperation(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setType(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.TransactionBalanceTrace.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.TransactionBalanceTrace.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.TransactionBalanceTrace} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.TransactionBalanceTrace.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTransactionIdentifier_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getOperationList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      TronWebProto.TransactionBalanceTrace.Operation.serializeBinaryToWriter\n    );\n  }\n  f = message.getType();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.TransactionBalanceTrace.Operation.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.TransactionBalanceTrace.Operation.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.TransactionBalanceTrace.Operation} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.TransactionBalanceTrace.Operation.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    operationIdentifier: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    address: msg.getAddress_asB64(),\n    amount: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.TransactionBalanceTrace.Operation}\n */\nTronWebProto.TransactionBalanceTrace.Operation.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.TransactionBalanceTrace.Operation;\n  return TronWebProto.TransactionBalanceTrace.Operation.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.TransactionBalanceTrace.Operation} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.TransactionBalanceTrace.Operation}\n */\nTronWebProto.TransactionBalanceTrace.Operation.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setOperationIdentifier(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddress(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.TransactionBalanceTrace.Operation.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.TransactionBalanceTrace.Operation.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.TransactionBalanceTrace.Operation} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.TransactionBalanceTrace.Operation.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOperationIdentifier();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 operation_identifier = 1;\n * @return {number}\n */\nTronWebProto.TransactionBalanceTrace.Operation.prototype.getOperationIdentifier = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.TransactionBalanceTrace.Operation} returns this\n */\nTronWebProto.TransactionBalanceTrace.Operation.prototype.setOperationIdentifier = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional bytes address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.TransactionBalanceTrace.Operation.prototype.getAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes address = 2;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nTronWebProto.TransactionBalanceTrace.Operation.prototype.getAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddress()));\n};\n\n\n/**\n * optional bytes address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.TransactionBalanceTrace.Operation.prototype.getAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.TransactionBalanceTrace.Operation} returns this\n */\nTronWebProto.TransactionBalanceTrace.Operation.prototype.setAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional int64 amount = 3;\n * @return {number}\n */\nTronWebProto.TransactionBalanceTrace.Operation.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.TransactionBalanceTrace.Operation} returns this\n */\nTronWebProto.TransactionBalanceTrace.Operation.prototype.setAmount = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional bytes transaction_identifier = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.TransactionBalanceTrace.prototype.getTransactionIdentifier = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes transaction_identifier = 1;\n * This is a type-conversion wrapper around `getTransactionIdentifier()`\n * @return {string}\n */\nTronWebProto.TransactionBalanceTrace.prototype.getTransactionIdentifier_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTransactionIdentifier()));\n};\n\n\n/**\n * optional bytes transaction_identifier = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTransactionIdentifier()`\n * @return {!Uint8Array}\n */\nTronWebProto.TransactionBalanceTrace.prototype.getTransactionIdentifier_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTransactionIdentifier()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.TransactionBalanceTrace} returns this\n */\nTronWebProto.TransactionBalanceTrace.prototype.setTransactionIdentifier = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * repeated Operation operation = 2;\n * @return {!Array<!TronWebProto.TransactionBalanceTrace.Operation>}\n */\nTronWebProto.TransactionBalanceTrace.prototype.getOperationList = function() {\n  return /** @type{!Array<!TronWebProto.TransactionBalanceTrace.Operation>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.TransactionBalanceTrace.Operation, 2));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.TransactionBalanceTrace.Operation>} value\n * @return {!TronWebProto.TransactionBalanceTrace} returns this\n*/\nTronWebProto.TransactionBalanceTrace.prototype.setOperationList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!TronWebProto.TransactionBalanceTrace.Operation=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.TransactionBalanceTrace.Operation}\n */\nTronWebProto.TransactionBalanceTrace.prototype.addOperation = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, TronWebProto.TransactionBalanceTrace.Operation, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.TransactionBalanceTrace} returns this\n */\nTronWebProto.TransactionBalanceTrace.prototype.clearOperationList = function() {\n  return this.setOperationList([]);\n};\n\n\n/**\n * optional string type = 3;\n * @return {string}\n */\nTronWebProto.TransactionBalanceTrace.prototype.getType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!TronWebProto.TransactionBalanceTrace} returns this\n */\nTronWebProto.TransactionBalanceTrace.prototype.setType = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string status = 4;\n * @return {string}\n */\nTronWebProto.TransactionBalanceTrace.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!TronWebProto.TransactionBalanceTrace} returns this\n */\nTronWebProto.TransactionBalanceTrace.prototype.setStatus = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.BlockBalanceTrace.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.BlockBalanceTrace.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.BlockBalanceTrace.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.BlockBalanceTrace} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.BlockBalanceTrace.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    blockIdentifier: (f = msg.getBlockIdentifier()) && TronWebProto.BlockBalanceTrace.BlockIdentifier.toObject(includeInstance, f),\n    timestamp: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    transactionBalanceTraceList: jspb.Message.toObjectList(msg.getTransactionBalanceTraceList(),\n    TronWebProto.TransactionBalanceTrace.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.BlockBalanceTrace}\n */\nTronWebProto.BlockBalanceTrace.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.BlockBalanceTrace;\n  return TronWebProto.BlockBalanceTrace.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.BlockBalanceTrace} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.BlockBalanceTrace}\n */\nTronWebProto.BlockBalanceTrace.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new TronWebProto.BlockBalanceTrace.BlockIdentifier;\n      reader.readMessage(value,TronWebProto.BlockBalanceTrace.BlockIdentifier.deserializeBinaryFromReader);\n      msg.setBlockIdentifier(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTimestamp(value);\n      break;\n    case 3:\n      var value = new TronWebProto.TransactionBalanceTrace;\n      reader.readMessage(value,TronWebProto.TransactionBalanceTrace.deserializeBinaryFromReader);\n      msg.addTransactionBalanceTrace(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.BlockBalanceTrace.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.BlockBalanceTrace.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.BlockBalanceTrace} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.BlockBalanceTrace.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBlockIdentifier();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      TronWebProto.BlockBalanceTrace.BlockIdentifier.serializeBinaryToWriter\n    );\n  }\n  f = message.getTimestamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getTransactionBalanceTraceList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      TronWebProto.TransactionBalanceTrace.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.BlockBalanceTrace.BlockIdentifier.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.BlockBalanceTrace.BlockIdentifier} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    hash: msg.getHash_asB64(),\n    number: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.BlockBalanceTrace.BlockIdentifier}\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.BlockBalanceTrace.BlockIdentifier;\n  return TronWebProto.BlockBalanceTrace.BlockIdentifier.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.BlockBalanceTrace.BlockIdentifier} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.BlockBalanceTrace.BlockIdentifier}\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setHash(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNumber(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.BlockBalanceTrace.BlockIdentifier.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.BlockBalanceTrace.BlockIdentifier} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getNumber();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes hash = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.prototype.getHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes hash = 1;\n * This is a type-conversion wrapper around `getHash()`\n * @return {string}\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.prototype.getHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getHash()));\n};\n\n\n/**\n * optional bytes hash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHash()`\n * @return {!Uint8Array}\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.prototype.getHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getHash()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.BlockBalanceTrace.BlockIdentifier} returns this\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.prototype.setHash = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 number = 2;\n * @return {number}\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.prototype.getNumber = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.BlockBalanceTrace.BlockIdentifier} returns this\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.prototype.setNumber = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional BlockIdentifier block_identifier = 1;\n * @return {?TronWebProto.BlockBalanceTrace.BlockIdentifier}\n */\nTronWebProto.BlockBalanceTrace.prototype.getBlockIdentifier = function() {\n  return /** @type{?TronWebProto.BlockBalanceTrace.BlockIdentifier} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.BlockBalanceTrace.BlockIdentifier, 1));\n};\n\n\n/**\n * @param {?TronWebProto.BlockBalanceTrace.BlockIdentifier|undefined} value\n * @return {!TronWebProto.BlockBalanceTrace} returns this\n*/\nTronWebProto.BlockBalanceTrace.prototype.setBlockIdentifier = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.BlockBalanceTrace} returns this\n */\nTronWebProto.BlockBalanceTrace.prototype.clearBlockIdentifier = function() {\n  return this.setBlockIdentifier(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.BlockBalanceTrace.prototype.hasBlockIdentifier = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional int64 timestamp = 2;\n * @return {number}\n */\nTronWebProto.BlockBalanceTrace.prototype.getTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.BlockBalanceTrace} returns this\n */\nTronWebProto.BlockBalanceTrace.prototype.setTimestamp = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * repeated TransactionBalanceTrace transaction_balance_trace = 3;\n * @return {!Array<!TronWebProto.TransactionBalanceTrace>}\n */\nTronWebProto.BlockBalanceTrace.prototype.getTransactionBalanceTraceList = function() {\n  return /** @type{!Array<!TronWebProto.TransactionBalanceTrace>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.TransactionBalanceTrace, 3));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.TransactionBalanceTrace>} value\n * @return {!TronWebProto.BlockBalanceTrace} returns this\n*/\nTronWebProto.BlockBalanceTrace.prototype.setTransactionBalanceTraceList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!TronWebProto.TransactionBalanceTrace=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.TransactionBalanceTrace}\n */\nTronWebProto.BlockBalanceTrace.prototype.addTransactionBalanceTrace = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, TronWebProto.TransactionBalanceTrace, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.BlockBalanceTrace} returns this\n */\nTronWebProto.BlockBalanceTrace.prototype.clearTransactionBalanceTraceList = function() {\n  return this.setTransactionBalanceTraceList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.AccountTrace.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.AccountTrace.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.AccountTrace} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountTrace.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    balance: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    placeholder: jspb.Message.getFieldWithDefault(msg, 99, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.AccountTrace}\n */\nTronWebProto.AccountTrace.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.AccountTrace;\n  return TronWebProto.AccountTrace.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.AccountTrace} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.AccountTrace}\n */\nTronWebProto.AccountTrace.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBalance(value);\n      break;\n    case 99:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPlaceholder(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.AccountTrace.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.AccountTrace.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.AccountTrace} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountTrace.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getPlaceholder();\n  if (f !== 0) {\n    writer.writeInt64(\n      99,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 balance = 1;\n * @return {number}\n */\nTronWebProto.AccountTrace.prototype.getBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AccountTrace} returns this\n */\nTronWebProto.AccountTrace.prototype.setBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int64 placeholder = 99;\n * @return {number}\n */\nTronWebProto.AccountTrace.prototype.getPlaceholder = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 99, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AccountTrace} returns this\n */\nTronWebProto.AccountTrace.prototype.setPlaceholder = function(value) {\n  return jspb.Message.setProto3IntField(this, 99, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.AccountIdentifier.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.AccountIdentifier.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.AccountIdentifier} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountIdentifier.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: msg.getAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.AccountIdentifier}\n */\nTronWebProto.AccountIdentifier.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.AccountIdentifier;\n  return TronWebProto.AccountIdentifier.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.AccountIdentifier} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.AccountIdentifier}\n */\nTronWebProto.AccountIdentifier.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.AccountIdentifier.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.AccountIdentifier.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.AccountIdentifier} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountIdentifier.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AccountIdentifier.prototype.getAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes address = 1;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nTronWebProto.AccountIdentifier.prototype.getAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddress()));\n};\n\n\n/**\n * optional bytes address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.AccountIdentifier.prototype.getAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AccountIdentifier} returns this\n */\nTronWebProto.AccountIdentifier.prototype.setAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.AccountBalanceRequest.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.AccountBalanceRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.AccountBalanceRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountBalanceRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    accountIdentifier: (f = msg.getAccountIdentifier()) && TronWebProto.AccountIdentifier.toObject(includeInstance, f),\n    blockIdentifier: (f = msg.getBlockIdentifier()) && TronWebProto.BlockBalanceTrace.BlockIdentifier.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.AccountBalanceRequest}\n */\nTronWebProto.AccountBalanceRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.AccountBalanceRequest;\n  return TronWebProto.AccountBalanceRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.AccountBalanceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.AccountBalanceRequest}\n */\nTronWebProto.AccountBalanceRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new TronWebProto.AccountIdentifier;\n      reader.readMessage(value,TronWebProto.AccountIdentifier.deserializeBinaryFromReader);\n      msg.setAccountIdentifier(value);\n      break;\n    case 2:\n      var value = new TronWebProto.BlockBalanceTrace.BlockIdentifier;\n      reader.readMessage(value,TronWebProto.BlockBalanceTrace.BlockIdentifier.deserializeBinaryFromReader);\n      msg.setBlockIdentifier(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.AccountBalanceRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.AccountBalanceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.AccountBalanceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountBalanceRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAccountIdentifier();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      TronWebProto.AccountIdentifier.serializeBinaryToWriter\n    );\n  }\n  f = message.getBlockIdentifier();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      TronWebProto.BlockBalanceTrace.BlockIdentifier.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional AccountIdentifier account_identifier = 1;\n * @return {?TronWebProto.AccountIdentifier}\n */\nTronWebProto.AccountBalanceRequest.prototype.getAccountIdentifier = function() {\n  return /** @type{?TronWebProto.AccountIdentifier} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.AccountIdentifier, 1));\n};\n\n\n/**\n * @param {?TronWebProto.AccountIdentifier|undefined} value\n * @return {!TronWebProto.AccountBalanceRequest} returns this\n*/\nTronWebProto.AccountBalanceRequest.prototype.setAccountIdentifier = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.AccountBalanceRequest} returns this\n */\nTronWebProto.AccountBalanceRequest.prototype.clearAccountIdentifier = function() {\n  return this.setAccountIdentifier(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.AccountBalanceRequest.prototype.hasAccountIdentifier = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional BlockBalanceTrace.BlockIdentifier block_identifier = 2;\n * @return {?TronWebProto.BlockBalanceTrace.BlockIdentifier}\n */\nTronWebProto.AccountBalanceRequest.prototype.getBlockIdentifier = function() {\n  return /** @type{?TronWebProto.BlockBalanceTrace.BlockIdentifier} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.BlockBalanceTrace.BlockIdentifier, 2));\n};\n\n\n/**\n * @param {?TronWebProto.BlockBalanceTrace.BlockIdentifier|undefined} value\n * @return {!TronWebProto.AccountBalanceRequest} returns this\n*/\nTronWebProto.AccountBalanceRequest.prototype.setBlockIdentifier = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.AccountBalanceRequest} returns this\n */\nTronWebProto.AccountBalanceRequest.prototype.clearBlockIdentifier = function() {\n  return this.setBlockIdentifier(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.AccountBalanceRequest.prototype.hasBlockIdentifier = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.AccountBalanceResponse.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.AccountBalanceResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.AccountBalanceResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountBalanceResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    balance: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    blockIdentifier: (f = msg.getBlockIdentifier()) && TronWebProto.BlockBalanceTrace.BlockIdentifier.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.AccountBalanceResponse}\n */\nTronWebProto.AccountBalanceResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.AccountBalanceResponse;\n  return TronWebProto.AccountBalanceResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.AccountBalanceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.AccountBalanceResponse}\n */\nTronWebProto.AccountBalanceResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBalance(value);\n      break;\n    case 2:\n      var value = new TronWebProto.BlockBalanceTrace.BlockIdentifier;\n      reader.readMessage(value,TronWebProto.BlockBalanceTrace.BlockIdentifier.deserializeBinaryFromReader);\n      msg.setBlockIdentifier(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.AccountBalanceResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.AccountBalanceResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.AccountBalanceResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountBalanceResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getBlockIdentifier();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      TronWebProto.BlockBalanceTrace.BlockIdentifier.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int64 balance = 1;\n * @return {number}\n */\nTronWebProto.AccountBalanceResponse.prototype.getBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AccountBalanceResponse} returns this\n */\nTronWebProto.AccountBalanceResponse.prototype.setBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional BlockBalanceTrace.BlockIdentifier block_identifier = 2;\n * @return {?TronWebProto.BlockBalanceTrace.BlockIdentifier}\n */\nTronWebProto.AccountBalanceResponse.prototype.getBlockIdentifier = function() {\n  return /** @type{?TronWebProto.BlockBalanceTrace.BlockIdentifier} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.BlockBalanceTrace.BlockIdentifier, 2));\n};\n\n\n/**\n * @param {?TronWebProto.BlockBalanceTrace.BlockIdentifier|undefined} value\n * @return {!TronWebProto.AccountBalanceResponse} returns this\n*/\nTronWebProto.AccountBalanceResponse.prototype.setBlockIdentifier = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.AccountBalanceResponse} returns this\n */\nTronWebProto.AccountBalanceResponse.prototype.clearBlockIdentifier = function() {\n  return this.setBlockIdentifier(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.AccountBalanceResponse.prototype.hasBlockIdentifier = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.FreezeBalanceV2Contract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.FreezeBalanceV2Contract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.FreezeBalanceV2Contract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.FreezeBalanceV2Contract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    frozenBalance: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    resource: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.FreezeBalanceV2Contract}\n */\nTronWebProto.FreezeBalanceV2Contract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.FreezeBalanceV2Contract;\n  return TronWebProto.FreezeBalanceV2Contract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.FreezeBalanceV2Contract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.FreezeBalanceV2Contract}\n */\nTronWebProto.FreezeBalanceV2Contract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFrozenBalance(value);\n      break;\n    case 3:\n      var value = /** @type {!TronWebProto.ResourceCode} */ (reader.readEnum());\n      msg.setResource(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.FreezeBalanceV2Contract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.FreezeBalanceV2Contract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.FreezeBalanceV2Contract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.FreezeBalanceV2Contract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getFrozenBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getResource();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.FreezeBalanceV2Contract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.FreezeBalanceV2Contract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.FreezeBalanceV2Contract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.FreezeBalanceV2Contract} returns this\n */\nTronWebProto.FreezeBalanceV2Contract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 frozen_balance = 2;\n * @return {number}\n */\nTronWebProto.FreezeBalanceV2Contract.prototype.getFrozenBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.FreezeBalanceV2Contract} returns this\n */\nTronWebProto.FreezeBalanceV2Contract.prototype.setFrozenBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional ResourceCode resource = 3;\n * @return {!TronWebProto.ResourceCode}\n */\nTronWebProto.FreezeBalanceV2Contract.prototype.getResource = function() {\n  return /** @type {!TronWebProto.ResourceCode} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {!TronWebProto.ResourceCode} value\n * @return {!TronWebProto.FreezeBalanceV2Contract} returns this\n */\nTronWebProto.FreezeBalanceV2Contract.prototype.setResource = function(value) {\n  return jspb.Message.setProto3EnumField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.UnfreezeBalanceV2Contract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.UnfreezeBalanceV2Contract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.UnfreezeBalanceV2Contract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UnfreezeBalanceV2Contract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    unfreezeBalance: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    resource: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.UnfreezeBalanceV2Contract}\n */\nTronWebProto.UnfreezeBalanceV2Contract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.UnfreezeBalanceV2Contract;\n  return TronWebProto.UnfreezeBalanceV2Contract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.UnfreezeBalanceV2Contract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.UnfreezeBalanceV2Contract}\n */\nTronWebProto.UnfreezeBalanceV2Contract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setUnfreezeBalance(value);\n      break;\n    case 3:\n      var value = /** @type {!TronWebProto.ResourceCode} */ (reader.readEnum());\n      msg.setResource(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.UnfreezeBalanceV2Contract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.UnfreezeBalanceV2Contract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.UnfreezeBalanceV2Contract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UnfreezeBalanceV2Contract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getUnfreezeBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getResource();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UnfreezeBalanceV2Contract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.UnfreezeBalanceV2Contract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UnfreezeBalanceV2Contract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UnfreezeBalanceV2Contract} returns this\n */\nTronWebProto.UnfreezeBalanceV2Contract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 unfreeze_balance = 2;\n * @return {number}\n */\nTronWebProto.UnfreezeBalanceV2Contract.prototype.getUnfreezeBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.UnfreezeBalanceV2Contract} returns this\n */\nTronWebProto.UnfreezeBalanceV2Contract.prototype.setUnfreezeBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional ResourceCode resource = 3;\n * @return {!TronWebProto.ResourceCode}\n */\nTronWebProto.UnfreezeBalanceV2Contract.prototype.getResource = function() {\n  return /** @type {!TronWebProto.ResourceCode} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {!TronWebProto.ResourceCode} value\n * @return {!TronWebProto.UnfreezeBalanceV2Contract} returns this\n */\nTronWebProto.UnfreezeBalanceV2Contract.prototype.setResource = function(value) {\n  return jspb.Message.setProto3EnumField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.WithdrawExpireUnfreezeContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.WithdrawExpireUnfreezeContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.WithdrawExpireUnfreezeContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.WithdrawExpireUnfreezeContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.WithdrawExpireUnfreezeContract}\n */\nTronWebProto.WithdrawExpireUnfreezeContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.WithdrawExpireUnfreezeContract;\n  return TronWebProto.WithdrawExpireUnfreezeContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.WithdrawExpireUnfreezeContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.WithdrawExpireUnfreezeContract}\n */\nTronWebProto.WithdrawExpireUnfreezeContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.WithdrawExpireUnfreezeContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.WithdrawExpireUnfreezeContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.WithdrawExpireUnfreezeContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.WithdrawExpireUnfreezeContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.WithdrawExpireUnfreezeContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.WithdrawExpireUnfreezeContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.WithdrawExpireUnfreezeContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.WithdrawExpireUnfreezeContract} returns this\n */\nTronWebProto.WithdrawExpireUnfreezeContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.DelegateResourceContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.DelegateResourceContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.DelegateResourceContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.DelegateResourceContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    resource: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    balance: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    receiverAddress: msg.getReceiverAddress_asB64(),\n    lock: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),\n    lockPeriod: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.DelegateResourceContract}\n */\nTronWebProto.DelegateResourceContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.DelegateResourceContract;\n  return TronWebProto.DelegateResourceContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.DelegateResourceContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.DelegateResourceContract}\n */\nTronWebProto.DelegateResourceContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!TronWebProto.ResourceCode} */ (reader.readEnum());\n      msg.setResource(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBalance(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setReceiverAddress(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setLock(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLockPeriod(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.DelegateResourceContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.DelegateResourceContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.DelegateResourceContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.DelegateResourceContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getResource();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      2,\n      f\n    );\n  }\n  f = message.getBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getReceiverAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getLock();\n  if (f) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n  f = message.getLockPeriod();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.DelegateResourceContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.DelegateResourceContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.DelegateResourceContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.DelegateResourceContract} returns this\n */\nTronWebProto.DelegateResourceContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional ResourceCode resource = 2;\n * @return {!TronWebProto.ResourceCode}\n */\nTronWebProto.DelegateResourceContract.prototype.getResource = function() {\n  return /** @type {!TronWebProto.ResourceCode} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {!TronWebProto.ResourceCode} value\n * @return {!TronWebProto.DelegateResourceContract} returns this\n */\nTronWebProto.DelegateResourceContract.prototype.setResource = function(value) {\n  return jspb.Message.setProto3EnumField(this, 2, value);\n};\n\n\n/**\n * optional int64 balance = 3;\n * @return {number}\n */\nTronWebProto.DelegateResourceContract.prototype.getBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.DelegateResourceContract} returns this\n */\nTronWebProto.DelegateResourceContract.prototype.setBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional bytes receiver_address = 4;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.DelegateResourceContract.prototype.getReceiverAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes receiver_address = 4;\n * This is a type-conversion wrapper around `getReceiverAddress()`\n * @return {string}\n */\nTronWebProto.DelegateResourceContract.prototype.getReceiverAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getReceiverAddress()));\n};\n\n\n/**\n * optional bytes receiver_address = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getReceiverAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.DelegateResourceContract.prototype.getReceiverAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getReceiverAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.DelegateResourceContract} returns this\n */\nTronWebProto.DelegateResourceContract.prototype.setReceiverAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n/**\n * optional bool lock = 5;\n * @return {boolean}\n */\nTronWebProto.DelegateResourceContract.prototype.getLock = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.DelegateResourceContract} returns this\n */\nTronWebProto.DelegateResourceContract.prototype.setLock = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 5, value);\n};\n\n\n/**\n * optional int64 lock_period = 6;\n * @return {number}\n */\nTronWebProto.DelegateResourceContract.prototype.getLockPeriod = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.DelegateResourceContract} returns this\n */\nTronWebProto.DelegateResourceContract.prototype.setLockPeriod = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.UnDelegateResourceContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.UnDelegateResourceContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.UnDelegateResourceContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UnDelegateResourceContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    resource: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    balance: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    receiverAddress: msg.getReceiverAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.UnDelegateResourceContract}\n */\nTronWebProto.UnDelegateResourceContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.UnDelegateResourceContract;\n  return TronWebProto.UnDelegateResourceContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.UnDelegateResourceContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.UnDelegateResourceContract}\n */\nTronWebProto.UnDelegateResourceContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!TronWebProto.ResourceCode} */ (reader.readEnum());\n      msg.setResource(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBalance(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setReceiverAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.UnDelegateResourceContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.UnDelegateResourceContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.UnDelegateResourceContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UnDelegateResourceContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getResource();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      2,\n      f\n    );\n  }\n  f = message.getBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getReceiverAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UnDelegateResourceContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.UnDelegateResourceContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UnDelegateResourceContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UnDelegateResourceContract} returns this\n */\nTronWebProto.UnDelegateResourceContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional ResourceCode resource = 2;\n * @return {!TronWebProto.ResourceCode}\n */\nTronWebProto.UnDelegateResourceContract.prototype.getResource = function() {\n  return /** @type {!TronWebProto.ResourceCode} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {!TronWebProto.ResourceCode} value\n * @return {!TronWebProto.UnDelegateResourceContract} returns this\n */\nTronWebProto.UnDelegateResourceContract.prototype.setResource = function(value) {\n  return jspb.Message.setProto3EnumField(this, 2, value);\n};\n\n\n/**\n * optional int64 balance = 3;\n * @return {number}\n */\nTronWebProto.UnDelegateResourceContract.prototype.getBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.UnDelegateResourceContract} returns this\n */\nTronWebProto.UnDelegateResourceContract.prototype.setBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional bytes receiver_address = 4;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UnDelegateResourceContract.prototype.getReceiverAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes receiver_address = 4;\n * This is a type-conversion wrapper around `getReceiverAddress()`\n * @return {string}\n */\nTronWebProto.UnDelegateResourceContract.prototype.getReceiverAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getReceiverAddress()));\n};\n\n\n/**\n * optional bytes receiver_address = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getReceiverAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UnDelegateResourceContract.prototype.getReceiverAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getReceiverAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UnDelegateResourceContract} returns this\n */\nTronWebProto.UnDelegateResourceContract.prototype.setReceiverAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.CancelAllUnfreezeV2Contract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.CancelAllUnfreezeV2Contract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.CancelAllUnfreezeV2Contract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.CancelAllUnfreezeV2Contract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.CancelAllUnfreezeV2Contract}\n */\nTronWebProto.CancelAllUnfreezeV2Contract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.CancelAllUnfreezeV2Contract;\n  return TronWebProto.CancelAllUnfreezeV2Contract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.CancelAllUnfreezeV2Contract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.CancelAllUnfreezeV2Contract}\n */\nTronWebProto.CancelAllUnfreezeV2Contract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.CancelAllUnfreezeV2Contract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.CancelAllUnfreezeV2Contract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.CancelAllUnfreezeV2Contract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.CancelAllUnfreezeV2Contract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.CancelAllUnfreezeV2Contract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.CancelAllUnfreezeV2Contract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.CancelAllUnfreezeV2Contract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.CancelAllUnfreezeV2Contract} returns this\n */\nTronWebProto.CancelAllUnfreezeV2Contract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\ngoog.object.extend(exports, TronWebProto);\n","// source: core/contract/common.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('@tronweb3/google-protobuf');\nvar goog = jspb;\nvar global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof window !== 'undefined' && window) ||\n  (typeof global !== 'undefined' && global) ||\n  (typeof self !== 'undefined' && self) ||\n  (function () { return this; }).call(null) ||\n  Function('return this')();\n\ngoog.exportSymbol('TronWebProto.ResourceCode', null, global);\n/**\n * @enum {number}\n */\nTronWebProto.ResourceCode = {\n  BANDWIDTH: 0,\n  ENERGY: 1,\n  TRON_POWER: 2\n};\n\ngoog.object.extend(exports, TronWebProto);\n","// source: core/contract/exchange_contract.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('@tronweb3/google-protobuf');\nvar goog = jspb;\nvar global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof window !== 'undefined' && window) ||\n  (typeof global !== 'undefined' && global) ||\n  (typeof self !== 'undefined' && self) ||\n  (function () { return this; }).call(null) ||\n  Function('return this')();\n\ngoog.exportSymbol('TronWebProto.ExchangeCreateContract', null, global);\ngoog.exportSymbol('TronWebProto.ExchangeInjectContract', null, global);\ngoog.exportSymbol('TronWebProto.ExchangeTransactionContract', null, global);\ngoog.exportSymbol('TronWebProto.ExchangeWithdrawContract', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.ExchangeCreateContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.ExchangeCreateContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.ExchangeCreateContract.displayName = 'TronWebProto.ExchangeCreateContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.ExchangeInjectContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.ExchangeInjectContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.ExchangeInjectContract.displayName = 'TronWebProto.ExchangeInjectContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.ExchangeWithdrawContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.ExchangeWithdrawContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.ExchangeWithdrawContract.displayName = 'TronWebProto.ExchangeWithdrawContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.ExchangeTransactionContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.ExchangeTransactionContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.ExchangeTransactionContract.displayName = 'TronWebProto.ExchangeTransactionContract';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.ExchangeCreateContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.ExchangeCreateContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.ExchangeCreateContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ExchangeCreateContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    firstTokenId: msg.getFirstTokenId_asB64(),\n    firstTokenBalance: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    secondTokenId: msg.getSecondTokenId_asB64(),\n    secondTokenBalance: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.ExchangeCreateContract}\n */\nTronWebProto.ExchangeCreateContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.ExchangeCreateContract;\n  return TronWebProto.ExchangeCreateContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.ExchangeCreateContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.ExchangeCreateContract}\n */\nTronWebProto.ExchangeCreateContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setFirstTokenId(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFirstTokenBalance(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSecondTokenId(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSecondTokenBalance(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeCreateContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.ExchangeCreateContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.ExchangeCreateContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ExchangeCreateContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getFirstTokenId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getFirstTokenBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getSecondTokenId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getSecondTokenBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ExchangeCreateContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.ExchangeCreateContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeCreateContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ExchangeCreateContract} returns this\n */\nTronWebProto.ExchangeCreateContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes first_token_id = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ExchangeCreateContract.prototype.getFirstTokenId = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes first_token_id = 2;\n * This is a type-conversion wrapper around `getFirstTokenId()`\n * @return {string}\n */\nTronWebProto.ExchangeCreateContract.prototype.getFirstTokenId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getFirstTokenId()));\n};\n\n\n/**\n * optional bytes first_token_id = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getFirstTokenId()`\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeCreateContract.prototype.getFirstTokenId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getFirstTokenId()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ExchangeCreateContract} returns this\n */\nTronWebProto.ExchangeCreateContract.prototype.setFirstTokenId = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional int64 first_token_balance = 3;\n * @return {number}\n */\nTronWebProto.ExchangeCreateContract.prototype.getFirstTokenBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ExchangeCreateContract} returns this\n */\nTronWebProto.ExchangeCreateContract.prototype.setFirstTokenBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional bytes second_token_id = 4;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ExchangeCreateContract.prototype.getSecondTokenId = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes second_token_id = 4;\n * This is a type-conversion wrapper around `getSecondTokenId()`\n * @return {string}\n */\nTronWebProto.ExchangeCreateContract.prototype.getSecondTokenId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSecondTokenId()));\n};\n\n\n/**\n * optional bytes second_token_id = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSecondTokenId()`\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeCreateContract.prototype.getSecondTokenId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSecondTokenId()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ExchangeCreateContract} returns this\n */\nTronWebProto.ExchangeCreateContract.prototype.setSecondTokenId = function(value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n/**\n * optional int64 second_token_balance = 5;\n * @return {number}\n */\nTronWebProto.ExchangeCreateContract.prototype.getSecondTokenBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ExchangeCreateContract} returns this\n */\nTronWebProto.ExchangeCreateContract.prototype.setSecondTokenBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.ExchangeInjectContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.ExchangeInjectContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.ExchangeInjectContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ExchangeInjectContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    exchangeId: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    tokenId: msg.getTokenId_asB64(),\n    quant: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.ExchangeInjectContract}\n */\nTronWebProto.ExchangeInjectContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.ExchangeInjectContract;\n  return TronWebProto.ExchangeInjectContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.ExchangeInjectContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.ExchangeInjectContract}\n */\nTronWebProto.ExchangeInjectContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExchangeId(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTokenId(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setQuant(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeInjectContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.ExchangeInjectContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.ExchangeInjectContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ExchangeInjectContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getExchangeId();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getTokenId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getQuant();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ExchangeInjectContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.ExchangeInjectContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeInjectContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ExchangeInjectContract} returns this\n */\nTronWebProto.ExchangeInjectContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 exchange_id = 2;\n * @return {number}\n */\nTronWebProto.ExchangeInjectContract.prototype.getExchangeId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ExchangeInjectContract} returns this\n */\nTronWebProto.ExchangeInjectContract.prototype.setExchangeId = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bytes token_id = 3;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ExchangeInjectContract.prototype.getTokenId = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes token_id = 3;\n * This is a type-conversion wrapper around `getTokenId()`\n * @return {string}\n */\nTronWebProto.ExchangeInjectContract.prototype.getTokenId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTokenId()));\n};\n\n\n/**\n * optional bytes token_id = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTokenId()`\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeInjectContract.prototype.getTokenId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTokenId()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ExchangeInjectContract} returns this\n */\nTronWebProto.ExchangeInjectContract.prototype.setTokenId = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional int64 quant = 4;\n * @return {number}\n */\nTronWebProto.ExchangeInjectContract.prototype.getQuant = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ExchangeInjectContract} returns this\n */\nTronWebProto.ExchangeInjectContract.prototype.setQuant = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.ExchangeWithdrawContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.ExchangeWithdrawContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.ExchangeWithdrawContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ExchangeWithdrawContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    exchangeId: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    tokenId: msg.getTokenId_asB64(),\n    quant: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.ExchangeWithdrawContract}\n */\nTronWebProto.ExchangeWithdrawContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.ExchangeWithdrawContract;\n  return TronWebProto.ExchangeWithdrawContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.ExchangeWithdrawContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.ExchangeWithdrawContract}\n */\nTronWebProto.ExchangeWithdrawContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExchangeId(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTokenId(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setQuant(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeWithdrawContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.ExchangeWithdrawContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.ExchangeWithdrawContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ExchangeWithdrawContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getExchangeId();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getTokenId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getQuant();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ExchangeWithdrawContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.ExchangeWithdrawContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeWithdrawContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ExchangeWithdrawContract} returns this\n */\nTronWebProto.ExchangeWithdrawContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 exchange_id = 2;\n * @return {number}\n */\nTronWebProto.ExchangeWithdrawContract.prototype.getExchangeId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ExchangeWithdrawContract} returns this\n */\nTronWebProto.ExchangeWithdrawContract.prototype.setExchangeId = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bytes token_id = 3;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ExchangeWithdrawContract.prototype.getTokenId = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes token_id = 3;\n * This is a type-conversion wrapper around `getTokenId()`\n * @return {string}\n */\nTronWebProto.ExchangeWithdrawContract.prototype.getTokenId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTokenId()));\n};\n\n\n/**\n * optional bytes token_id = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTokenId()`\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeWithdrawContract.prototype.getTokenId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTokenId()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ExchangeWithdrawContract} returns this\n */\nTronWebProto.ExchangeWithdrawContract.prototype.setTokenId = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional int64 quant = 4;\n * @return {number}\n */\nTronWebProto.ExchangeWithdrawContract.prototype.getQuant = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ExchangeWithdrawContract} returns this\n */\nTronWebProto.ExchangeWithdrawContract.prototype.setQuant = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.ExchangeTransactionContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.ExchangeTransactionContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.ExchangeTransactionContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ExchangeTransactionContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    exchangeId: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    tokenId: msg.getTokenId_asB64(),\n    quant: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    expected: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.ExchangeTransactionContract}\n */\nTronWebProto.ExchangeTransactionContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.ExchangeTransactionContract;\n  return TronWebProto.ExchangeTransactionContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.ExchangeTransactionContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.ExchangeTransactionContract}\n */\nTronWebProto.ExchangeTransactionContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExchangeId(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTokenId(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setQuant(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpected(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeTransactionContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.ExchangeTransactionContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.ExchangeTransactionContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ExchangeTransactionContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getExchangeId();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getTokenId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getQuant();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getExpected();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ExchangeTransactionContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.ExchangeTransactionContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeTransactionContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ExchangeTransactionContract} returns this\n */\nTronWebProto.ExchangeTransactionContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 exchange_id = 2;\n * @return {number}\n */\nTronWebProto.ExchangeTransactionContract.prototype.getExchangeId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ExchangeTransactionContract} returns this\n */\nTronWebProto.ExchangeTransactionContract.prototype.setExchangeId = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bytes token_id = 3;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ExchangeTransactionContract.prototype.getTokenId = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes token_id = 3;\n * This is a type-conversion wrapper around `getTokenId()`\n * @return {string}\n */\nTronWebProto.ExchangeTransactionContract.prototype.getTokenId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTokenId()));\n};\n\n\n/**\n * optional bytes token_id = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTokenId()`\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeTransactionContract.prototype.getTokenId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTokenId()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ExchangeTransactionContract} returns this\n */\nTronWebProto.ExchangeTransactionContract.prototype.setTokenId = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional int64 quant = 4;\n * @return {number}\n */\nTronWebProto.ExchangeTransactionContract.prototype.getQuant = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ExchangeTransactionContract} returns this\n */\nTronWebProto.ExchangeTransactionContract.prototype.setQuant = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional int64 expected = 5;\n * @return {number}\n */\nTronWebProto.ExchangeTransactionContract.prototype.getExpected = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ExchangeTransactionContract} returns this\n */\nTronWebProto.ExchangeTransactionContract.prototype.setExpected = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\ngoog.object.extend(exports, TronWebProto);\n","// source: core/contract/proposal_contract.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('@tronweb3/google-protobuf');\nvar goog = jspb;\nvar global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof window !== 'undefined' && window) ||\n  (typeof global !== 'undefined' && global) ||\n  (typeof self !== 'undefined' && self) ||\n  (function () { return this; }).call(null) ||\n  Function('return this')();\n\ngoog.exportSymbol('TronWebProto.ProposalApproveContract', null, global);\ngoog.exportSymbol('TronWebProto.ProposalCreateContract', null, global);\ngoog.exportSymbol('TronWebProto.ProposalDeleteContract', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.ProposalApproveContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.ProposalApproveContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.ProposalApproveContract.displayName = 'TronWebProto.ProposalApproveContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.ProposalCreateContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.ProposalCreateContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.ProposalCreateContract.displayName = 'TronWebProto.ProposalCreateContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.ProposalDeleteContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.ProposalDeleteContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.ProposalDeleteContract.displayName = 'TronWebProto.ProposalDeleteContract';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.ProposalApproveContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.ProposalApproveContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.ProposalApproveContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ProposalApproveContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    proposalId: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    isAddApproval: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.ProposalApproveContract}\n */\nTronWebProto.ProposalApproveContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.ProposalApproveContract;\n  return TronWebProto.ProposalApproveContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.ProposalApproveContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.ProposalApproveContract}\n */\nTronWebProto.ProposalApproveContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setProposalId(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsAddApproval(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.ProposalApproveContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.ProposalApproveContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.ProposalApproveContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ProposalApproveContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getProposalId();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getIsAddApproval();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ProposalApproveContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.ProposalApproveContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ProposalApproveContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ProposalApproveContract} returns this\n */\nTronWebProto.ProposalApproveContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 proposal_id = 2;\n * @return {number}\n */\nTronWebProto.ProposalApproveContract.prototype.getProposalId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ProposalApproveContract} returns this\n */\nTronWebProto.ProposalApproveContract.prototype.setProposalId = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bool is_add_approval = 3;\n * @return {boolean}\n */\nTronWebProto.ProposalApproveContract.prototype.getIsAddApproval = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.ProposalApproveContract} returns this\n */\nTronWebProto.ProposalApproveContract.prototype.setIsAddApproval = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.ProposalCreateContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.ProposalCreateContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.ProposalCreateContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ProposalCreateContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    parametersMap: (f = msg.getParametersMap()) ? f.toObject(includeInstance, undefined) : []\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.ProposalCreateContract}\n */\nTronWebProto.ProposalCreateContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.ProposalCreateContract;\n  return TronWebProto.ProposalCreateContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.ProposalCreateContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.ProposalCreateContract}\n */\nTronWebProto.ProposalCreateContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = msg.getParametersMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt64, jspb.BinaryReader.prototype.readInt64, null, 0, 0);\n         });\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.ProposalCreateContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.ProposalCreateContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.ProposalCreateContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ProposalCreateContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getParametersMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeInt64, jspb.BinaryWriter.prototype.writeInt64);\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ProposalCreateContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.ProposalCreateContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ProposalCreateContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ProposalCreateContract} returns this\n */\nTronWebProto.ProposalCreateContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * map<int64, int64> parameters = 2;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,number>}\n */\nTronWebProto.ProposalCreateContract.prototype.getParametersMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,number>} */ (\n      jspb.Message.getMapField(this, 2, opt_noLazyCreate,\n      null));\n};\n\n\n/**\n * Clears values from the map. The map will be non-null.\n * @return {!TronWebProto.ProposalCreateContract} returns this\n */\nTronWebProto.ProposalCreateContract.prototype.clearParametersMap = function() {\n  this.getParametersMap().clear();\n  return this;};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.ProposalDeleteContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.ProposalDeleteContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.ProposalDeleteContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ProposalDeleteContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    proposalId: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.ProposalDeleteContract}\n */\nTronWebProto.ProposalDeleteContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.ProposalDeleteContract;\n  return TronWebProto.ProposalDeleteContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.ProposalDeleteContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.ProposalDeleteContract}\n */\nTronWebProto.ProposalDeleteContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setProposalId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.ProposalDeleteContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.ProposalDeleteContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.ProposalDeleteContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ProposalDeleteContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getProposalId();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ProposalDeleteContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.ProposalDeleteContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ProposalDeleteContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ProposalDeleteContract} returns this\n */\nTronWebProto.ProposalDeleteContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 proposal_id = 2;\n * @return {number}\n */\nTronWebProto.ProposalDeleteContract.prototype.getProposalId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ProposalDeleteContract} returns this\n */\nTronWebProto.ProposalDeleteContract.prototype.setProposalId = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\ngoog.object.extend(exports, TronWebProto);\n","// source: core/contract/smart_contract.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('@tronweb3/google-protobuf');\nvar goog = jspb;\nvar global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof window !== 'undefined' && window) ||\n  (typeof global !== 'undefined' && global) ||\n  (typeof self !== 'undefined' && self) ||\n  (function () { return this; }).call(null) ||\n  Function('return this')();\n\nvar core_Tron_pb = require('../../core/Tron_pb.js');\ngoog.object.extend(proto, core_Tron_pb);\ngoog.exportSymbol('TronWebProto.ClearABIContract', null, global);\ngoog.exportSymbol('TronWebProto.ContractState', null, global);\ngoog.exportSymbol('TronWebProto.CreateSmartContract', null, global);\ngoog.exportSymbol('TronWebProto.SmartContract', null, global);\ngoog.exportSymbol('TronWebProto.SmartContract.ABI', null, global);\ngoog.exportSymbol('TronWebProto.SmartContract.ABI.Entry', null, global);\ngoog.exportSymbol('TronWebProto.SmartContract.ABI.Entry.EntryType', null, global);\ngoog.exportSymbol('TronWebProto.SmartContract.ABI.Entry.Param', null, global);\ngoog.exportSymbol('TronWebProto.SmartContract.ABI.Entry.StateMutabilityType', null, global);\ngoog.exportSymbol('TronWebProto.SmartContractDataWrapper', null, global);\ngoog.exportSymbol('TronWebProto.TriggerSmartContract', null, global);\ngoog.exportSymbol('TronWebProto.UpdateEnergyLimitContract', null, global);\ngoog.exportSymbol('TronWebProto.UpdateSettingContract', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.SmartContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.SmartContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.SmartContract.displayName = 'TronWebProto.SmartContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.SmartContract.ABI = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.SmartContract.ABI.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.SmartContract.ABI, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.SmartContract.ABI.displayName = 'TronWebProto.SmartContract.ABI';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.SmartContract.ABI.Entry = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.SmartContract.ABI.Entry.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.SmartContract.ABI.Entry, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.SmartContract.ABI.Entry.displayName = 'TronWebProto.SmartContract.ABI.Entry';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.SmartContract.ABI.Entry.Param = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.SmartContract.ABI.Entry.Param, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.SmartContract.ABI.Entry.Param.displayName = 'TronWebProto.SmartContract.ABI.Entry.Param';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.ContractState = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.ContractState, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.ContractState.displayName = 'TronWebProto.ContractState';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.CreateSmartContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.CreateSmartContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.CreateSmartContract.displayName = 'TronWebProto.CreateSmartContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.TriggerSmartContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.TriggerSmartContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.TriggerSmartContract.displayName = 'TronWebProto.TriggerSmartContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.ClearABIContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.ClearABIContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.ClearABIContract.displayName = 'TronWebProto.ClearABIContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.UpdateSettingContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.UpdateSettingContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.UpdateSettingContract.displayName = 'TronWebProto.UpdateSettingContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.UpdateEnergyLimitContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.UpdateEnergyLimitContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.UpdateEnergyLimitContract.displayName = 'TronWebProto.UpdateEnergyLimitContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.SmartContractDataWrapper = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.SmartContractDataWrapper, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.SmartContractDataWrapper.displayName = 'TronWebProto.SmartContractDataWrapper';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.SmartContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.SmartContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.SmartContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SmartContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    originAddress: msg.getOriginAddress_asB64(),\n    contractAddress: msg.getContractAddress_asB64(),\n    abi: (f = msg.getAbi()) && TronWebProto.SmartContract.ABI.toObject(includeInstance, f),\n    bytecode: msg.getBytecode_asB64(),\n    callValue: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    consumeUserResourcePercent: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    name: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    originEnergyLimit: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    codeHash: msg.getCodeHash_asB64(),\n    trxHash: msg.getTrxHash_asB64(),\n    version: jspb.Message.getFieldWithDefault(msg, 11, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.SmartContract}\n */\nTronWebProto.SmartContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.SmartContract;\n  return TronWebProto.SmartContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.SmartContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.SmartContract}\n */\nTronWebProto.SmartContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOriginAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setContractAddress(value);\n      break;\n    case 3:\n      var value = new TronWebProto.SmartContract.ABI;\n      reader.readMessage(value,TronWebProto.SmartContract.ABI.deserializeBinaryFromReader);\n      msg.setAbi(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setBytecode(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCallValue(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setConsumeUserResourcePercent(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setOriginEnergyLimit(value);\n      break;\n    case 9:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setCodeHash(value);\n      break;\n    case 10:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTrxHash(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setVersion(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.SmartContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.SmartContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SmartContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOriginAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getContractAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getAbi();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      TronWebProto.SmartContract.ABI.serializeBinaryToWriter\n    );\n  }\n  f = message.getBytecode_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getCallValue();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getConsumeUserResourcePercent();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getOriginEnergyLimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getCodeHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      9,\n      f\n    );\n  }\n  f = message.getTrxHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      10,\n      f\n    );\n  }\n  f = message.getVersion();\n  if (f !== 0) {\n    writer.writeInt32(\n      11,\n      f\n    );\n  }\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.SmartContract.ABI.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.SmartContract.ABI.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.SmartContract.ABI.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.SmartContract.ABI} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SmartContract.ABI.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    entrysList: jspb.Message.toObjectList(msg.getEntrysList(),\n    TronWebProto.SmartContract.ABI.Entry.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.SmartContract.ABI}\n */\nTronWebProto.SmartContract.ABI.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.SmartContract.ABI;\n  return TronWebProto.SmartContract.ABI.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.SmartContract.ABI} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.SmartContract.ABI}\n */\nTronWebProto.SmartContract.ABI.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new TronWebProto.SmartContract.ABI.Entry;\n      reader.readMessage(value,TronWebProto.SmartContract.ABI.Entry.deserializeBinaryFromReader);\n      msg.addEntrys(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContract.ABI.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.SmartContract.ABI.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.SmartContract.ABI} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SmartContract.ABI.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEntrysList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      TronWebProto.SmartContract.ABI.Entry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.SmartContract.ABI.Entry.repeatedFields_ = [4,5];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.SmartContract.ABI.Entry.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.SmartContract.ABI.Entry} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SmartContract.ABI.Entry.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    anonymous: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),\n    constant: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),\n    name: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    inputsList: jspb.Message.toObjectList(msg.getInputsList(),\n    TronWebProto.SmartContract.ABI.Entry.Param.toObject, includeInstance),\n    outputsList: jspb.Message.toObjectList(msg.getOutputsList(),\n    TronWebProto.SmartContract.ABI.Entry.Param.toObject, includeInstance),\n    type: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    payable: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),\n    statemutability: jspb.Message.getFieldWithDefault(msg, 8, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.SmartContract.ABI.Entry}\n */\nTronWebProto.SmartContract.ABI.Entry.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.SmartContract.ABI.Entry;\n  return TronWebProto.SmartContract.ABI.Entry.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.SmartContract.ABI.Entry} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.SmartContract.ABI.Entry}\n */\nTronWebProto.SmartContract.ABI.Entry.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAnonymous(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setConstant(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 4:\n      var value = new TronWebProto.SmartContract.ABI.Entry.Param;\n      reader.readMessage(value,TronWebProto.SmartContract.ABI.Entry.Param.deserializeBinaryFromReader);\n      msg.addInputs(value);\n      break;\n    case 5:\n      var value = new TronWebProto.SmartContract.ABI.Entry.Param;\n      reader.readMessage(value,TronWebProto.SmartContract.ABI.Entry.Param.deserializeBinaryFromReader);\n      msg.addOutputs(value);\n      break;\n    case 6:\n      var value = /** @type {!TronWebProto.SmartContract.ABI.Entry.EntryType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    case 7:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPayable(value);\n      break;\n    case 8:\n      var value = /** @type {!TronWebProto.SmartContract.ABI.Entry.StateMutabilityType} */ (reader.readEnum());\n      msg.setStatemutability(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.SmartContract.ABI.Entry.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.SmartContract.ABI.Entry} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SmartContract.ABI.Entry.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAnonymous();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getConstant();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getInputsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      TronWebProto.SmartContract.ABI.Entry.Param.serializeBinaryToWriter\n    );\n  }\n  f = message.getOutputsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      5,\n      f,\n      TronWebProto.SmartContract.ABI.Entry.Param.serializeBinaryToWriter\n    );\n  }\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      6,\n      f\n    );\n  }\n  f = message.getPayable();\n  if (f) {\n    writer.writeBool(\n      7,\n      f\n    );\n  }\n  f = message.getStatemutability();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nTronWebProto.SmartContract.ABI.Entry.EntryType = {\n  UNKNOWNENTRYTYPE: 0,\n  CONSTRUCTOR: 1,\n  FUNCTION: 2,\n  EVENT: 3,\n  FALLBACK: 4,\n  RECEIVE: 5,\n  ERROR: 6\n};\n\n/**\n * @enum {number}\n */\nTronWebProto.SmartContract.ABI.Entry.StateMutabilityType = {\n  UNKNOWNMUTABILITYTYPE: 0,\n  PURE: 1,\n  VIEW: 2,\n  NONPAYABLE: 3,\n  PAYABLE: 4\n};\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.SmartContract.ABI.Entry.Param.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.SmartContract.ABI.Entry.Param.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.SmartContract.ABI.Entry.Param} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SmartContract.ABI.Entry.Param.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    indexed: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),\n    name: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    type: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.SmartContract.ABI.Entry.Param}\n */\nTronWebProto.SmartContract.ABI.Entry.Param.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.SmartContract.ABI.Entry.Param;\n  return TronWebProto.SmartContract.ABI.Entry.Param.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.SmartContract.ABI.Entry.Param} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.SmartContract.ABI.Entry.Param}\n */\nTronWebProto.SmartContract.ABI.Entry.Param.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIndexed(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContract.ABI.Entry.Param.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.SmartContract.ABI.Entry.Param.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.SmartContract.ABI.Entry.Param} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SmartContract.ABI.Entry.Param.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getIndexed();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getType();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool indexed = 1;\n * @return {boolean}\n */\nTronWebProto.SmartContract.ABI.Entry.Param.prototype.getIndexed = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.SmartContract.ABI.Entry.Param} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.Param.prototype.setIndexed = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n\n/**\n * optional string name = 2;\n * @return {string}\n */\nTronWebProto.SmartContract.ABI.Entry.Param.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!TronWebProto.SmartContract.ABI.Entry.Param} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.Param.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string type = 3;\n * @return {string}\n */\nTronWebProto.SmartContract.ABI.Entry.Param.prototype.getType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!TronWebProto.SmartContract.ABI.Entry.Param} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.Param.prototype.setType = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional bool anonymous = 1;\n * @return {boolean}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.getAnonymous = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.SmartContract.ABI.Entry} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.setAnonymous = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n\n/**\n * optional bool constant = 2;\n * @return {boolean}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.getConstant = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.SmartContract.ABI.Entry} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.setConstant = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n/**\n * optional string name = 3;\n * @return {string}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!TronWebProto.SmartContract.ABI.Entry} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * repeated Param inputs = 4;\n * @return {!Array<!TronWebProto.SmartContract.ABI.Entry.Param>}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.getInputsList = function() {\n  return /** @type{!Array<!TronWebProto.SmartContract.ABI.Entry.Param>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.SmartContract.ABI.Entry.Param, 4));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.SmartContract.ABI.Entry.Param>} value\n * @return {!TronWebProto.SmartContract.ABI.Entry} returns this\n*/\nTronWebProto.SmartContract.ABI.Entry.prototype.setInputsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!TronWebProto.SmartContract.ABI.Entry.Param=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.SmartContract.ABI.Entry.Param}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.addInputs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, TronWebProto.SmartContract.ABI.Entry.Param, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.SmartContract.ABI.Entry} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.clearInputsList = function() {\n  return this.setInputsList([]);\n};\n\n\n/**\n * repeated Param outputs = 5;\n * @return {!Array<!TronWebProto.SmartContract.ABI.Entry.Param>}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.getOutputsList = function() {\n  return /** @type{!Array<!TronWebProto.SmartContract.ABI.Entry.Param>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.SmartContract.ABI.Entry.Param, 5));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.SmartContract.ABI.Entry.Param>} value\n * @return {!TronWebProto.SmartContract.ABI.Entry} returns this\n*/\nTronWebProto.SmartContract.ABI.Entry.prototype.setOutputsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n\n\n/**\n * @param {!TronWebProto.SmartContract.ABI.Entry.Param=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.SmartContract.ABI.Entry.Param}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.addOutputs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, TronWebProto.SmartContract.ABI.Entry.Param, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.SmartContract.ABI.Entry} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.clearOutputsList = function() {\n  return this.setOutputsList([]);\n};\n\n\n/**\n * optional EntryType type = 6;\n * @return {!TronWebProto.SmartContract.ABI.Entry.EntryType}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.getType = function() {\n  return /** @type {!TronWebProto.SmartContract.ABI.Entry.EntryType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {!TronWebProto.SmartContract.ABI.Entry.EntryType} value\n * @return {!TronWebProto.SmartContract.ABI.Entry} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.setType = function(value) {\n  return jspb.Message.setProto3EnumField(this, 6, value);\n};\n\n\n/**\n * optional bool payable = 7;\n * @return {boolean}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.getPayable = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.SmartContract.ABI.Entry} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.setPayable = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 7, value);\n};\n\n\n/**\n * optional StateMutabilityType stateMutability = 8;\n * @return {!TronWebProto.SmartContract.ABI.Entry.StateMutabilityType}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.getStatemutability = function() {\n  return /** @type {!TronWebProto.SmartContract.ABI.Entry.StateMutabilityType} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {!TronWebProto.SmartContract.ABI.Entry.StateMutabilityType} value\n * @return {!TronWebProto.SmartContract.ABI.Entry} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.setStatemutability = function(value) {\n  return jspb.Message.setProto3EnumField(this, 8, value);\n};\n\n\n/**\n * repeated Entry entrys = 1;\n * @return {!Array<!TronWebProto.SmartContract.ABI.Entry>}\n */\nTronWebProto.SmartContract.ABI.prototype.getEntrysList = function() {\n  return /** @type{!Array<!TronWebProto.SmartContract.ABI.Entry>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.SmartContract.ABI.Entry, 1));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.SmartContract.ABI.Entry>} value\n * @return {!TronWebProto.SmartContract.ABI} returns this\n*/\nTronWebProto.SmartContract.ABI.prototype.setEntrysList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!TronWebProto.SmartContract.ABI.Entry=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.SmartContract.ABI.Entry}\n */\nTronWebProto.SmartContract.ABI.prototype.addEntrys = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, TronWebProto.SmartContract.ABI.Entry, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.SmartContract.ABI} returns this\n */\nTronWebProto.SmartContract.ABI.prototype.clearEntrysList = function() {\n  return this.setEntrysList([]);\n};\n\n\n/**\n * optional bytes origin_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.SmartContract.prototype.getOriginAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes origin_address = 1;\n * This is a type-conversion wrapper around `getOriginAddress()`\n * @return {string}\n */\nTronWebProto.SmartContract.prototype.getOriginAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOriginAddress()));\n};\n\n\n/**\n * optional bytes origin_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOriginAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContract.prototype.getOriginAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOriginAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.setOriginAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes contract_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.SmartContract.prototype.getContractAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes contract_address = 2;\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {string}\n */\nTronWebProto.SmartContract.prototype.getContractAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getContractAddress()));\n};\n\n\n/**\n * optional bytes contract_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContract.prototype.getContractAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getContractAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.setContractAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional ABI abi = 3;\n * @return {?TronWebProto.SmartContract.ABI}\n */\nTronWebProto.SmartContract.prototype.getAbi = function() {\n  return /** @type{?TronWebProto.SmartContract.ABI} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.SmartContract.ABI, 3));\n};\n\n\n/**\n * @param {?TronWebProto.SmartContract.ABI|undefined} value\n * @return {!TronWebProto.SmartContract} returns this\n*/\nTronWebProto.SmartContract.prototype.setAbi = function(value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.clearAbi = function() {\n  return this.setAbi(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.SmartContract.prototype.hasAbi = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional bytes bytecode = 4;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.SmartContract.prototype.getBytecode = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes bytecode = 4;\n * This is a type-conversion wrapper around `getBytecode()`\n * @return {string}\n */\nTronWebProto.SmartContract.prototype.getBytecode_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getBytecode()));\n};\n\n\n/**\n * optional bytes bytecode = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBytecode()`\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContract.prototype.getBytecode_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getBytecode()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.setBytecode = function(value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n/**\n * optional int64 call_value = 5;\n * @return {number}\n */\nTronWebProto.SmartContract.prototype.getCallValue = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.setCallValue = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional int64 consume_user_resource_percent = 6;\n * @return {number}\n */\nTronWebProto.SmartContract.prototype.getConsumeUserResourcePercent = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.setConsumeUserResourcePercent = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * optional string name = 7;\n * @return {string}\n */\nTronWebProto.SmartContract.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 7, value);\n};\n\n\n/**\n * optional int64 origin_energy_limit = 8;\n * @return {number}\n */\nTronWebProto.SmartContract.prototype.getOriginEnergyLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.setOriginEnergyLimit = function(value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * optional bytes code_hash = 9;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.SmartContract.prototype.getCodeHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, \"\"));\n};\n\n\n/**\n * optional bytes code_hash = 9;\n * This is a type-conversion wrapper around `getCodeHash()`\n * @return {string}\n */\nTronWebProto.SmartContract.prototype.getCodeHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getCodeHash()));\n};\n\n\n/**\n * optional bytes code_hash = 9;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCodeHash()`\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContract.prototype.getCodeHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getCodeHash()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.setCodeHash = function(value) {\n  return jspb.Message.setProto3BytesField(this, 9, value);\n};\n\n\n/**\n * optional bytes trx_hash = 10;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.SmartContract.prototype.getTrxHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 10, \"\"));\n};\n\n\n/**\n * optional bytes trx_hash = 10;\n * This is a type-conversion wrapper around `getTrxHash()`\n * @return {string}\n */\nTronWebProto.SmartContract.prototype.getTrxHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTrxHash()));\n};\n\n\n/**\n * optional bytes trx_hash = 10;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTrxHash()`\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContract.prototype.getTrxHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTrxHash()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.setTrxHash = function(value) {\n  return jspb.Message.setProto3BytesField(this, 10, value);\n};\n\n\n/**\n * optional int32 version = 11;\n * @return {number}\n */\nTronWebProto.SmartContract.prototype.getVersion = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.setVersion = function(value) {\n  return jspb.Message.setProto3IntField(this, 11, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.ContractState.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.ContractState.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.ContractState} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ContractState.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    energyUsage: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    energyFactor: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    updateCycle: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.ContractState}\n */\nTronWebProto.ContractState.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.ContractState;\n  return TronWebProto.ContractState.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.ContractState} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.ContractState}\n */\nTronWebProto.ContractState.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setEnergyUsage(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setEnergyFactor(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setUpdateCycle(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.ContractState.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.ContractState.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.ContractState} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ContractState.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEnergyUsage();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getEnergyFactor();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getUpdateCycle();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 energy_usage = 1;\n * @return {number}\n */\nTronWebProto.ContractState.prototype.getEnergyUsage = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ContractState} returns this\n */\nTronWebProto.ContractState.prototype.setEnergyUsage = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int64 energy_factor = 2;\n * @return {number}\n */\nTronWebProto.ContractState.prototype.getEnergyFactor = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ContractState} returns this\n */\nTronWebProto.ContractState.prototype.setEnergyFactor = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int64 update_cycle = 3;\n * @return {number}\n */\nTronWebProto.ContractState.prototype.getUpdateCycle = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ContractState} returns this\n */\nTronWebProto.ContractState.prototype.setUpdateCycle = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.CreateSmartContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.CreateSmartContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.CreateSmartContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.CreateSmartContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    newContract: (f = msg.getNewContract()) && TronWebProto.SmartContract.toObject(includeInstance, f),\n    callTokenValue: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    tokenId: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.CreateSmartContract}\n */\nTronWebProto.CreateSmartContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.CreateSmartContract;\n  return TronWebProto.CreateSmartContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.CreateSmartContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.CreateSmartContract}\n */\nTronWebProto.CreateSmartContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = new TronWebProto.SmartContract;\n      reader.readMessage(value,TronWebProto.SmartContract.deserializeBinaryFromReader);\n      msg.setNewContract(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCallTokenValue(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTokenId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.CreateSmartContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.CreateSmartContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.CreateSmartContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.CreateSmartContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getNewContract();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      TronWebProto.SmartContract.serializeBinaryToWriter\n    );\n  }\n  f = message.getCallTokenValue();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getTokenId();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.CreateSmartContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.CreateSmartContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.CreateSmartContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.CreateSmartContract} returns this\n */\nTronWebProto.CreateSmartContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional SmartContract new_contract = 2;\n * @return {?TronWebProto.SmartContract}\n */\nTronWebProto.CreateSmartContract.prototype.getNewContract = function() {\n  return /** @type{?TronWebProto.SmartContract} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.SmartContract, 2));\n};\n\n\n/**\n * @param {?TronWebProto.SmartContract|undefined} value\n * @return {!TronWebProto.CreateSmartContract} returns this\n*/\nTronWebProto.CreateSmartContract.prototype.setNewContract = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.CreateSmartContract} returns this\n */\nTronWebProto.CreateSmartContract.prototype.clearNewContract = function() {\n  return this.setNewContract(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.CreateSmartContract.prototype.hasNewContract = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional int64 call_token_value = 3;\n * @return {number}\n */\nTronWebProto.CreateSmartContract.prototype.getCallTokenValue = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.CreateSmartContract} returns this\n */\nTronWebProto.CreateSmartContract.prototype.setCallTokenValue = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int64 token_id = 4;\n * @return {number}\n */\nTronWebProto.CreateSmartContract.prototype.getTokenId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.CreateSmartContract} returns this\n */\nTronWebProto.CreateSmartContract.prototype.setTokenId = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.TriggerSmartContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.TriggerSmartContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.TriggerSmartContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.TriggerSmartContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    contractAddress: msg.getContractAddress_asB64(),\n    callValue: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    data: msg.getData_asB64(),\n    callTokenValue: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    tokenId: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.TriggerSmartContract}\n */\nTronWebProto.TriggerSmartContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.TriggerSmartContract;\n  return TronWebProto.TriggerSmartContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.TriggerSmartContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.TriggerSmartContract}\n */\nTronWebProto.TriggerSmartContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setContractAddress(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCallValue(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setData(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCallTokenValue(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTokenId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.TriggerSmartContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.TriggerSmartContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.TriggerSmartContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.TriggerSmartContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getContractAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getCallValue();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getData_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getCallTokenValue();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getTokenId();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.TriggerSmartContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.TriggerSmartContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.TriggerSmartContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.TriggerSmartContract} returns this\n */\nTronWebProto.TriggerSmartContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes contract_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.TriggerSmartContract.prototype.getContractAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes contract_address = 2;\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {string}\n */\nTronWebProto.TriggerSmartContract.prototype.getContractAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getContractAddress()));\n};\n\n\n/**\n * optional bytes contract_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.TriggerSmartContract.prototype.getContractAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getContractAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.TriggerSmartContract} returns this\n */\nTronWebProto.TriggerSmartContract.prototype.setContractAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional int64 call_value = 3;\n * @return {number}\n */\nTronWebProto.TriggerSmartContract.prototype.getCallValue = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.TriggerSmartContract} returns this\n */\nTronWebProto.TriggerSmartContract.prototype.setCallValue = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional bytes data = 4;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.TriggerSmartContract.prototype.getData = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes data = 4;\n * This is a type-conversion wrapper around `getData()`\n * @return {string}\n */\nTronWebProto.TriggerSmartContract.prototype.getData_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getData()));\n};\n\n\n/**\n * optional bytes data = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getData()`\n * @return {!Uint8Array}\n */\nTronWebProto.TriggerSmartContract.prototype.getData_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getData()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.TriggerSmartContract} returns this\n */\nTronWebProto.TriggerSmartContract.prototype.setData = function(value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n/**\n * optional int64 call_token_value = 5;\n * @return {number}\n */\nTronWebProto.TriggerSmartContract.prototype.getCallTokenValue = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.TriggerSmartContract} returns this\n */\nTronWebProto.TriggerSmartContract.prototype.setCallTokenValue = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional int64 token_id = 6;\n * @return {number}\n */\nTronWebProto.TriggerSmartContract.prototype.getTokenId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.TriggerSmartContract} returns this\n */\nTronWebProto.TriggerSmartContract.prototype.setTokenId = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.ClearABIContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.ClearABIContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.ClearABIContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ClearABIContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    contractAddress: msg.getContractAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.ClearABIContract}\n */\nTronWebProto.ClearABIContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.ClearABIContract;\n  return TronWebProto.ClearABIContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.ClearABIContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.ClearABIContract}\n */\nTronWebProto.ClearABIContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setContractAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.ClearABIContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.ClearABIContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.ClearABIContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ClearABIContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getContractAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ClearABIContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.ClearABIContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ClearABIContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ClearABIContract} returns this\n */\nTronWebProto.ClearABIContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes contract_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ClearABIContract.prototype.getContractAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes contract_address = 2;\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {string}\n */\nTronWebProto.ClearABIContract.prototype.getContractAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getContractAddress()));\n};\n\n\n/**\n * optional bytes contract_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ClearABIContract.prototype.getContractAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getContractAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ClearABIContract} returns this\n */\nTronWebProto.ClearABIContract.prototype.setContractAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.UpdateSettingContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.UpdateSettingContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.UpdateSettingContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UpdateSettingContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    contractAddress: msg.getContractAddress_asB64(),\n    consumeUserResourcePercent: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.UpdateSettingContract}\n */\nTronWebProto.UpdateSettingContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.UpdateSettingContract;\n  return TronWebProto.UpdateSettingContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.UpdateSettingContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.UpdateSettingContract}\n */\nTronWebProto.UpdateSettingContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setContractAddress(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setConsumeUserResourcePercent(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateSettingContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.UpdateSettingContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.UpdateSettingContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UpdateSettingContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getContractAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getConsumeUserResourcePercent();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UpdateSettingContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.UpdateSettingContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateSettingContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UpdateSettingContract} returns this\n */\nTronWebProto.UpdateSettingContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes contract_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UpdateSettingContract.prototype.getContractAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes contract_address = 2;\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {string}\n */\nTronWebProto.UpdateSettingContract.prototype.getContractAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getContractAddress()));\n};\n\n\n/**\n * optional bytes contract_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateSettingContract.prototype.getContractAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getContractAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UpdateSettingContract} returns this\n */\nTronWebProto.UpdateSettingContract.prototype.setContractAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional int64 consume_user_resource_percent = 3;\n * @return {number}\n */\nTronWebProto.UpdateSettingContract.prototype.getConsumeUserResourcePercent = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.UpdateSettingContract} returns this\n */\nTronWebProto.UpdateSettingContract.prototype.setConsumeUserResourcePercent = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.UpdateEnergyLimitContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.UpdateEnergyLimitContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UpdateEnergyLimitContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    contractAddress: msg.getContractAddress_asB64(),\n    originEnergyLimit: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.UpdateEnergyLimitContract}\n */\nTronWebProto.UpdateEnergyLimitContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.UpdateEnergyLimitContract;\n  return TronWebProto.UpdateEnergyLimitContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.UpdateEnergyLimitContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.UpdateEnergyLimitContract}\n */\nTronWebProto.UpdateEnergyLimitContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setContractAddress(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setOriginEnergyLimit(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.UpdateEnergyLimitContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.UpdateEnergyLimitContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UpdateEnergyLimitContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getContractAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getOriginEnergyLimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UpdateEnergyLimitContract} returns this\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes contract_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.getContractAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes contract_address = 2;\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {string}\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.getContractAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getContractAddress()));\n};\n\n\n/**\n * optional bytes contract_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.getContractAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getContractAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UpdateEnergyLimitContract} returns this\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.setContractAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional int64 origin_energy_limit = 3;\n * @return {number}\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.getOriginEnergyLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.UpdateEnergyLimitContract} returns this\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.setOriginEnergyLimit = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.SmartContractDataWrapper.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.SmartContractDataWrapper.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.SmartContractDataWrapper} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SmartContractDataWrapper.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    smartContract: (f = msg.getSmartContract()) && TronWebProto.SmartContract.toObject(includeInstance, f),\n    runtimecode: msg.getRuntimecode_asB64(),\n    contractState: (f = msg.getContractState()) && TronWebProto.ContractState.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.SmartContractDataWrapper}\n */\nTronWebProto.SmartContractDataWrapper.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.SmartContractDataWrapper;\n  return TronWebProto.SmartContractDataWrapper.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.SmartContractDataWrapper} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.SmartContractDataWrapper}\n */\nTronWebProto.SmartContractDataWrapper.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new TronWebProto.SmartContract;\n      reader.readMessage(value,TronWebProto.SmartContract.deserializeBinaryFromReader);\n      msg.setSmartContract(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRuntimecode(value);\n      break;\n    case 3:\n      var value = new TronWebProto.ContractState;\n      reader.readMessage(value,TronWebProto.ContractState.deserializeBinaryFromReader);\n      msg.setContractState(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContractDataWrapper.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.SmartContractDataWrapper.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.SmartContractDataWrapper} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SmartContractDataWrapper.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSmartContract();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      TronWebProto.SmartContract.serializeBinaryToWriter\n    );\n  }\n  f = message.getRuntimecode_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getContractState();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      TronWebProto.ContractState.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional SmartContract smart_contract = 1;\n * @return {?TronWebProto.SmartContract}\n */\nTronWebProto.SmartContractDataWrapper.prototype.getSmartContract = function() {\n  return /** @type{?TronWebProto.SmartContract} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.SmartContract, 1));\n};\n\n\n/**\n * @param {?TronWebProto.SmartContract|undefined} value\n * @return {!TronWebProto.SmartContractDataWrapper} returns this\n*/\nTronWebProto.SmartContractDataWrapper.prototype.setSmartContract = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.SmartContractDataWrapper} returns this\n */\nTronWebProto.SmartContractDataWrapper.prototype.clearSmartContract = function() {\n  return this.setSmartContract(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.SmartContractDataWrapper.prototype.hasSmartContract = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes runtimecode = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.SmartContractDataWrapper.prototype.getRuntimecode = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes runtimecode = 2;\n * This is a type-conversion wrapper around `getRuntimecode()`\n * @return {string}\n */\nTronWebProto.SmartContractDataWrapper.prototype.getRuntimecode_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRuntimecode()));\n};\n\n\n/**\n * optional bytes runtimecode = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRuntimecode()`\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContractDataWrapper.prototype.getRuntimecode_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRuntimecode()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.SmartContractDataWrapper} returns this\n */\nTronWebProto.SmartContractDataWrapper.prototype.setRuntimecode = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional ContractState contract_state = 3;\n * @return {?TronWebProto.ContractState}\n */\nTronWebProto.SmartContractDataWrapper.prototype.getContractState = function() {\n  return /** @type{?TronWebProto.ContractState} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.ContractState, 3));\n};\n\n\n/**\n * @param {?TronWebProto.ContractState|undefined} value\n * @return {!TronWebProto.SmartContractDataWrapper} returns this\n*/\nTronWebProto.SmartContractDataWrapper.prototype.setContractState = function(value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.SmartContractDataWrapper} returns this\n */\nTronWebProto.SmartContractDataWrapper.prototype.clearContractState = function() {\n  return this.setContractState(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.SmartContractDataWrapper.prototype.hasContractState = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\ngoog.object.extend(exports, TronWebProto);\n","// source: core/contract/storage_contract.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('@tronweb3/google-protobuf');\nvar goog = jspb;\nvar global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof window !== 'undefined' && window) ||\n  (typeof global !== 'undefined' && global) ||\n  (typeof self !== 'undefined' && self) ||\n  (function () { return this; }).call(null) ||\n  Function('return this')();\n\ngoog.exportSymbol('TronWebProto.BuyStorageBytesContract', null, global);\ngoog.exportSymbol('TronWebProto.BuyStorageContract', null, global);\ngoog.exportSymbol('TronWebProto.SellStorageContract', null, global);\ngoog.exportSymbol('TronWebProto.UpdateBrokerageContract', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.BuyStorageBytesContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.BuyStorageBytesContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.BuyStorageBytesContract.displayName = 'TronWebProto.BuyStorageBytesContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.BuyStorageContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.BuyStorageContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.BuyStorageContract.displayName = 'TronWebProto.BuyStorageContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.SellStorageContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.SellStorageContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.SellStorageContract.displayName = 'TronWebProto.SellStorageContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.UpdateBrokerageContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.UpdateBrokerageContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.UpdateBrokerageContract.displayName = 'TronWebProto.UpdateBrokerageContract';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.BuyStorageBytesContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.BuyStorageBytesContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.BuyStorageBytesContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.BuyStorageBytesContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    bytes: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.BuyStorageBytesContract}\n */\nTronWebProto.BuyStorageBytesContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.BuyStorageBytesContract;\n  return TronWebProto.BuyStorageBytesContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.BuyStorageBytesContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.BuyStorageBytesContract}\n */\nTronWebProto.BuyStorageBytesContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBytes(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.BuyStorageBytesContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.BuyStorageBytesContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.BuyStorageBytesContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.BuyStorageBytesContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getBytes();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.BuyStorageBytesContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.BuyStorageBytesContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.BuyStorageBytesContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.BuyStorageBytesContract} returns this\n */\nTronWebProto.BuyStorageBytesContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 bytes = 2;\n * @return {number}\n */\nTronWebProto.BuyStorageBytesContract.prototype.getBytes = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.BuyStorageBytesContract} returns this\n */\nTronWebProto.BuyStorageBytesContract.prototype.setBytes = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.BuyStorageContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.BuyStorageContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.BuyStorageContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.BuyStorageContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    quant: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.BuyStorageContract}\n */\nTronWebProto.BuyStorageContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.BuyStorageContract;\n  return TronWebProto.BuyStorageContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.BuyStorageContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.BuyStorageContract}\n */\nTronWebProto.BuyStorageContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setQuant(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.BuyStorageContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.BuyStorageContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.BuyStorageContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.BuyStorageContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getQuant();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.BuyStorageContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.BuyStorageContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.BuyStorageContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.BuyStorageContract} returns this\n */\nTronWebProto.BuyStorageContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 quant = 2;\n * @return {number}\n */\nTronWebProto.BuyStorageContract.prototype.getQuant = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.BuyStorageContract} returns this\n */\nTronWebProto.BuyStorageContract.prototype.setQuant = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.SellStorageContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.SellStorageContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.SellStorageContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SellStorageContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    storageBytes: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.SellStorageContract}\n */\nTronWebProto.SellStorageContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.SellStorageContract;\n  return TronWebProto.SellStorageContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.SellStorageContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.SellStorageContract}\n */\nTronWebProto.SellStorageContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setStorageBytes(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.SellStorageContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.SellStorageContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.SellStorageContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SellStorageContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getStorageBytes();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.SellStorageContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.SellStorageContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.SellStorageContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.SellStorageContract} returns this\n */\nTronWebProto.SellStorageContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 storage_bytes = 2;\n * @return {number}\n */\nTronWebProto.SellStorageContract.prototype.getStorageBytes = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.SellStorageContract} returns this\n */\nTronWebProto.SellStorageContract.prototype.setStorageBytes = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.UpdateBrokerageContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.UpdateBrokerageContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.UpdateBrokerageContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UpdateBrokerageContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    brokerage: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.UpdateBrokerageContract}\n */\nTronWebProto.UpdateBrokerageContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.UpdateBrokerageContract;\n  return TronWebProto.UpdateBrokerageContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.UpdateBrokerageContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.UpdateBrokerageContract}\n */\nTronWebProto.UpdateBrokerageContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setBrokerage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateBrokerageContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.UpdateBrokerageContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.UpdateBrokerageContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UpdateBrokerageContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getBrokerage();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UpdateBrokerageContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.UpdateBrokerageContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateBrokerageContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UpdateBrokerageContract} returns this\n */\nTronWebProto.UpdateBrokerageContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int32 brokerage = 2;\n * @return {number}\n */\nTronWebProto.UpdateBrokerageContract.prototype.getBrokerage = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.UpdateBrokerageContract} returns this\n */\nTronWebProto.UpdateBrokerageContract.prototype.setBrokerage = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\ngoog.object.extend(exports, TronWebProto);\n","// source: core/contract/witness_contract.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('@tronweb3/google-protobuf');\nvar goog = jspb;\nvar global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof window !== 'undefined' && window) ||\n  (typeof global !== 'undefined' && global) ||\n  (typeof self !== 'undefined' && self) ||\n  (function () { return this; }).call(null) ||\n  Function('return this')();\n\ngoog.exportSymbol('TronWebProto.VoteWitnessContract', null, global);\ngoog.exportSymbol('TronWebProto.VoteWitnessContract.Vote', null, global);\ngoog.exportSymbol('TronWebProto.WitnessCreateContract', null, global);\ngoog.exportSymbol('TronWebProto.WitnessUpdateContract', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.WitnessCreateContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.WitnessCreateContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.WitnessCreateContract.displayName = 'TronWebProto.WitnessCreateContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.WitnessUpdateContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.WitnessUpdateContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.WitnessUpdateContract.displayName = 'TronWebProto.WitnessUpdateContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.VoteWitnessContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.VoteWitnessContract.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.VoteWitnessContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.VoteWitnessContract.displayName = 'TronWebProto.VoteWitnessContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.VoteWitnessContract.Vote = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.VoteWitnessContract.Vote, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.VoteWitnessContract.Vote.displayName = 'TronWebProto.VoteWitnessContract.Vote';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.WitnessCreateContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.WitnessCreateContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.WitnessCreateContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.WitnessCreateContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    url: msg.getUrl_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.WitnessCreateContract}\n */\nTronWebProto.WitnessCreateContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.WitnessCreateContract;\n  return TronWebProto.WitnessCreateContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.WitnessCreateContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.WitnessCreateContract}\n */\nTronWebProto.WitnessCreateContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setUrl(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.WitnessCreateContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.WitnessCreateContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.WitnessCreateContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.WitnessCreateContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getUrl_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.WitnessCreateContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.WitnessCreateContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.WitnessCreateContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.WitnessCreateContract} returns this\n */\nTronWebProto.WitnessCreateContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes url = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.WitnessCreateContract.prototype.getUrl = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes url = 2;\n * This is a type-conversion wrapper around `getUrl()`\n * @return {string}\n */\nTronWebProto.WitnessCreateContract.prototype.getUrl_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getUrl()));\n};\n\n\n/**\n * optional bytes url = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getUrl()`\n * @return {!Uint8Array}\n */\nTronWebProto.WitnessCreateContract.prototype.getUrl_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getUrl()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.WitnessCreateContract} returns this\n */\nTronWebProto.WitnessCreateContract.prototype.setUrl = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.WitnessUpdateContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.WitnessUpdateContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.WitnessUpdateContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.WitnessUpdateContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    updateUrl: msg.getUpdateUrl_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.WitnessUpdateContract}\n */\nTronWebProto.WitnessUpdateContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.WitnessUpdateContract;\n  return TronWebProto.WitnessUpdateContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.WitnessUpdateContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.WitnessUpdateContract}\n */\nTronWebProto.WitnessUpdateContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 12:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setUpdateUrl(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.WitnessUpdateContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.WitnessUpdateContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.WitnessUpdateContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.WitnessUpdateContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getUpdateUrl_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      12,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.WitnessUpdateContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.WitnessUpdateContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.WitnessUpdateContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.WitnessUpdateContract} returns this\n */\nTronWebProto.WitnessUpdateContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes update_url = 12;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.WitnessUpdateContract.prototype.getUpdateUrl = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, \"\"));\n};\n\n\n/**\n * optional bytes update_url = 12;\n * This is a type-conversion wrapper around `getUpdateUrl()`\n * @return {string}\n */\nTronWebProto.WitnessUpdateContract.prototype.getUpdateUrl_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getUpdateUrl()));\n};\n\n\n/**\n * optional bytes update_url = 12;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getUpdateUrl()`\n * @return {!Uint8Array}\n */\nTronWebProto.WitnessUpdateContract.prototype.getUpdateUrl_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getUpdateUrl()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.WitnessUpdateContract} returns this\n */\nTronWebProto.WitnessUpdateContract.prototype.setUpdateUrl = function(value) {\n  return jspb.Message.setProto3BytesField(this, 12, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.VoteWitnessContract.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.VoteWitnessContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.VoteWitnessContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.VoteWitnessContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.VoteWitnessContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    votesList: jspb.Message.toObjectList(msg.getVotesList(),\n    TronWebProto.VoteWitnessContract.Vote.toObject, includeInstance),\n    support: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.VoteWitnessContract}\n */\nTronWebProto.VoteWitnessContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.VoteWitnessContract;\n  return TronWebProto.VoteWitnessContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.VoteWitnessContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.VoteWitnessContract}\n */\nTronWebProto.VoteWitnessContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = new TronWebProto.VoteWitnessContract.Vote;\n      reader.readMessage(value,TronWebProto.VoteWitnessContract.Vote.deserializeBinaryFromReader);\n      msg.addVotes(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSupport(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.VoteWitnessContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.VoteWitnessContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.VoteWitnessContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.VoteWitnessContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getVotesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      TronWebProto.VoteWitnessContract.Vote.serializeBinaryToWriter\n    );\n  }\n  f = message.getSupport();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.VoteWitnessContract.Vote.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.VoteWitnessContract.Vote.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.VoteWitnessContract.Vote} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.VoteWitnessContract.Vote.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    voteAddress: msg.getVoteAddress_asB64(),\n    voteCount: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.VoteWitnessContract.Vote}\n */\nTronWebProto.VoteWitnessContract.Vote.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.VoteWitnessContract.Vote;\n  return TronWebProto.VoteWitnessContract.Vote.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.VoteWitnessContract.Vote} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.VoteWitnessContract.Vote}\n */\nTronWebProto.VoteWitnessContract.Vote.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setVoteAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setVoteCount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.VoteWitnessContract.Vote.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.VoteWitnessContract.Vote.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.VoteWitnessContract.Vote} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.VoteWitnessContract.Vote.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getVoteAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getVoteCount();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes vote_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.VoteWitnessContract.Vote.prototype.getVoteAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes vote_address = 1;\n * This is a type-conversion wrapper around `getVoteAddress()`\n * @return {string}\n */\nTronWebProto.VoteWitnessContract.Vote.prototype.getVoteAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getVoteAddress()));\n};\n\n\n/**\n * optional bytes vote_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getVoteAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.VoteWitnessContract.Vote.prototype.getVoteAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getVoteAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.VoteWitnessContract.Vote} returns this\n */\nTronWebProto.VoteWitnessContract.Vote.prototype.setVoteAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 vote_count = 2;\n * @return {number}\n */\nTronWebProto.VoteWitnessContract.Vote.prototype.getVoteCount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.VoteWitnessContract.Vote} returns this\n */\nTronWebProto.VoteWitnessContract.Vote.prototype.setVoteCount = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.VoteWitnessContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.VoteWitnessContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.VoteWitnessContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.VoteWitnessContract} returns this\n */\nTronWebProto.VoteWitnessContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * repeated Vote votes = 2;\n * @return {!Array<!TronWebProto.VoteWitnessContract.Vote>}\n */\nTronWebProto.VoteWitnessContract.prototype.getVotesList = function() {\n  return /** @type{!Array<!TronWebProto.VoteWitnessContract.Vote>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.VoteWitnessContract.Vote, 2));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.VoteWitnessContract.Vote>} value\n * @return {!TronWebProto.VoteWitnessContract} returns this\n*/\nTronWebProto.VoteWitnessContract.prototype.setVotesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!TronWebProto.VoteWitnessContract.Vote=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.VoteWitnessContract.Vote}\n */\nTronWebProto.VoteWitnessContract.prototype.addVotes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, TronWebProto.VoteWitnessContract.Vote, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.VoteWitnessContract} returns this\n */\nTronWebProto.VoteWitnessContract.prototype.clearVotesList = function() {\n  return this.setVotesList([]);\n};\n\n\n/**\n * optional bool support = 3;\n * @return {boolean}\n */\nTronWebProto.VoteWitnessContract.prototype.getSupport = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.VoteWitnessContract} returns this\n */\nTronWebProto.VoteWitnessContract.prototype.setSupport = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\ngoog.object.extend(exports, TronWebProto);\n","module.exports = require(\"@tronweb3/google-protobuf\");","module.exports = require(\"@tronweb3/google-protobuf/google/protobuf/any_pb\");","module.exports = require(\"@tronweb3/google-protobuf/google/protobuf/any_pb.js\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/asyncToGenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/typeof\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/classCallCheck\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/createClass\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/assertThisInitialized\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/inherits\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/getPrototypeOf\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/regenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"axios\");","export function Base64() {\n    this._keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n    this.encode = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        while (i < input.length) {\n            chr1 = input.charCodeAt(i++);\n            chr2 = input.charCodeAt(i++);\n            chr3 = input.charCodeAt(i++);\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2))\n                enc3 = enc4 = 64;\n            else if (isNaN(chr3))\n                enc4 = 64;\n\n            output = output +\n                this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n                this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n        }\n\n        return output;\n    }\n\n    this.encodeIgnoreUtf8 = inputBytes => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        while (i < inputBytes.length) {\n            chr1 = inputBytes[i++];\n            chr2 = inputBytes[i++];\n            chr3 = inputBytes[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2))\n                enc3 = enc4 = 64;\n            else if (isNaN(chr3))\n                enc4 = 64;\n\n            output = output +\n                this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n                this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n        }\n\n        return output;\n    }\n\n    this.decode = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < input.length) {\n            enc1 = this._keyStr.indexOf(input.charAt(i++));\n            enc2 = this._keyStr.indexOf(input.charAt(i++));\n            enc3 = this._keyStr.indexOf(input.charAt(i++));\n            enc4 = this._keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 != 64)\n                output = output + String.fromCharCode(chr2);\n\n            if (enc4 != 64)\n                output = output + String.fromCharCode(chr3);\n        }\n\n        return this._utf8_decode(output);\n    }\n\n    this.decodeToByteArray = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < input.length) {\n            enc1 = this._keyStr.indexOf(input.charAt(i++));\n            enc2 = this._keyStr.indexOf(input.charAt(i++));\n            enc3 = this._keyStr.indexOf(input.charAt(i++));\n            enc4 = this._keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 != 64)\n                output = output + String.fromCharCode(chr2);\n\n            if (enc4 != 64)\n                output = output + String.fromCharCode(chr3);\n        }\n\n        return this._out2ByteArray(output);\n    }\n\n    this._out2ByteArray = utftext => {\n        const byteArray = new Array(utftext.length);\n\n        let i = 0;\n        let c = 0;\n\n        while (i < utftext.length) {\n            c = utftext.charCodeAt(i);\n            byteArray[i] = c;\n            i++;\n        }\n\n        return byteArray;\n    }\n\n    this._utf8_encode = string => {\n        string = string.replace(/\\r\\n/g, \"\\n\");\n        let utftext = \"\";\n\n        for (let n = 0; n < string.length; n++) {\n            const c = string.charCodeAt(n);\n\n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            } else if ((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            } else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n        }\n\n        return utftext;\n    }\n\n    this._utf8_decode = utftext => {\n        let string = \"\";\n        let i = 0;\n        let c = 0;\n        let c2 = 0;\n        let c3 = 0;\n\n        while (i < utftext.length) {\n            c = utftext.charCodeAt(i);\n\n            if (c < 128) {\n                string += String.fromCharCode(c);\n                i++;\n            } else if ((c > 191) && (c < 224)) {\n                c2 = utftext.charCodeAt(i + 1);\n                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n                i += 2;\n            } else {\n                c2 = utftext.charCodeAt(i + 1);\n                c3 = utftext.charCodeAt(i + 2);\n\n                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\n                i += 3;\n            }\n        }\n\n        return string;\n    }\n}\n","import {Base64} from './base64';\n\nexport function byte2hexStr(byte) {\n    if (typeof byte !== 'number')\n        throw new Error('Input must be a number');\n\n    if (byte < 0 || byte > 255)\n        throw new Error('Input must be a byte');\n\n    const hexByteMap = '0123456789ABCDEF';\n\n    let str = '';\n    str += hexByteMap.charAt(byte >> 4);\n    str += hexByteMap.charAt(byte & 0x0f);\n\n    return str;\n}\n\nexport function bytesToString(arr) {\n    if (typeof arr === 'string')\n        return arr;\n\n    let str = '';\n\n    for (let i = 0; i < arr.length; i++) {\n        const one = arr[i].toString(2);\n        const v = one.match(/^1+?(?=0)/);\n\n        if (v && one.length === 8) {\n            const bytesLength = v[0].length;\n            let store = arr[i].toString(2).slice(7 - bytesLength);\n\n            for (let st = 1; st < bytesLength; st++)\n                store += arr[st + i].toString(2).slice(2);\n\n            str += String.fromCharCode(parseInt(store, 2));\n            i += bytesLength - 1;\n        } else {\n            str += String.fromCharCode(arr[i]);\n        }\n    }\n\n    return str;\n}\n\nexport function hextoString(hex) {\n    const arr = hex.replace(/^0x/, '').split('');\n    let out = '';\n\n    for (let i = 0; i < arr.length / 2; i++) {\n        let tmp = `0x${arr[i * 2]}${arr[i * 2 + 1]}`;\n        out += String.fromCharCode(tmp);\n    }\n\n    return out;\n}\n\nexport function byteArray2hexStr(byteArray) {\n    let str = '';\n\n    for (let i = 0; i < (byteArray.length); i++)\n        str += byte2hexStr(byteArray[i]);\n\n    return str;\n}\n\nexport function base64DecodeFromString(string64) {\n    return new Base64().decodeToByteArray(string64);\n}\n\nexport function base64EncodeToString(bytes) {\n    const b = new Base64();\n    const string64 = b.encodeIgnoreUtf8(bytes);\n\n    return string64\n}\n\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/toConsumableArray\");","export const ADDRESS_SIZE = 34;\nexport const ADDRESS_PREFIX = \"41\";\nexport const ADDRESS_PREFIX_BYTE = 0x41;\nexport const ADDRESS_PREFIX_REGEX = /^(41)/;\n\nexport const TRON_BIP39_PATH_PREFIX = \"m/44'/195'\";\nexport const TRON_BIP39_PATH_INDEX_0 = TRON_BIP39_PATH_PREFIX + \"/0'/0/0\";","import {\n    byte2hexStr,\n    bytesToString,\n    hextoString,\n    byteArray2hexStr,\n    base64DecodeFromString,\n    base64EncodeToString\n} from './bytes';\n\nexport function bin2String(array) {\n    // TODO Do we need this alias?\n    return bytesToString(array);\n}\n\nexport function arrayEquals(array1, array2, strict) {\n    if (array1.length != array2.length)\n        return false;\n\n    let i;\n\n    for (i = 0; i < array1.length; i++) {\n        if (strict) {\n            if (array1[i] != array2[i])\n                return false;\n        } else if (JSON.stringify(array1[i]) != JSON.stringify(array2[i]))\n            return false;\n    }\n\n    return true;\n}\n\nexport function stringToBytes(str) {\n\n    if (typeof str !== 'string')\n        throw new Error('The passed string is not a string')\n\n    const bytes = new Array();\n    let len;\n    let c;\n\n    len = str.length;\n\n    for (let i = 0; i < len; i++) {\n        c = str.charCodeAt(i);\n\n        if (c >= 0x010000 && c <= 0x10FFFF) {\n            bytes.push(((c >> 18) & 0x07) | 0xF0);\n            bytes.push(((c >> 12) & 0x3F) | 0x80);\n            bytes.push(((c >> 6) & 0x3F) | 0x80);\n            bytes.push((c & 0x3F) | 0x80);\n        } else if (c >= 0x000800 && c <= 0x00FFFF) {\n            bytes.push(((c >> 12) & 0x0F) | 0xE0);\n            bytes.push(((c >> 6) & 0x3F) | 0x80);\n            bytes.push((c & 0x3F) | 0x80);\n        } else if (c >= 0x000080 && c <= 0x0007FF) {\n            bytes.push(((c >> 6) & 0x1F) | 0xC0);\n            bytes.push((c & 0x3F) | 0x80);\n        } else bytes.push(c & 0xFF);\n    }\n\n    return bytes;\n}\n\nexport {byte2hexStr, bytesToString, hextoString, byteArray2hexStr, base64DecodeFromString, base64EncodeToString}\n\nexport function hexChar2byte(c) {\n    let d;\n\n    if (c >= 'A' && c <= 'F')\n        d = c.charCodeAt(0) - 'A'.charCodeAt(0) + 10;\n    else if (c >= 'a' && c <= 'f')\n        d = c.charCodeAt(0) - 'a'.charCodeAt(0) + 10;\n    else if (c >= '0' && c <= '9')\n        d = c.charCodeAt(0) - '0'.charCodeAt(0);\n\n    if (typeof d === 'number')\n        return d;\n    else\n        throw new Error('The passed hex char is not a valid hex char');\n}\n\nexport function isHexChar(c) {\n    if ((c >= 'A' && c <= 'F') ||\n        (c >= 'a' && c <= 'f') ||\n        (c >= '0' && c <= '9')) {\n        return 1;\n    }\n\n    return 0;\n}\n\n// set strict as true: if the length of str is odd, add 0 before the str to make its length as even\nexport function hexStr2byteArray(str, strict = false) {\n    if (typeof str !== 'string')\n        throw new Error('The passed string is not a string')\n\n    let len = str.length;\n\n    if (strict) {\n        if (len % 2) {\n            str = `0${str}`;\n            len++;\n        }\n    }\n    const byteArray = Array();\n    let d = 0;\n    let j = 0;\n    let k = 0;\n\n    for (let i = 0; i < len; i++) {\n        const c = str.charAt(i);\n\n        if (isHexChar(c)) {\n            d <<= 4;\n            d += hexChar2byte(c);\n            j++;\n\n            if (0 === (j % 2)) {\n                byteArray[k++] = d;\n                d = 0;\n            }\n        } else\n            throw new Error('The passed hex char is not a valid hex string')\n    }\n\n    return byteArray;\n}\n\n//yyyy-MM-DD HH-mm-ss\nexport function strToDate(str) {\n\n    if (!/^\\d{4}-\\d{2}-\\d{2}( \\d{2}-\\d{2}-\\d{2}|)/.test(str))\n        throw new Error('The passed date string is not valid')\n\n    const tempStrs = str.split(\" \");\n    const dateStrs = tempStrs[0].split(\"-\");\n    const year = parseInt(dateStrs[0], 10);\n    const month = parseInt(dateStrs[1], 10) - 1;\n    const day = parseInt(dateStrs[2], 10);\n\n    if (tempStrs.length > 1) {\n        const timeStrs = tempStrs[1].split(\"-\");\n        const hour = parseInt(timeStrs[0], 10);\n        const minute = parseInt(timeStrs[1], 10);\n        const second = parseInt(timeStrs[2], 10);\n\n        return new Date(year, month, day, hour, minute, second);\n    }\n\n    return new Date(year, month, day);\n}\n\nexport function isNumber(c) {\n    if (c >= '0' && c <= '9')\n        return 1;\n\n    return 0;\n}\n\n//return 1: address  --- 20Bytes HexString\n//return 2: blockNumber ------ Decimal number\n//return 3: assetName ------ String\n//return other: error\nexport function getStringType(str) {\n    if (null == str)\n        return -1;\n\n    if (typeof (str) != 'string')\n        return -1;\n\n    if (str.length == 0 || str == \"\")\n        return -1;\n\n    let i = 0;\n\n    // TODO Should we return 1 if someone passes a full, 42-chars long address?\n    // if (str.length == 42 && /^41/.test(str)) {\n    //     for (; i < 40; i++) {\n    //         var c = str.charAt(i+2);\n    //\n    //         if (!isHexChar(c))\n    //             break;\n    //     }\n    // } else\n    if (str.length == 40) {\n        for (; i < 40; i++) {\n            var c = str.charAt(i);\n\n            if (!isHexChar(c))\n                break;\n        }\n    }\n\n    if (i == 40)\n        return 1; //40 Hex, Address\n\n    for (i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n\n        if (!isNumber(c))\n            break;\n    }\n\n    if (i == str.length)\n        return 2; // All Decimal number, BlockNumber\n\n    for (i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n\n        if (c > ' ')\n            return 3; // At least one visible character\n    }\n\n    return -1;\n}\n","const ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nconst ALPHABET_MAP = {};\n\nfor (let i = 0; i < ALPHABET.length; i++)\n    ALPHABET_MAP[ALPHABET.charAt(i)] = i;\n\nconst BASE = 58;\n\nexport function encode58(buffer) {\n    if (buffer.length === 0)\n        return '';\n\n    let i;\n    let j;\n\n    const digits = [0];\n\n    for (i = 0; i < buffer.length; i++) {\n        for (j = 0; j < digits.length; j++)\n            digits[j] <<= 8;\n\n        digits[0] += buffer[i];\n        let carry = 0;\n\n        for (j = 0; j < digits.length; ++j) {\n            digits[j] += carry;\n            carry = (digits[j] / BASE) | 0;\n            digits[j] %= BASE\n        }\n\n        while (carry) {\n            digits.push(carry % BASE);\n            carry = (carry / BASE) | 0\n        }\n    }\n\n    for (i = 0; buffer[i] === 0 && i < buffer.length - 1; i++)\n        digits.push(0);\n\n    return digits.reverse().map(digit => ALPHABET[digit]).join('');\n}\n\nexport function decode58(string) {\n    if (string.length === 0)\n        return [];\n\n    let i;\n    let j;\n\n    const bytes = [0];\n\n    for (i = 0; i < string.length; i++) {\n        const c = string[i];\n\n        if (!(c in ALPHABET_MAP))\n            throw new Error('Non-base58 character');\n\n        for (j = 0; j < bytes.length; j++)\n            bytes[j] *= BASE;\n\n        bytes[0] += ALPHABET_MAP[c];\n        let carry = 0;\n\n        for (j = 0; j < bytes.length; ++j) {\n            bytes[j] += carry;\n            carry = bytes[j] >> 8;\n            bytes[j] &= 0xff;\n        }\n\n        while (carry) {\n            bytes.push(carry & 0xff);\n            carry >>= 8;\n        }\n    }\n\n    for (i = 0; string[i] === '1' && i < string.length - 1; i++)\n        bytes.push(0);\n\n    return bytes.reverse();\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/classPrivateFieldSet\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/classPrivateFieldGet\");",null,null,null,null,null,null,null,"const __WEBPACK_NAMESPACE_OBJECT__ = require(\"crypto\");",null,null,null,"const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@noble/hashes/sha3\");",null,null,null,null,null,null,null,null,null,"const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/slicedToArray\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@noble/secp256k1\");",null,null,"const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/wrapNativeSuper\");",null,null,null,null,null,null,"const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/get\");",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@noble/hashes/ripemd160\");",null,null,null,"const __WEBPACK_NAMESPACE_OBJECT__ = require(\"aes-js\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@noble/hashes/scrypt\");",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"/**\n *  About frgaments...\n *\n *  @_subsection api/abi/abi-coder:Fragments  [about-fragments]\n */\nimport { defineProperties, getBigInt, getNumber, assert, assertPrivate, assertArgument } from \"ethers\";\nimport { id } from \"ethers\";\n;\n// [ \"a\", \"b\" ] => { \"a\": 1, \"b\": 1 }\nfunction setify(items) {\n    const result = new Set();\n    items.forEach((k) => result.add(k));\n    return Object.freeze(result);\n}\n// Visibility Keywords\nconst _kwVisib = \"constant external internal payable private public pure view\";\nconst KwVisib = setify(_kwVisib.split(\" \"));\nconst _kwTypes = \"constructor error event fallback function receive struct\";\nconst KwTypes = setify(_kwTypes.split(\" \"));\nconst _kwModifiers = \"calldata memory storage payable indexed\";\nconst KwModifiers = setify(_kwModifiers.split(\" \"));\nconst _kwOther = \"tuple returns\";\n// All Keywords\nconst _keywords = [_kwTypes, _kwModifiers, _kwOther, _kwVisib].join(\" \");\nconst Keywords = setify(_keywords.split(\" \"));\n// Single character tokens\nconst SimpleTokens = {\n    \"(\": \"OPEN_PAREN\", \")\": \"CLOSE_PAREN\",\n    \"[\": \"OPEN_BRACKET\", \"]\": \"CLOSE_BRACKET\",\n    \",\": \"COMMA\", \"@\": \"AT\"\n};\n// Parser regexes to consume the next token\nconst regexWhitespacePrefix = new RegExp(\"^(\\\\s*)\");\nconst regexNumberPrefix = new RegExp(\"^([0-9]+)\");\nconst regexIdPrefix = new RegExp(\"^([a-zA-Z$_][a-zA-Z0-9$_]*)\");\n// Parser regexs to check validity\nconst regexId = new RegExp(\"^([a-zA-Z$_][a-zA-Z0-9$_]*)$\");\nconst regexType = new RegExp(\"^(trcToken|address|bool|bytes([0-9]*)|string|u?int([0-9]*))$\");\nclass TokenString {\n    #offset;\n    #tokens;\n    get offset() { return this.#offset; }\n    get length() { return this.#tokens.length - this.#offset; }\n    constructor(tokens) {\n        this.#offset = 0;\n        this.#tokens = tokens.slice();\n    }\n    clone() { return new TokenString(this.#tokens); }\n    reset() { this.#offset = 0; }\n    #subTokenString(from = 0, to = 0) {\n        return new TokenString(this.#tokens.slice(from, to).map((t) => {\n            return Object.freeze(Object.assign({}, t, {\n                match: (t.match - from),\n                linkBack: (t.linkBack - from),\n                linkNext: (t.linkNext - from),\n            }));\n            return t;\n        }));\n    }\n    // Pops and returns the value of the next token, if it is a keyword in allowed; throws if out of tokens\n    popKeyword(allowed) {\n        const top = this.peek();\n        if (top.type !== \"KEYWORD\" || !allowed.has(top.text)) {\n            throw new Error(`expected keyword ${top.text}`);\n        }\n        return this.pop().text;\n    }\n    // Pops and returns the value of the next token if it is `type`; throws if out of tokens\n    popType(type) {\n        if (this.peek().type !== type) {\n            throw new Error(`expected ${type}; got ${JSON.stringify(this.peek())}`);\n        }\n        return this.pop().text;\n    }\n    // Pops and returns a \"(\" TOKENS \")\"\n    popParen() {\n        const top = this.peek();\n        if (top.type !== \"OPEN_PAREN\") {\n            throw new Error(\"bad start\");\n        }\n        const result = this.#subTokenString(this.#offset + 1, top.match + 1);\n        this.#offset = top.match + 1;\n        return result;\n    }\n    // Pops and returns the items within \"(\" ITEM1 \",\" ITEM2 \",\" ... \")\"\n    popParams() {\n        const top = this.peek();\n        if (top.type !== \"OPEN_PAREN\") {\n            throw new Error(\"bad start\");\n        }\n        const result = [];\n        while (this.#offset < top.match - 1) {\n            const link = this.peek().linkNext;\n            result.push(this.#subTokenString(this.#offset + 1, link));\n            this.#offset = link;\n        }\n        this.#offset = top.match + 1;\n        return result;\n    }\n    // Returns the top Token, throwing if out of tokens\n    peek() {\n        if (this.#offset >= this.#tokens.length) {\n            throw new Error(\"out-of-bounds\");\n        }\n        return this.#tokens[this.#offset];\n    }\n    // Returns the next value, if it is a keyword in `allowed`\n    peekKeyword(allowed) {\n        const top = this.peekType(\"KEYWORD\");\n        return (top != null && allowed.has(top)) ? top : null;\n    }\n    // Returns the value of the next token if it is `type`\n    peekType(type) {\n        if (this.length === 0) {\n            return null;\n        }\n        const top = this.peek();\n        return (top.type === type) ? top.text : null;\n    }\n    // Returns the next token; throws if out of tokens\n    pop() {\n        const result = this.peek();\n        this.#offset++;\n        return result;\n    }\n    toString() {\n        const tokens = [];\n        for (let i = this.#offset; i < this.#tokens.length; i++) {\n            const token = this.#tokens[i];\n            tokens.push(`${token.type}:${token.text}`);\n        }\n        return `<TokenString ${tokens.join(\" \")}>`;\n    }\n}\nfunction lex(text) {\n    const tokens = [];\n    const throwError = (message) => {\n        const token = (offset < text.length) ? JSON.stringify(text[offset]) : \"$EOI\";\n        throw new Error(`invalid token ${token} at ${offset}: ${message}`);\n    };\n    let brackets = [];\n    let commas = [];\n    let offset = 0;\n    while (offset < text.length) {\n        // Strip off any leading whitespace\n        let cur = text.substring(offset);\n        let match = cur.match(regexWhitespacePrefix);\n        if (match) {\n            offset += match[1].length;\n            cur = text.substring(offset);\n        }\n        const token = { depth: brackets.length, linkBack: -1, linkNext: -1, match: -1, type: \"\", text: \"\", offset, value: -1 };\n        tokens.push(token);\n        let type = (SimpleTokens[cur[0]] || \"\");\n        if (type) {\n            token.type = type;\n            token.text = cur[0];\n            offset++;\n            if (type === \"OPEN_PAREN\") {\n                brackets.push(tokens.length - 1);\n                commas.push(tokens.length - 1);\n            }\n            else if (type == \"CLOSE_PAREN\") {\n                if (brackets.length === 0) {\n                    throwError(\"no matching open bracket\");\n                }\n                token.match = brackets.pop();\n                (tokens[token.match]).match = tokens.length - 1;\n                token.depth--;\n                token.linkBack = commas.pop();\n                (tokens[token.linkBack]).linkNext = tokens.length - 1;\n            }\n            else if (type === \"COMMA\") {\n                token.linkBack = commas.pop();\n                (tokens[token.linkBack]).linkNext = tokens.length - 1;\n                commas.push(tokens.length - 1);\n            }\n            else if (type === \"OPEN_BRACKET\") {\n                token.type = \"BRACKET\";\n            }\n            else if (type === \"CLOSE_BRACKET\") {\n                // Remove the CLOSE_BRACKET\n                let suffix = tokens.pop().text;\n                if (tokens.length > 0 && tokens[tokens.length - 1].type === \"NUMBER\") {\n                    const value = tokens.pop().text;\n                    suffix = value + suffix;\n                    (tokens[tokens.length - 1]).value = getNumber(value);\n                }\n                if (tokens.length === 0 || tokens[tokens.length - 1].type !== \"BRACKET\") {\n                    throw new Error(\"missing opening bracket\");\n                }\n                (tokens[tokens.length - 1]).text += suffix;\n            }\n            continue;\n        }\n        match = cur.match(regexIdPrefix);\n        if (match) {\n            token.text = match[1];\n            offset += token.text.length;\n            if (Keywords.has(token.text)) {\n                token.type = \"KEYWORD\";\n                continue;\n            }\n            if (token.text.match(regexType)) {\n                token.type = \"TYPE\";\n                continue;\n            }\n            token.type = \"ID\";\n            continue;\n        }\n        match = cur.match(regexNumberPrefix);\n        if (match) {\n            token.text = match[1];\n            token.type = \"NUMBER\";\n            offset += token.text.length;\n            continue;\n        }\n        throw new Error(`unexpected token ${JSON.stringify(cur[0])} at position ${offset}`);\n    }\n    return new TokenString(tokens.map((t) => Object.freeze(t)));\n}\n// Check only one of `allowed` is in `set`\nfunction allowSingle(set, allowed) {\n    let included = [];\n    for (const key in allowed.keys()) {\n        if (set.has(key)) {\n            included.push(key);\n        }\n    }\n    if (included.length > 1) {\n        throw new Error(`conflicting types: ${included.join(\", \")}`);\n    }\n}\n// Functions to process a Solidity Signature TokenString from left-to-right for...\n// ...the name with an optional type, returning the name\nfunction consumeName(type, tokens) {\n    if (tokens.peekKeyword(KwTypes)) {\n        const keyword = tokens.pop().text;\n        if (keyword !== type) {\n            throw new Error(`expected ${type}, got ${keyword}`);\n        }\n    }\n    return tokens.popType(\"ID\");\n}\n// ...all keywords matching allowed, returning the keywords\nfunction consumeKeywords(tokens, allowed) {\n    const keywords = new Set();\n    while (true) {\n        const keyword = tokens.peekType(\"KEYWORD\");\n        if (keyword == null || (allowed && !allowed.has(keyword))) {\n            break;\n        }\n        tokens.pop();\n        if (keywords.has(keyword)) {\n            throw new Error(`duplicate keywords: ${JSON.stringify(keyword)}`);\n        }\n        keywords.add(keyword);\n    }\n    return Object.freeze(keywords);\n}\n// ...all visibility keywords, returning the coalesced mutability\nfunction consumeMutability(tokens) {\n    let modifiers = consumeKeywords(tokens, KwVisib);\n    // Detect conflicting modifiers\n    allowSingle(modifiers, setify(\"constant payable nonpayable\".split(\" \")));\n    allowSingle(modifiers, setify(\"pure view payable nonpayable\".split(\" \")));\n    // Process mutability states\n    if (modifiers.has(\"view\")) {\n        return \"view\";\n    }\n    if (modifiers.has(\"pure\")) {\n        return \"pure\";\n    }\n    if (modifiers.has(\"payable\")) {\n        return \"payable\";\n    }\n    if (modifiers.has(\"nonpayable\")) {\n        return \"nonpayable\";\n    }\n    // Process legacy `constant` last\n    if (modifiers.has(\"constant\")) {\n        return \"view\";\n    }\n    return \"nonpayable\";\n}\n// ...a parameter list, returning the ParamType list\nfunction consumeParams(tokens, allowIndexed) {\n    return tokens.popParams().map((t) => ParamType.from(t, allowIndexed));\n}\n// ...a gas limit, returning a BigNumber or null if none\nfunction consumeGas(tokens) {\n    if (tokens.peekType(\"AT\")) {\n        tokens.pop();\n        if (tokens.peekType(\"NUMBER\")) {\n            return getBigInt(tokens.pop().text);\n        }\n        throw new Error(\"invalid gas\");\n    }\n    return null;\n}\nfunction consumeEoi(tokens) {\n    if (tokens.length) {\n        throw new Error(`unexpected tokens: ${tokens.toString()}`);\n    }\n}\nconst regexArrayType = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\nfunction verifyBasicType(type) {\n    const match = type.match(regexType);\n    assertArgument(match, \"invalid type\", \"type\", type);\n    if (type === \"uint\") {\n        return \"uint256\";\n    }\n    if (type === \"int\") {\n        return \"int256\";\n    }\n    if (match[2]) {\n        // bytesXX\n        const length = parseInt(match[2]);\n        assertArgument(length !== 0 && length <= 32, \"invalid bytes length\", \"type\", type);\n    }\n    else if (match[3]) {\n        // intXX or uintXX\n        const size = parseInt(match[3]);\n        assertArgument(size !== 0 && size <= 256 && (size % 8) === 0, \"invalid numeric width\", \"type\", type);\n    }\n    return type;\n}\n// Make the Fragment constructors effectively private\nconst _guard = {};\nconst internal = Symbol.for(\"_ethers_internal\");\nconst ParamTypeInternal = \"_ParamTypeInternal\";\nconst ErrorFragmentInternal = \"_ErrorInternal\";\nconst EventFragmentInternal = \"_EventInternal\";\nconst ConstructorFragmentInternal = \"_ConstructorInternal\";\nconst FallbackFragmentInternal = \"_FallbackInternal\";\nconst FunctionFragmentInternal = \"_FunctionInternal\";\nconst StructFragmentInternal = \"_StructInternal\";\n/**\n *  Each input and output of a [[Fragment]] is an Array of **PAramType**.\n */\nexport class ParamType {\n    /**\n     *  The local name of the parameter (or ``\"\"`` if unbound)\n     */\n    name;\n    /**\n     *  The fully qualified type (e.g. ``\"address\"``, ``\"tuple(address)\"``,\n     *  ``\"uint256[3][]\"``)\n     */\n    type;\n    /**\n     *  The base type (e.g. ``\"address\"``, ``\"tuple\"``, ``\"array\"``)\n     */\n    baseType;\n    /**\n     *  True if the parameters is indexed.\n     *\n     *  For non-indexable types this is ``null``.\n     */\n    indexed;\n    /**\n     *  The components for the tuple.\n     *\n     *  For non-tuple types this is ``null``.\n     */\n    components;\n    /**\n     *  The array length, or ``-1`` for dynamic-lengthed arrays.\n     *\n     *  For non-array types this is ``null``.\n     */\n    arrayLength;\n    /**\n     *  The type of each child in the array.\n     *\n     *  For non-array types this is ``null``.\n     */\n    arrayChildren;\n    /**\n     *  @private\n     */\n    constructor(guard, name, type, baseType, indexed, components, arrayLength, arrayChildren) {\n        assertPrivate(guard, _guard, \"ParamType\");\n        Object.defineProperty(this, internal, { value: ParamTypeInternal });\n        if (components) {\n            components = Object.freeze(components.slice());\n        }\n        if (baseType === \"array\") {\n            if (arrayLength == null || arrayChildren == null) {\n                throw new Error(\"\");\n            }\n        }\n        else if (arrayLength != null || arrayChildren != null) {\n            throw new Error(\"\");\n        }\n        if (baseType === \"tuple\") {\n            if (components == null) {\n                // throw new Error(\"\");\n                components = Object.freeze([]);\n            }\n        }\n        else if (components != null) {\n            throw new Error(\"\");\n        }\n        defineProperties(this, {\n            name, type, baseType, indexed, components, arrayLength, arrayChildren\n        });\n    }\n    /**\n     *  Return a string representation of this type.\n     *\n     *  For example,\n     *\n     *  ``sighash\" => \"(uint256,address)\"``\n     *\n     *  ``\"minimal\" => \"tuple(uint256,address) indexed\"``\n     *\n     *  ``\"full\" => \"tuple(uint256 foo, address bar) indexed baz\"``\n     */\n    format(format) {\n        if (format == null) {\n            format = \"sighash\";\n        }\n        if (format === \"json\") {\n            let result = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\" : this.type),\n                name: (this.name || undefined)\n            };\n            if (typeof (this.indexed) === \"boolean\") {\n                result.indexed = this.indexed;\n            }\n            if (this.isTuple()) {\n                result.components = this.components.map((c) => JSON.parse(c.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n        let result = \"\";\n        // Array\n        if (this.isArray()) {\n            result += this.arrayChildren.format(format);\n            result += `[${(this.arrayLength < 0 ? \"\" : String(this.arrayLength))}]`;\n        }\n        else {\n            if (this.isTuple()) {\n                if (format !== \"sighash\") {\n                    result += this.type;\n                }\n                result += \"(\" + this.components.map((comp) => comp.format(format)).join((format === \"full\") ? \", \" : \",\") + \")\";\n            }\n            else {\n                result += this.type;\n            }\n        }\n        if (format !== \"sighash\") {\n            if (this.indexed === true) {\n                result += \" indexed\";\n            }\n            if (format === \"full\" && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n        return result;\n    }\n    /*\n     *  Returns true if %%value%% is an Array type.\n     *\n     *  This provides a type gaurd ensuring that the\n     *  [[arrayChildren]] and [[arrayLength]] are non-null.\n     */\n    //static isArray(value: any): value is { arrayChildren: ParamType, arrayLength: number } {\n    //    return value && (value.baseType === \"array\")\n    //}\n    /**\n     *  Returns true if %%this%% is an Array type.\n     *\n     *  This provides a type gaurd ensuring that [[arrayChildren]]\n     *  and [[arrayLength]] are non-null.\n     */\n    isArray() {\n        return (this.baseType === \"array\");\n    }\n    /**\n     *  Returns true if %%this%% is a Tuple type.\n     *\n     *  This provides a type gaurd ensuring that [[components]]\n     *  is non-null.\n     */\n    isTuple() {\n        return (this.baseType === \"tuple\");\n    }\n    /**\n     *  Returns true if %%this%% is an Indexable type.\n     *\n     *  This provides a type gaurd ensuring that [[indexed]]\n     *  is non-null.\n     */\n    isIndexable() {\n        return (this.indexed != null);\n    }\n    /**\n     *  Walks the **ParamType** with %%value%%, calling %%process%%\n     *  on each type, destructing the %%value%% recursively.\n     */\n    walk(value, process) {\n        if (this.isArray()) {\n            if (!Array.isArray(value)) {\n                throw new Error(\"invalid array value\");\n            }\n            if (this.arrayLength !== -1 && value.length !== this.arrayLength) {\n                throw new Error(\"array is wrong length\");\n            }\n            const _this = this;\n            return value.map((v) => (_this.arrayChildren.walk(v, process)));\n        }\n        if (this.isTuple()) {\n            if (!Array.isArray(value)) {\n                throw new Error(\"invalid tuple value\");\n            }\n            if (value.length !== this.components.length) {\n                throw new Error(\"array is wrong length\");\n            }\n            const _this = this;\n            return value.map((v, i) => (_this.components[i].walk(v, process)));\n        }\n        return process(this.type, value);\n    }\n    #walkAsync(promises, value, process, setValue) {\n        if (this.isArray()) {\n            if (!Array.isArray(value)) {\n                throw new Error(\"invalid array value\");\n            }\n            if (this.arrayLength !== -1 && value.length !== this.arrayLength) {\n                throw new Error(\"array is wrong length\");\n            }\n            const childType = this.arrayChildren;\n            const result = value.slice();\n            result.forEach((value, index) => {\n                childType.#walkAsync(promises, value, process, (value) => {\n                    result[index] = value;\n                });\n            });\n            setValue(result);\n            return;\n        }\n        if (this.isTuple()) {\n            const components = this.components;\n            // Convert the object into an array\n            let result;\n            if (Array.isArray(value)) {\n                result = value.slice();\n            }\n            else {\n                if (value == null || typeof (value) !== \"object\") {\n                    throw new Error(\"invalid tuple value\");\n                }\n                result = components.map((param) => {\n                    if (!param.name) {\n                        throw new Error(\"cannot use object value with unnamed components\");\n                    }\n                    if (!(param.name in value)) {\n                        throw new Error(`missing value for component ${param.name}`);\n                    }\n                    return value[param.name];\n                });\n            }\n            if (result.length !== this.components.length) {\n                throw new Error(\"array is wrong length\");\n            }\n            result.forEach((value, index) => {\n                components[index].#walkAsync(promises, value, process, (value) => {\n                    result[index] = value;\n                });\n            });\n            setValue(result);\n            return;\n        }\n        const result = process(this.type, value);\n        if (result.then) {\n            promises.push((async function () { setValue(await result); })());\n        }\n        else {\n            setValue(result);\n        }\n    }\n    /**\n     *  Walks the **ParamType** with %%value%%, asynchronously calling\n     *  %%process%% on each type, destructing the %%value%% recursively.\n     *\n     *  This can be used to resolve ENS naes by walking and resolving each\n     *  ``\"address\"`` type.\n     */\n    async walkAsync(value, process) {\n        const promises = [];\n        const result = [value];\n        this.#walkAsync(promises, value, process, (value) => {\n            result[0] = value;\n        });\n        if (promises.length) {\n            await Promise.all(promises);\n        }\n        return result[0];\n    }\n    /**\n     *  Creates a new **ParamType** for %%obj%%.\n     *\n     *  If %%allowIndexed%% then the ``indexed`` keyword is permitted,\n     *  otherwise the ``indexed`` keyword will throw an error.\n     */\n    static from(obj, allowIndexed) {\n        if (ParamType.isParamType(obj)) {\n            return obj;\n        }\n        if (typeof (obj) === \"string\") {\n            return ParamType.from(lex(obj), allowIndexed);\n        }\n        else if (obj instanceof TokenString) {\n            let type = \"\", baseType = \"\";\n            let comps = null;\n            if (consumeKeywords(obj, setify([\"tuple\"])).has(\"tuple\") || obj.peekType(\"OPEN_PAREN\")) {\n                // Tuple\n                baseType = \"tuple\";\n                comps = obj.popParams().map((t) => ParamType.from(t));\n                type = `tuple(${comps.map((c) => c.format()).join(\",\")})`;\n            }\n            else {\n                // Normal\n                type = verifyBasicType(obj.popType(\"TYPE\"));\n                baseType = type;\n            }\n            // Check for Array\n            let arrayChildren = null;\n            let arrayLength = null;\n            while (obj.length && obj.peekType(\"BRACKET\")) {\n                const bracket = obj.pop(); //arrays[i];\n                arrayChildren = new ParamType(_guard, \"\", type, baseType, null, comps, arrayLength, arrayChildren);\n                arrayLength = bracket.value;\n                type += bracket.text;\n                baseType = \"array\";\n                comps = null;\n            }\n            let indexed = null;\n            const keywords = consumeKeywords(obj, KwModifiers);\n            if (keywords.has(\"indexed\")) {\n                if (!allowIndexed) {\n                    throw new Error(\"\");\n                }\n                indexed = true;\n            }\n            const name = (obj.peekType(\"ID\") ? obj.pop().text : \"\");\n            if (obj.length) {\n                throw new Error(\"leftover tokens\");\n            }\n            return new ParamType(_guard, name, type, baseType, indexed, comps, arrayLength, arrayChildren);\n        }\n        const name = obj.name;\n        assertArgument(!name || (typeof (name) === \"string\" && name.match(regexId)), \"invalid name\", \"obj.name\", name);\n        let indexed = obj.indexed;\n        if (indexed != null) {\n            assertArgument(allowIndexed, \"parameter cannot be indexed\", \"obj.indexed\", obj.indexed);\n            indexed = !!indexed;\n        }\n        let type = obj.type;\n        let arrayMatch = type.match(regexArrayType);\n        if (arrayMatch) {\n            const arrayLength = parseInt(arrayMatch[2] || \"-1\");\n            const arrayChildren = ParamType.from({\n                type: arrayMatch[1],\n                components: obj.components\n            });\n            return new ParamType(_guard, name || \"\", type, \"array\", indexed, null, arrayLength, arrayChildren);\n        }\n        if (type === \"tuple\" || type.startsWith(\"tuple(\" /* fix: ) */) || type.startsWith(\"(\" /* fix: ) */)) {\n            const comps = (obj.components != null) ? obj.components.map((c) => ParamType.from(c)) : null;\n            const tuple = new ParamType(_guard, name || \"\", type, \"tuple\", indexed, comps, null, null);\n            // @TODO: use lexer to validate and normalize type\n            return tuple;\n        }\n        type = verifyBasicType(obj.type);\n        return new ParamType(_guard, name || \"\", type, type, indexed, null, null, null);\n    }\n    /**\n     *  Returns true if %%value%% is a **ParamType**.\n     */\n    static isParamType(value) {\n        return (value && value[internal] === ParamTypeInternal);\n    }\n}\n/**\n *  An abstract class to represent An individual fragment from a parse ABI.\n */\nexport class Fragment {\n    /**\n     *  The type of the fragment.\n     */\n    type;\n    /**\n     *  The inputs for the fragment.\n     */\n    inputs;\n    /**\n     *  @private\n     */\n    constructor(guard, type, inputs) {\n        assertPrivate(guard, _guard, \"Fragment\");\n        inputs = Object.freeze(inputs.slice());\n        defineProperties(this, { type, inputs });\n    }\n    /**\n     *  Creates a new **Fragment** for %%obj%%, wich can be any supported\n     *  ABI frgament type.\n     */\n    static from(obj) {\n        if (typeof (obj) === \"string\") {\n            // Try parsing JSON...\n            try {\n                Fragment.from(JSON.parse(obj));\n            }\n            catch (e) { }\n            // ...otherwise, use the human-readable lexer\n            return Fragment.from(lex(obj));\n        }\n        if (obj instanceof TokenString) {\n            // Human-readable ABI (already lexed)\n            const type = obj.peekKeyword(KwTypes);\n            switch (type) {\n                case \"constructor\": return ConstructorFragment.from(obj);\n                case \"error\": return ErrorFragment.from(obj);\n                case \"event\": return EventFragment.from(obj);\n                case \"fallback\":\n                case \"receive\":\n                    return FallbackFragment.from(obj);\n                case \"function\": return FunctionFragment.from(obj);\n                case \"struct\": return StructFragment.from(obj);\n            }\n        }\n        else if (typeof (obj) === \"object\") {\n            // JSON ABI\n            switch (obj.type) {\n                case \"constructor\": return ConstructorFragment.from(obj);\n                case \"error\": return ErrorFragment.from(obj);\n                case \"event\": return EventFragment.from(obj);\n                case \"fallback\":\n                case \"receive\":\n                    return FallbackFragment.from(obj);\n                case \"function\": return FunctionFragment.from(obj);\n                case \"struct\": return StructFragment.from(obj);\n            }\n            assert(false, `unsupported type: ${obj.type}`, \"UNSUPPORTED_OPERATION\", {\n                operation: \"Fragment.from\"\n            });\n        }\n        assertArgument(false, \"unsupported frgament object\", \"obj\", obj);\n    }\n    /**\n     *  Returns true if %%value%% is a [[ConstructorFragment]].\n     */\n    static isConstructor(value) {\n        return ConstructorFragment.isFragment(value);\n    }\n    /**\n     *  Returns true if %%value%% is an [[ErrorFragment]].\n     */\n    static isError(value) {\n        return ErrorFragment.isFragment(value);\n    }\n    /**\n     *  Returns true if %%value%% is an [[EventFragment]].\n     */\n    static isEvent(value) {\n        return EventFragment.isFragment(value);\n    }\n    /**\n     *  Returns true if %%value%% is a [[FunctionFragment]].\n     */\n    static isFunction(value) {\n        return FunctionFragment.isFragment(value);\n    }\n    /**\n     *  Returns true if %%value%% is a [[StructFragment]].\n     */\n    static isStruct(value) {\n        return StructFragment.isFragment(value);\n    }\n}\n/**\n *  An abstract class to represent An individual fragment\n *  which has a name from a parse ABI.\n */\nexport class NamedFragment extends Fragment {\n    /**\n     *  The name of the fragment.\n     */\n    name;\n    /**\n     *  @private\n     */\n    constructor(guard, type, name, inputs) {\n        super(guard, type, inputs);\n        assertArgument(typeof (name) === \"string\" && name.match(regexId), \"invalid identifier\", \"name\", name);\n        inputs = Object.freeze(inputs.slice());\n        defineProperties(this, { name });\n    }\n}\nfunction joinParams(format, params) {\n    return \"(\" + params.map((p) => p.format(format)).join((format === \"full\") ? \", \" : \",\") + \")\";\n}\n/**\n *  A Fragment which represents a //Custom Error//.\n */\nexport class ErrorFragment extends NamedFragment {\n    /**\n     *  @private\n     */\n    constructor(guard, name, inputs) {\n        super(guard, \"error\", name, inputs);\n        Object.defineProperty(this, internal, { value: ErrorFragmentInternal });\n    }\n    /**\n     *  The Custom Error selector.\n     */\n    get selector() {\n        return id(this.format(\"sighash\")).substring(0, 10);\n    }\n    format(format) {\n        if (format == null) {\n            format = \"sighash\";\n        }\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n        const result = [];\n        if (format !== \"sighash\") {\n            result.push(\"error\");\n        }\n        result.push(this.name + joinParams(format, this.inputs));\n        return result.join(\" \");\n    }\n    static from(obj) {\n        if (ErrorFragment.isFragment(obj)) {\n            return obj;\n        }\n        if (typeof (obj) === \"string\") {\n            return ErrorFragment.from(lex(obj));\n        }\n        else if (obj instanceof TokenString) {\n            const name = consumeName(\"error\", obj);\n            const inputs = consumeParams(obj);\n            consumeEoi(obj);\n            return new ErrorFragment(_guard, name, inputs);\n        }\n        return new ErrorFragment(_guard, obj.name, obj.inputs ? obj.inputs.map(ParamType.from) : []);\n    }\n    static isFragment(value) {\n        return (value && value[internal] === ErrorFragmentInternal);\n    }\n}\n/**\n *  A Fragment which represents an Event.\n */\nexport class EventFragment extends NamedFragment {\n    anonymous;\n    /**\n     *  @private\n     */\n    constructor(guard, name, inputs, anonymous) {\n        super(guard, \"event\", name, inputs);\n        Object.defineProperty(this, internal, { value: EventFragmentInternal });\n        defineProperties(this, { anonymous });\n    }\n    /**\n     *  The Event topic hash.\n     */\n    get topicHash() {\n        return id(this.format(\"sighash\"));\n    }\n    format(format) {\n        if (format == null) {\n            format = \"sighash\";\n        }\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format)))\n            });\n        }\n        const result = [];\n        if (format !== \"sighash\") {\n            result.push(\"event\");\n        }\n        result.push(this.name + joinParams(format, this.inputs));\n        if (format !== \"sighash\" && this.anonymous) {\n            result.push(\"anonymous\");\n        }\n        return result.join(\" \");\n    }\n    static getTopicHash(name, params) {\n        params = (params || []).map((p) => ParamType.from(p));\n        const fragment = new EventFragment(_guard, name, params, false);\n        return fragment.topicHash;\n    }\n    static from(obj) {\n        if (EventFragment.isFragment(obj)) {\n            return obj;\n        }\n        if (typeof (obj) === \"string\") {\n            return EventFragment.from(lex(obj));\n        }\n        else if (obj instanceof TokenString) {\n            const name = consumeName(\"event\", obj);\n            const inputs = consumeParams(obj, true);\n            const anonymous = !!consumeKeywords(obj, setify([\"anonymous\"])).has(\"anonymous\");\n            consumeEoi(obj);\n            return new EventFragment(_guard, name, inputs, anonymous);\n        }\n        return new EventFragment(_guard, obj.name, obj.inputs ? obj.inputs.map((p) => ParamType.from(p, true)) : [], !!obj.anonymous);\n    }\n    static isFragment(value) {\n        return (value && value[internal] === EventFragmentInternal);\n    }\n}\n/**\n *  A Fragment which represents a constructor.\n */\nexport class ConstructorFragment extends Fragment {\n    payable;\n    gas;\n    /**\n     *  @private\n     */\n    constructor(guard, type, inputs, payable, gas) {\n        super(guard, type, inputs);\n        Object.defineProperty(this, internal, { value: ConstructorFragmentInternal });\n        defineProperties(this, { payable, gas });\n    }\n    format(format) {\n        assert(format != null && format !== \"sighash\", \"cannot format a constructor for sighash\", \"UNSUPPORTED_OPERATION\", { operation: \"format(sighash)\" });\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: (this.payable ? \"payable\" : \"undefined\"),\n                payable: this.payable,\n                gas: ((this.gas != null) ? this.gas : undefined),\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format)))\n            });\n        }\n        const result = [`constructor${joinParams(format, this.inputs)}`];\n        result.push((this.payable) ? \"payable\" : \"nonpayable\");\n        if (this.gas != null) {\n            result.push(`@${this.gas.toString()}`);\n        }\n        return result.join(\" \");\n    }\n    static from(obj) {\n        if (ConstructorFragment.isFragment(obj)) {\n            return obj;\n        }\n        if (typeof (obj) === \"string\") {\n            return ConstructorFragment.from(lex(obj));\n        }\n        else if (obj instanceof TokenString) {\n            consumeKeywords(obj, setify([\"constructor\"]));\n            const inputs = consumeParams(obj);\n            const payable = !!consumeKeywords(obj, setify([\"payable\"])).has(\"payable\");\n            const gas = consumeGas(obj);\n            consumeEoi(obj);\n            return new ConstructorFragment(_guard, \"constructor\", inputs, payable, gas);\n        }\n        return new ConstructorFragment(_guard, \"constructor\", obj.inputs ? obj.inputs.map(ParamType.from) : [], !!obj.payable, (obj.gas != null) ? obj.gas : null);\n    }\n    static isFragment(value) {\n        return (value && value[internal] === ConstructorFragmentInternal);\n    }\n}\n/**\n *  A Fragment which represents a method.\n */\nexport class FallbackFragment extends Fragment {\n    /**\n     *  If the function can be sent value during invocation.\n     */\n    payable;\n    constructor(guard, inputs, payable) {\n        super(guard, \"fallback\", inputs);\n        Object.defineProperty(this, internal, { value: FallbackFragmentInternal });\n        defineProperties(this, { payable });\n    }\n    format(format) {\n        const type = ((this.inputs.length === 0) ? \"receive\" : \"fallback\");\n        if (format === \"json\") {\n            const stateMutability = (this.payable ? \"payable\" : \"nonpayable\");\n            return JSON.stringify({ type, stateMutability });\n        }\n        return `${type}()${this.payable ? \" payable\" : \"\"}`;\n    }\n    static from(obj) {\n        if (FallbackFragment.isFragment(obj)) {\n            return obj;\n        }\n        if (typeof (obj) === \"string\") {\n            return FallbackFragment.from(lex(obj));\n        }\n        else if (obj instanceof TokenString) {\n            const errorObj = obj.toString();\n            const topIsValid = obj.peekKeyword(setify([\"fallback\", \"receive\"]));\n            assertArgument(topIsValid, \"type must be fallback or receive\", \"obj\", errorObj);\n            const type = obj.popKeyword(setify([\"fallback\", \"receive\"]));\n            // receive()\n            if (type === \"receive\") {\n                const inputs = consumeParams(obj);\n                assertArgument(inputs.length === 0, `receive cannot have arguments`, \"obj.inputs\", inputs);\n                consumeKeywords(obj, setify([\"payable\"]));\n                consumeEoi(obj);\n                return new FallbackFragment(_guard, [], true);\n            }\n            // fallback() [payable]\n            // fallback(bytes) [payable] returns (bytes)\n            let inputs = consumeParams(obj);\n            if (inputs.length) {\n                assertArgument(inputs.length === 1 && inputs[0].type === \"bytes\", \"invalid fallback inputs\", \"obj.inputs\", inputs.map((i) => i.format(\"minimal\")).join(\", \"));\n            }\n            else {\n                inputs = [ParamType.from(\"bytes\")];\n            }\n            const mutability = consumeMutability(obj);\n            assertArgument(mutability === \"nonpayable\" || mutability === \"payable\", \"fallback cannot be constants\", \"obj.stateMutability\", mutability);\n            if (consumeKeywords(obj, setify([\"returns\"])).has(\"returns\")) {\n                const outputs = consumeParams(obj);\n                assertArgument(outputs.length === 1 && outputs[0].type === \"bytes\", \"invalid fallback outputs\", \"obj.outputs\", outputs.map((i) => i.format(\"minimal\")).join(\", \"));\n            }\n            consumeEoi(obj);\n            return new FallbackFragment(_guard, inputs, mutability === \"payable\");\n        }\n        if (obj.type === \"receive\") {\n            return new FallbackFragment(_guard, [], true);\n        }\n        if (obj.type === \"fallback\") {\n            const inputs = [ParamType.from(\"bytes\")];\n            const payable = (obj.stateMutability === \"payable\");\n            return new FallbackFragment(_guard, inputs, payable);\n        }\n        assertArgument(false, \"invalid fallback description\", \"obj\", obj);\n    }\n    static isFragment(value) {\n        return (value && value[internal] === FallbackFragmentInternal);\n    }\n}\n/**\n *  A Fragment which represents a method.\n */\nexport class FunctionFragment extends NamedFragment {\n    /**\n     *  If the function is constant (e.g. ``pure`` or ``view`` functions).\n     */\n    constant;\n    /**\n     *  The returned types for the result of calling this function.\n     */\n    outputs;\n    /**\n     *  The state mutability (e.g. ``payable``, ``nonpayable``, ``view``\n     *  or ``pure``)\n     */\n    stateMutability;\n    /**\n     *  If the function can be sent value during invocation.\n     */\n    payable;\n    /**\n     *  The amount of gas to send when calling this function\n     */\n    gas;\n    /**\n     *  @private\n     */\n    constructor(guard, name, stateMutability, inputs, outputs, gas) {\n        super(guard, \"function\", name, inputs);\n        Object.defineProperty(this, internal, { value: FunctionFragmentInternal });\n        outputs = Object.freeze(outputs.slice());\n        const constant = (stateMutability === \"view\" || stateMutability === \"pure\");\n        const payable = (stateMutability === \"payable\");\n        defineProperties(this, { constant, gas, outputs, payable, stateMutability });\n    }\n    /**\n     *  The Function selector.\n     */\n    get selector() {\n        return id(this.format(\"sighash\")).substring(0, 10);\n    }\n    format(format) {\n        if (format == null) {\n            format = \"sighash\";\n        }\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: ((this.gas != null) ? this.gas : undefined),\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format))),\n                outputs: this.outputs.map((o) => JSON.parse(o.format(format))),\n            });\n        }\n        const result = [];\n        if (format !== \"sighash\") {\n            result.push(\"function\");\n        }\n        result.push(this.name + joinParams(format, this.inputs));\n        if (format !== \"sighash\") {\n            if (this.stateMutability !== \"nonpayable\") {\n                result.push(this.stateMutability);\n            }\n            if (this.outputs && this.outputs.length) {\n                result.push(\"returns\");\n                result.push(joinParams(format, this.outputs));\n            }\n            if (this.gas != null) {\n                result.push(`@${this.gas.toString()}`);\n            }\n        }\n        return result.join(\" \");\n    }\n    static getSelector(name, params) {\n        params = (params || []).map((p) => ParamType.from(p));\n        const fragment = new FunctionFragment(_guard, name, \"view\", params, [], null);\n        return fragment.selector;\n    }\n    static from(obj) {\n        if (FunctionFragment.isFragment(obj)) {\n            return obj;\n        }\n        if (typeof (obj) === \"string\") {\n            return FunctionFragment.from(lex(obj));\n        }\n        else if (obj instanceof TokenString) {\n            const name = consumeName(\"function\", obj);\n            const inputs = consumeParams(obj);\n            const mutability = consumeMutability(obj);\n            let outputs = [];\n            if (consumeKeywords(obj, setify([\"returns\"])).has(\"returns\")) {\n                outputs = consumeParams(obj);\n            }\n            const gas = consumeGas(obj);\n            consumeEoi(obj);\n            return new FunctionFragment(_guard, name, mutability, inputs, outputs, gas);\n        }\n        // @TODO: verifyState for stateMutability\n        return new FunctionFragment(_guard, obj.name, obj.stateMutability, obj.inputs ? obj.inputs.map(ParamType.from) : [], obj.outputs ? obj.outputs.map(ParamType.from) : [], (obj.gas != null) ? obj.gas : null);\n    }\n    static isFragment(value) {\n        return (value && value[internal] === FunctionFragmentInternal);\n    }\n}\n/**\n *  A Fragment which represents a structure.\n */\nexport class StructFragment extends NamedFragment {\n    /**\n     *  @private\n     */\n    constructor(guard, name, inputs) {\n        super(guard, \"struct\", name, inputs);\n        Object.defineProperty(this, internal, { value: StructFragmentInternal });\n    }\n    format() {\n        throw new Error(\"@TODO\");\n    }\n    static from(obj) {\n        if (typeof (obj) === \"string\") {\n            return StructFragment.from(lex(obj));\n        }\n        else if (obj instanceof TokenString) {\n            const name = consumeName(\"struct\", obj);\n            const inputs = consumeParams(obj);\n            consumeEoi(obj);\n            return new StructFragment(_guard, name, inputs);\n        }\n        return new StructFragment(_guard, obj.name, obj.inputs ? obj.inputs.map(ParamType.from) : []);\n    }\n    static isFragment(value) {\n        return (value && value[internal] === StructFragmentInternal);\n    }\n}\n//# sourceMappingURL=fragments.js.map","/**\n *  About Interface\n *\n *  @_subsection api/abi:Interfaces  [interfaces]\n */\nimport { keccak256 } from \"ethers\";\nimport { id } from \"ethers\";\nimport { concat, dataSlice, getBigInt, getBytes, getBytesCopy, hexlify, zeroPadValue, isHexString, defineProperties, assertArgument, toBeHex, assert } from \"ethers\";\nimport { AbiCoder } from \"ethers\";\nimport { checkResultErrors, Result } from \"ethers\";\nimport { Typed } from \"ethers\";\nimport { ParamType, Fragment, ConstructorFragment, ErrorFragment, EventFragment, FunctionFragment } from \"./fragments\";\nexport { checkResultErrors, Result };\nexport class LogDescription {\n    fragment;\n    name;\n    signature;\n    topic;\n    args;\n    constructor(fragment, topic, args) {\n        const name = fragment.name, signature = fragment.format();\n        defineProperties(this, {\n            fragment, name, signature, topic, args\n        });\n    }\n}\nexport class TransactionDescription {\n    fragment;\n    name;\n    args;\n    signature;\n    selector;\n    value;\n    constructor(fragment, selector, args, value) {\n        const name = fragment.name, signature = fragment.format();\n        defineProperties(this, {\n            fragment, name, args, signature, selector, value\n        });\n    }\n}\nexport class ErrorDescription {\n    fragment;\n    name;\n    args;\n    signature;\n    selector;\n    constructor(fragment, selector, args) {\n        const name = fragment.name, signature = fragment.format();\n        defineProperties(this, {\n            fragment, name, args, signature, selector\n        });\n    }\n}\nexport class Indexed {\n    hash;\n    _isIndexed;\n    static isIndexed(value) {\n        return !!(value && value._isIndexed);\n    }\n    constructor(hash) {\n        defineProperties(this, { hash, _isIndexed: true });\n    }\n}\n// https://docs.soliditylang.org/en/v0.8.13/control-structures.html?highlight=panic#panic-via-assert-and-error-via-require\nconst PanicReasons = {\n    \"0\": \"generic panic\",\n    \"1\": \"assert(false)\",\n    \"17\": \"arithmetic overflow\",\n    \"18\": \"division or modulo by zero\",\n    \"33\": \"enum overflow\",\n    \"34\": \"invalid encoded storage byte array accessed\",\n    \"49\": \"out-of-bounds array access; popping on an empty array\",\n    \"50\": \"out-of-bounds access of an array or bytesN\",\n    \"65\": \"out of memory\",\n    \"81\": \"uninitialized function\",\n};\nconst BuiltinErrors = {\n    \"0x08c379a0\": {\n        signature: \"Error(string)\",\n        name: \"Error\",\n        inputs: [\"string\"],\n        reason: (message) => {\n            return `reverted with reason string ${JSON.stringify(message)}`;\n        }\n    },\n    \"0x4e487b71\": {\n        signature: \"Panic(uint256)\",\n        name: \"Panic\",\n        inputs: [\"uint256\"],\n        reason: (code) => {\n            let reason = \"unknown panic code\";\n            if (code >= 0 && code <= 0xff && PanicReasons[code.toString()]) {\n                reason = PanicReasons[code.toString()];\n            }\n            return `reverted with panic code 0x${code.toString(16)} (${reason})`;\n        }\n    }\n};\n/**\n *  An Interface abstracts many of the low-level details for\n *  encoding and decoding the data on the blockchain.\n *\n *  An ABI provides information on how to encode data to send to\n *  a Contract, how to decode the results and events and how to\n *  interpret revert errors.\n *\n *  The ABI can be specified by [any supported format](InterfaceAbi).\n */\nexport class Interface {\n    /**\n     *  All the Contract ABI members (i.e. methods, events, errors, etc).\n     */\n    fragments;\n    /**\n     *  The Contract constructor.\n     */\n    deploy;\n    /**\n     *  The Fallback method, if any.\n     */\n    fallback;\n    /**\n     *  If receiving ether is supported.\n     */\n    receive;\n    #errors;\n    #events;\n    #functions;\n    //    #structs: Map<string, StructFragment>;\n    #abiCoder;\n    /**\n     *  Create a new Interface for the %%fragments%%.\n     */\n    constructor(fragments) {\n        let abi = [];\n        if (typeof (fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        }\n        else {\n            abi = fragments;\n        }\n        this.#functions = new Map();\n        this.#errors = new Map();\n        this.#events = new Map();\n        //        this.#structs = new Map();\n        const frags = [];\n        for (const a of abi) {\n            try {\n                frags.push(Fragment.from(a));\n            }\n            catch (error) {\n                console.log(\"EE\", error);\n            }\n        }\n        defineProperties(this, {\n            fragments: Object.freeze(frags)\n        });\n        let fallback = null;\n        let receive = false;\n        this.#abiCoder = this.getAbiCoder();\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment, index) => {\n            let bucket;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        console.log(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineProperties(this, { deploy: fragment });\n                    return;\n                case \"fallback\":\n                    if (fragment.inputs.length === 0) {\n                        receive = true;\n                    }\n                    else {\n                        assertArgument(!fallback || fragment.payable !== fallback.payable, \"conflicting fallback fragments\", `fragments[${index}]`, fragment);\n                        fallback = fragment;\n                        receive = fallback.payable;\n                    }\n                    return;\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.#functions;\n                    break;\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.#events;\n                    break;\n                case \"error\":\n                    bucket = this.#errors;\n                    break;\n                default:\n                    return;\n            }\n            // Two identical entries; ignore it\n            const signature = fragment.format();\n            if (bucket.has(signature)) {\n                return;\n            }\n            bucket.set(signature, fragment);\n        });\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineProperties(this, {\n                deploy: ConstructorFragment.from(\"constructor()\")\n            });\n        }\n        defineProperties(this, { fallback, receive });\n    }\n    /**\n     *  Returns the entire Human-Readable ABI, as an array of\n     *  signatures, optionally as %%minimal%% strings, which\n     *  removes parameter names and unneceesary spaces.\n     */\n    format(minimal) {\n        const format = (minimal ? \"minimal\" : \"full\");\n        const abi = this.fragments.map((f) => f.format(format));\n        return abi;\n    }\n    /**\n     *  Return the JSON-encoded ABI. This is the format Solidiy\n     *  returns.\n     */\n    formatJson() {\n        const abi = this.fragments.map((f) => f.format(\"json\"));\n        // We need to re-bundle the JSON fragments a bit\n        return JSON.stringify(abi.map((j) => JSON.parse(j)));\n    }\n    /**\n     *  The ABI coder that will be used to encode and decode binary\n     *  data.\n     */\n    getAbiCoder() {\n        return AbiCoder.defaultAbiCoder();\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    #getFunction(key, values, forceUnique) {\n        // Selector\n        if (isHexString(key)) {\n            const selector = key.toLowerCase();\n            for (const fragment of this.#functions.values()) {\n                if (selector === fragment.selector) {\n                    return fragment;\n                }\n            }\n            return null;\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf(\"(\") === -1) {\n            const matching = [];\n            for (const [name, fragment] of this.#functions) {\n                if (name.split(\"(\" /* fix:) */)[0] === key) {\n                    matching.push(fragment);\n                }\n            }\n            if (values) {\n                const lastValue = (values.length > 0) ? values[values.length - 1] : null;\n                let valueLength = values.length;\n                let allowOptions = true;\n                if (Typed.isTyped(lastValue) && lastValue.type === \"overrides\") {\n                    allowOptions = false;\n                    valueLength--;\n                }\n                // Remove all matches that don't have a compatible length. The args\n                // may contain an overrides, so the match may have n or n - 1 parameters\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs.length;\n                    if (inputs !== valueLength && (!allowOptions || inputs !== valueLength - 1)) {\n                        matching.splice(i, 1);\n                    }\n                }\n                // Remove all matches that don't match the Typed signature\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs;\n                    for (let j = 0; j < values.length; j++) {\n                        // Not a typed value\n                        if (!Typed.isTyped(values[j])) {\n                            continue;\n                        }\n                        // We are past the inputs\n                        if (j >= inputs.length) {\n                            if (values[j].type === \"overrides\") {\n                                continue;\n                            }\n                            matching.splice(i, 1);\n                            break;\n                        }\n                        // Make sure the value type matches the input type\n                        if (values[j].type !== inputs[j].baseType) {\n                            matching.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            }\n            // We found a single matching signature with an overrides, but the\n            // last value is something that cannot possibly be an options\n            if (matching.length === 1 && values && values.length !== matching[0].inputs.length) {\n                const lastArg = values[values.length - 1];\n                if (lastArg == null || Array.isArray(lastArg) || typeof (lastArg) !== \"object\") {\n                    matching.splice(0, 1);\n                }\n            }\n            if (matching.length === 0) {\n                return null;\n            }\n            if (matching.length > 1 && forceUnique) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(\", \");\n                assertArgument(false, `ambiguous function description (i.e. matches ${matchStr})`, \"key\", key);\n            }\n            return matching[0];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.#functions.get(FunctionFragment.from(key).format());\n        if (result) {\n            return result;\n        }\n        return null;\n    }\n    /**\n     *  Get the function name for %%key%%, which may be a function selector,\n     *  function name or function signature that belongs to the ABI.\n     */\n    getFunctionName(key) {\n        const fragment = this.#getFunction(key, null, false);\n        assertArgument(fragment, \"no matching function\", \"key\", key);\n        return fragment.name;\n    }\n    /**\n     *  Get the [[FunctionFragment]] for %%key%%, which may be a function\n     *  selector, function name or function signature that belongs to the ABI.\n     *\n     *  If %%values%% is provided, it will use the Typed API to handle\n     *  ambiguous cases where multiple functions match by name.\n     *\n     *  If the %%key%% and %%values%% do not refine to a single function in\n     *  the ABI, this will throw.\n     */\n    getFunction(key, values) {\n        return this.#getFunction(key, values || null, true);\n    }\n    /**\n     *  Iterate over all functions, calling %%callback%%, sorted by their name.\n     */\n    forEachFunction(callback) {\n        const names = Array.from(this.#functions.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback((this.#functions.get(name)), i);\n        }\n    }\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    #getEvent(key, values, forceUnique) {\n        // EventTopic\n        if (isHexString(key)) {\n            const eventTopic = key.toLowerCase();\n            for (const fragment of this.#events.values()) {\n                if (eventTopic === fragment.topicHash) {\n                    return fragment;\n                }\n            }\n            return null;\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf(\"(\") === -1) {\n            const matching = [];\n            for (const [name, fragment] of this.#events) {\n                if (name.split(\"(\" /* fix:) */)[0] === key) {\n                    matching.push(fragment);\n                }\n            }\n            if (values) {\n                // Remove all matches that don't have a compatible length.\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    if (matching[i].inputs.length < values.length) {\n                        matching.splice(i, 1);\n                    }\n                }\n                // Remove all matches that don't match the Typed signature\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs;\n                    for (let j = 0; j < values.length; j++) {\n                        // Not a typed value\n                        if (!Typed.isTyped(values[j])) {\n                            continue;\n                        }\n                        // Make sure the value type matches the input type\n                        if (values[j].type !== inputs[j].baseType) {\n                            matching.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            }\n            if (matching.length === 0) {\n                return null;\n            }\n            if (matching.length > 1 && forceUnique) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(\", \");\n                assertArgument(false, `ambiguous event description (i.e. matches ${matchStr})`, \"key\", key);\n            }\n            return matching[0];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.#events.get(EventFragment.from(key).format());\n        if (result) {\n            return result;\n        }\n        return null;\n    }\n    /**\n     *  Get the event name for %%key%%, which may be a topic hash,\n     *  event name or event signature that belongs to the ABI.\n     */\n    getEventName(key) {\n        const fragment = this.#getEvent(key, null, false);\n        assertArgument(fragment, \"no matching event\", \"key\", key);\n        return fragment.name;\n    }\n    /**\n     *  Get the [[EventFragment]] for %%key%%, which may be a topic hash,\n     *  event name or event signature that belongs to the ABI.\n     *\n     *  If %%values%% is provided, it will use the Typed API to handle\n     *  ambiguous cases where multiple events match by name.\n     *\n     *  If the %%key%% and %%values%% do not refine to a single event in\n     *  the ABI, this will throw.\n     */\n    getEvent(key, values) {\n        return this.#getEvent(key, values || null, true);\n    }\n    /**\n     *  Iterate over all events, calling %%callback%%, sorted by their name.\n     */\n    forEachEvent(callback) {\n        const names = Array.from(this.#events.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback((this.#events.get(name)), i);\n        }\n    }\n    /**\n     *  Get the [[ErrorFragment]] for %%key%%, which may be an error\n     *  selector, error name or error signature that belongs to the ABI.\n     *\n     *  If %%values%% is provided, it will use the Typed API to handle\n     *  ambiguous cases where multiple errors match by name.\n     *\n     *  If the %%key%% and %%values%% do not refine to a single error in\n     *  the ABI, this will throw.\n     */\n    getError(key, values) {\n        if (isHexString(key)) {\n            const selector = key.toLowerCase();\n            if (BuiltinErrors[selector]) {\n                return ErrorFragment.from(BuiltinErrors[selector].signature);\n            }\n            for (const fragment of this.#errors.values()) {\n                if (selector === fragment.selector) {\n                    return fragment;\n                }\n            }\n            return null;\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf(\"(\") === -1) {\n            const matching = [];\n            for (const [name, fragment] of this.#errors) {\n                if (name.split(\"(\" /* fix:) */)[0] === key) {\n                    matching.push(fragment);\n                }\n            }\n            if (matching.length === 0) {\n                if (key === \"Error\") {\n                    return ErrorFragment.from(\"error Error(string)\");\n                }\n                if (key === \"Panic\") {\n                    return ErrorFragment.from(\"error Panic(uint256)\");\n                }\n                return null;\n            }\n            else if (matching.length > 1) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(\", \");\n                assertArgument(false, `ambiguous error description (i.e. ${matchStr})`, \"name\", key);\n            }\n            return matching[0];\n        }\n        // Normalize the signature and lookup the function\n        key = ErrorFragment.from(key).format();\n        if (key === \"Error(string)\") {\n            return ErrorFragment.from(\"error Error(string)\");\n        }\n        if (key === \"Panic(uint256)\") {\n            return ErrorFragment.from(\"error Panic(uint256)\");\n        }\n        const result = this.#errors.get(key);\n        if (result) {\n            return result;\n        }\n        return null;\n    }\n    /**\n     *  Iterate over all errors, calling %%callback%%, sorted by their name.\n     */\n    forEachError(callback) {\n        const names = Array.from(this.#errors.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback((this.#errors.get(name)), i);\n        }\n    }\n    // Get the 4-byte selector used by Solidity to identify a function\n    /*\ngetSelector(fragment: ErrorFragment | FunctionFragment): string {\n    if (typeof(fragment) === \"string\") {\n        const matches: Array<Fragment> = [ ];\n\n        try { matches.push(this.getFunction(fragment)); } catch (error) { }\n        try { matches.push(this.getError(<string>fragment)); } catch (_) { }\n\n        if (matches.length === 0) {\n            logger.throwArgumentError(\"unknown fragment\", \"key\", fragment);\n        } else if (matches.length > 1) {\n            logger.throwArgumentError(\"ambiguous fragment matches function and error\", \"key\", fragment);\n        }\n\n        fragment = matches[0];\n    }\n\n    return dataSlice(id(fragment.format()), 0, 4);\n}\n    */\n    // Get the 32-byte topic hash used by Solidity to identify an event\n    /*\n    getEventTopic(fragment: EventFragment): string {\n        //if (typeof(fragment) === \"string\") { fragment = this.getEvent(eventFragment); }\n        return id(fragment.format());\n    }\n    */\n    _decodeParams(params, data) {\n        return this.#abiCoder.decode(params, data);\n    }\n    _encodeParams(params, values) {\n        return this.#abiCoder.encode(params, values);\n    }\n    /**\n     *  Encodes a ``tx.data`` object for deploying the Contract with\n     *  the %%values%% as the constructor arguments.\n     */\n    encodeDeploy(values) {\n        return this._encodeParams(this.deploy.inputs, values || []);\n    }\n    /**\n     *  Decodes the result %%data%% (e.g. from an ``eth_call``) for the\n     *  specified error (see [[getError]] for valid values for\n     *  %%key%%).\n     *\n     *  Most developers should prefer the [[parseCallResult]] method instead,\n     *  which will automatically detect a ``CALL_EXCEPTION`` and throw the\n     *  corresponding error.\n     */\n    decodeErrorResult(fragment, data) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getError(fragment);\n            assertArgument(f, \"unknown error\", \"fragment\", fragment);\n            fragment = f;\n        }\n        assertArgument(dataSlice(data, 0, 4) === fragment.selector, `data signature does not match error ${fragment.name}.`, \"data\", data);\n        return this._decodeParams(fragment.inputs, dataSlice(data, 4));\n    }\n    /**\n     *  Encodes the transaction revert data for a call result that\n     *  reverted from the the Contract with the sepcified %%error%%\n     *  (see [[getError]] for valid values for %%fragment%%) with the %%values%%.\n     *\n     *  This is generally not used by most developers, unless trying to mock\n     *  a result from a Contract.\n     */\n    encodeErrorResult(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getError(fragment);\n            assertArgument(f, \"unknown error\", \"fragment\", fragment);\n            fragment = f;\n        }\n        return concat([\n            fragment.selector,\n            this._encodeParams(fragment.inputs, values || [])\n        ]);\n    }\n    /**\n     *  Decodes the %%data%% from a transaction ``tx.data`` for\n     *  the function specified (see [[getFunction]] for valid values\n     *  for %%fragment%%).\n     *\n     *  Most developers should prefer the [[parseTransaction]] method\n     *  instead, which will automatically detect the fragment.\n     */\n    decodeFunctionData(fragment, data) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n        assertArgument(dataSlice(data, 0, 4) === fragment.selector, `data signature does not match function ${fragment.name}.`, \"data\", data);\n        return this._decodeParams(fragment.inputs, dataSlice(data, 4));\n    }\n    /**\n     *  Encodes the ``tx.data`` for a transaction that calls the function\n     *  specified (see [[getFunction]] for valid values for %%fragment%%) with\n     *  the %%values%%.\n     */\n    encodeFunctionData(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n        return concat([\n            fragment.selector,\n            this._encodeParams(fragment.inputs, values || [])\n        ]);\n    }\n    /**\n     *  Decodes the result %%data%% (e.g. from an ``eth_call``) for the\n     *  specified function (see [[getFunction]] for valid values for\n     *  %%key%%).\n     *\n     *  Most developers should prefer the [[parseCallResult]] method instead,\n     *  which will automatically detect a ``CALL_EXCEPTION`` and throw the\n     *  corresponding error.\n     */\n    decodeFunctionResult(fragment, data) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n        let message = \"invalid length for result data\";\n        const bytes = getBytesCopy(data);\n        if ((bytes.length % 32) === 0) {\n            try {\n                return this.#abiCoder.decode(fragment.outputs, bytes);\n            }\n            catch (error) {\n                message = \"could not decode result data\";\n            }\n        }\n        // Call returned data with no error, but the data is junk\n        assert(false, message, \"BAD_DATA\", {\n            value: hexlify(bytes),\n            info: { method: fragment.name, signature: fragment.format() }\n        });\n    }\n    makeError(_data, tx) {\n        const data = getBytes(_data, \"data\");\n        const error = AbiCoder.getBuiltinCallException(\"call\", tx, data);\n        // Not a built-in error; try finding a custom error\n        const customPrefix = \"execution reverted (unknown custom error)\";\n        if (error.message.startsWith(customPrefix)) {\n            const selector = hexlify(data.slice(0, 4));\n            const ef = this.getError(selector);\n            if (ef) {\n                try {\n                    const args = this.#abiCoder.decode(ef.inputs, data.slice(4));\n                    error.revert = {\n                        name: ef.name, signature: ef.format(), args\n                    };\n                    error.reason = error.revert.signature;\n                    error.message = `execution reverted: ${error.reason}`;\n                }\n                catch (e) {\n                    error.message = `execution reverted (coult not decode custom error)`;\n                }\n            }\n        }\n        // Add the invocation, if available\n        const parsed = this.parseTransaction(tx);\n        if (parsed) {\n            error.invocation = {\n                method: parsed.name,\n                signature: parsed.signature,\n                args: parsed.args\n            };\n        }\n        return error;\n    }\n    /**\n     *  Encodes the result data (e.g. from an ``eth_call``) for the\n     *  specified function (see [[getFunction]] for valid values\n     *  for %%fragment%%) with %%values%%.\n     *\n     *  This is generally not used by most developers, unless trying to mock\n     *  a result from a Contract.\n     */\n    encodeFunctionResult(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n        return hexlify(this.#abiCoder.encode(fragment.outputs, values || []));\n    }\n    /*\n        spelunk(inputs: Array<ParamType>, values: ReadonlyArray<any>, processfunc: (type: string, value: any) => Promise<any>): Promise<Array<any>> {\n            const promises: Array<Promise<>> = [ ];\n            const process = function(type: ParamType, value: any): any {\n                if (type.baseType === \"array\") {\n                    return descend(type.child\n                }\n                if (type. === \"address\") {\n                }\n            };\n    \n            const descend = function (inputs: Array<ParamType>, values: ReadonlyArray<any>) {\n                if (inputs.length !== values.length) { throw new Error(\"length mismatch\"); }\n                \n            };\n    \n            const result: Array<any> = [ ];\n            values.forEach((value, index) => {\n                if (value == null) {\n                    topics.push(null);\n                } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                    logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n                } else if (Array.isArray(value)) {\n                    topics.push(value.map((value) => encodeTopic(param, value)));\n                } else {\n                    topics.push(encodeTopic(param, value));\n                }\n            });\n        }\n    */\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getEvent(fragment);\n            assertArgument(f, \"unknown event\", \"eventFragment\", fragment);\n            fragment = f;\n        }\n        assert(values.length <= fragment.inputs.length, `too many arguments for ${fragment.format()}`, \"UNEXPECTED_ARGUMENT\", { count: values.length, expectedCount: fragment.inputs.length });\n        const topics = [];\n        if (!fragment.anonymous) {\n            topics.push(fragment.topicHash);\n        }\n        // @TODO: Use the coders for this; to properly support tuples, etc.\n        const encodeTopic = (param, value) => {\n            if (param.type === \"string\") {\n                return id(value);\n            }\n            else if (param.type === \"bytes\") {\n                return keccak256(hexlify(value));\n            }\n            if (param.type === \"bool\" && typeof (value) === \"boolean\") {\n                value = (value ? \"0x01\" : \"0x00\");\n            }\n            if (param.type.match(/^u?int/)) {\n                value = toBeHex(value);\n            }\n            // Check addresses are valid\n            if (param.type === \"address\") {\n                this.#abiCoder.encode([\"address\"], [value]);\n            }\n            return zeroPadValue(hexlify(value), 32);\n            //@TOOD should probably be return toHex(value, 32)\n        };\n        values.forEach((value, index) => {\n            const param = fragment.inputs[index];\n            if (!param.indexed) {\n                assertArgument(value == null, \"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                return;\n            }\n            if (value == null) {\n                topics.push(null);\n            }\n            else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                assertArgument(false, \"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            }\n            else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            }\n            else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n        return topics;\n    }\n    encodeEventLog(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getEvent(fragment);\n            assertArgument(f, \"unknown event\", \"eventFragment\", fragment);\n            fragment = f;\n        }\n        const topics = [];\n        const dataTypes = [];\n        const dataValues = [];\n        if (!fragment.anonymous) {\n            topics.push(fragment.topicHash);\n        }\n        assertArgument(values.length === fragment.inputs.length, \"event arguments/values mismatch\", \"values\", values);\n        fragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(id(value));\n                }\n                else if (param.type === \"bytes\") {\n                    topics.push(keccak256(value));\n                }\n                else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TODO\n                    throw new Error(\"not implemented\");\n                }\n                else {\n                    topics.push(this.#abiCoder.encode([param.type], [value]));\n                }\n            }\n            else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n        return {\n            data: this.#abiCoder.encode(dataTypes, dataValues),\n            topics: topics\n        };\n    }\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(fragment, data, topics) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getEvent(fragment);\n            assertArgument(f, \"unknown event\", \"eventFragment\", fragment);\n            fragment = f;\n        }\n        if (topics != null && !fragment.anonymous) {\n            const eventTopic = fragment.topicHash;\n            assertArgument(isHexString(topics[0], 32) && topics[0].toLowerCase() === eventTopic, \"fragment/topic mismatch\", \"topics[0]\", topics[0]);\n            topics = topics.slice(1);\n        }\n        const indexed = [];\n        const nonIndexed = [];\n        const dynamic = [];\n        fragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(ParamType.from({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                }\n                else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            }\n            else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n        const resultIndexed = (topics != null) ? this.#abiCoder.decode(indexed, concat(topics)) : null;\n        const resultNonIndexed = this.#abiCoder.decode(nonIndexed, data, true);\n        //const result: (Array<any> & { [ key: string ]: any }) = [ ];\n        const values = [];\n        const keys = [];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        fragment.inputs.forEach((param, index) => {\n            let value = null;\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    value = new Indexed(null);\n                }\n                else if (dynamic[index]) {\n                    value = new Indexed(resultIndexed[indexedIndex++]);\n                }\n                else {\n                    try {\n                        value = resultIndexed[indexedIndex++];\n                    }\n                    catch (error) {\n                        value = error;\n                    }\n                }\n            }\n            else {\n                try {\n                    value = resultNonIndexed[nonIndexedIndex++];\n                }\n                catch (error) {\n                    value = error;\n                }\n            }\n            values.push(value);\n            keys.push(param.name || null);\n        });\n        return Result.fromItems(values, keys);\n    }\n    /**\n     *  Parses a transaction, finding the matching function and extracts\n     *  the parameter values along with other useful function details.\n     *\n     *  If the matching function cannot be found, return null.\n     */\n    parseTransaction(tx) {\n        const data = getBytes(tx.data, \"tx.data\");\n        const value = getBigInt((tx.value != null) ? tx.value : 0, \"tx.value\");\n        const fragment = this.getFunction(hexlify(data.slice(0, 4)));\n        if (!fragment) {\n            return null;\n        }\n        const args = this.#abiCoder.decode(fragment.inputs, data.slice(4));\n        return new TransactionDescription(fragment, fragment.selector, args, value);\n    }\n    parseCallResult(data) {\n        throw new Error(\"@TODO\");\n    }\n    /**\n     *  Parses a receipt log, finding the matching event and extracts\n     *  the parameter values along with other useful event details.\n     *\n     *  If the matching event cannot be found, returns null.\n     */\n    parseLog(log) {\n        const fragment = this.getEvent(log.topics[0]);\n        if (!fragment || fragment.anonymous) {\n            return null;\n        }\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n        return new LogDescription(fragment, fragment.topicHash, this.decodeEventLog(fragment, log.data, log.topics));\n    }\n    /**\n     *  Parses a revert data, finding the matching error and extracts\n     *  the parameter values along with other useful error details.\n     *\n     *  If the matching event cannot be found, returns null.\n     */\n    parseError(data) {\n        const hexData = hexlify(data);\n        const fragment = this.getError(dataSlice(hexData, 0, 4));\n        if (!fragment) {\n            return null;\n        }\n        const args = this.#abiCoder.decode(fragment.inputs, dataSlice(hexData, 4));\n        return new ErrorDescription(fragment, fragment.selector, args);\n    }\n    /**\n     *  Creates a new [[Interface]] from the ABI %%value%%.\n     *\n     *  The %%value%% may be provided as an existing [[Interface]] object,\n     *  a JSON-encoded ABI or any Human-Readable ABI format.\n     */\n    static from(value) {\n        // Already an Interface, which is immutable\n        if (value instanceof Interface) {\n            return value;\n        }\n        // JSON\n        if (typeof (value) === \"string\") {\n            return new Interface(JSON.parse(value));\n        }\n        // Maybe an interface from an older version, or from a symlinked copy\n        if (typeof (value.format) === \"function\") {\n            return new Interface(value.format(\"json\"));\n        }\n        // Array of fragments\n        return new Interface(value);\n    }\n}\n//# sourceMappingURL=interface.js.map","import {\n    keccak256,\n    sha256,\n    toUtf8Bytes,\n    toUtf8String,\n    recoverAddress,\n    SigningKey,\n    AbiCoder,\n    Signature,\n    concat,\n    id,\n    Mnemonic,\n    Wordlist,\n    wordlists,\n    Wallet as ethersWallet,\n    HDNodeWallet as ethersHDNodeWallet,\n    getBytes,\n    computeHmac,\n} from 'ethers';\n\nimport { Interface } from './interface.js';\n\nconst splitSignature = (sigBytes) => Signature.from(sigBytes);\nconst joinSignature = (splitSig) => Signature.from(splitSig).serialized;\nconst arrayify = (value) => getBytes(value);\nconst FormatTypes = {\n    sighash: 'sighash',\n    minimal: 'minimal',\n    full: 'full',\n    json: 'json',\n};\nconst isValidMnemonic = Mnemonic.isValidMnemonic;\n\ncomputeHmac.register((algorithm, key, data) => {\n    return computeHmac._(algorithm, Buffer.from(key), Buffer.from(data));\n});\n\nexport {\n    keccak256,\n    sha256,\n    toUtf8Bytes,\n    toUtf8String,\n    recoverAddress,\n    SigningKey,\n    AbiCoder,\n    Interface,\n    FormatTypes,\n    splitSignature,\n    joinSignature,\n    arrayify,\n    ethersWallet,\n    ethersHDNodeWallet,\n    concat,\n    id,\n    Mnemonic,\n    Wordlist,\n    wordlists,\n    isValidMnemonic,\n};\n","import TronWeb from \"../index\";\nimport { id, keccak256, concat, defineProperties, getBigInt, getBytes, hexlify, mask, toTwos, toBeHex, zeroPadValue, assertArgument } from \"ethers\";\nimport {  ADDRESS_PREFIX_REGEX } from './address';\n\nfunction getAddress(address) {\n    return TronWeb.address.toHex(address).replace(ADDRESS_PREFIX_REGEX, '0x');\n};\nfunction getTronAddress(address) {\n    return TronWeb.address.toHex(address);\n};\nconst padding = new Uint8Array(32);\npadding.fill(0);\nconst BN__1 = BigInt(-1);\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_MAX_UINT256 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\nfunction hexPadRight(value) {\n    const bytes = getBytes(value);\n    const padOffset = bytes.length % 32;\n    if (padOffset) {\n        return concat([bytes, padding.slice(padOffset)]);\n    }\n    return hexlify(bytes);\n}\nconst hexTrue = toBeHex(BN_1, 32);\nconst hexFalse = toBeHex(BN_0, 32);\nconst domainFieldTypes = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\nconst domainFieldNames = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\nfunction checkString(key) {\n    return function (value) {\n        assertArgument(typeof (value) === \"string\", `invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value);\n        return value;\n    };\n}\nconst domainChecks = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function (value) {\n        return getBigInt(value, \"domain.chainId\");\n    },\n    verifyingContract: function (value) {\n        try {\n            return getTronAddress(value).toLowerCase();\n        }\n        catch (error) { }\n        assertArgument(false, `invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function (value) {\n        const bytes = getBytes(value, \"domain.salt\");\n        assertArgument(bytes.length === 32, `invalid domain value \"salt\"`, \"domain.salt\", value);\n        return hexlify(bytes);\n    }\n};\nfunction getBaseEncoder(type) {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n            const width = parseInt(match[2] || \"256\");\n            assertArgument(width % 8 === 0 && width !== 0 && width <= 256 && (match[2] == null || match[2] === String(width)), \"invalid numeric width\", \"type\", type);\n            const boundsUpper = mask(BN_MAX_UINT256, signed ? (width - 1) : width);\n            const boundsLower = signed ? ((boundsUpper + BN_1) * BN__1) : BN_0;\n            return function (_value) {\n                const value = getBigInt(_value, \"value\");\n                assertArgument(value >= boundsLower && value <= boundsUpper, `value out-of-bounds for ${type}`, \"value\", value);\n                if (!signed) return toBeHex(value, 32);\n                return toBeHex(toTwos(value, 256), 32);\n            };\n        }\n    }\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            assertArgument(width !== 0 && width <= 32 && match[1] === String(width), \"invalid bytes width\", \"type\", type);\n            return function (value) {\n                const bytes = getBytes(value);\n                assertArgument(bytes.length === width, `invalid length for ${type}`, \"value\", value);\n                return hexPadRight(value);\n            };\n        }\n    }\n    switch (type) {\n    \tcase \"trcToken\": return getBaseEncoder('uint256');\n        case \"address\": return function (value) {\n            return zeroPadValue(getAddress(value), 32);\n        };\n        case \"bool\": return function (value) {\n            return ((!value) ? hexFalse : hexTrue);\n        };\n        case \"bytes\": return function (value) {\n            return keccak256(value);\n        };\n        case \"string\": return function (value) {\n            return id(value);\n        };\n    }\n    return null;\n}\nfunction encodeType(name, fields) {\n    return `${name}(${fields.map(({ name, type }) => (type + \" \" + name)).join(\",\")})`;\n}\nexport class TypedDataEncoder {\n    primaryType;\n    #types;\n    get types() {\n        return JSON.parse(this.#types);\n    }\n    #fullTypes;\n    #encoderCache;\n    constructor(types) {\n        this.#types = JSON.stringify(types);\n        this.#fullTypes = new Map();\n        this.#encoderCache = new Map();\n        // Link struct types to their direct child structs\n        const links = new Map();\n        // Link structs to structs which contain them as a child\n        const parents = new Map();\n        // Link all subtypes within a given struct\n        const subtypes = new Map();\n        Object.keys(types).forEach((type) => {\n            links.set(type, new Set());\n            parents.set(type, []);\n            subtypes.set(type, new Set());\n        });\n        for (const name in types) {\n            const uniqueNames = new Set();\n            for (const field of types[name]) {\n                // Check each field has a unique name\n                assertArgument(!uniqueNames.has(field.name), `duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, \"types\", types);\n                uniqueNames.add(field.name);\n                // Get the base type (drop any array specifiers)\n                const baseType = (field.type.match(/^([^\\x5b]*)(\\x5b|$)/))[1] || null;\n                assertArgument(baseType !== name, `circular type reference to ${JSON.stringify(baseType)}`, \"types\", types);\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) {\n                    continue;\n                }\n                assertArgument(parents.has(baseType), `unknown type ${JSON.stringify(baseType)}`, \"types\", types);\n                // Add linkage\n                parents.get(baseType).push(name);\n                links.get(name).add(baseType);\n            }\n        }\n        // Deduce the primary type\n        const primaryTypes = Array.from(parents.keys()).filter((n) => (parents.get(n).length === 0));\n        assertArgument(primaryTypes.length !== 0, \"missing primary type\", \"types\", types);\n        assertArgument(primaryTypes.length === 1, `ambiguous primary types or unused types: ${primaryTypes.map((t) => (JSON.stringify(t))).join(\", \")}`, \"types\", types);\n        defineProperties(this, { primaryType: primaryTypes[0] });\n        // Check for circular type references\n        function checkCircular(type, found) {\n            assertArgument(!found.has(type), `circular type reference to ${JSON.stringify(type)}`, \"types\", types);\n            found.add(type);\n            for (const child of links.get(type)) {\n                if (!parents.has(child)) {\n                    continue;\n                }\n                // Recursively check children\n                checkCircular(child, found);\n                // Mark all ancestors as having this decendant\n                for (const subtype of found) {\n                    subtypes.get(subtype).add(child);\n                }\n            }\n            found.delete(type);\n        }\n        checkCircular(this.primaryType, new Set());\n        // Compute each fully describe type\n        for (const [name, set] of subtypes) {\n            const st = Array.from(set);\n            st.sort();\n            this.#fullTypes.set(name, encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\"));\n        }\n    }\n    getEncoder(type) {\n        let encoder = this.#encoderCache.get(type);\n        if (!encoder) {\n            encoder = this.#getEncoder(type);\n            this.#encoderCache.set(type, encoder);\n        }\n        return encoder;\n    }\n    #getEncoder(type) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return encoder;\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            return (value) => {\n                assertArgument(!match[3] || parseInt(match[3]) === value.length, `array length mismatch; expected length ${parseInt(match[3])}`, \"value\", value);\n                let result = value.map(subEncoder);\n                if (this.#fullTypes.has(subtype)) {\n                    result = result.map(keccak256);\n                }\n                return keccak256(concat(result));\n            };\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this.#fullTypes.get(type));\n            return (value) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this.#fullTypes.has(type)) {\n                        return keccak256(result);\n                    }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return concat(values);\n            };\n        }\n        assertArgument(false, `unknown type: ${type}`, \"type\", type);\n    }\n    encodeType(name) {\n        const result = this.#fullTypes.get(name);\n        assertArgument(result, `unknown type: ${JSON.stringify(name)}`, \"name\", name);\n        return result;\n    }\n    encodeData(type, value) {\n        return this.getEncoder(type)(value);\n    }\n    hashStruct(name, value) {\n        return keccak256(this.encodeData(name, value));\n    }\n    encode(value) {\n        return this.encodeData(this.primaryType, value);\n    }\n    hash(value) {\n        return this.hashStruct(this.primaryType, value);\n    }\n    _visit(type, value, callback) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return callback(type, value);\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            assertArgument(!match[3] || parseInt(match[3]) === value.length, `array length mismatch; expected length ${parseInt(match[3])}`, \"value\", value);\n            return value.map((v) => this._visit(match[1], v, callback));\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, {});\n        }\n        assertArgument(false, `unknown type: ${type}`, \"type\", type);\n    }\n    visit(value, callback) {\n        return this._visit(this.primaryType, value, callback);\n    }\n    static from(types) {\n        return new TypedDataEncoder(types);\n    }\n    static getPrimaryType(types) {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n    static hashStruct(name, types, value) {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n    static hashDomain(domain) {\n        const domainFields = [];\n        for (const name in domain) {\n            if (domain[name] == null) {\n                continue;\n            }\n            const type = domainFieldTypes[name];\n            assertArgument(type, `invalid typed-data domain key: ${JSON.stringify(name)}`, \"domain\", domain);\n            domainFields.push({ name, type });\n        }\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n    static encode(domain, types, value) {\n        return concat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n    static hash(domain, types, value) {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n    static getPayload(domain, types, value) {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n        // Derive the EIP712Domain Struct reference type\n        const domainValues = {};\n        const domainTypes = [];\n        domainFieldNames.forEach((name) => {\n            const value = domain[name];\n            if (value == null) {\n                return;\n            }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n        const encoder = TypedDataEncoder.from(types);\n        const typesWithDomain = Object.assign({}, types);\n        assertArgument(typesWithDomain.EIP712Domain == null, \"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        typesWithDomain.EIP712Domain = domainTypes;\n        // Validate the data structures and types\n        encoder.encode(value);\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type, value) => {\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(getBytes(value));\n                }\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return getBigInt(value).toString();\n                }\n                switch (type) {\n\t\t            case \"trcToken\":\n                        return getBigInt(value).toString();\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        assertArgument(typeof (value) === \"string\", \"invalid string\", \"value\", value);\n                        return value;\n                }\n                assertArgument(false, \"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n//# sourceMappingURL=typed-data.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"ethereum-cryptography/secp256k1\");","import {ADDRESS_PREFIX, ADDRESS_PREFIX_BYTE, ADDRESS_SIZE} from './address';\nimport {base64EncodeToString} from './code';\nimport {base64DecodeFromString, hexStr2byteArray} from './code';\nimport {encode58, decode58} from './base58';\nimport {byte2hexStr, byteArray2hexStr} from './bytes';\nimport {keccak256, sha256, SigningKey} from './ethersUtils';\nimport {TypedDataEncoder} from './typedData';\nimport * as ec from \"ethereum-cryptography/secp256k1\";\n\nconst secp = ec.secp256k1 ?? ec;\n\nfunction normalizePrivateKeyBytes(priKeyBytes) {\n    return hexStr2byteArray(byteArray2hexStr(priKeyBytes).padStart(64, '0'));\n}\n\nexport function getBase58CheckAddress(addressBytes) {\n    const hash0 = SHA256(addressBytes);\n    const hash1 = SHA256(hash0);\n\n    let checkSum = hash1.slice(0, 4);\n    checkSum = addressBytes.concat(checkSum);\n\n    return encode58(checkSum);\n}\n\nexport function decodeBase58Address(base58Sting) {\n    if (typeof (base58Sting) != 'string')\n        return false;\n\n    if (base58Sting.length <= 4)\n        return false;\n\n    let address = decode58(base58Sting);\n\n    if (base58Sting.length <= 4)\n        return false;\n\n    const len = address.length;\n    const offset = len - 4;\n    const checkSum = address.slice(offset);\n\n    address = address.slice(0, offset);\n\n    const hash0 = SHA256(address);\n    const hash1 = SHA256(hash0);\n    const checkSum1 = hash1.slice(0, 4);\n\n    if (checkSum[0] == checkSum1[0] && checkSum[1] == checkSum1[1] && checkSum[2] ==\n        checkSum1[2] && checkSum[3] == checkSum1[3]\n    ) {\n        return address;\n    }\n\n    throw new Error('Invalid address provided');\n}\n\nexport function signTransaction(priKeyBytes, transaction) {\n    if (typeof priKeyBytes === 'string')\n        priKeyBytes = hexStr2byteArray(priKeyBytes);\n\n    const txID = transaction.txID;\n    const signature = ECKeySign(hexStr2byteArray(txID), priKeyBytes);\n\n    if (Array.isArray(transaction.signature)) {\n        if (!transaction.signature.includes(signature))\n            transaction.signature.push(signature);\n    } else\n        transaction.signature = [signature];\n    return transaction;\n}\n\nexport function arrayToBase64String(a) {\n    return btoa(String.fromCharCode(...a));\n}\n\nexport function signBytes(privateKey, contents) {\n    if (typeof privateKey === 'string')\n        privateKey = hexStr2byteArray(privateKey);\n\n    const hashBytes = SHA256(contents);\n    const signBytes = ECKeySign(hashBytes, privateKey);\n\n    return signBytes;\n}\n\nexport function _signTypedData(domain, types, value, privateKey) {\n    const key = `0x${privateKey.replace(/^0x/, '')}`;\n    const signingKey = new SigningKey(key);\n\n    const messageDigest = TypedDataEncoder.hash(domain, types, value);\n    const signature = signingKey.sign(messageDigest);\n    const signatureHex = [\n        '0x',\n        signature.r.substring(2),\n        signature.s.substring(2),\n        Number(signature.v).toString(16),\n    ].join('');\n    return signatureHex;\n}\n\nexport function getRowBytesFromTransactionBase64(base64Data) {\n    const bytesDecode = base64DecodeFromString(base64Data);\n    const transaction = proto.protocol.Transaction.deserializeBinary(bytesDecode);\n    const raw = transaction.getRawData();\n\n    return raw.serializeBinary();\n}\n\nexport function genPriKey() {\n    const priKey = secp.utils.randomPrivateKey();\n    let priKeyHex = byteArray2hexStr(priKey);\n\n    priKeyHex = priKeyHex.padStart(64, '0');\n\n    return hexStr2byteArray(priKeyHex);\n}\n\nexport function computeAddress(pubBytes) {\n    if (pubBytes.length === 65)\n        pubBytes = pubBytes.slice(1);\n\n    const hash = keccak256(new Uint8Array(pubBytes)).toString().substring(2);\n    const addressHex = ADDRESS_PREFIX + hash.substring(24);\n\n    return hexStr2byteArray(addressHex);\n}\n\nexport function getAddressFromPriKey(priKeyBytes) {\n    let pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    return computeAddress(pubBytes);\n}\n\nexport function decode58Check(addressStr) {\n    const decodeCheck = decode58(addressStr);\n\n    if (decodeCheck.length <= 4)\n        return false;\n\n    const decodeData = decodeCheck.slice(0, decodeCheck.length - 4);\n    const hash0 = SHA256(decodeData);\n    const hash1 = SHA256(hash0);\n\n    if (hash1[0] === decodeCheck[decodeData.length] &&\n        hash1[1] === decodeCheck[decodeData.length + 1] &&\n        hash1[2] === decodeCheck[decodeData.length + 2] &&\n        hash1[3] === decodeCheck[decodeData.length + 3]) {\n        return decodeData;\n    }\n\n    return false;\n}\n\nexport function isAddressValid(base58Str) {\n    if (typeof (base58Str) !== 'string')\n        return false;\n\n    if (base58Str.length !== ADDRESS_SIZE)\n        return false;\n\n    let address = decode58(base58Str);\n\n    if (address.length !== 25)\n        return false;\n\n    if (address[0] !== ADDRESS_PREFIX_BYTE)\n        return false;\n\n    const checkSum = address.slice(21);\n    address = address.slice(0, 21);\n\n    const hash0 = SHA256(address);\n    const hash1 = SHA256(hash0);\n    const checkSum1 = hash1.slice(0, 4);\n\n    if (checkSum[0] == checkSum1[0] && checkSum[1] == checkSum1[1] && checkSum[2] ==\n        checkSum1[2] && checkSum[3] == checkSum1[3]\n    ) {\n        return true\n    }\n\n    return false;\n}\n\nexport function getBase58CheckAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n\n    return getBase58CheckAddress(addressBytes);\n}\n\nexport function getHexStrAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n    const addressHex = byteArray2hexStr(addressBytes);\n\n    return addressHex;\n}\n\nexport function getAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n    const addressBase64 = base64EncodeToString(addressBytes);\n\n    return addressBase64;\n}\n\nexport function getPubKeyFromPriKey(priKeyBytes) {\n    const pubkey = secp.ProjectivePoint.fromPrivateKey(new Uint8Array(normalizePrivateKeyBytes(priKeyBytes)));\n    const x = pubkey.x;\n    const y = pubkey.y;\n\n    let xHex = x.toString(16).padStart(64, '0');\n    let yHex = y.toString(16).padStart(64, '0');\n\n    const pubkeyHex = `04${xHex}${yHex}`;\n    const pubkeyBytes = hexStr2byteArray(pubkeyHex);\n\n    return pubkeyBytes;\n}\n\nexport function ECKeySign(hashBytes, priKeyBytes) {\n    const signature = secp.sign(byteArray2hexStr(hashBytes), byteArray2hexStr(priKeyBytes))\n\n    const r = signature.r.toString(16);\n    const s = signature.s.toString(16);\n    const v = signature.recovery + 27;\n\n    return r.padStart(64, '0') + s.padStart(64, '0') + byte2hexStr(v);\n}\n\nexport function SHA256(msgBytes) {\n    const msgHex = byteArray2hexStr(msgBytes);\n    const hashHex = sha256('0x' + msgHex).replace(/^0x/, '')\n    return hexStr2byteArray(hashHex);\n}\n\nexport function passwordToAddress(password) {\n    const com_priKeyBytes = base64DecodeFromString(password);\n    const com_addressBytes = getAddressFromPriKey(com_priKeyBytes);\n\n    return getBase58CheckAddress(com_addressBytes);\n}\n\nexport function pkToAddress(privateKey, strict = false) {\n    const com_priKeyBytes = hexStr2byteArray(privateKey, strict);\n    const com_addressBytes = getAddressFromPriKey(com_priKeyBytes);\n\n    return getBase58CheckAddress(com_addressBytes);\n}\n","import {byteArray2hexStr} from './bytes';\nimport {\n    getBase58CheckAddress,\n    genPriKey,\n    getAddressFromPriKey,\n    getPubKeyFromPriKey,\n    pkToAddress,\n} from './crypto';\nimport {ethersHDNodeWallet, Mnemonic} from './ethersUtils'\nimport {TRON_BIP39_PATH_INDEX_0} from './address'\nimport utils from './index';\n\nconst INVALID_TRON_PATH_ERROR_MSG = 'Invalid tron path provided';\n\nexport function generateAccount() {\n    const priKeyBytes = genPriKey();\n    const pubKeyBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = getAddressFromPriKey(priKeyBytes);\n\n    const privateKey = byteArray2hexStr(priKeyBytes);\n    const publicKey = byteArray2hexStr(pubKeyBytes);\n\n    return {\n        privateKey,\n        publicKey,\n        address: {\n            base58: getBase58CheckAddress(addressBytes),\n            hex: byteArray2hexStr(addressBytes)\n        }\n    }\n}\n\nexport function generateRandom(options) {\n    if(!utils.isObject(options)) { options = {}; }\n    if(!options.path) {\n        options.path = TRON_BIP39_PATH_INDEX_0;\n    }\n    if(!String(options.path).match(/^m\\/44\\'\\/195\\'/)) {\n        throw new Error(INVALID_TRON_PATH_ERROR_MSG);\n    }\n\n    const account = ethersHDNodeWallet.createRandom(options.password, options.path, options.wordlist);\n\n    const result = {\n        mnemonic: account.mnemonic,\n        privateKey: account.privateKey,\n        publicKey: account.signingKey.publicKey,\n        address: pkToAddress(account.privateKey.replace(/^0x/, ''))\n    }\n    \n    return result;\n}\n\nexport function generateAccountWithMnemonic(mnemonic, path, wordlist = null) {\n    if(!path) {\n        path = TRON_BIP39_PATH_INDEX_0;\n    }\n    if(!String(path).match(/^m\\/44\\'\\/195\\'/)) {\n        throw new Error(INVALID_TRON_PATH_ERROR_MSG);\n    }\n    const account =  ethersHDNodeWallet.fromMnemonic(Mnemonic.fromPhrase(mnemonic, null, wordlist), path);\n\n    const result = {\n        mnemonic: account.mnemonic,\n        privateKey: account.privateKey,\n        publicKey: account.signingKey.publicKey,\n        address: pkToAddress(account.privateKey.replace(/^0x/, ''))\n    }\n\n    return result;\n}","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@ethersproject/abi\");","import { AbiCoder } from '@ethersproject/abi';\nimport TronWeb from 'index';\nimport {ADDRESS_PREFIX, ADDRESS_PREFIX_REGEX} from 'utils/address';\n\nconst abiCoder = new AbiCoder();\n\nfunction _isArray(_array) {\n    return Array.isArray(_array);\n}\n\nfunction _addressToHex(value) {\n    return TronWeb.address.toHex(value).replace(ADDRESS_PREFIX_REGEX, '0x');\n}\n\nfunction deepCopy(target) {\n    if (\n        Object.prototype.toString.call(target) !== '[object Object]' &&\n        Object.prototype.toString.call(target) !== '[object Array]'\n    ) {\n        return target;\n    }\n    const newTarget = _isArray(target) ? [] : {};\n\n    Object.keys(target).forEach(key =>\n        newTarget[key] = target[key] instanceof Object && !target[key]._isBigNumber ? deepCopy(target[key]) : target[key]\n    );\n\n    return newTarget;\n}\n\nexport function decodeParams(names, types, output, ignoreMethodHash) {\n    if (!output || typeof output === 'boolean') {\n        ignoreMethodHash = output;\n        output = types;\n        types = names;\n        names = [];\n    }\n\n    if (ignoreMethodHash && output.replace(/^0x/, '').length % 64 === 8)\n        output = '0x' + output.replace(/^0x/, '').substring(8);\n\n    if (output.replace(/^0x/, '').length % 64)\n        throw new Error('The encoded string is not valid. Its length must be a multiple of 64.');\n\n    // workaround for unsupported trcToken type\n    types = types.map(type => {\n        if (/trcToken/.test(type)) {\n            type = type.replace(/trcToken/, 'uint256')\n        }\n        return type\n    })\n\n    return abiCoder.decode(types, output).reduce((obj, arg, index) => {\n        if (types[index] == 'address')\n            arg = ADDRESS_PREFIX + arg.substr(2).toLowerCase();\n\n        if (names.length)\n            obj[names[index]] = arg;\n        else obj.push(arg);\n\n        return obj;\n    }, names.length ? {} : []);\n}\n\nexport function encodeParams(types, values) {\n\n    for (let i = 0; i < types.length; i++) {\n        if (types[i] === 'address') {\n            values[i] = TronWeb.address.toHex(values[i]).replace(ADDRESS_PREFIX_REGEX, '0x');\n        }\n    }\n\n    return abiCoder.encode(types, values);\n}\n\nfunction extractSize (type) {\n  const size = type.match(/([a-zA-Z0-9])(\\[.*\\])/);\n  return size ? size[2] : '';\n}\n\nfunction extractArrayDim (type) {\n  const size = extractSize(type)\n  return (size.match(/\\]\\[/g) || []).length + 1;\n}\n\nexport function encodeParamsV2ByABI(funABI, args) {\n    const types = [];\n\n    const buildFullTypeDefinition = (typeDef) => {\n      if (typeDef && typeDef.type.indexOf('tuple') === 0 && typeDef.components) {\n        const innerTypes = typeDef.components.map((innerType) => { return buildFullTypeDefinition(innerType) });\n        return `tuple(${innerTypes.join(',')})${extractSize(typeDef.type)}`;\n      }\n\n      if (/trcToken/.test(typeDef.type))\n        return typeDef.type.replace(/trcToken/, 'uint256');\n\n      return typeDef.type;\n    }\n\n    const convertTypes = (types) => {\n      for (let i = 0; i < types.length; i++) {\n        const type = types[i];\n        if (/trcToken/.test(type))\n          types[i] = type.replace(/trcToken/, 'uint256');\n      }\n    }\n\n    const convertAddresses = addrArr => {\n      if (Array.isArray(addrArr)) {\n        addrArr.forEach((addrs, i) => {\n          addrArr[i] = convertAddresses(addrs);\n        });\n        return addrArr;\n      } else {\n        return _addressToHex(addrArr)\n      }\n    };\n\n    const mapTuple = (components, args, dimension) => {\n      if (dimension > 1) {\n        if (args.length) {\n          args.forEach(arg => {\n            mapTuple(components, arg, dimension - 1);\n          });\n        }\n      } else {\n        if (args.length && dimension) {\n          args.forEach(arg => {\n            encodeArgs(components, arg);\n          });\n        }\n      }\n    };\n\n    const encodeArgs = (inputs = [], args) => {\n      if (inputs.length)\n        inputs.forEach((input, i) => {\n          const type = input.type;\n\n          if (args[i])\n            if (type === 'address') args[i] = _addressToHex(args[i]);\n            else if (type.match(/^([^\\x5b]*)(\\x5b|$)/)[0] === 'address[')\n              convertAddresses(args[i])\n            else if (type.indexOf('tuple') === 0)\n              if (extractSize(type)) {\n                const dimension = extractArrayDim(type);\n                mapTuple(input.components, args[i], dimension);\n              } else encodeArgs(input.components, args[i]);\n        });\n    };\n\n    if (funABI.inputs && funABI.inputs.length) {\n      for (let i = 0; i < funABI.inputs.length; i++) {\n        const type = funABI.inputs[i].type;\n        // \"false\" will be converting to `false` and \"true\" will be working\n        // fine as abiCoder assume anything in quotes as `true`\n        if (type === 'bool' && args[i] === 'false') {\n          args[i] = false;\n        }\n        types.push(type.indexOf('tuple') === 0 ? buildFullTypeDefinition(funABI.inputs[i]) : type);\n        if (args.length < types.length) {\n          args.push('');\n        }\n      }\n    }\n\n    encodeArgs(funABI.inputs, args);\n    convertTypes(types);\n\n    return abiCoder.encode(types, args);\n}\n\nexport function decodeParamsV2ByABI(funABI, data) {\n  const convertTypeNames = (types) => {\n    for (let i = 0; i < types.length; i++) {\n      const type = types[i]\n      if (/^trcToken/.test(type))\n        types[i] = type.replace(/^trcToken/, 'uint256')\n    }\n  }\n\n  const convertAddresses = addrArr => {\n    if (Array.isArray(addrArr)) {\n      addrArr.forEach((addrs, i) => {\n        addrArr[i] = convertAddresses(addrs);\n      });\n      return addrArr;\n    } else {\n      return TronWeb.address.toHex(addrArr)\n    }\n  };\n\n  const mapTuple = (components, args, dimension) => {\n    if (dimension > 1) {\n      if (args.length) {\n        args.forEach(arg => {\n          mapTuple(components, arg, dimension - 1);\n        });\n      }\n    } else {\n      if (args.length && dimension) {\n        args.forEach(arg => {\n          decodeResult(components, arg);\n        });\n      }\n    }\n  };\n\n  const buildFullTypeNameDefinition = (typeDef) => {\n    const name = typeDef.name ? ` ${typeDef.name}` : '';\n    if (typeDef && typeDef.type.indexOf('tuple') === 0 && typeDef.components) {\n      const innerTypes = typeDef.components.map((innerType) => { return buildFullTypeNameDefinition(innerType) });\n      return `tuple(${innerTypes.join(',')})${extractSize(typeDef.type)}${name}`;\n    }\n    if (/trcToken/.test(typeDef.type))\n      return typeDef.type.replace(/trcToken/, 'uint256') + name;\n\n    return typeDef.type + name;\n  }\n\n  const decodeResult = (outputs = [], result) => {\n    if (outputs.length)\n      outputs.forEach((output, i) => {\n        const {type, name} = output;\n\n        if (result[i])\n          if (type === 'address') {\n            result[i] = TronWeb.address.toHex(result[i]);\n            if(name) result[name] = TronWeb.address.toHex(result[name]);\n          }\n          else if (type.match(/^([^\\x5b]*)(\\x5b|$)/)[0] === 'address[') {\n            convertAddresses(result[i])\n            if(name) convertAddresses(result[name])\n          }\n          else if (type.indexOf('tuple') === 0) {\n            if (extractSize(type)) {\n              const dimension = extractArrayDim(type);\n              mapTuple(output.components, result[i], dimension);\n            } else decodeResult(output.components, result[i]);\n\n            if(name) result[name] = result[i];\n          }\n      });\n  };\n\n  // Only decode if there supposed to be fields\n  if (funABI.outputs && funABI.outputs.length > 0) {\n\n      let outputTypes = [];\n      for (let i = 0; i < funABI.outputs.length; i++) {\n        const type = funABI.outputs[i].type;\n        const name = funABI.outputs[i].name ? ` ${funABI.outputs[i].name}` : '';\n        outputTypes.push(type.indexOf('tuple') === 0 ? buildFullTypeNameDefinition(funABI.outputs[i]) : type + name);\n      }\n      convertTypeNames(outputTypes);\n\n      if (!data || !data.length) data = new Uint8Array(32 * funABI.outputs.length); // ensuring the data is at least filled by 0 cause `AbiCoder` throws if there's not engouh data\n      // decode data\n      const decodeRes = abiCoder.decode(outputTypes, data);\n      const decodeResCopy = deepCopy(decodeRes);\n      decodeResult(funABI.outputs, decodeResCopy);\n\n      return decodeResCopy\n  }\n  return [];\n}","import { keccak256, toUtf8Bytes, concat, recoverAddress, SigningKey, joinSignature } from 'utils/ethersUtils';\nimport { ADDRESS_PREFIX } from 'utils/address';\nimport { getBase58CheckAddress } from 'utils/crypto';\nimport { hexStr2byteArray } from 'utils/code';\n\nexport const TRON_MESSAGE_PREFIX = \"\\x19TRON Signed Message:\\n\";\n\nexport function hashMessage(message) {\n    if (typeof(message) === \"string\") { \n        message = toUtf8Bytes(message);\n    }\n\n    if (Array.isArray(message)) {\n        message = new Uint8Array(message);\n    }\n\n    return keccak256(concat([\n        toUtf8Bytes(TRON_MESSAGE_PREFIX),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n\nexport function signMessage(message, privateKey) {\n    if(!privateKey.match(/^0x/)) {\n        privateKey =  '0x' + privateKey;\n    }\n    \n    const signingKey = new SigningKey(privateKey);\n    const messageDigest = hashMessage(message);\n    const signature = signingKey.sign(messageDigest);\n    \n    return joinSignature(signature)\n}\n\nexport function verifyMessage(message, signature) {\n    if(!signature.match(/^0x/)) {\n      signature =  '0x' + signature;\n    }\n    const recovered = recoverAddress(hashMessage(message), signature);\n    const base58Address = getBase58CheckAddress(hexStr2byteArray(recovered.replace(/^0x/, ADDRESS_PREFIX)));\n    \n    return base58Address;\n}\n","const google_protobuf_any_pb = require('@tronweb3/google-protobuf/google/protobuf/any_pb');\n\nconst { Transaction, Permission, Key } = require('../protocol/core/Tron_pb');\n\nconst {\n    TransferContract,\n    FreezeBalanceContract,\n    UnfreezeBalanceContract,\n    WithdrawBalanceContract,\n    FreezeBalanceV2Contract,\n    UnfreezeBalanceV2Contract,\n    WithdrawExpireUnfreezeContract,\n    DelegateResourceContract,\n    UnDelegateResourceContract,\n} = require('../protocol/core/contract/balance_contract_pb');\nconst {\n    TransferAssetContract,\n    ParticipateAssetIssueContract,\n    AssetIssueContract,\n    UpdateAssetContract\n} = require('../protocol/core/contract/asset_issue_contract_pb');\n\nconst {\n    TriggerSmartContract,\n    ClearABIContract,\n    UpdateEnergyLimitContract,\n    UpdateSettingContract,\n    CreateSmartContract,\n    SmartContract,\n} = require('../protocol/core/contract/smart_contract_pb');\n\nconst { ResourceCode } = require('../protocol/core/contract/common_pb');\n\nconst {\n    WitnessCreateContract,\n    VoteWitnessContract,\n} = require('../protocol/core/contract/witness_contract_pb');\n\nconst {\n    UpdateBrokerageContract,\n} = require('../protocol/core/contract/storage_contract_pb');\n\nconst {\n    AccountCreateContract,\n    AccountUpdateContract,\n    SetAccountIdContract,\n    AccountPermissionUpdateContract,\n} = require('../protocol/core/contract/account_contract_pb');\n\nconst {\n    ProposalCreateContract,\n    ProposalDeleteContract,\n    ProposalApproveContract,\n} = require('../protocol/core/contract/proposal_contract_pb');\n\nconst {\n    ExchangeCreateContract,\n    ExchangeInjectContract,\n    ExchangeWithdrawContract,\n    ExchangeTransactionContract,\n} = require('../protocol/core/contract/exchange_contract_pb');\n\nimport { byteArray2hexStr } from './bytes';\nimport { sha256, keccak256 } from './ethersUtils';\nimport TronWeb from '../index';\n\nconst fromHexString = (hexString) => {\n    if (!hexString || hexString.length === 0) return new Uint8Array([]);\n    return new Uint8Array(\n        TronWeb.address.toHex(hexString).match(/.{1,2}/g).map((byte) => parseInt(byte, 16))\n    );\n};\n    \n\nconst sha3 = (string, prefix = true) => {\n    return (\n        (prefix ? '0x' : '') +\n        keccak256(Buffer.from(string, 'utf-8')).toString().substring(2)\n    );\n};\n\nconst buildCommonTransaction = (\n    message,\n    contractType,\n    typeName,\n    permissionId\n) => {\n    let anyValue = new google_protobuf_any_pb.Any();\n    anyValue.pack(message.serializeBinary(), 'protocol.' + typeName);\n    let contract = new Transaction.Contract();\n    contract.setType(contractType);\n    contract.setParameter(anyValue);\n    if (permissionId) {\n        contract.setPermissionId(permissionId);\n    }\n    let raw = new Transaction.raw();\n    raw.addContract(contract);\n    let transaction = new Transaction();\n    transaction.setRawData(raw);\n    return transaction;\n};\n\n// wallet/createtransaction for sendTrx\nconst buildTransferContract = (value, options) => {\n    const { to_address, owner_address, amount } = value;\n    let transferContract = new TransferContract();\n    transferContract.setToAddress(fromHexString(to_address));\n    transferContract.setOwnerAddress(fromHexString(owner_address));\n    transferContract.setAmount(amount);\n    return buildCommonTransaction(\n        transferContract,\n        Transaction.Contract.ContractType.TRANSFERCONTRACT,\n        'TransferContract',\n        options.Permission_id\n    );\n};\n\n// wallet/transferasset for sendToken\nconst buildTransferAssetContract = (value, options) => {\n    const { to_address, owner_address, amount, asset_name } = value;\n    let transferContract = new TransferAssetContract();\n    transferContract.setToAddress(fromHexString(to_address));\n    transferContract.setOwnerAddress(fromHexString(owner_address));\n    transferContract.setAssetName(fromHexString(asset_name.replace(/^0x/, '')));\n    transferContract.setAmount(amount);\n    return buildCommonTransaction(\n        transferContract,\n        Transaction.Contract.ContractType.TRANSFERASSETCONTRACT,\n        'TransferAssetContract',\n        options.Permission_id\n    );\n};\n\n// wallet/participateassetissue for purchaseToken\nconst buildParticipateAssetIssueContract = (value, options) => {\n    let pbObj = new ParticipateAssetIssueContract();\n    pbObj.setToAddress(fromHexString(value.to_address));\n    pbObj.setOwnerAddress(fromHexString(value.owner_address));\n    pbObj.setAssetName(fromHexString(value.asset_name.replace(/^0x/, '')));\n    pbObj.setAmount(value.amount);\n\n    return buildCommonTransaction(\n        pbObj,\n        Transaction.Contract.ContractType.PARTICIPATEASSETISSUECONTRACT,\n        'ParticipateAssetIssueContract',\n        options.Permission_id\n    );\n};\n\nconst buildTriggerSmartContract = (value, options) => {\n    let triggerSmartContract = new TriggerSmartContract();\n    const {\n        owner_address,\n        contract_address,\n        parameter = '',\n        function_selector,\n        call_value,\n        call_token_value,\n        token_id,\n        data,\n    } = value;\n    triggerSmartContract.setOwnerAddress(fromHexString(owner_address));\n    triggerSmartContract.setContractAddress(fromHexString(contract_address));\n    triggerSmartContract.setCallValue(call_value);\n    if (data) {\n        triggerSmartContract.setData(fromHexString(data));\n    } else if (function_selector) {\n        const contractData = sha3(function_selector).substring(2, 10) + parameter;\n        triggerSmartContract.setData(fromHexString(contractData));\n    }\n    \n    if (token_id) {\n        triggerSmartContract.setTokenId(token_id);\n    }\n    if (call_token_value) {\n        triggerSmartContract.setCallTokenValue(call_token_value);\n    }\n\n    return buildCommonTransaction(\n        triggerSmartContract,\n        Transaction.Contract.ContractType.TRIGGERSMARTCONTRACT,\n        'TriggerSmartContract',\n        options.Permission_id\n    );\n};\n\nconst buildFreezeBalanceContract = (value, options) => {\n    let freezeBalanceContract = new FreezeBalanceContract();\n    const {\n        owner_address,\n        frozen_balance,\n        frozen_duration,\n        resource,\n        receiver_address,\n    } = value;\n    freezeBalanceContract.setOwnerAddress(fromHexString(owner_address));\n    freezeBalanceContract.setFrozenBalance(frozen_balance);\n    freezeBalanceContract.setFrozenDuration(frozen_duration);\n    if (resource) {\n        freezeBalanceContract.setResource(ResourceCode[resource]);\n    }\n    if (receiver_address) {\n        freezeBalanceContract.setReceiverAddress(\n            fromHexString(receiver_address)\n        );\n    }\n\n    return buildCommonTransaction(\n        freezeBalanceContract,\n        Transaction.Contract.ContractType.FREEZEBALANCECONTRACT,\n        'FreezeBalanceContract',\n        options.Permission_id\n    );\n};\n\nconst buildUnfreezeBalanceContract = (value, options) => {\n    let unfreezeBalanceContract = new UnfreezeBalanceContract();\n    const { owner_address, resource, receiver_address } = value;\n    unfreezeBalanceContract.setOwnerAddress(fromHexString(owner_address));\n    if (resource) {\n        unfreezeBalanceContract.setResource(ResourceCode[resource]);\n    }\n    if (receiver_address) {\n        unfreezeBalanceContract.setReceiverAddress(\n            fromHexString(receiver_address)\n        );\n    }\n\n    return buildCommonTransaction(\n        unfreezeBalanceContract,\n        Transaction.Contract.ContractType.UNFREEZEBALANCECONTRACT,\n        'UnfreezeBalanceContract',\n        options.Permission_id\n    );\n};\n\nconst buildWithdrawBalanceContract = (value, options) => {\n    let withdrawbalanceContract = new WithdrawBalanceContract();\n    const { owner_address } = value;\n    withdrawbalanceContract.setOwnerAddress(fromHexString(owner_address));\n\n    return buildCommonTransaction(\n        withdrawbalanceContract,\n        Transaction.Contract.ContractType.WITHDRAWBALANCECONTRACT,\n        'WithdrawBalanceContract',\n        options.Permission_id\n    );\n};\n\nconst buildFreezeBalanceV2Contract = (value, options) => {\n    const freezeBalanceV2Contract = new FreezeBalanceV2Contract();\n    const {\n        owner_address,\n        frozen_balance,\n        resource,\n    } = value;\n    freezeBalanceV2Contract.setOwnerAddress(fromHexString(owner_address));\n    freezeBalanceV2Contract.setFrozenBalance(frozen_balance);\n    freezeBalanceV2Contract.setResource(ResourceCode[resource]);\n\n    return buildCommonTransaction(\n        freezeBalanceV2Contract,\n        Transaction.Contract.ContractType.FREEZEBALANCEV2CONTRACT,\n        'FreezeBalanceV2Contract',\n        options.Permission_id,\n    );\n};\n\nconst buildCancelFreezeBalanceV2Contract = (value, options) => {\n    const withdrawExpireUnfreeze = new WithdrawExpireUnfreezeContract();\n    const { owner_address } = value;\n    withdrawExpireUnfreeze.setOwnerAddress(fromHexString(owner_address));\n\n    return buildCommonTransaction(\n        withdrawExpireUnfreeze,\n        Transaction.Contract.ContractType.CANCELALLUNFREEZEV2CONTRACT,\n        'CancelAllUnfreezeV2Contract',\n        options.Permission_id,\n    );\n};\n\nconst buildUnfreezeBalanceV2Contract = (value, options) => {\n    const unfreezeBalanceV2Contract = new UnfreezeBalanceV2Contract();\n    const {\n        owner_address,\n        unfreeze_balance,\n        resource,\n    } = value;\n    unfreezeBalanceV2Contract.setOwnerAddress(fromHexString(owner_address));\n    unfreezeBalanceV2Contract.setUnfreezeBalance(unfreeze_balance);\n    unfreezeBalanceV2Contract.setResource(ResourceCode[resource]);\n\n    return buildCommonTransaction(\n        unfreezeBalanceV2Contract,\n        Transaction.Contract.ContractType.UNFREEZEBALANCEV2CONTRACT,\n        'UnfreezeBalanceV2Contract',\n        options.Permission_id,\n    );\n};\n\nconst buildDelegateResourceContract = (value, options) => {\n    const delegateResourceContract = new DelegateResourceContract();\n    const {\n        owner_address,\n        receiver_address,\n        balance,\n        resource,\n        lock = false,\n        lock_period,\n    } = value;\n    delegateResourceContract.setOwnerAddress(fromHexString(owner_address));\n    delegateResourceContract.setBalance(balance);\n    delegateResourceContract.setResource(ResourceCode[resource]);\n    delegateResourceContract.setLock(lock);\n    delegateResourceContract.setLockPeriod(lock_period);\n    delegateResourceContract.setReceiverAddress(fromHexString(receiver_address));\n\n    return buildCommonTransaction(\n        delegateResourceContract,\n        Transaction.Contract.ContractType.DELEGATERESOURCECONTRACT,\n        'DelegateResourceContract',\n        options.Permission_id,\n    );\n};\n\nconst buildUnDelegateResourceContract = (value, options) => {\n    const unDelegateResourceContract = new UnDelegateResourceContract();\n    const {\n        owner_address,\n        receiver_address,\n        balance,\n        resource,\n    } = value;\n    unDelegateResourceContract.setOwnerAddress(fromHexString(owner_address));\n    unDelegateResourceContract.setBalance(balance);\n    unDelegateResourceContract.setResource(ResourceCode[resource]);\n    unDelegateResourceContract.setReceiverAddress(fromHexString(receiver_address));\n\n    return buildCommonTransaction(\n        unDelegateResourceContract,\n        Transaction.Contract.ContractType.UNDELEGATERESOURCECONTRACT,\n        'UnDelegateResourceContract',\n        options.Permission_id,\n    );\n};\n\nconst buildWithdrawExpireUnfreezeContract = (value, options) => {\n    const withdrawExpireUnfreeze = new WithdrawExpireUnfreezeContract();\n    const { owner_address } = value;\n    withdrawExpireUnfreeze.setOwnerAddress(fromHexString(owner_address));\n\n    return buildCommonTransaction(\n        withdrawExpireUnfreeze,\n        Transaction.Contract.ContractType.WITHDRAWEXPIREUNFREEZECONTRACT,\n        'WithdrawExpireUnfreezeContract',\n        options.Permission_id,\n    );\n};\n\n// applyForSR\nconst buildCreateWitness = (value, options) => {\n    const createWitnessContract = new WitnessCreateContract();\n    const { owner_address, url } = value;\n    createWitnessContract.setOwnerAddress(fromHexString(owner_address));\n    createWitnessContract.setUrl(fromHexString(url.replace(/^0x/, '')));\n    return buildCommonTransaction(\n        createWitnessContract,\n        Transaction.Contract.ContractType.WITNESSCREATECONTRACT,\n        'WitnessCreateContract',\n        options.Permission_id\n    );\n};\n\n// vote\nconst buildVoteWitnessAccount = (value, options) => {\n    let voteWitnessContract = new VoteWitnessContract();\n    const { owner_address, votes } = value;\n    voteWitnessContract.setOwnerAddress(fromHexString(owner_address));\n\n    votes.forEach((voteItem) => {\n        let vote = new VoteWitnessContract.Vote();\n        const { vote_address, vote_count } = voteItem;\n        vote.setVoteAddress(fromHexString(vote_address));\n        let numberOfVotes = parseInt(vote_count);\n        vote.setVoteCount(numberOfVotes);\n        voteWitnessContract.addVotes(vote);\n    });\n\n    return buildCommonTransaction(\n        voteWitnessContract,\n        Transaction.Contract.ContractType.VOTEWITNESSCONTRACT,\n        'VoteWitnessContract',\n        options.Permission_id\n    );\n};\n\nconst buildCreateSmartContract = (value, options) => {\n    let params = value?.new_contract ?\n        {\n            ...{\n                owner_address: value.owner_address,\n                call_token_value: value.call_token_value,\n                token_id: value.token_id,\n            },\n            ...value.new_contract,\n        }\n        : value;\n    let {\n        owner_address,\n        consume_user_resource_percent,\n        origin_energy_limit,\n        abi,\n        bytecode = '',\n        name: contracName,\n        parameter = '',\n        call_value,\n        call_token_value,\n        token_id,\n        origin_address,\n    } = params;\n\n    let createSmartContract = new CreateSmartContract();\n    createSmartContract.setOwnerAddress(fromHexString(owner_address));\n    if (token_id) {\n        createSmartContract.setTokenId(token_id);\n    }\n    if (call_token_value) {\n        createSmartContract.setCallTokenValue(call_token_value);\n    }\n    const smartContractBuilder = new SmartContract();\n\n    if (abi) {\n        let abiJson;\n        if (typeof abi === 'string') {\n            abiJson = JSON.parse(abi);\n        } else {\n            abiJson = abi?.entrys || []; // abi could be an empty object if origin abi is `[]`;\n        }\n        const abiBuilder = new SmartContract.ABI();\n\n        const buildEntryParam = (data) => {\n            const param = new SmartContract.ABI.Entry.Param();\n            const { indexed, name, type } = data;\n            if (indexed === true) {\n                param.setIndexed(true);\n            }\n            param.setName(name);\n            param.setType(type);\n            return param;\n        };\n        const entryBuilders = abiJson.map((entry) => {\n            const {\n                anonymous,\n                constant,\n                name,\n                inputs,\n                outputs,\n                type,\n                payable,\n                stateMutability,\n            } = entry;\n            const entryBuilder = new SmartContract.ABI.Entry();\n            entryBuilder.setAnonymous(anonymous);\n            entryBuilder.setConstant(constant);\n            entryBuilder.setName(name);\n            if (inputs) {\n                entryBuilder.setInputsList(\n                    inputs.map((input) => buildEntryParam(input))\n                );\n            }\n            if (outputs) {\n                entryBuilder.setOutputsList(\n                    outputs.map((output) => buildEntryParam(output))\n                );\n            }\n            if (type) {\n                entryBuilder.setType(\n                    SmartContract.ABI.Entry.EntryType[type.toUpperCase()]\n                );\n            }\n            \n            entryBuilder.setPayable(payable);\n            if(stateMutability) {\n                entryBuilder.setStatemutability(\n                    SmartContract.ABI.Entry.StateMutabilityType[\n                        stateMutability.toUpperCase()\n                    ]\n                );\n            }\n            \n            return entryBuilder;\n        });\n        abiBuilder.setEntrysList(entryBuilders);\n        smartContractBuilder.setAbi(abiBuilder);\n    }\n    \n\n    if (call_value) {\n        smartContractBuilder.setCallValue(call_value);\n    }\n\n    smartContractBuilder.setConsumeUserResourcePercent(\n        consume_user_resource_percent\n    );\n    smartContractBuilder.setOriginEnergyLimit(origin_energy_limit);\n\n    if (!origin_address) {\n        origin_address = owner_address;\n    }\n    smartContractBuilder.setOriginAddress(fromHexString(origin_address));\n\n    if (bytecode) {\n        const bytecodeParameter = bytecode.replace(/^0x/, '') + parameter.replace(/^0x/, '');\n        smartContractBuilder.setBytecode(fromHexString(bytecodeParameter));\n    }\n\n    smartContractBuilder.setName(contracName);\n\n    createSmartContract.setNewContract(smartContractBuilder);\n\n    return buildCommonTransaction(\n        createSmartContract,\n        Transaction.Contract.ContractType.CREATESMARTCONTRACT,\n        'CreateSmartContract',\n        options.Permission_id\n    );\n};\n\nconst buildClearABIContract = (value, options) => {\n    const { contract_address, owner_address } = value;\n    const clearABIContract = new ClearABIContract();\n    clearABIContract.setOwnerAddress(fromHexString(owner_address));\n    clearABIContract.setContractAddress(fromHexString(contract_address));\n\n    return buildCommonTransaction(\n        clearABIContract,\n        Transaction.Contract.ContractType.CLEARABICONTRACT,\n        'ClearABIContract',\n        options.Permission_id\n    );\n};\n\n// updateBrokerage\nconst buildUpdateBrokerageContract = (value, options) => {\n    const { brokerage, owner_address } = value;\n    const updateBrokerageContract = new UpdateBrokerageContract();\n    updateBrokerageContract.setOwnerAddress(fromHexString(owner_address));\n    updateBrokerageContract.setBrokerage(brokerage);\n\n    return buildCommonTransaction(\n        updateBrokerageContract,\n        Transaction.Contract.ContractType.UPDATEBROKERAGECONTRACT,\n        'UpdateBrokerageContract',\n        options.Permission_id\n    );\n};\n\n// createToken\nconst buildAssetIssueContract = (value, options) => {\n    const {\n        owner_address,\n        name,\n        abbr,\n        description,\n        url,\n        total_supply,\n        trx_num,\n        num,\n        start_time,\n        end_time,\n        precision,\n        free_asset_net_limit,\n        public_free_asset_net_limit,\n        public_free_asset_net_usage = 0,\n        public_latest_free_net_time = 0,\n        vote_score = 0,\n        frozen_supply,\n    } = value;\n    let assetIssueContract = new AssetIssueContract();\n    assetIssueContract.setOwnerAddress(fromHexString(owner_address));\n    if (name) {\n        assetIssueContract.setName(fromHexString(name.replace(/^0x/, '')));\n    }\n    if (abbr) {\n        assetIssueContract.setAbbr(fromHexString(abbr.replace(/^0x/, '')));\n    }\n    assetIssueContract.setTotalSupply(total_supply);\n    assetIssueContract.setNum(num);\n    assetIssueContract.setEndTime(end_time);\n    assetIssueContract.setStartTime(start_time);\n    assetIssueContract.setTrxNum(trx_num);\n    assetIssueContract.setVoteScore(vote_score);\n    if (precision) {\n        assetIssueContract.setPrecision(precision);\n    }\n    if (public_latest_free_net_time) {\n        assetIssueContract.setPublicLatestFreeNetTime(\n            public_latest_free_net_time\n        );\n    }\n    if (description) {\n        assetIssueContract.setDescription(\n            fromHexString(description.replace(/^0x/, ''))\n        );\n    }\n    if (url) {\n        assetIssueContract.setUrl(fromHexString(url.replace(/^0x/, '')));\n    }\n    \n    assetIssueContract.setPublicFreeAssetNetUsage(public_free_asset_net_usage);\n    assetIssueContract.setFreeAssetNetLimit(free_asset_net_limit);\n    assetIssueContract.setPublicFreeAssetNetLimit(public_free_asset_net_limit);\n    if (frozen_supply) {\n        let frozenSupplyContract = new AssetIssueContract.FrozenSupply();\n        frozenSupplyContract.setFrozenAmount(frozen_supply.length ? frozen_supply[0].frozen_amount : frozen_supply.frozen_amount);\n        frozenSupplyContract.setFrozenDays(frozen_supply.length ? frozen_supply[0].frozen_days : frozen_supply.frozen_days);\n        assetIssueContract.addFrozenSupply(frozenSupplyContract);\n    }\n    return buildCommonTransaction(\n        assetIssueContract,\n        Transaction.Contract.ContractType.ASSETISSUECONTRACT,\n        'AssetIssueContract',\n        options.Permission_id\n    );\n};\n\n//createAccount\nconst buildAccountCreateContract = (value, options) => {\n    let accountCreateContract = new AccountCreateContract();\n    const { account_address, owner_address } = value;\n    accountCreateContract.setOwnerAddress(fromHexString(owner_address));\n    accountCreateContract.setAccountAddress(\n        fromHexString(account_address.replace(/^0x/, ''))\n    );\n    return buildCommonTransaction(\n        accountCreateContract,\n        Transaction.Contract.ContractType.ACCOUNTCREATECONTRACT,\n        'AccountCreateContract',\n        options.Permission_id\n    );\n}\n\n// updateAccount\nconst buildAccountUpdateContract = (value, options) => {\n    let accountUpdateContract = new AccountUpdateContract();\n    const { account_name, owner_address } = value;\n    accountUpdateContract.setOwnerAddress(fromHexString(owner_address));\n    accountUpdateContract.setAccountName(\n        fromHexString(account_name.replace(/^0x/, ''))\n    );\n    return buildCommonTransaction(\n        accountUpdateContract,\n        Transaction.Contract.ContractType.ACCOUNTUPDATECONTRACT,\n        'AccountUpdateContract',\n        options.Permission_id\n    );\n};\n\n// setAccountId\nconst buildSetAccountIdContract = (value, options) => {\n    let setAccountIdContract = new SetAccountIdContract();\n    const { account_id, owner_address } = value;\n    setAccountIdContract.setOwnerAddress(fromHexString(owner_address));\n    setAccountIdContract.setAccountId(\n        fromHexString(account_id.replace(/^0x/, ''))\n    );\n    return buildCommonTransaction(\n        setAccountIdContract,\n        Transaction.Contract.ContractType.SETACCOUNTIDCONTRACT,\n        'SetAccountIdContract',\n        options.Permission_id\n    );\n};\n\nconst buildProposalCreateContract = (value, options) => {\n    let proposalCreateContract = new ProposalCreateContract();\n    const { owner_address, parameters } = value;\n    proposalCreateContract.setOwnerAddress(fromHexString(owner_address));\n    parameters.forEach((parameter) => {\n        proposalCreateContract\n            .getParametersMap()\n            .set(parameter.key, parameter.value);\n    });\n    return buildCommonTransaction(\n        proposalCreateContract,\n        Transaction.Contract.ContractType.PROPOSALCREATECONTRACT,\n        'ProposalCreateContract',\n        options.Permission_id\n    );\n};\n\nconst buildProposalDeleteContract = (value, options) => {\n    let proposalDeleteContract = new ProposalDeleteContract();\n    const { owner_address, proposal_id } = value;\n    proposalDeleteContract.setOwnerAddress(fromHexString(owner_address));\n    proposalDeleteContract.setProposalId(proposal_id);\n    return buildCommonTransaction(\n        proposalDeleteContract,\n        Transaction.Contract.ContractType.PROPOSALDELETECONTRACT,\n        'ProposalDeleteContract',\n        options.Permission_id\n    );\n};\n\nconst buildVoteProposalContract = (value, options) => {\n    let proposalVoteContract = new ProposalApproveContract();\n    const { owner_address, proposal_id, is_add_approval } = value;\n    proposalVoteContract.setOwnerAddress(fromHexString(owner_address));\n    proposalVoteContract.setProposalId(proposal_id);\n    proposalVoteContract.setIsAddApproval(is_add_approval);\n    return buildCommonTransaction(\n        proposalVoteContract,\n        Transaction.Contract.ContractType.PROPOSALAPPROVECONTRACT,\n        'ProposalApproveContract',\n        options.Permission_id\n    );\n};\n\nconst buildExchangeCreateContract = (value, options) => {\n    const exchangeCreateContract = new ExchangeCreateContract();\n    const {\n        owner_address,\n        first_token_id,\n        first_token_balance,\n        second_token_id,\n        second_token_balance,\n    } = value;\n    exchangeCreateContract.setOwnerAddress(fromHexString(owner_address));\n    exchangeCreateContract.setFirstTokenId(\n        fromHexString(first_token_id.replace(/^0x/, ''))\n    );\n    exchangeCreateContract.setFirstTokenBalance(first_token_balance);\n    exchangeCreateContract.setSecondTokenId(\n        fromHexString(second_token_id.replace(/^0x/, ''))\n    );\n    exchangeCreateContract.setSecondTokenBalance(second_token_balance);\n    return buildCommonTransaction(\n        exchangeCreateContract,\n        Transaction.Contract.ContractType.EXCHANGECREATECONTRACT,\n        'ExchangeCreateContract',\n        options.Permission_id\n    );\n};\n\nconst buildExchangeInjectContract = (value, options) => {\n    const exchangeInjectContract = new ExchangeInjectContract();\n    const { owner_address, exchange_id, token_id, quant } = value;\n    exchangeInjectContract.setOwnerAddress(fromHexString(owner_address));\n    exchangeInjectContract.setExchangeId(exchange_id);\n    exchangeInjectContract.setTokenId(\n        fromHexString(token_id.replace(/^0x/, ''))\n    );\n    exchangeInjectContract.setQuant(quant);\n    return buildCommonTransaction(\n        exchangeInjectContract,\n        Transaction.Contract.ContractType.EXCHANGEINJECTCONTRACT,\n        'ExchangeInjectContract',\n        options.Permission_id\n    );\n};\n\nconst buildExchangeWithdrawContract = (value, options) => {\n    const exchangeWithdrawContract = new ExchangeWithdrawContract();\n    const { owner_address, exchange_id, token_id, quant } = value;\n    exchangeWithdrawContract.setOwnerAddress(fromHexString(owner_address));\n    exchangeWithdrawContract.setExchangeId(exchange_id);\n    exchangeWithdrawContract.setTokenId(\n        fromHexString(token_id.replace(/^0x/, ''))\n    );\n    exchangeWithdrawContract.setQuant(quant);\n    return buildCommonTransaction(\n        exchangeWithdrawContract,\n        Transaction.Contract.ContractType.EXCHANGEWITHDRAWCONTRACT,\n        'ExchangeWithdrawContract',\n        options.Permission_id\n    );\n};\n\nconst buildExchangeTransactionContract = (value, options) => {\n    const exchangeTransactionContract = new ExchangeTransactionContract();\n    const { owner_address, exchange_id, token_id, quant, expected } = value;\n    exchangeTransactionContract.setOwnerAddress(fromHexString(owner_address));\n    exchangeTransactionContract.setExchangeId(exchange_id);\n    exchangeTransactionContract.setTokenId(\n        fromHexString(token_id.replace(/^0x/, ''))\n    );\n    exchangeTransactionContract.setQuant(quant);\n    exchangeTransactionContract.setExpected(expected);\n    return buildCommonTransaction(\n        exchangeTransactionContract,\n        Transaction.Contract.ContractType.EXCHANGETRANSACTIONCONTRACT,\n        'ExchangeTransactionContract',\n        options.Permission_id\n    );\n};\n\nconst buildUpdateSettingContract = (value, options) => {\n    const updateSettingContract = new UpdateSettingContract();\n    const { owner_address, contract_address, consume_user_resource_percent } =\n        value;\n    updateSettingContract.setOwnerAddress(fromHexString(owner_address));\n    updateSettingContract.setContractAddress(fromHexString(contract_address));\n    updateSettingContract.setConsumeUserResourcePercent(\n        consume_user_resource_percent\n    );\n    return buildCommonTransaction(\n        updateSettingContract,\n        Transaction.Contract.ContractType.UPDATESETTINGCONTRACT,\n        'UpdateSettingContract',\n        options.Permission_id\n    );\n};\n\nconst buildUpdateEnergyLimitContract = (value, options) => {\n    const updateEnergyLimitContract = new UpdateEnergyLimitContract();\n    const { owner_address, contract_address, origin_energy_limit } = value;\n    updateEnergyLimitContract.setOwnerAddress(fromHexString(owner_address));\n    updateEnergyLimitContract.setContractAddress(\n        fromHexString(contract_address)\n    );\n    updateEnergyLimitContract.setOriginEnergyLimit(origin_energy_limit);\n    return buildCommonTransaction(\n        updateEnergyLimitContract,\n        Transaction.Contract.ContractType.UPDATEENERGYLIMITCONTRACT,\n        'UpdateEnergyLimitContract',\n        options.Permission_id\n    );\n};\n\nconst buildAccountPermissionUpdateContract = (value, options) => {\n    const accountPermissionUpdateContract =\n        new AccountPermissionUpdateContract();\n    const { owner_address, owner, witness, actives } = value;\n    accountPermissionUpdateContract.setOwnerAddress(\n        fromHexString(owner_address)\n    );\n    const getType = type => {\n        // no type when permission_name is owner\n        if (isNaN(type)) return type === 'Active' ? 2 : type === 'Witness' ? 1 : 0;\n        return type;\n    }\n    const buildPermission = (data) => {\n        // no type when permission_name is owner\n        const permission = new Permission();\n        const {\n            type,\n            id,\n            permission_name,\n            threshold,\n            parentId,\n            operations,\n            keys,\n        } = data;\n        permission.setType(getType(type));\n        permission.setId(id);\n        permission.setPermissionName(permission_name);\n        permission.setThreshold(threshold);\n        if (parentId) {\n            permission.setParentId(parentId);\n        }\n        if (operations) {\n            permission.setOperations(fromHexString(operations));\n        }\n        if (keys) {\n            permission.setKeysList(\n                keys.map((key) => {\n                    const keyBuilder = new Key();\n                    keyBuilder.setAddress(fromHexString(key.address));\n                    keyBuilder.setWeight(key.weight);\n                    return keyBuilder;\n                })\n            );\n        }\n        return permission;\n    };\n    if (owner) {\n        accountPermissionUpdateContract.setOwner(buildPermission(owner));\n    }\n    if (witness) {\n        accountPermissionUpdateContract.setWitness(buildPermission(witness));\n    }\n    if (actives) {\n        if (Array.isArray(actives)) {\n            accountPermissionUpdateContract.setActivesList(\n                actives.map(active => buildPermission(active))\n            );\n        } else {\n            accountPermissionUpdateContract.setActivesList([\n                buildPermission(actives),\n            ]);\n        }\n    }\n    return buildCommonTransaction(\n        accountPermissionUpdateContract,\n        Transaction.Contract.ContractType.ACCOUNTPERMISSIONUPDATECONTRACT,\n        'AccountPermissionUpdateContract',\n        options.Permission_id\n    );\n};\n\nconst buildUpdateAssetContract = (value, options) => {\n    const updateAssetContract = new UpdateAssetContract();\n    const { owner_address, description, url, new_limit, new_public_limit } = value;\n    updateAssetContract.setOwnerAddress(fromHexString(owner_address));\n    if (description) {\n        updateAssetContract.setDescription(fromHexString(description.replace(/^0x/, '')));\n    }\n    if (url) {\n        updateAssetContract.setUrl(fromHexString(url.replace(/^0x/, '')));\n    }\n    if(new_limit) {\n        updateAssetContract.setNewLimit(new_limit);\n    }\n    if(new_public_limit) {\n        updateAssetContract.setNewPublicLimit(new_public_limit);\n    }\n    return buildCommonTransaction(\n        updateAssetContract,\n        Transaction.Contract.ContractType.UPDATEASSETCONTRACT,\n        'UpdateAssetContract',\n        options.Permission_id\n    );\n}\n \nconst contractJsonToProtobuf = (contract, value, options) => {\n    switch (contract.type) {\n        case 'TransferContract':\n            return buildTransferContract(value, options);\n        case 'TransferAssetContract':\n            return buildTransferAssetContract(value, options);\n        case 'ParticipateAssetIssueContract':\n            return buildParticipateAssetIssueContract(value, options);\n        case 'TriggerSmartContract':\n            return buildTriggerSmartContract(value, options);\n        case 'FreezeBalanceContract':\n            return buildFreezeBalanceContract(value, options);\n        case 'UnfreezeBalanceContract':\n            return buildUnfreezeBalanceContract(value, options);\n        case 'WithdrawBalanceContract':\n            return buildWithdrawBalanceContract(value, options);\n        case 'FreezeBalanceV2Contract':\n            return buildFreezeBalanceV2Contract(value, options);\n        case 'CancelAllUnfreezeV2Contract':\n            return buildCancelFreezeBalanceV2Contract(value, options);\n        case 'UnfreezeBalanceV2Contract':\n            return buildUnfreezeBalanceV2Contract(value, options);\n        case 'DelegateResourceContract':\n            return buildDelegateResourceContract(value, options);\n        case 'UnDelegateResourceContract':\n            return buildUnDelegateResourceContract(value, options);\n        case 'WithdrawExpireUnfreezeContract':\n            return buildWithdrawExpireUnfreezeContract(value, options);\n        case 'WitnessCreateContract':\n            return buildCreateWitness(value, options);\n        case 'VoteWitnessContract':\n            return buildVoteWitnessAccount(value, options);\n        case 'CreateSmartContract':\n            return buildCreateSmartContract(value, options);\n        case 'ClearABIContract':\n            return buildClearABIContract(value, options);\n        case 'UpdateBrokerageContract':\n            return buildUpdateBrokerageContract(value, options);\n        case 'AssetIssueContract':\n            return buildAssetIssueContract(value, options);\n        case 'AccountCreateContract':\n            return buildAccountCreateContract(value, options);\n        case 'AccountUpdateContract':\n            return buildAccountUpdateContract(value, options);\n        case 'SetAccountIdContract':\n            return buildSetAccountIdContract(value, options);\n        case 'ProposalCreateContract':\n            return buildProposalCreateContract(value, options);\n        case 'ProposalDeleteContract':\n            return buildProposalDeleteContract(value, options);\n        case 'ProposalApproveContract':\n            return buildVoteProposalContract(value, options);\n        case 'ExchangeCreateContract':\n            return buildExchangeCreateContract(value, options);\n        case 'ExchangeInjectContract':\n            return buildExchangeInjectContract(value, options);\n        case 'ExchangeWithdrawContract':\n            return buildExchangeWithdrawContract(value, options);\n        case 'ExchangeTransactionContract':\n            return buildExchangeTransactionContract(value, options);\n        case 'UpdateSettingContract':\n            return buildUpdateSettingContract(value, options);\n        case 'UpdateEnergyLimitContract':\n            return buildUpdateEnergyLimitContract(value, options);\n        case 'AccountPermissionUpdateContract':\n            return buildAccountPermissionUpdateContract(value, options);\n        case 'UpdateAssetContract': \n            return buildUpdateAssetContract(value, options);\n    }\n};\n\nconst txJsonToPb = (transaction) => {\n    const rawData = transaction['raw_data'];\n    const contractJson = rawData.contract[0];\n    const data = contractJson.parameter.value;\n    const options = { Permission_id: contractJson.Permission_id };\n    const transactionObj = contractJsonToProtobuf(contractJson, data, options);\n\n    const rawDataObj = transactionObj.getRawData();\n    rawDataObj.setRefBlockBytes(fromHexString(rawData.ref_block_bytes));\n    rawDataObj.setRefBlockHash(fromHexString(rawData.ref_block_hash));\n    if (rawData.data) {\n        rawDataObj.setData(fromHexString(rawData.data));\n    }\n\n    if (rawData.fee_limit) {\n        rawDataObj.setFeeLimit(rawData.fee_limit);\n    }\n\n    if (rawData.expiration) {\n        rawDataObj.setExpiration(rawData.expiration);\n    }\n\n    if (rawData.timestamp) {\n        rawDataObj.setTimestamp(rawData.timestamp);\n    }\n\n    transactionObj.setRawData(rawDataObj);\n\n    return transactionObj;\n};\n\nconst txJsonToPbWithArgs = (\n    transaction,\n    args = {},\n    options = {}\n) => {\n    const rawData = transaction['raw_data'];\n    const contractJson = rawData.contract[0];\n\n    const transactionObj = contractJsonToProtobuf(contractJson, args, { Permission_id: args?.Permission_id });\n\n    const rawDataObj = transactionObj.getRawData();\n    rawDataObj.setRefBlockBytes(fromHexString(rawData.ref_block_bytes));\n    rawDataObj.setRefBlockHash(fromHexString(rawData.ref_block_hash));\n    // for memo\n    if (options.data) {\n        rawDataObj.setData(fromHexString(options.data.replace(/^0x/, '')));\n    }\n\n    if (options.fee_limit || args.fee_limit) {\n        rawDataObj.setFeeLimit(options.fee_limit || args.fee_limit);\n    }\n\n    if (rawData.expiration) {\n        rawDataObj.setExpiration(rawData.expiration);\n    }\n\n    if (rawData.timestamp) {\n        rawDataObj.setTimestamp(rawData.timestamp);\n    }\n\n    transactionObj.setRawData(rawDataObj);\n\n    return transactionObj;\n};\n\nconst compareTransaction = (transaction, transactionPb) => {\n    const rawDataBytes = transactionPb.getRawData().serializeBinary();\n    const rawDataHex = byteArray2hexStr(rawDataBytes);\n    const txID = sha256(rawDataBytes);\n    return (\n        rawDataHex.toLowerCase() === transaction.raw_data_hex.toLowerCase() &&\n        txID.replace(/^0x/, '').toLowerCase() ===\n            transaction.txID.replace(/^0x/, '').toLowerCase()\n    );\n    \n};\n\nconst txPbToRawDataHex = (pb) => {\n    return byteArray2hexStr(pb.getRawData().serializeBinary());\n};\n\nconst txCheck = (transaction) => {\n    const transactionPb = txJsonToPb(transaction);\n    return compareTransaction(transaction, transactionPb);\n};\n\nconst txCheckWithArgs = (transaction, args, options) => {\n    const transactionPb = txJsonToPbWithArgs(\n        transaction,\n        args,\n        options\n    );\n    return compareTransaction(transaction, transactionPb);\n};\n\nconst txPbToTxID = (transactionPb) => {\n    const rawDataBytes = transactionPb.getRawData().serializeBinary();\n    const txID = sha256(rawDataBytes);\n    return txID;\n}\n\nexport {\n    txJsonToPb,\n    txPbToTxID,\n    txPbToRawDataHex,\n    txJsonToPbWithArgs,\n    txCheckWithArgs,\n    txCheck,\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"validator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"bignumber.js\");","import * as accounts from './accounts';\nimport * as base58 from './base58';\nimport * as bytes from './bytes';\nimport * as crypto from './crypto';\nimport * as code from './code';\nimport * as abi from './abi';\nimport * as message from './message'\nimport * as ethersUtils from './ethersUtils';\nimport {TypedDataEncoder as _TypedDataEncoder} from './typedData';\nimport * as transaction from './transaction';\n\nimport validator from 'validator';\nimport BigNumber from 'bignumber.js';\nimport {ADDRESS_PREFIX} from 'utils/address';\n\nconst utils = {\n    isValidURL(url) {\n        if (typeof url !== 'string')\n            return false;\n        return validator.isURL(url.toString(), {\n            protocols: ['http', 'https'],\n            require_tld: false\n        });\n    },\n\n    isObject(obj) {\n        return obj === Object(obj) && Object.prototype.toString.call(obj) !== '[object Array]';\n    },\n\n    isArray(array) {\n        return Array.isArray(array);\n    },\n\n    isJson(string) {\n        try {\n            return !!JSON.parse(string);\n        } catch (ex) {\n            return false;\n        }\n    },\n\n    isBoolean(bool) {\n        return typeof bool === 'boolean';\n    },\n\n    isBigNumber(number) {\n        return number && (number instanceof BigNumber || (number.constructor && number.constructor.name === 'BigNumber'));\n    },\n\n    isString(string) {\n        return typeof string === 'string' || (string && string.constructor && string.constructor.name === 'String');\n    },\n\n    isFunction(obj) {\n        return typeof obj === 'function';\n    },\n\n    isHex(string) {\n        return (typeof string === 'string'\n            && !isNaN(parseInt(string, 16))\n            && /^(0x|)[a-fA-F0-9]+$/.test(string));\n    },\n\n    isInteger(number) {\n        if (number === null)\n            return false\n        return Number.isInteger(\n            Number(number)\n        );\n    },\n\n    hasProperty(obj, property) {\n        return Object.prototype.hasOwnProperty.call(obj, property);\n    },\n\n    hasProperties(obj, ...properties) {\n        return properties.length && !properties.map(property => {\n            return this.hasProperty(obj, property)\n        }).includes(false);\n    },\n\n    mapEvent(event) {\n        let data = {\n            block: event.block_number,\n            timestamp: event.block_timestamp,\n            contract: event.contract_address,\n            name: event.event_name,\n            transaction: event.transaction_id,\n            result: event.result,\n            resourceNode: event.resource_Node || (event._unconfirmed ? 'fullNode' : 'solidityNode')\n        };\n        if (event._unconfirmed) {\n            data.unconfirmed = event._unconfirmed\n        }\n        if (event._fingerprint) {\n            data.fingerprint = event._fingerprint;\n        }\n        return data;\n    },\n\n    parseEvent(event, {inputs: abi}) {\n        if (!event.result)\n            return event;\n\n        if (this.isObject(event.result)) {\n            for (var i = 0; i < abi.length; i++) {\n                let obj = abi[i];\n                if (obj.type == 'address' && obj.name in event.result)\n                    event.result[obj.name] = ADDRESS_PREFIX + event.result[obj.name].substr(2).toLowerCase();\n            }\n        } else if (this.isArray(event.result)) {\n            event.result = event.result.reduce((obj, result, index) => {\n                const {\n                    name,\n                    type\n                } = abi[index];\n\n                if (type == 'address')\n                    result = ADDRESS_PREFIX + result.substr(2).toLowerCase();\n\n                obj[name] = result;\n\n                return obj;\n            }, {});\n        }\n\n        return event;\n    },\n\n    padLeft(input, padding, amount) {\n        let res = input.toString();\n\n        while (res.length < amount)\n            res = padding + res;\n\n        return res;\n    },\n\n    isNotNullOrUndefined(val) {\n        return val !== null && typeof val !== 'undefined';\n    },\n\n    async sleep(millis = 1000){\n        return new Promise(resolve => setTimeout(resolve, millis));\n    }\n}\n\nexport default {\n    ...utils,\n    code,\n    accounts,\n    base58,\n    bytes,\n    crypto,\n    abi,\n    message,\n    _TypedDataEncoder,\n    transaction,\n    ethersUtils\n};\n","import axios from 'axios';\nimport utils from 'utils';\n\nexport default class HttpProvider {\n    constructor(host, timeout = 30000, user = false, password = false, headers = {}, statusPage = '/') {\n        if (!utils.isValidURL(host))\n            throw new Error('Invalid URL provided to HttpProvider');\n\n        if (isNaN(timeout) || timeout < 0)\n            throw new Error('Invalid timeout duration provided');\n\n        if (!utils.isObject(headers))\n            throw new Error('Invalid headers object provided');\n\n        host = host.replace(/\\/+$/, '');\n\n        this.host = host;\n        this.timeout = timeout;\n        this.user = user;\n        this.password = password;\n        this.headers = headers;\n        this.statusPage = statusPage;\n\n        this.instance = axios.create({\n            baseURL: host,\n            timeout: timeout,\n            headers: headers,\n            auth: user && {\n                user,\n                password\n            },\n        });\n    }\n\n    setStatusPage(statusPage = '/') {\n        this.statusPage = statusPage;\n    }\n\n    async isConnected(statusPage = this.statusPage) {\n        return this.request(statusPage).then(data => {\n            return utils.hasProperties(data, 'blockID', 'block_header');\n        }).catch(() => false);\n    }\n\n    request(url, payload = {}, method = 'get') {\n        method = method.toLowerCase();\n\n        return this.instance.request({\n            data: method == 'post' && Object.keys(payload).length ? payload : null,\n            params: method == 'get' && payload,\n            url,\n            method\n        }).then(({data}) => data);\n    }\n};\n","import HttpProvider from './HttpProvider';\n\nexport default {\n    HttpProvider\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"eventemitter3\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"semver\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"injectpromise\");","import TronWeb from 'index';\nimport utils from 'utils';\n\nexport default class Validator {\n\n    constructor(tronWeb = false) {\n        if (!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n        this.tronWeb = tronWeb;\n    }\n\n    invalid(param) {\n        return param.msg || `Invalid ${param.name}${param.type === 'address' ? ' address' : ''} provided`;\n    }\n\n    notPositive(param) {\n        return `${param.name} must be a positive integer`;\n    }\n\n    notEqual(param) {\n        return param.msg || `${param.names[0]} can not be equal to ${param.names[1]}`;\n    }\n\n    notValid(params = [], callback = new Function) {\n\n        let normalized = {};\n        let no = false;\n        for (const param of params) {\n            let {\n                name,\n                names,\n                value,\n                type,\n                gt,\n                lt,\n                gte,\n                lte,\n                se,\n                optional\n            } = param;\n            if (optional && (\n                !utils.isNotNullOrUndefined(value)\n                || (type !== 'boolean' && value === false)))\n                continue;\n            normalized[param.name] = param.value;\n            switch (type) {\n\n                case 'address':\n                    if (!this.tronWeb.isAddress(value)) {\n                        no = true;\n                    } else {\n                        normalized[name] = this.tronWeb.address.toHex(value);\n                    }\n                    break;\n\n                case 'integer':\n                    if (!utils.isInteger(value) ||\n                        (typeof gt === 'number' && value <= param.gt) ||\n                        (typeof lt === 'number' && value >= param.lt) ||\n                        (typeof gte === 'number' && value < param.gte) ||\n                        (typeof lte === 'number' && value > param.lte)) {\n                        no = true;\n                    }\n                    break;\n\n                case 'positive-integer':\n                    if (!utils.isInteger(value) || value <= 0) {\n                        callback(this.notPositive(param));\n                        return;\n                    }\n                    break;\n\n                case 'tokenId':\n                    if (!utils.isString(value) || !value.length) {\n                        no = true;\n                    }\n                    break;\n\n                case 'notEmptyObject':\n                    if (!utils.isObject(value) || !Object.keys(value).length) {\n                        no = true;\n                    }\n                    break;\n\n                case 'notEqual':\n                    if (normalized[names[0]] === normalized[names[1]]) {\n                        callback(this.notEqual(param));\n                        return true;\n                    }\n                    break;\n\n                case 'resource':\n                    if (!['BANDWIDTH', 'ENERGY'].includes(value)) {\n                        no = true;\n                    }\n                    break;\n\n                case 'url':\n                    if (!utils.isValidURL(value)) {\n                        no = true;\n                    }\n                    break;\n\n                case 'hex':\n                    if (!utils.isHex(value)) {\n                        no = true;\n                    }\n                    break;\n\n                case 'array':\n                    if (!Array.isArray(value)) {\n                        no = true;\n                    }\n                    break;\n\n                case 'not-empty-string':\n                    if (!utils.isString(value) || !value.length) {\n                        no = true;\n                    }\n                    break;\n\n                case 'boolean':\n                    if (!utils.isBoolean(value)) {\n                        no = true;\n                    }\n                    break;\n                case 'string':\n                    if (!utils.isString(value) ||\n                        (typeof gt === 'number' && value.length <= param.gt) ||\n                        (typeof lt === 'number' && value.length >= param.lt) ||\n                        (typeof gte === 'number' && value.length < param.gte) ||\n                        (typeof lte === 'number' && value.length > param.lte)) {\n                        no = true;\n                    }\n                    break;\n            }\n            if (no) {\n                callback(this.invalid(param));\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\n","import TronWeb from 'index';\nimport utils from 'utils';\nimport { AbiCoder } from '@ethersproject/abi';\nimport Validator from 'paramValidator';\nimport {ADDRESS_PREFIX_REGEX} from 'utils/address';\nimport injectpromise from 'injectpromise';\nimport {encodeParamsV2ByABI} from 'utils/abi';\nimport {txCheckWithArgs, txJsonToPb, txPbToTxID, txPbToRawDataHex} from 'utils/transaction';\nimport { keccak256 } from 'utils/ethersUtils';\n\nlet self;\n\n//helpers\n\nfunction toHex(value) {\n    return TronWeb.address.toHex(value);\n}\n\nfunction fromUtf8(value) {\n    return self.tronWeb.fromUtf8(value).replace(/^0x/, '');\n}\n\nfunction deepCopyJson(json) {\n    return JSON.parse(JSON.stringify(json));\n}\n\nfunction resultManager(transaction, data, options, callback) {\n    if (typeof options === 'function') {\n        callback = options;\n    }\n\n    if (typeof data === 'function') {\n        callback = data;\n        data = null;\n    }\n\n    if (transaction.Error)\n        return callback(transaction.Error);\n\n    if (transaction.result && transaction.result.message) {\n        return callback(\n            self.tronWeb.toUtf8(transaction.result.message)\n        );\n    }\n    const authResult = txCheckWithArgs(transaction, data, options);\n    if(authResult) {\n        return callback(null, transaction);\n    }\n    return callback('Invalid transaction');\n}\n\nfunction resultManagerTriggerSmartContract(transaction, data, options, callback) {\n    if (transaction.Error)\n        return callback(transaction.Error);\n\n    if (transaction.result && transaction.result.message) {\n        return callback(\n            self.tronWeb.toUtf8(transaction.result.message)\n        );\n    }\n\n    if(!(options._isConstant || options.estimateEnergy)) {\n        const authResult = txCheckWithArgs(transaction.transaction, data, options);\n        if(authResult) {\n            return callback(null, transaction);\n        }\n        return callback('Invalid transaction');\n    }\n    return callback(null, transaction);\n}\n\nfunction genContractAddress(ownerAddress, txID) {\n    return '41' + keccak256(Buffer.from(txID + ownerAddress, 'hex')).toString().substring(2).slice(24);\n}\n\nfunction getHeaderInfo(node) {\n    return node.request('wallet/getblock', { detail: false }, 'post')\n        .then((data) => {\n            return {\n                ref_block_bytes: data.block_header.raw_data.number.toString(16).slice(-4).padStart(4, '0'),\n                ref_block_hash: data.blockID.slice(16, 32),\n                expiration: data.block_header.raw_data.timestamp + 60 * 1000,\n                timestamp: data.block_header.raw_data.timestamp,\n            };\n        });\n}\n\nasync function createTransaction(tronWeb, type, value, Permission_id, options = {}) {\n    const metaData = await getHeaderInfo(tronWeb.fullNode);\n    const tx = {\n        visible: false,\n        txID: '',\n        raw_data_hex: '',\n        raw_data: {\n            contract: [{\n                parameter: {\n                    value,\n                    type_url: `type.googleapis.com/protocol.${type}`,\n                },\n                type,\n            }],\n            ...metaData,\n            ...options,\n        },\n    };\n    if (Permission_id) {\n        tx.raw_data.contract[0].Permission_id = Permission_id;\n    }\n    const pb = txJsonToPb(tx);\n    tx.txID = txPbToTxID(pb).replace(/^0x/, '');\n    tx.raw_data_hex = txPbToRawDataHex(pb).toLowerCase();\n    return tx;\n}\n\nexport default class TransactionBuilder {\n    constructor(tronWeb = false) {\n        if (!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n        self = this;\n        this.tronWeb = tronWeb;\n        this.injectPromise = injectpromise(this);\n        this.validator = new Validator(tronWeb);\n    }\n\n    sendTrx(to = false, amount = 0, from = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(from)) {\n            callback = from;\n            from = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(from)) {\n            options = from;\n            from = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.sendTrx, to, amount, from, options);\n\n        // accept amounts passed as strings\n        amount = parseInt(amount)\n\n        if (this.validator.notValid([\n            {\n                name: 'recipient',\n                type: 'address',\n                value: to\n            },\n            {\n                name: 'origin',\n                type: 'address',\n                value: from\n            },\n            {\n                names: ['recipient', 'origin'],\n                type: 'notEqual',\n                msg: 'Cannot transfer TRX to the same account'\n            },\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount\n            }\n        ], callback))\n            return;\n\n        const data = {\n            to_address: toHex(to),\n            owner_address: toHex(from),\n            amount: amount,\n        };\n\n        createTransaction(this.tronWeb, 'TransferContract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    sendToken(to = false, amount = 0, tokenID = false, from = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(from)) {\n            callback = from;\n            from = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(from)) {\n            options = from;\n            from = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.sendToken, to, amount, tokenID, from, options);\n\n        amount = parseInt(amount)\n        if (this.validator.notValid([\n            {\n                name: 'recipient',\n                type: 'address',\n                value: to\n            },\n            {\n                name: 'origin',\n                type: 'address',\n                value: from,\n            },\n            {\n                names: ['recipient', 'origin'],\n                type: 'notEqual',\n                msg: 'Cannot transfer tokens to the same account'\n            },\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount\n            },\n            {\n                name: 'token ID',\n                type: 'tokenId',\n                value: tokenID\n            }\n        ], callback))\n            return;\n\n        const data = {\n            to_address: toHex(to),\n            owner_address: toHex(from),\n            asset_name: fromUtf8(tokenID),\n            amount: parseInt(amount)\n        };\n\n        createTransaction(this.tronWeb, 'TransferAssetContract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    purchaseToken(issuerAddress = false, tokenID = false, amount = 0, buyer = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(buyer)) {\n            callback = buyer;\n            buyer = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(buyer)) {\n            options = buyer;\n            buyer = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.purchaseToken, issuerAddress, tokenID, amount, buyer, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'buyer',\n                type: 'address',\n                value: buyer\n            },\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress\n            },\n            {\n                names: ['buyer', 'issuer'],\n                type: 'notEqual',\n                msg: 'Cannot purchase tokens from same account'\n            },\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount\n            },\n            {\n                name: 'token ID',\n                type: 'tokenId',\n                value: tokenID\n            }\n        ], callback))\n            return;\n\n        const data = {\n            to_address: toHex(issuerAddress),\n            owner_address: toHex(buyer),\n            asset_name: fromUtf8(tokenID),\n            amount: parseInt(amount)\n        };\n\n        createTransaction(this.tronWeb, 'ParticipateAssetIssueContract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    freezeBalance(amount = 0, duration = 3, resource = \"BANDWIDTH\", address = this.tronWeb.defaultAddress.hex, receiverAddress = undefined, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(receiverAddress)) {\n            callback = receiverAddress;\n            receiverAddress = undefined;\n        } else if (utils.isObject(receiverAddress)) {\n            options = receiverAddress;\n            receiverAddress = undefined;\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (utils.isFunction(duration)) {\n            callback = duration;\n            duration = 3;\n        }\n\n        if (utils.isFunction(resource)) {\n            callback = resource;\n            resource = \"BANDWIDTH\";\n        }\n\n        if (!callback)\n            return this.injectPromise(this.freezeBalance, amount, duration, resource, address, receiverAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            },\n            {\n                name: 'receiver',\n                type: 'address',\n                value: receiverAddress,\n                optional: true\n            },\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount\n            },\n            {\n                name: 'duration',\n                type: 'integer',\n                gte: 3,\n                value: duration\n            },\n            {\n                name: 'resource',\n                type: 'resource',\n                value: resource,\n                msg: 'Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"'\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(address),\n            frozen_balance: parseInt(amount),\n            frozen_duration: parseInt(duration),\n        };\n        if (resource !== 'BANDWIDTH') {\n            data.resource = resource;\n        }\n\n        if (utils.isNotNullOrUndefined(receiverAddress) && toHex(receiverAddress) !== toHex(address)) {\n            data.receiver_address = toHex(receiverAddress)\n        }\n\n        createTransaction(this.tronWeb, 'FreezeBalanceContract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    unfreezeBalance(resource = \"BANDWIDTH\", address = this.tronWeb.defaultAddress.hex, receiverAddress = undefined, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(receiverAddress)) {\n            callback = receiverAddress;\n            receiverAddress = undefined;\n        } else if (utils.isObject(receiverAddress)) {\n            options = receiverAddress;\n            receiverAddress = undefined;\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (utils.isFunction(resource)) {\n            callback = resource;\n            resource = \"BANDWIDTH\";\n        }\n\n        if (!callback)\n            return this.injectPromise(this.unfreezeBalance, resource, address, receiverAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            },\n            {\n                name: 'receiver',\n                type: 'address',\n                value: receiverAddress,\n                optional: true\n            },\n            {\n                name: 'resource',\n                type: 'resource',\n                value: resource,\n                msg: 'Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"'\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(address),\n        };\n        if (resource !== 'BANDWIDTH') {\n            data.resource = resource;\n        }\n\n        if (utils.isNotNullOrUndefined(receiverAddress) && toHex(receiverAddress) !== toHex(address)) {\n            data.receiver_address = toHex(receiverAddress)\n        }\n\n        createTransaction(this.tronWeb, 'UnfreezeBalanceContract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    freezeBalanceV2(amount = 0, resource = \"BANDWIDTH\", address = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (utils.isFunction(resource)) {\n            callback = resource;\n            resource = \"BANDWIDTH\";\n        } else if (utils.isObject(resource)) {\n            options = resource;\n            resource = \"BANDWIDTH\";\n        }\n\n        if (!callback)\n            return this.injectPromise(this.freezeBalanceV2, amount, resource, address, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            },\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount\n            },\n            {\n                name: 'resource',\n                type: 'resource',\n                value: resource,\n                msg: 'Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"'\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(address),\n            frozen_balance: parseInt(amount),\n        };\n        if (resource !== 'BANDWIDTH') {\n            data.resource = resource;\n        }\n\n        createTransaction(this.tronWeb, 'FreezeBalanceV2Contract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    unfreezeBalanceV2(amount = 0, resource = \"BANDWIDTH\", address = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (utils.isFunction(resource)) {\n            callback = resource;\n            resource = \"BANDWIDTH\";\n        } else if (utils.isObject(resource)) {\n            options = resource;\n            resource = \"BANDWIDTH\";\n        }\n\n        if (!callback)\n            return this.injectPromise(this.unfreezeBalanceV2, amount, resource, address, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            },\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount\n            },\n            {\n                name: 'resource',\n                type: 'resource',\n                value: resource,\n                msg: 'Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"'\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(address),\n            unfreeze_balance: parseInt(amount),\n        };\n        if (resource !== 'BANDWIDTH') {\n            data.resource = resource;\n        }\n\n        createTransaction(this.tronWeb, 'UnfreezeBalanceV2Contract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    cancelUnfreezeBalanceV2(address = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            options = {};\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.cancelUnfreezeBalanceV2, address, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address,\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(address),\n        };\n\n        createTransaction(this.tronWeb, 'CancelAllUnfreezeV2Contract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    delegateResource(\n        amount = 0,\n        receiverAddress,\n        resource = \"BANDWIDTH\",\n        address = this.tronWeb.defaultAddress.hex,\n        lock = false,\n        lockPeriod,\n        options,\n        callback = false\n    ) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(lockPeriod)) {\n            callback = lockPeriod;\n            lockPeriod = undefined;\n        } else if (utils.isObject(lockPeriod)) {\n            options = lockPeriod;\n            lockPeriod = undefined;\n        }\n\n        if (utils.isFunction(lock)) {\n            callback = lock;\n            lock = false;\n        } else if (utils.isObject(lock)) {\n            options = lock;\n            lock = false;\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (utils.isFunction(resource)) {\n            callback = resource;\n            resource = \"BANDWIDTH\";\n        } else if (utils.isObject(resource)) {\n            options = resource;\n            resource = \"BANDWIDTH\";\n        }\n\n        if (!callback)\n            return this.injectPromise(this.delegateResource, amount, receiverAddress, resource, address, lock, lockPeriod, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount\n            },\n            {\n                name: 'resource',\n                type: 'resource',\n                value: resource,\n                msg: 'Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"'\n            },\n            {\n                name: 'receiver',\n                type: 'address',\n                value: receiverAddress\n            },\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            },\n            {\n                name: 'lock',\n                type: 'boolean',\n                value: lock\n            },\n            {\n                name: 'lock period',\n                type: 'integer',\n                gte: 0,\n                value: lockPeriod,\n                optional: true,\n            }\n        ], callback))\n            return;\n\n        if(toHex(receiverAddress) === toHex(address)) {\n            return callback('Receiver address must not be the same as owner address');\n        }\n\n        const data = {\n            owner_address: toHex(address),\n            receiver_address: toHex(receiverAddress),\n            balance: parseInt(amount),\n        };\n        if (resource !== 'BANDWIDTH') {\n            data.resource = resource;\n        }\n        if (lock) {\n            data.lock = lock;\n            if (utils.isNotNullOrUndefined(lockPeriod)) {\n                data.lock_period = lockPeriod;\n            }\n        }\n\n        createTransaction(this.tronWeb, 'DelegateResourceContract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    undelegateResource(amount = 0, receiverAddress, resource = \"BANDWIDTH\", address = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (utils.isFunction(resource)) {\n            callback = resource;\n            resource = \"BANDWIDTH\";\n        } else if (utils.isObject(resource)) {\n            options = resource;\n            resource = \"BANDWIDTH\";\n        }\n\n        if (!callback)\n            return this.injectPromise(this.undelegateResource, amount, receiverAddress, resource, address, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            },\n            {\n                name: 'receiver',\n                type: 'address',\n                value: receiverAddress\n            },\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount\n            },\n            {\n                name: 'resource',\n                type: 'resource',\n                value: resource,\n                msg: 'Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"'\n            }\n        ], callback))\n            return;\n\n        if(toHex(receiverAddress) === toHex(address)) {\n            return callback('Receiver address must not be the same as owner address');\n        }\n    \n        const data = {\n            owner_address: toHex(address),\n            receiver_address: toHex(receiverAddress),\n            balance: parseInt(amount),\n        };\n        if (resource !== 'BANDWIDTH') {\n            data.resource = resource;\n        }\n\n        createTransaction(this.tronWeb, 'UnDelegateResourceContract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    withdrawExpireUnfreeze(address = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.withdrawExpireUnfreeze, address, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(address)\n        }\n\n        createTransaction(this.tronWeb, 'WithdrawExpireUnfreezeContract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    withdrawBlockRewards(address = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.withdrawBlockRewards, address, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(address)\n        };\n\n        createTransaction(this.tronWeb, 'WithdrawBalanceContract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    applyForSR(\n        address = this.tronWeb.defaultAddress.hex,\n        url = false,\n        options,\n        callback = false\n    ) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (utils.isObject(url) && utils.isValidURL(address)) {\n            options = url;\n            url = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.applyForSR, address, url, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            },\n            {\n                name: 'url',\n                type: 'url',\n                value: url,\n                msg: 'Invalid url provided'\n            },\n            {\n                name: 'url',\n                type: 'string',\n                value: url,\n                lte: 256,\n                msg: 'Invalid url provided'\n            },\n        ], callback))\n            return;\n\n\n        const data = {\n            owner_address: toHex(address),\n            url: fromUtf8(url),\n        };\n\n        createTransaction(this.tronWeb, 'WitnessCreateContract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    vote(votes = {}, voterAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(voterAddress)) {\n            callback = voterAddress;\n            voterAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(voterAddress)) {\n            options = voterAddress;\n            voterAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.vote, votes, voterAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'voter',\n                type: 'address',\n                value: voterAddress\n            },\n            {\n                name: 'votes',\n                type: 'notEmptyObject',\n                value: votes\n            }\n        ], callback))\n            return;\n\n        let invalid = false;\n\n        votes = Object.entries(votes).map(([srAddress, voteCount]) => {\n            if (invalid)\n                return;\n\n            if (this.validator.notValid([\n                {\n                    name: 'SR',\n                    type: 'address',\n                    value: srAddress\n                },\n                {\n                    name: 'vote count',\n                    type: 'integer',\n                    gt: 0,\n                    value: voteCount,\n                    msg: 'Invalid vote count provided for SR: ' + srAddress\n                }\n            ]))\n                return invalid = true;\n\n            return {\n                vote_address: toHex(srAddress),\n                vote_count: parseInt(voteCount)\n            };\n        });\n\n        if (invalid)\n            return;\n\n        const data = {\n            owner_address: toHex(voterAddress),\n            votes,\n        };\n\n        createTransaction(this.tronWeb, 'VoteWitnessContract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    createSmartContract(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.createSmartContract, options, issuerAddress);\n\n        const feeLimit = options.feeLimit || this.tronWeb.feeLimit;\n        let userFeePercentage = options.userFeePercentage;\n        if (typeof userFeePercentage !== 'number' && !userFeePercentage) {\n            userFeePercentage = 100;\n        }\n        const originEnergyLimit = options.originEnergyLimit || 10_000_000;\n        const callValue = options.callValue || 0;\n        const tokenValue = options.tokenValue;\n        const tokenId = options.tokenId || options.token_id;\n\n        let {\n            abi = false,\n            bytecode = false,\n            parameters = [],\n            name = \"\"\n        } = options;\n\n        if (abi && utils.isString(abi)) {\n            try {\n                abi = JSON.parse(abi);\n            } catch {\n                return callback('Invalid options.abi provided');\n            }\n        }\n\n        if (abi.entrys)\n            abi = abi.entrys;\n\n        if (!utils.isArray(abi))\n            return callback('Invalid options.abi provided');\n\n\n        const payable = abi.some(func => {\n            return func.type === 'constructor' && 'payable' === func.stateMutability.toLowerCase();\n        });\n\n        if (this.validator.notValid([\n            {\n                name: 'bytecode',\n                type: 'hex',\n                value: bytecode\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gt: 0\n            },\n            {\n                name: 'callValue',\n                type: 'integer',\n                value: callValue,\n                gte: 0\n            },\n            {\n                name: 'userFeePercentage',\n                type: 'integer',\n                value: userFeePercentage,\n                gte: 0,\n                lte: 100\n            },\n            {\n                name: 'originEnergyLimit',\n                type: 'integer',\n                value: originEnergyLimit,\n                gte: 0,\n                lte: 10_000_000\n            },\n            {\n                name: 'parameters',\n                type: 'array',\n                value: parameters\n            },\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress\n            },\n            {\n                name: 'tokenValue',\n                type: 'integer',\n                value: tokenValue,\n                gte: 0,\n                optional: true\n            },\n            {\n                name: 'tokenId',\n                type: 'integer',\n                value: tokenId,\n                gte: 0,\n                optional: true\n            }\n        ], callback))\n            return;\n\n        if (!payable && (callValue > 0 || tokenValue > 0))\n            return callback('When contract is not payable, options.callValue and options.tokenValue must be 0');\n\n\n        if (options.rawParameter && utils.isString(options.rawParameter)) {\n            parameters = options.rawParameter.replace(/^(0x)/, '');\n        } else if (options.funcABIV2) {\n            parameters = encodeParamsV2ByABI(options.funcABIV2, options.parametersV2).replace(/^(0x)/, '');\n        } else {\n            var constructorParams = abi.find(\n                (it) => {\n                    return it.type === 'constructor';\n                }\n            );\n\n            if (typeof constructorParams !== 'undefined' && constructorParams) {\n                const abiCoder = new AbiCoder();\n                const types = [];\n                const values = [];\n                constructorParams = constructorParams.inputs;\n\n                if (parameters.length != constructorParams.length)\n                    return callback(`constructor needs ${constructorParams.length} but ${parameters.length} provided`);\n\n                for (let i = 0; i < parameters.length; i++) {\n                    let type = constructorParams[i].type;\n                    let value = parameters[i];\n\n                    if (!type || !utils.isString(type) || !type.length)\n                        return callback('Invalid parameter type provided: ' + type);\n\n                    if (type === 'address')\n                        value = toHex(value).replace(ADDRESS_PREFIX_REGEX, '0x');\n                    else if (type.match(/^([^\\x5b]*)(\\x5b|$)/)[0] === 'address[')\n                        value = value.map(v => toHex(v).replace(ADDRESS_PREFIX_REGEX, '0x'));\n                    else if (/trcToken/.test(type)) {\n                        type = type.replace(/trcToken/, 'uint256')\n                    }\n\n                    types.push(type);\n                    values.push(value);\n                }\n\n                try {\n                    parameters = abiCoder.encode(types, values).replace(/^(0x)/, '');\n                } catch (ex) {\n                    return callback(ex);\n                }\n            } else parameters = '';\n        }\n\n        const args = {\n            owner_address: toHex(issuerAddress),\n            fee_limit: parseInt(feeLimit),\n            call_value: parseInt(callValue),\n            consume_user_resource_percent: userFeePercentage,\n            origin_energy_limit: originEnergyLimit,\n            abi: JSON.stringify(abi),\n            bytecode,\n            parameter: parameters,\n            name\n        };\n\n        // tokenValue and tokenId can cause errors if provided when the trx10 proposal has not been approved yet. So we set them only if they are passed to the method.\n        if (utils.isNotNullOrUndefined(tokenValue))\n            args.call_token_value = parseInt(tokenValue)\n        if (utils.isNotNullOrUndefined(tokenId))\n            args.token_id = parseInt(tokenId)\n\n        new Promise((resolve) => {\n                const contract = {};\n                contract.owner_address = args.owner_address;\n                if (utils.isNotNullOrUndefined(args.call_token_value)) {\n                    contract.call_token_value = args.call_token_value;\n                }\n                if (utils.isNotNullOrUndefined(args.token_id)) {\n                    contract.token_id = args.token_id;\n                }\n                const new_contract = contract.new_contract = {};\n\n                if (args.abi) {\n                    new_contract.abi = {\n                        entrys: JSON.parse(args.abi),\n                    };\n                } else {\n                    new_contract.abi = {};\n                }\n                if (args.call_value) {\n                    new_contract.call_value = args.call_value;\n                }\n                new_contract.consume_user_resource_percent = args.consume_user_resource_percent;\n                new_contract.origin_energy_limit = args.origin_energy_limit;\n                new_contract.origin_address = args.origin_address ?? args.owner_address;\n                if (args.bytecode + args.parameter) {\n                    new_contract.bytecode = (args.bytecode + args.parameter).replace(/^0x/, '');\n                }\n                if (utils.isNotNullOrUndefined(args.name)) {\n                    new_contract.name = args.name;\n                }\n\n                resolve(contract);\n            })\n            .then(async contract => {\n                const tx = await createTransaction(this.tronWeb, 'CreateSmartContract', contract, options?.permissionId, { fee_limit: args.fee_limit })\n                tx.contract_address = genContractAddress(args.owner_address, tx.txID);\n                return tx;\n            })\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    triggerSmartContract(...params) {\n        if (typeof params[2] !== 'object') {\n            params[2] = {\n                feeLimit: params[2],\n                callValue: params[3]\n            }\n            params.splice(3, 1)\n        }\n        if (params[2]?.txLocal) {\n            return this._triggerSmartContractLocal(...params);\n        }\n        return this._triggerSmartContract(...params);\n    }\n\n    triggerConstantContract(...params) {\n        params[2]._isConstant = true\n        return this._triggerSmartContract(...params);\n    }\n\n    triggerConfirmedConstantContract(...params) {\n        params[2]._isConstant = true\n        params[2].confirmed = true\n        return this._triggerSmartContract(...params);\n    }\n\n    estimateEnergy(...params) {\n        params[2].estimateEnergy = true;\n        return this._triggerSmartContract(...params);\n    }\n\n    async deployConstantContract(options = {}) {\n        const {\n            input,\n            ownerAddress,\n            tokenId,\n            tokenValue,\n            callValue = 0,\n        } = options;\n        \n        this.validator.notValid([\n            {\n                name: 'input',\n                type: 'not-empty-string',\n                value: input,\n            },\n            {\n                name: 'callValue',\n                type: 'integer',\n                value: callValue,\n                gte: 0\n            },\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress\n            },\n            {\n                name: 'tokenValue',\n                type: 'integer',\n                value: tokenValue,\n                gte: 0,\n                optional: true\n            },\n            {\n                name: 'tokenId',\n                type: 'integer',\n                value: tokenId,\n                gte: 0,\n                optional: true\n            }\n        ], (str) => {\n            throw new Error(str);\n        });\n        \n        const args = {\n            data: input,\n            owner_address: toHex(ownerAddress),\n            call_value: callValue,\n        }\n\n        if (tokenId) {\n            args.token_id = tokenId;\n        }\n        if (tokenValue) {\n            args.call_token_value = tokenValue;\n        }\n\n        const pathInfo = `wallet${options.confirmed ? 'solidity' : ''}/estimateenergy`;\n        return this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode']\n            .request(pathInfo, args, 'post')\n            .then(transaction => {\n                if (transaction.Error)\n                    throw new Error(transaction.Error);\n\n                if (transaction.result && transaction.result.message) {\n                    throw new Error(\n                        this.tronWeb.toUtf8(transaction.result.message)\n                    );\n                }\n                return transaction;\n            });\n    }\n\n    _getTriggerSmartContractArgs(\n        contractAddress,\n        functionSelector,\n        options,\n        parameters,\n        issuerAddress,\n        tokenValue,\n        tokenId,\n        callValue,\n        feeLimit,\n    ) {\n        const args = {\n            contract_address: toHex(contractAddress),\n            owner_address: toHex(issuerAddress)\n        };\n\n\n        if (functionSelector && utils.isString(functionSelector)) {\n            functionSelector = functionSelector.replace('/\\s*/g', '');\n            if (parameters.length) {\n                const abiCoder = new AbiCoder();\n                let types = [];\n                const values = [];\n\n                for (let i = 0; i < parameters.length; i++) {\n                    let {type, value} = parameters[i];\n\n                    if (!type || !utils.isString(type) || !type.length)\n                        return callback('Invalid parameter type provided: ' + type);\n\n                    if (type === 'address')\n                        value = toHex(value).replace(ADDRESS_PREFIX_REGEX, '0x');\n                    else if (type.match(/^([^\\x5b]*)(\\x5b|$)/)[0] === 'address[')\n                        value = value.map(v => toHex(v).replace(ADDRESS_PREFIX_REGEX, '0x'));\n\n                    types.push(type);\n                    values.push(value);\n                }\n\n                try {\n                    // workaround for unsupported trcToken type\n                    types = types.map(type => {\n                        if (/trcToken/.test(type)) {\n                            type = type.replace(/trcToken/, 'uint256')\n                        }\n                        return type\n                    })\n\n                    parameters = abiCoder.encode(types, values).replace(/^(0x)/, '');\n\n                } catch (ex) {\n                    return callback(ex);\n                }\n            } else parameters = '';\n\n            // work for abiv2 if passed the function abi in options\n            if (options.funcABIV2) {\n                parameters = encodeParamsV2ByABI(options.funcABIV2, options.parametersV2).replace(/^(0x)/, '');\n            }\n\n            if (options.shieldedParameter && utils.isString(options.shieldedParameter)) {\n                parameters = options.shieldedParameter.replace(/^(0x)/, '');\n            }\n\n            if (options.rawParameter && utils.isString(options.rawParameter)) {\n                parameters = options.rawParameter.replace(/^(0x)/, '');\n            }\n\n            args.function_selector = functionSelector;\n            args.parameter = parameters;\n        } else if (options.input) {\n            args.data = options.input;\n        }\n\n        args.call_value = parseInt(callValue)\n        if (utils.isNotNullOrUndefined(tokenValue))\n            args.call_token_value = parseInt(tokenValue)\n        if (utils.isNotNullOrUndefined(tokenId))\n            args.token_id = parseInt(tokenId)\n\n        if (!(options._isConstant || options.estimateEnergy)) {\n            args.fee_limit = parseInt(feeLimit)\n        }\n\n        if (options.permissionId) {\n            args.Permission_id = options.permissionId;\n        }\n\n        return args;\n    }\n\n    _triggerSmartContractLocal(\n        contractAddress,\n        functionSelector,\n        options = {},\n        parameters = [],\n        issuerAddress = this.tronWeb.defaultAddress.hex,\n        callback = false\n    ) {\n\n        if (utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (utils.isFunction(parameters)) {\n            callback = parameters;\n            parameters = [];\n        }\n\n        if (!callback) {\n            return this.injectPromise(\n                this._triggerSmartContractLocal,\n                contractAddress,\n                functionSelector,\n                options,\n                parameters,\n                issuerAddress\n            );\n        }\n\n        let {\n            tokenValue,\n            tokenId,\n            callValue,\n            feeLimit,\n        } = Object.assign({\n            callValue: 0,\n            feeLimit: this.tronWeb.feeLimit\n        }, options)\n\n        if (this.validator.notValid([\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gt: 0\n            },\n            {\n                name: 'callValue',\n                type: 'integer',\n                value: callValue,\n                gte: 0\n            },\n            {\n                name: 'parameters',\n                type: 'array',\n                value: parameters\n            },\n            {\n                name: 'contract',\n                type: 'address',\n                value: contractAddress\n            },\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress,\n                optional: true\n            },\n            {\n                name: 'tokenValue',\n                type: 'integer',\n                value: tokenValue,\n                gte: 0,\n                optional: true\n            },\n            {\n                name: 'tokenId',\n                type: 'integer',\n                value: tokenId,\n                gte: 0,\n                optional: true\n            }\n        ], callback))\n            return;\n\n        const args = this._getTriggerSmartContractArgs(\n            contractAddress,\n            functionSelector,\n            options,\n            parameters,\n            issuerAddress,\n            tokenValue,\n            tokenId,\n            callValue,\n            feeLimit\n        );\n\n        if (args.function_selector) {\n            args.data = keccak256(Buffer.from(args.function_selector, 'utf-8')).toString().substring(2, 10) + args.parameter;\n        }\n        const value = {\n            data: args.data,\n            owner_address: args.owner_address,\n            contract_address: args.contract_address,\n        };\n        if (args.call_value) {\n            value.call_value = args.call_value;\n        }\n        if (args.call_token_value) {\n            value.call_token_value = args.call_token_value;\n        }\n        if (args.token_id) {\n            value.token_id = args.token_id;\n        }\n        createTransaction(\n            this.tronWeb,\n            'TriggerSmartContract', \n            value,\n            options.permissionId,\n            {\n                fee_limit: args.fee_limit,\n            }\n        ).then(transaction => {\n            callback(null, {\n                result: {\n                    result: true,\n                },\n                transaction,\n            });\n        }).catch(err => callback(err));\n    }\n\n    _triggerSmartContract(\n        contractAddress,\n        functionSelector,\n        options = {},\n        parameters = [],\n        issuerAddress = this.tronWeb.defaultAddress.hex,\n        callback = false\n    ) {\n\n        if (utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (utils.isFunction(parameters)) {\n            callback = parameters;\n            parameters = [];\n        }\n\n        if (!callback) {\n            return this.injectPromise(\n                this._triggerSmartContract,\n                contractAddress,\n                functionSelector,\n                options,\n                parameters,\n                issuerAddress\n            );\n        }\n\n        let {\n            tokenValue,\n            tokenId,\n            callValue,\n            feeLimit,\n        } = Object.assign({\n            callValue: 0,\n            feeLimit: this.tronWeb.feeLimit\n        }, options)\n\n        if (this.validator.notValid([\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gt: 0\n            },\n            {\n                name: 'callValue',\n                type: 'integer',\n                value: callValue,\n                gte: 0\n            },\n            {\n                name: 'parameters',\n                type: 'array',\n                value: parameters\n            },\n            {\n                name: 'contract',\n                type: 'address',\n                value: contractAddress\n            },\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress,\n                optional: true\n            },\n            {\n                name: 'tokenValue',\n                type: 'integer',\n                value: tokenValue,\n                gte: 0,\n                optional: true\n            },\n            {\n                name: 'tokenId',\n                type: 'integer',\n                value: tokenId,\n                gte: 0,\n                optional: true\n            }\n        ], callback))\n            return;\n\n        const args = this._getTriggerSmartContractArgs(\n            contractAddress,\n            functionSelector,\n            options,\n            parameters,\n            issuerAddress,\n            tokenValue,\n            tokenId,\n            callValue,\n            feeLimit\n        );\n\n        let pathInfo = 'triggersmartcontract';\n        if(options._isConstant) {\n            pathInfo = 'triggerconstantcontract';\n        } else if (options.estimateEnergy) {\n            pathInfo = 'estimateenergy';\n        }\n\n        pathInfo = `wallet${options.confirmed ? 'solidity' : ''}/${pathInfo}`;\n        this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(pathInfo, args, 'post').then(transaction => resultManagerTriggerSmartContract(transaction, args, options, callback)).catch(err => callback(err));\n    }\n\n    clearABI(contractAddress, ownerAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {     \n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n        \n        if (!callback)\n            return this.injectPromise(this.clearABI, contractAddress, ownerAddress, options);\n\n        if (!this.tronWeb.isAddress(contractAddress))\n            return callback('Invalid contract address provided');\n\n        if (!this.tronWeb.isAddress(ownerAddress))\n            return callback('Invalid owner address provided');\n\n        const data = {\n            contract_address: toHex(contractAddress),\n            owner_address: toHex(ownerAddress)\n        };\n\n        if (this.tronWeb.trx.cache.contracts[contractAddress]) {\n            delete this.tronWeb.trx.cache.contracts[contractAddress]\n        }\n\n        createTransaction(this.tronWeb, 'ClearABIContract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n\n    }\n\n    updateBrokerage(brokerage, ownerAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.updateBrokerage, brokerage, ownerAddress, options);\n\n        if (!utils.isNotNullOrUndefined(brokerage))\n            return callback('Invalid brokerage provided');\n\n        if (!utils.isInteger(brokerage) || brokerage < 0 || brokerage > 100)\n            return callback('Brokerage must be an integer between 0 and 100');\n\n        if (!this.tronWeb.isAddress(ownerAddress))\n            return callback('Invalid owner address provided');\n\n        const data = {\n            brokerage: parseInt(brokerage),\n            owner_address: toHex(ownerAddress)\n        };\n\n        createTransaction(this.tronWeb, 'UpdateBrokerageContract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    createToken(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.createToken, options, issuerAddress);\n\n        const {\n            name = false,\n            abbreviation = false,\n            description = '',\n            url = false,\n            totalSupply = 0,\n            trxRatio = 1, // How much TRX will `tokenRatio` cost?\n            tokenRatio = 1, // How many tokens will `trxRatio` afford?\n            saleStart = Date.now(),\n            saleEnd = false,\n            freeBandwidth = 0, // The creator's \"donated\" bandwidth for use by token holders\n            freeBandwidthLimit = 0, // Out of `totalFreeBandwidth`, the amount each token holder get\n            frozenAmount = 0,\n            frozenDuration = 0,\n            // for now there is no default for the following values\n            voteScore,\n            precision\n        } = options;\n\n        if (this.validator.notValid([\n            {\n                name: 'Supply amount',\n                type: 'positive-integer',\n                value: totalSupply\n            },\n            {\n                name: 'TRX ratio',\n                type: 'positive-integer',\n                value: trxRatio\n            },\n            {\n                name: 'Token ratio',\n                type: 'positive-integer',\n                value: tokenRatio\n            },\n            {\n                name: 'token abbreviation',\n                type: 'string',\n                value: abbreviation,\n                lte: 32,\n                gt: 0\n            },\n            {\n                name: 'token name',\n                type: 'not-empty-string',\n                value: name\n            },\n            {\n                name: 'token description',\n                type: 'string',\n                value: description,\n                lte: 200\n            },\n            {\n                name: 'token url',\n                type: 'url',\n                value: url\n            },\n            {\n                name: 'token url',\n                type: 'string',\n                value: url,\n                lte: 256,\n            },\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress\n            },\n            {\n                name: 'sale start timestamp',\n                type: 'integer',\n                value: saleStart,\n                gte: Date.now()\n            },\n            {\n                name: 'sale end timestamp',\n                type: 'integer',\n                value: saleEnd,\n                gt: saleStart\n            },\n            {\n                name: 'Frozen supply',\n                type: 'integer',\n                value: frozenAmount,\n                gte: 0\n            },\n            {\n                name: 'Frozen duration',\n                type: 'integer',\n                value: frozenDuration,\n                gte: 0\n            }\n        ], callback))\n            return;\n\n        if (utils.isNotNullOrUndefined(voteScore) && (!utils.isInteger(voteScore) || voteScore <= 0))\n            return callback('voteScore must be a positive integer greater than 0');\n\n        if (utils.isNotNullOrUndefined(precision) && (!utils.isInteger(precision) || precision < 0 || precision > 6))\n            return callback('precision must be a positive integer >= 0 and <= 6');\n\n        const data = {\n            owner_address: toHex(issuerAddress),\n            name: fromUtf8(name),\n            abbr: fromUtf8(abbreviation),\n            description: fromUtf8(description),\n            url: fromUtf8(url),\n            total_supply: parseInt(totalSupply),\n            trx_num: parseInt(trxRatio),\n            num: parseInt(tokenRatio),\n            start_time: parseInt(saleStart),\n            end_time: parseInt(saleEnd),\n            frozen_supply: [{\n                frozen_amount: parseInt(frozenAmount),\n                frozen_days: parseInt(frozenDuration)\n            }]\n        };\n        ['name', 'abbr', 'description', 'url'].forEach((key) => {\n            if (!data[key]) {\n                delete data[key];\n            }\n        });\n        if (!(parseInt(frozenAmount) > 0)) {\n            delete data.frozen_supply\n        }\n        if (freeBandwidth && !isNaN(parseInt(freeBandwidth)) && parseInt(freeBandwidth) >= 0) {\n            data.free_asset_net_limit = parseInt(freeBandwidth);\n        }\n        if (freeBandwidthLimit && !isNaN(parseInt(freeBandwidthLimit)) && parseInt(freeBandwidthLimit) >= 0) {\n            data.public_free_asset_net_limit = parseInt(freeBandwidthLimit);\n        }\n        if (precision && !isNaN(parseInt(precision))) {\n            data.precision = parseInt(precision);\n        }\n        if (voteScore && !isNaN(parseInt(voteScore))) {\n            data.vote_score = parseInt(voteScore)\n        }\n\n        createTransaction(this.tronWeb, 'AssetIssueContract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    createAccount(accountAddress, address = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback) {\n            return this.injectPromise(this.createAccount, accountAddress, address, options);\n        }\n\n        if (this.validator.notValid([\n            {\n                name: 'account',\n                type: 'address',\n                value: accountAddress\n            },\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(address),\n            account_address: toHex(accountAddress),\n        };\n\n        createTransaction(this.tronWeb, 'AccountCreateContract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    updateAccount(accountName = false, address = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback) {\n            return this.injectPromise(this.updateAccount, accountName, address, options);\n        }\n\n        if (this.validator.notValid([\n            {\n                name: 'Name',\n                type: 'string',\n                lte: 200,\n                gt: 0,\n                value: accountName,\n                msg: 'Invalid accountName'\n            },\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            }\n        ], callback))\n            return;\n\n        const data = {\n            account_name: fromUtf8(accountName),\n            owner_address: toHex(address),\n        };\n\n        createTransaction(this.tronWeb, 'AccountUpdateContract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    setAccountId(accountId, address = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback) {\n            return this.injectPromise(this.setAccountId, accountId, address, options);\n        }\n\n        if (accountId && utils.isString(accountId) && accountId.startsWith('0x')) {\n            accountId = accountId.slice(2);\n        }\n\n        if (this.validator.notValid([\n            {\n                name: 'accountId',\n                type: 'hex',\n                value: accountId\n            },\n            {\n                name: 'accountId',\n                type: 'string',\n                lte: 32,\n                gte: 8,\n                value: accountId\n            },\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            }\n        ], callback))\n            return;\n\n        const data = {\n            account_id: accountId,\n            owner_address: toHex(address),\n        }\n\n        createTransaction(this.tronWeb, 'SetAccountIdContract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    updateToken(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(issuerAddress)) {\n            options = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.updateToken, options, issuerAddress);\n\n        const {\n            description = '',\n            url = false,\n            freeBandwidth = 0, // The creator's \"donated\" bandwidth for use by token holders\n            freeBandwidthLimit = 0 // Out of `totalFreeBandwidth`, the amount each token holder get\n        } = options;\n\n\n        if (this.validator.notValid([\n            {\n                name: 'token description',\n                type: 'string',\n                value: description,\n                lte: 200\n            },\n            {\n                name: 'token url',\n                type: 'url',\n                value: url\n            },\n            {\n                name: 'token url',\n                type: 'string',\n                value: url,\n                lte: 256,\n            },\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress\n            },\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(issuerAddress),\n            description: fromUtf8(description),\n            url: fromUtf8(url),\n        };\n\n        if (freeBandwidth && !isNaN(parseInt(freeBandwidth)) && parseInt(freeBandwidth) >= 0) {\n            data.new_limit = parseInt(freeBandwidth);\n        }\n        if (freeBandwidthLimit && !isNaN(parseInt(freeBandwidthLimit)) && parseInt(freeBandwidthLimit) >= 0) {\n            data.new_public_limit = parseInt(freeBandwidthLimit);\n        }\n\n        createTransaction(this.tronWeb, 'UpdateAssetContract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    sendAsset(...args) {\n        return this.sendToken(...args);\n    }\n\n    purchaseAsset(...args) {\n        return this.purchaseToken(...args);\n    }\n\n    createAsset(...args) {\n        return this.createToken(...args);\n    }\n\n    updateAsset(...args) {\n        return this.updateToken(...args);\n    }\n\n    /**\n     * Creates a proposal to modify the network.\n     * Can only be created by a current Super Representative.\n     */\n    createProposal(parameters = false, issuerAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(issuerAddress)) {\n            options = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.createProposal, parameters, issuerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress\n            }\n        ], callback))\n            return;\n\n        const invalid = 'Invalid proposal parameters provided';\n\n        if (!parameters)\n            return callback(invalid);\n\n        if (!utils.isArray(parameters))\n            parameters = [parameters];\n\n        for (let parameter of parameters) {\n            if (!utils.isObject(parameter))\n                return callback(invalid);\n        }\n\n        const data = {\n            owner_address: toHex(issuerAddress),\n            parameters: parameters\n        };\n\n        createTransaction(this.tronWeb, 'ProposalCreateContract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    /**\n     * Deletes a network modification proposal that the owner issued.\n     * Only current Super Representative can vote on a proposal.\n     */\n    deleteProposal(proposalID = false, issuerAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(issuerAddress)) {\n            options = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.deleteProposal, proposalID, issuerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress\n            },\n            {\n                name: 'proposalID',\n                type: 'integer',\n                value: proposalID,\n                gte: 0\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(issuerAddress),\n            proposal_id: parseInt(proposalID)\n        };\n\n        createTransaction(this.tronWeb, 'ProposalDeleteContract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    /**\n     * Adds a vote to an issued network modification proposal.\n     * Only current Super Representative can vote on a proposal.\n     */\n    voteProposal(proposalID = false, isApproval = false, voterAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(voterAddress)) {\n            callback = voterAddress;\n            voterAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(voterAddress)) {\n            options = voterAddress;\n            voterAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.voteProposal, proposalID, isApproval, voterAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'voter',\n                type: 'address',\n                value: voterAddress\n            },\n            {\n                name: 'proposalID',\n                type: 'integer',\n                value: proposalID,\n                gte: 0\n            },\n            {\n                name: 'has approval',\n                type: 'boolean',\n                value: isApproval\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(voterAddress),\n            proposal_id: parseInt(proposalID),\n            is_add_approval: isApproval\n        };\n\n        createTransaction(this.tronWeb, 'ProposalApproveContract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    /**\n     * Create an exchange between a token and TRX.\n     * Token Name should be a CASE SENSITIVE string.\n     * PLEASE VERIFY THIS ON TRONSCAN.\n     */\n    createTRXExchange(tokenName, tokenBalance, trxBalance, ownerAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.createTRXExchange, tokenName, tokenBalance, trxBalance, ownerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress\n            },\n            {\n                name: 'token name',\n                type: 'not-empty-string',\n                value: tokenName\n            },\n            {\n                name: 'token balance',\n                type: 'positive-integer',\n                value: tokenBalance\n            },\n            {\n                name: 'trx balance',\n                type: 'positive-integer',\n                value: trxBalance\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(ownerAddress),\n            first_token_id: fromUtf8(tokenName),\n            first_token_balance: tokenBalance,\n            second_token_id: '5f', // Constant for TRX.\n            second_token_balance: trxBalance\n        };\n\n        createTransaction(this.tronWeb, 'ExchangeCreateContract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    /**\n     * Create an exchange between a token and another token.\n     * DO NOT USE THIS FOR TRX.\n     * Token Names should be a CASE SENSITIVE string.\n     * PLEASE VERIFY THIS ON TRONSCAN.\n     */\n    createTokenExchange(firstTokenName, firstTokenBalance, secondTokenName, secondTokenBalance, ownerAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.createTokenExchange, firstTokenName, firstTokenBalance, secondTokenName, secondTokenBalance, ownerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress\n            },\n            {\n                name: 'first token name',\n                type: 'not-empty-string',\n                value: firstTokenName\n            },\n            {\n                name: 'second token name',\n                type: 'not-empty-string',\n                value: secondTokenName\n            },\n            {\n                name: 'first token balance',\n                type: 'positive-integer',\n                value: firstTokenBalance\n            },\n            {\n                name: 'second token balance',\n                type: 'positive-integer',\n                value: secondTokenBalance\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(ownerAddress),\n            first_token_id: fromUtf8(firstTokenName),\n            first_token_balance: firstTokenBalance,\n            second_token_id: fromUtf8(secondTokenName),\n            second_token_balance: secondTokenBalance\n        };\n\n        createTransaction(this.tronWeb, 'ExchangeCreateContract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    /**\n     * Adds tokens into a bancor style exchange.\n     * Will add both tokens at market rate.\n     * Use \"_\" for the constant value for TRX.\n     */\n    injectExchangeTokens(exchangeID = false, tokenName = false, tokenAmount = 0, ownerAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.injectExchangeTokens, exchangeID, tokenName, tokenAmount, ownerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress\n            },\n            {\n                name: 'token name',\n                type: 'not-empty-string',\n                value: tokenName\n            },\n            {\n                name: 'token amount',\n                type: 'integer',\n                value: tokenAmount,\n                gte: 1\n            },\n            {\n                name: 'exchangeID',\n                type: 'integer',\n                value: exchangeID,\n                gte: 0\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(ownerAddress),\n            exchange_id: parseInt(exchangeID),\n            token_id: fromUtf8(tokenName),\n            quant: parseInt(tokenAmount)\n        };\n\n        createTransaction(this.tronWeb, 'ExchangeInjectContract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    /**\n     * Withdraws tokens from a bancor style exchange.\n     * Will withdraw at market rate both tokens.\n     * Use \"_\" for the constant value for TRX.\n     */\n    withdrawExchangeTokens(exchangeID = false, tokenName = false, tokenAmount = 0, ownerAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.withdrawExchangeTokens, exchangeID, tokenName, tokenAmount, ownerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress\n            },\n            {\n                name: 'token name',\n                type: 'not-empty-string',\n                value: tokenName\n            },\n            {\n                name: 'token amount',\n                type: 'integer',\n                value: tokenAmount,\n                gte: 1\n            },\n            {\n                name: 'exchangeID',\n                type: 'integer',\n                value: exchangeID,\n                gte: 0\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(ownerAddress),\n            exchange_id: parseInt(exchangeID),\n            token_id: fromUtf8(tokenName),\n            quant: parseInt(tokenAmount)\n        };\n\n        createTransaction(this.tronWeb, 'ExchangeWithdrawContract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    /**\n     * Trade tokens on a bancor style exchange.\n     * Expected value is a validation and used to cap the total amt of token 2 spent.\n     * Use \"_\" for the constant value for TRX.\n     */\n    tradeExchangeTokens(exchangeID = false,\n                        tokenName = false,\n                        tokenAmountSold = 0,\n                        tokenAmountExpected = 0,\n                        ownerAddress = this.tronWeb.defaultAddress.hex,\n                        options,\n                        callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.tradeExchangeTokens, exchangeID, tokenName, tokenAmountSold, tokenAmountExpected, ownerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress\n            },\n            {\n                name: 'token name',\n                type: 'not-empty-string',\n                value: tokenName\n            },\n            {\n                name: 'tokenAmountSold',\n                type: 'integer',\n                value: tokenAmountSold,\n                gte: 1\n            },\n            {\n                name: 'tokenAmountExpected',\n                type: 'integer',\n                value: tokenAmountExpected,\n                gte: 1\n            },\n            {\n                name: 'exchangeID',\n                type: 'integer',\n                value: exchangeID,\n                gte: 0\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(ownerAddress),\n            exchange_id: parseInt(exchangeID),\n            token_id: this.tronWeb.fromAscii(tokenName).replace(/^0x/, ''),\n            quant: parseInt(tokenAmountSold),\n            expected: parseInt(tokenAmountExpected)\n        };\n\n        createTransaction(this.tronWeb, 'ExchangeTransactionContract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    /**\n     * Update userFeePercentage.\n     */\n    updateSetting(contractAddress = false,\n                  userFeePercentage = false,\n                  ownerAddress = this.tronWeb.defaultAddress.hex,\n                  options,\n                  callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.updateSetting, contractAddress, userFeePercentage, ownerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress\n            },\n            {\n                name: 'contract',\n                type: 'address',\n                value: contractAddress\n            },\n            {\n                name: 'userFeePercentage',\n                type: 'integer',\n                value: userFeePercentage,\n                gte: 0,\n                lte: 100\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(ownerAddress),\n            contract_address: toHex(contractAddress),\n            consume_user_resource_percent: userFeePercentage\n        };\n\n        createTransaction(this.tronWeb, 'UpdateSettingContract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    /**\n     * Update energy limit.\n     */\n    updateEnergyLimit(contractAddress = false,\n                      originEnergyLimit = false,\n                      ownerAddress = this.tronWeb.defaultAddress.hex,\n                      options,\n                      callback = false) {\n\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.updateEnergyLimit, contractAddress, originEnergyLimit, ownerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress\n            },\n            {\n                name: 'contract',\n                type: 'address',\n                value: contractAddress\n            },\n            {\n                name: 'originEnergyLimit',\n                type: 'integer',\n                value: originEnergyLimit,\n                gte: 0,\n                lte: 10_000_000\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(ownerAddress),\n            contract_address: toHex(contractAddress),\n            origin_energy_limit: originEnergyLimit\n        };\n\n        createTransaction(this.tronWeb, 'UpdateEnergyLimitContract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    checkPermissions(permissions, type) {\n        if (permissions) {\n            if (permissions.type !== type\n                || !permissions.permission_name\n                || !utils.isString(permissions.permission_name)\n                || !utils.isInteger(permissions.threshold)\n                || permissions.threshold < 1\n                || !permissions.keys\n            ) {\n                return false\n            }\n            for (let key of permissions.keys) {\n                if (!this.tronWeb.isAddress(key.address)\n                    || !utils.isInteger(key.weight)\n                    || key.weight > permissions.threshold\n                    || key.weight < 1\n                    || (type === 2 && !permissions.operations)\n                ) {\n                    return false\n                }\n            }\n        }\n        return true\n    }\n\n    updateAccountPermissions(\n        ownerAddress = this.tronWeb.defaultAddress.hex,\n        ownerPermissions = false,\n        witnessPermissions = false,\n        activesPermissions = false,\n        options,\n        callback = false\n    ) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(activesPermissions)) {\n            callback = activesPermissions;\n            activesPermissions = false;\n        }\n\n        if (utils.isFunction(witnessPermissions)) {\n            callback = witnessPermissions;\n            witnessPermissions = activesPermissions = false;\n        }\n\n        if (utils.isFunction(ownerPermissions)) {\n            callback = ownerPermissions;\n            ownerPermissions = witnessPermissions = activesPermissions = false;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.updateAccountPermissions, ownerAddress, ownerPermissions, witnessPermissions, activesPermissions, options);\n\n        if (!this.tronWeb.isAddress(ownerAddress))\n            return callback('Invalid ownerAddress provided');\n\n        if (!this.checkPermissions(ownerPermissions, 0)) {\n            return callback('Invalid ownerPermissions provided');\n        }\n\n        if (!this.checkPermissions(witnessPermissions, 1)) {\n            return callback('Invalid witnessPermissions provided');\n        }\n\n        if (!Array.isArray(activesPermissions)) {\n            activesPermissions = [activesPermissions]\n        }\n\n        for (let activesPermission of activesPermissions) {\n            if (!this.checkPermissions(activesPermission, 2)) {\n                return callback('Invalid activesPermissions provided');\n            }\n        }\n\n        const data = {\n            owner_address: toHex(ownerAddress)\n        }\n        if (ownerPermissions) {\n            const _ownerPermissions = deepCopyJson(ownerPermissions);\n            // for compatible with old way of building transaction from chain which type prop is omitted\n            if ('type' in _ownerPermissions) {\n                delete _ownerPermissions.type;\n            }\n            data.owner = _ownerPermissions;\n        }\n        if (witnessPermissions) {\n            const _witnessPermissions = deepCopyJson(witnessPermissions);\n            // for compatible with old way of building transaction from chain which type prop is Witness\n            _witnessPermissions.type = 'Witness';\n            data.witness = _witnessPermissions;\n        }\n        if (activesPermissions) {\n            const _activesPermissions = deepCopyJson(activesPermissions);\n            // for compatible with old way of building transaction from chain which type prop is Active\n            _activesPermissions.forEach((activePermissions) => {\n                activePermissions.type = 'Active';\n            });\n            data.actives = _activesPermissions;\n        }\n\n        createTransaction(this.tronWeb, 'AccountPermissionUpdateContract', data, options?.permissionId)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    async newTxID(transaction, options, callback) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback)\n            return this.injectPromise(this.newTxID, transaction, options);\n\n        if (options?.txLocal) {\n            const contract = transaction.raw_data.contract[0];\n            createTransaction(this.tronWeb, contract.type, contract.parameter.value, contract.Permission_id, {\n                fee_limit: transaction.raw_data.fee_limit,\n                data: transaction.raw_data.data,\n                ref_block_bytes: transaction.raw_data.ref_block_bytes,\n                ref_block_hash: transaction.raw_data.ref_block_hash,\n                expiration: transaction.raw_data.expiration,\n                timestamp: transaction.raw_data.timestamp,\n            }).then((tx) => {\n                tx.signature = transaction.signature;\n                tx.visible = transaction.visible;\n                callback(null, tx);\n            }).catch((err) => callback('Error generating a new transaction id.'));\n            return;\n        }\n        \n        this.tronWeb.fullNode\n            .request(\n                'wallet/getsignweight',\n                transaction,\n                'post'\n            )\n            .then(newTransaction => {\n                if (typeof transaction.visible === 'boolean') {\n                    newTransaction.transaction.transaction.visible = transaction.visible\n                }\n                return resultManager(\n                    newTransaction.transaction.transaction,\n                    {\n                        ...transaction.raw_data.contract[0].parameter.value,\n                        Permission_id: transaction.raw_data.contract[0].Permission_id,\n                    },\n                    { data: transaction.raw_data.data, fee_limit: transaction.raw_data.fee_limit },\n                    callback\n                );\n            })\n            .catch(err => callback('Error generating a new transaction id.'));\n    }\n\n    async alterTransaction(transaction, options = {}, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.alterTransaction, transaction, options);\n\n        if (transaction.signature)\n            return callback('You can not extend the expiration of a signed transaction.')\n\n        if (options.data) {\n            if (options.dataFormat !== 'hex')\n                options.data = this.tronWeb.toHex(options.data);\n            options.data = options.data.replace(/^0x/, '')\n            if (options.data.length === 0)\n                return callback('Invalid data provided');\n            transaction.raw_data.data = options.data;\n        }\n\n        if (options.extension) {\n            options.extension = parseInt(options.extension * 1000);\n            if (isNaN(options.extension) || transaction.raw_data.expiration + options.extension <= Date.now() + 3000)\n                return callback('Invalid extension provided');\n            transaction.raw_data.expiration += options.extension;\n        }\n\n        this.newTxID(transaction, { txLocal: options.txLocal }, callback)\n    }\n\n    async extendExpiration(transaction, extension, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback)\n            return this.injectPromise(this.extendExpiration, transaction, extension, options);\n\n        this.alterTransaction(transaction, {extension, txLocal: options?.txLocal}, callback);\n    }\n\n    async addUpdateData(transaction, data, dataFormat = 'utf8', options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(dataFormat)) {\n            callback = dataFormat;\n            dataFormat = 'utf8';\n        } else if (utils.isObject(dataFormat)) {\n            options = dataFormat;\n            dataFormat = 'utf8';\n        }\n\n        if (!callback)\n            return this.injectPromise(this.addUpdateData, transaction, data, dataFormat, options);\n\n        this.alterTransaction(transaction, {data, dataFormat, txLocal: options?.txLocal}, callback);\n    }\n\n}\n","import TronWeb from 'index';\nimport utils from 'utils';\nimport { keccak256, toUtf8Bytes, recoverAddress, SigningKey } from 'utils/ethersUtils';\nimport { ADDRESS_PREFIX } from 'utils/address';\nimport Validator from \"../paramValidator\";\nimport injectpromise from 'injectpromise';\nimport { txCheck } from '../utils/transaction';\n\nconst TRX_MESSAGE_HEADER = '\\x19TRON Signed Message:\\n32';\n// it should be: '\\x15TRON Signed Message:\\n32';\nconst ETH_MESSAGE_HEADER = '\\x19Ethereum Signed Message:\\n32';\n\nfunction toHex(value) {\n    return TronWeb.address.toHex(value);\n}\n\nexport default class Trx {\n    constructor(tronWeb = false) {\n        if (!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n\n        this.tronWeb = tronWeb;\n        this.injectPromise = injectpromise(this);\n        this.cache = {\n            contracts: {}\n        }\n        this.validator = new Validator(tronWeb);\n    }\n\n    _parseToken(token) {\n        return {\n            ...token,\n            name: this.tronWeb.toUtf8(token.name),\n            abbr: token.abbr && this.tronWeb.toUtf8(token.abbr),\n            description: token.description && this.tronWeb.toUtf8(token.description),\n            url: token.url && this.tronWeb.toUtf8(token.url)\n        };\n    }\n\n    getCurrentBlock(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getCurrentBlock);\n        this.tronWeb.fullNode.request('wallet/getnowblock').then(block => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getConfirmedCurrentBlock(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getConfirmedCurrentBlock);\n\n        this.tronWeb.solidityNode.request('walletsolidity/getnowblock').then(block => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlock(block = this.tronWeb.defaultBlock, callback = false) {\n        if (utils.isFunction(block)) {\n            callback = block;\n            block = this.tronWeb.defaultBlock;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getBlock, block);\n\n        if (block === false)\n            return callback('No block identifier provided');\n\n        if (block == 'earliest')\n            block = 0;\n\n        if (block == 'latest')\n            return this.getCurrentBlock(callback);\n\n        if (isNaN(block) && utils.isHex(block))\n            return this.getBlockByHash(block, callback);\n\n        this.getBlockByNumber(block, callback);\n    }\n\n    getBlockByHash(blockHash, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getBlockByHash, blockHash);\n\n        this.tronWeb.fullNode.request('wallet/getblockbyid', {\n            value: blockHash\n        }, 'post').then(block => {\n            if (!Object.keys(block).length)\n                return callback('Block not found');\n\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlockByNumber(blockID, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getBlockByNumber, blockID);\n\n        if (!utils.isInteger(blockID) || blockID < 0)\n            return callback('Invalid block number provided');\n\n        this.tronWeb.fullNode.request('wallet/getblockbynum', {\n            num: parseInt(blockID)\n        }, 'post').then(block => {\n            if (!Object.keys(block).length)\n                return callback('Block not found');\n\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlockTransactionCount(block = this.tronWeb.defaultBlock, callback = false) {\n        if (utils.isFunction(block)) {\n            callback = block;\n            block = this.tronWeb.defaultBlock;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getBlockTransactionCount, block);\n\n        this.getBlock(block).then(({transactions = []}) => {\n            callback(null, transactions.length);\n        }).catch(err => callback(err));\n    }\n\n    getTransactionFromBlock(block = this.tronWeb.defaultBlock, index, callback = false) {\n        if (utils.isFunction(index)) {\n            callback = index;\n            index = 0;\n        }\n\n        if (utils.isFunction(block)) {\n            callback = block;\n            block = this.tronWeb.defaultBlock;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getTransactionFromBlock, block, index);\n\n        this.getBlock(block).then(({transactions = false}) => {\n            if (!transactions)\n                callback('Transaction not found in block');\n            else if (typeof index == 'number') {\n                if (index >= 0 && index < transactions.length)\n                    callback(null, transactions[index]);\n                else\n                    callback('Invalid transaction index provided');\n            } else\n                callback(null, transactions);\n        }).catch(err => callback(err));\n    }\n\n    getTransaction(transactionID, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getTransaction, transactionID);\n\n        this.tronWeb.fullNode.request('wallet/gettransactionbyid', {\n            value: transactionID\n        }, 'post').then(transaction => {\n            if (!Object.keys(transaction).length)\n                return callback('Transaction not found');\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getConfirmedTransaction(transactionID, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getConfirmedTransaction, transactionID);\n\n        this.tronWeb.solidityNode.request('walletsolidity/gettransactionbyid', {\n            value: transactionID\n        }, 'post').then(transaction => {\n            if (!Object.keys(transaction).length)\n                return callback('Transaction not found');\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getUnconfirmedTransactionInfo(transactionID, callback = false) {\n        return this._getTransactionInfoById(transactionID, {confirmed: false}, callback)\n    }\n\n    getTransactionInfo(transactionID, callback = false) {\n        return this._getTransactionInfoById(transactionID, {confirmed: true}, callback)\n    }\n\n    _getTransactionInfoById(transactionID, options, callback = false) {\n        if (!callback)\n            return this.injectPromise(this._getTransactionInfoById, transactionID, options);\n\n        this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(`wallet${options.confirmed ? 'solidity' : ''}/gettransactioninfobyid`, {\n            value: transactionID\n        }, 'post').then(transaction => {\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getTransactionsToAddress(address = this.tronWeb.defaultAddress.hex, limit = 30, offset = 0, callback = false) {\n        if (utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;\n        }\n\n        if (utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getTransactionsToAddress, address, limit, offset);\n\n        address = this.tronWeb.address.toHex(address);\n\n        return this.getTransactionsRelated(address, 'to', limit, offset, callback);\n    }\n\n    getTransactionsFromAddress(address = this.tronWeb.defaultAddress.hex, limit = 30, offset = 0, callback = false) {\n        if (utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;\n        }\n\n        if (utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getTransactionsFromAddress, address, limit, offset);\n\n        address = this.tronWeb.address.toHex(address);\n\n        return this.getTransactionsRelated(address, 'from', limit, offset, callback);\n    }\n\n    async getTransactionsRelated(address = this.tronWeb.defaultAddress.hex, direction = 'all', limit = 30, offset = 0, callback = false) {\n        if (utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;\n        }\n\n        if (utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;\n        }\n\n        if (utils.isFunction(direction)) {\n            callback = direction;\n            direction = 'all';\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getTransactionsRelated, address, direction, limit, offset);\n\n        if (!['to', 'from', 'all'].includes(direction))\n            return callback('Invalid direction provided: Expected \"to\", \"from\" or \"all\"');\n\n        if (direction == 'all') {\n            try {\n                const [from, to] = await Promise.all([\n                    this.getTransactionsRelated(address, 'from', limit, offset),\n                    this.getTransactionsRelated(address, 'to', limit, offset)\n                ])\n\n                return callback(null, [\n                    ...from.map(tx => (tx.direction = 'from', tx)),\n                    ...to.map(tx => (tx.direction = 'to', tx))\n                ].sort((a, b) => {\n                    return b.raw_data.timestamp - a.raw_data.timestamp\n                }));\n            } catch (ex) {\n                return callback(ex);\n            }\n        }\n\n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        if (!utils.isInteger(limit) || limit < 0 || (offset && limit < 1))\n            return callback('Invalid limit provided');\n\n        if (!utils.isInteger(offset) || offset < 0)\n            return callback('Invalid offset provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.solidityNode.request(`walletextension/gettransactions${direction}this`, {\n            account: {\n                address\n            },\n            offset,\n            limit\n        }, 'post').then(({transaction}) => {\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getAccount(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getAccount, address);\n\n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.solidityNode.request('walletsolidity/getaccount', {\n            address\n        }, 'post').then(account => {\n            callback(null, account);\n        }).catch(err => callback(err));\n    }\n\n    getAccountById(id = false, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getAccountById, id);\n\n        this.getAccountInfoById(id, {confirmed: true}, callback);\n    }\n\n    getAccountInfoById(id, options, callback) {\n        if (this.validator.notValid([\n            {\n                name: 'accountId',\n                type: 'hex',\n                value: id\n            },\n            {\n                name: 'accountId',\n                type: 'string',\n                lte: 32,\n                gte: 8,\n                value: id\n            }\n        ], callback))\n            return;\n\n        if (id.startsWith('0x')) {\n            id = id.slice(2);\n        }\n\n        this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(`wallet${options.confirmed ? 'solidity' : ''}/getaccountbyid`, {\n            account_id: id\n        }, 'post').then(account => {\n            callback(null, account);\n        }).catch(err => callback(err));\n    }\n\n    getBalance(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getBalance, address);\n\n        this.getAccount(address).then(({balance = 0}) => {\n            callback(null, balance);\n        }).catch(err => callback(err));\n    }\n\n    getUnconfirmedAccount(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getUnconfirmedAccount, address);\n\n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.fullNode.request('wallet/getaccount', {\n            address\n        }, 'post').then(account => {\n            callback(null, account);\n        }).catch(err => callback(err));\n    }\n\n    getUnconfirmedAccountById(id, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getUnconfirmedAccountById, id);\n\n        this.getAccountInfoById(id, {confirmed: false}, callback);\n    }\n\n    getUnconfirmedBalance(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getUnconfirmedBalance, address);\n\n        this.getUnconfirmedAccount(address).then(({balance = 0}) => {\n            callback(null, balance);\n        }).catch(err => callback(err));\n    }\n\n    getBandwidth(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getBandwidth, address);\n\n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.fullNode.request('wallet/getaccountnet', {\n            address\n        }, 'post').then(({freeNetUsed = 0, freeNetLimit = 0, NetUsed = 0, NetLimit = 0}) => {\n            callback(null, (freeNetLimit - freeNetUsed) + (NetLimit - NetUsed));\n        }).catch(err => callback(err));\n    }\n\n    getTokensIssuedByAddress(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getTokensIssuedByAddress, address);\n\n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.fullNode.request('wallet/getassetissuebyaccount', {\n            address\n        }, 'post').then(({assetIssue = false}) => {\n            if (!assetIssue)\n                return callback(null, {});\n\n            const tokens = assetIssue.map(token => {\n                return this._parseToken(token);\n            }).reduce((tokens, token) => {\n                return tokens[token.name] = token, tokens;\n            }, {});\n\n            callback(null, tokens);\n        }).catch(err => callback(err));\n    }\n\n    getTokenFromID(tokenID = false, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getTokenFromID, tokenID);\n\n        if (utils.isInteger(tokenID))\n            tokenID = tokenID.toString()\n\n        if (!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        this.tronWeb.fullNode.request('wallet/getassetissuebyname', {\n            value: this.tronWeb.fromUtf8(tokenID)\n        }, 'post').then(token => {\n            if (!token.name)\n                return callback('Token does not exist');\n\n            callback(null, this._parseToken(token));\n        }).catch(err => callback(err));\n    }\n\n    listNodes(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.listNodes);\n\n        this.tronWeb.fullNode.request('wallet/listnodes').then(({nodes = []}) => {\n            callback(null, nodes.map(({address: {host, port}}) => (\n                `${this.tronWeb.toUtf8(host)}:${port}`\n            )));\n        }).catch(err => callback(err));\n    }\n\n    getBlockRange(start = 0, end = 30, callback = false) {\n        if (utils.isFunction(end)) {\n            callback = end;\n            end = 30;\n        }\n\n        if (utils.isFunction(start)) {\n            callback = start;\n            start = 0;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getBlockRange, start, end);\n\n        if (!utils.isInteger(start) || start < 0)\n            return callback('Invalid start of range provided');\n\n        if (!utils.isInteger(end) || end <= start)\n            return callback('Invalid end of range provided');\n\n        this.tronWeb.fullNode.request('wallet/getblockbylimitnext', {\n            startNum: parseInt(start),\n            endNum: parseInt(end) + 1\n        }, 'post').then(({block = []}) => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    listSuperRepresentatives(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.listSuperRepresentatives);\n\n        this.tronWeb.fullNode.request('wallet/listwitnesses').then(({witnesses = []}) => {\n            callback(null, witnesses);\n        }).catch(err => callback(err));\n    }\n\n    listTokens(limit = 0, offset = 0, callback = false) {\n        if (utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;\n        }\n\n        if (utils.isFunction(limit)) {\n            callback = limit;\n            limit = 0;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.listTokens, limit, offset);\n\n        if (!utils.isInteger(limit) || limit < 0 || (offset && limit < 1))\n            return callback('Invalid limit provided');\n\n        if (!utils.isInteger(offset) || offset < 0)\n            return callback('Invalid offset provided');\n\n        if (!limit) {\n            return this.tronWeb.fullNode.request('wallet/getassetissuelist').then(({assetIssue = []}) => {\n                callback(null, assetIssue.map(token => this._parseToken(token)));\n            }).catch(err => callback(err));\n        }\n\n        this.tronWeb.fullNode.request('wallet/getpaginatedassetissuelist', {\n            offset: parseInt(offset),\n            limit: parseInt(limit)\n        }, 'post').then(({assetIssue = []}) => {\n            callback(null, assetIssue.map(token => this._parseToken(token)));\n        }).catch(err => callback(err));\n    }\n\n    timeUntilNextVoteCycle(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.timeUntilNextVoteCycle);\n\n        this.tronWeb.fullNode.request('wallet/getnextmaintenancetime').then(({num = -1}) => {\n            if (num == -1)\n                return callback('Failed to get time until next vote cycle');\n\n            callback(null, Math.floor(num / 1000));\n        }).catch(err => callback(err));\n    }\n\n    getContract(contractAddress, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getContract, contractAddress);\n\n        if (!this.tronWeb.isAddress(contractAddress))\n            return callback('Invalid contract address provided');\n\n        if (this.cache.contracts[contractAddress]) {\n            callback(null, this.cache.contracts[contractAddress]);\n            return;\n        }\n\n        contractAddress = this.tronWeb.address.toHex(contractAddress);\n\n        this.tronWeb.fullNode.request('wallet/getcontract', {\n            value: contractAddress\n        }).then(contract => {\n            if (contract.Error)\n                return callback('Contract does not exist');\n            this.cache.contracts[contractAddress] = contract;\n            callback(null, contract);\n        }).catch(err => callback(err));\n    }\n\n    async verifyMessage(message = false, signature = false, address = this.tronWeb.defaultAddress.base58, useTronHeader = true, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.base58;\n            useTronHeader = true;\n        }\n\n        if (utils.isFunction(useTronHeader)) {\n            callback = useTronHeader;\n            useTronHeader = true;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.verifyMessage, message, signature, address, useTronHeader);\n\n        if (!utils.isHex(message))\n            return callback('Expected hex message input');\n\n        if (Trx.verifySignature(message, address, signature, useTronHeader))\n            return callback(null, true);\n\n        callback('Signature does not match');\n    }\n\n    static verifySignature(message, address, signature, useTronHeader = true) {\n        message = message.replace(/^0x/, '');\n        signature = signature.replace(/^0x/, '');\n        const messageBytes = [\n            ...toUtf8Bytes(useTronHeader ? TRX_MESSAGE_HEADER : ETH_MESSAGE_HEADER),\n            ...utils.code.hexStr2byteArray(message)\n        ];\n\n        const messageDigest = keccak256(new Uint8Array(messageBytes));\n        const recovered = recoverAddress(messageDigest, {\n            yParity: signature.substring(128, 130) == '1c' ? 1 : 0,\n            r: '0x' + signature.substring(0, 64),\n            s: '0x' + signature.substring(64, 128)\n        });\n\n        const tronAddress = ADDRESS_PREFIX + recovered.substr(2);\n        const base58Address = TronWeb.address.fromHex(tronAddress);\n\n        return base58Address == TronWeb.address.fromHex(address);\n    }\n\n    verifyMessageV2(message = false, signature = false, options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback)\n            return this.injectPromise(this.verifyMessageV2, message, signature, options);\n\n        try {\n            const base58Address = Trx.verifyMessageV2(message, signature);\n            callback(null, base58Address);\n        } catch(ex) {\n            callback(ex);\n        }\n    }\n\n    static verifyMessageV2(message, signature) {\n        return utils.message.verifyMessage(message, signature);\n    }\n    \n    verifyTypedData(domain, types, value, signature, address = this.tronWeb.defaultAddress.base58, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.base58;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.verifyTypedData, domain, types, value, signature, address);\n\n        if (Trx.verifyTypedData(domain, types, value, signature, address))\n            return callback(null, true);\n\n        callback('Signature does not match');\n    }\n\n    static verifyTypedData(domain, types, value, signature, address) {\n        signature = signature.replace(/^0x/, '');\n\n        const messageDigest = utils._TypedDataEncoder.hash(domain, types, value);\n        const recovered = recoverAddress(messageDigest, {\n            yParity: signature.substring(128, 130) == '1c' ? 1 : 0,\n            r: '0x' + signature.substring(0, 64),\n            s: '0x' + signature.substring(64, 128),\n        });\n\n        const tronAddress = ADDRESS_PREFIX + recovered.substr(2);\n        const base58Address = TronWeb.address.fromHex(tronAddress);\n\n        return base58Address == TronWeb.address.fromHex(address);\n    }\n\n    async sign(transaction = false, privateKey = this.tronWeb.defaultPrivateKey, useTronHeader = true, multisig = false, callback = false) {\n\n        if (utils.isFunction(multisig)) {\n            callback = multisig;\n            multisig = false;\n        }\n\n        if (utils.isFunction(useTronHeader)) {\n            callback = useTronHeader;\n            useTronHeader = true;\n            multisig = false;\n        }\n\n        if (utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n            useTronHeader = true;\n            multisig = false;\n        }\n\n\n        if (!callback)\n            return this.injectPromise(this.sign, transaction, privateKey, useTronHeader, multisig);\n\n        // Message signing\n        if (utils.isString(transaction)) {\n\n            if (!utils.isHex(transaction))\n                return callback('Expected hex message input');\n\n            try {\n                const signatureHex = Trx.signString(transaction, privateKey, useTronHeader)\n                return callback(null, signatureHex);\n            } catch (ex) {\n                callback(ex);\n            }\n        }\n\n        if (!utils.isObject(transaction))\n            return callback('Invalid transaction provided');\n\n        if (!multisig && transaction.signature)\n            return callback('Transaction is already signed');\n\n        try {\n            if (!multisig) {\n                const address = this.tronWeb.address.toHex(\n                    this.tronWeb.address.fromPrivateKey(privateKey)\n                ).toLowerCase();\n\n                if (address !== this.tronWeb.address.toHex(transaction.raw_data.contract[0].parameter.value.owner_address))\n                    return callback('Private key does not match address in transaction');\n\n                if (!txCheck(transaction)) {\n                    return callback('Invalid transaction');\n                }\n            }\n            return callback(null,\n                utils.crypto.signTransaction(privateKey, transaction)\n            );\n        } catch (ex) {\n            callback(ex);\n        }\n    }\n\n    static signString(message, privateKey, useTronHeader = true) {\n        message = message.replace(/^0x/, '');\n        const value = `0x${privateKey.replace(/^0x/, '')}`;\n        const signingKey = new SigningKey(value);\n        const messageBytes = [\n            ...toUtf8Bytes(useTronHeader ? TRX_MESSAGE_HEADER : ETH_MESSAGE_HEADER),\n            ...utils.code.hexStr2byteArray(message)\n        ];\n        const messageDigest = keccak256(new Uint8Array(messageBytes));\n        const signature = signingKey.sign(messageDigest);\n        const signatureHex = [\n            '0x',\n            signature.r.substring(2),\n            signature.s.substring(2),\n            Number(signature.v).toString(16)\n        ].join('');\n        return signatureHex\n    }\n\n    /**\n     * sign message v2 for verified header length\n     * \n     * @param {message to be signed, should be Bytes or string} message \n     * @param {privateKey for signature} privateKey \n     * @param {reserved} options\n     * @param {callback function} callback\n     */\n    signMessageV2(message, privateKey = this.tronWeb.defaultPrivateKey, options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        \n        if (utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.signMessageV2, message, privateKey);\n\n        try {\n            const signatureHex = Trx.signMessageV2(message, privateKey);\n            return callback(null, signatureHex);\n        } catch (ex) {\n            callback(ex);\n        }\n    }\n\n    static signMessageV2(message, privateKey) {\n        return utils.message.signMessage(message, privateKey);\n    }\n\n    _signTypedData(domain, types, value, privateKey = this.tronWeb.defaultPrivateKey, callback = false) {\n        if (utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if (!callback)\n            return this.injectPromise(this._signTypedData, domain, types, value, privateKey);\n\n        try {\n            const signatureHex = Trx._signTypedData(domain, types, value, privateKey);\n            return callback(null, signatureHex);\n        } catch (ex) {\n            callback(ex);\n        }\n    }\n\n    static _signTypedData(domain, types, value, privateKey) {\n        return utils.crypto._signTypedData(domain, types, value, privateKey);\n    }\n\n    async multiSign(transaction = false, privateKey = this.tronWeb.defaultPrivateKey, permissionId = false, callback = false) {\n\n        if (utils.isFunction(permissionId)) {\n            callback = permissionId;\n            permissionId = 0;\n        }\n\n        if (utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n            permissionId = 0;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.multiSign, transaction, privateKey, permissionId);\n\n        if (!utils.isObject(transaction) || !transaction.raw_data || !transaction.raw_data.contract)\n            return callback('Invalid transaction provided');\n\n        // If owner permission or permission id exists in transaction, do sign directly\n        // If no permission id inside transaction or user passes permission id, use old way to reset permission id\n        if (!transaction.raw_data.contract[0].Permission_id && permissionId > 0) {\n            // set permission id\n            transaction.raw_data.contract[0].Permission_id = permissionId;\n\n            // check if private key insides permission list\n            const address = this.tronWeb.address.toHex(this.tronWeb.address.fromPrivateKey(privateKey)).toLowerCase();\n            const signWeight = await this.getSignWeight(transaction, permissionId);\n\n            if (signWeight.result.code === 'PERMISSION_ERROR') {\n                return callback(signWeight.result.message);\n            }\n\n            let foundKey = false;\n            signWeight.permission.keys.map(key => {\n                if (key.address === address)\n                    foundKey = true;\n            });\n\n            if (!foundKey)\n                return callback(privateKey + ' has no permission to sign');\n\n            if (signWeight.approved_list && signWeight.approved_list.indexOf(address) != -1) {\n                return callback(privateKey + ' already sign transaction');\n            }\n\n            // reset transaction\n            if (signWeight.transaction && signWeight.transaction.transaction) {\n                transaction = signWeight.transaction.transaction;\n                if (permissionId > 0) {\n                    transaction.raw_data.contract[0].Permission_id = permissionId;\n                }\n            } else {\n                return callback('Invalid transaction provided');\n            }\n        }\n\n        // sign\n        try {\n            if (!txCheck(transaction)) {\n                return callback('Invalid transaction');\n            }\n            return callback(null, utils.crypto.signTransaction(privateKey, transaction));\n        } catch (ex) {\n            callback(ex);\n        }\n    }\n\n    async getApprovedList(transaction, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getApprovedList, transaction);\n\n        if (!utils.isObject(transaction))\n            return callback('Invalid transaction provided');\n\n\n        this.tronWeb.fullNode.request(\n            'wallet/getapprovedlist',\n            transaction,\n            'post'\n        ).then(result => {\n            callback(null, result);\n        }).catch(err => callback(err));\n    }\n\n    async getSignWeight(transaction, permissionId, callback = false) {\n        if (utils.isFunction(permissionId)) {\n            callback = permissionId;\n            permissionId = undefined;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getSignWeight, transaction, permissionId);\n\n        if (!utils.isObject(transaction) || !transaction.raw_data || !transaction.raw_data.contract)\n            return callback('Invalid transaction provided');\n\n        if (utils.isInteger(permissionId)) {\n            transaction.raw_data.contract[0].Permission_id = parseInt(permissionId);\n        } else if (typeof transaction.raw_data.contract[0].Permission_id !== 'number') {\n            transaction.raw_data.contract[0].Permission_id = 0;\n        }\n\n        if (!utils.isObject(transaction))\n            return callback('Invalid transaction provided');\n\n\n        this.tronWeb.fullNode.request(\n            'wallet/getsignweight',\n            transaction,\n            'post'\n        ).then(result => {\n            callback(null, result);\n        }).catch(err => callback(err));\n    }\n\n    sendRawTransaction(signedTransaction = false, options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback)\n            return this.injectPromise(this.sendRawTransaction, signedTransaction, options);\n\n        if (!utils.isObject(signedTransaction))\n            return callback('Invalid transaction provided');\n\n        if (!utils.isObject(options))\n            return callback('Invalid options provided');\n\n        if (!signedTransaction.signature || !utils.isArray(signedTransaction.signature))\n            return callback('Transaction is not signed');\n\n        this.tronWeb.fullNode.request(\n            'wallet/broadcasttransaction',\n            signedTransaction,\n            'post'\n        ).then(result => {\n            if (result.result)\n                result.transaction = signedTransaction;\n            callback(null, result);\n        }).catch(err => callback(err));\n    }\n\n    sendHexTransaction(signedHexTransaction = false, options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback)\n            return this.injectPromise(this.sendHexTransaction, signedHexTransaction, options);\n\n        if (!utils.isHex(signedHexTransaction))\n            return callback('Invalid hex transaction provided');\n\n        if (!utils.isObject(options))\n            return callback('Invalid options provided');\n\n        const params = {\n            transaction: signedHexTransaction\n        }\n\n        this.tronWeb.fullNode.request(\n            'wallet/broadcasthex',\n             params,\n            'post'\n        ).then(result => {\n            if (result.result) {\n                result.transaction = JSON.parse(result.transaction)\n                result.hexTransaction = signedHexTransaction;\n            }\n            callback(null, result);\n        }).catch(err => callback(err));\n    }\n\n    async sendTransaction(to = false, amount = false, options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (typeof options === 'string')\n            options = {privateKey: options};\n\n        if (!callback)\n            return this.injectPromise(this.sendTransaction, to, amount, options);\n\n        if (!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient provided');\n\n        if (!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey,\n            address: this.tronWeb.defaultAddress.hex,\n            ...options\n        };\n\n        if (!options.privateKey && !options.address)\n            return callback('Function requires either a private key or address to be set');\n\n        try {\n            const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n            const transaction = await this.tronWeb.transactionBuilder.sendTrx(to, amount, address);\n            const signedTransaction = await this.sign(transaction, options.privateKey || undefined);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async sendToken(to = false, amount = false, tokenID = false, options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (typeof options === 'string')\n            options = {privateKey: options};\n\n        if (!callback)\n            return this.injectPromise(this.sendToken, to, amount, tokenID, options);\n\n        if (!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient provided');\n\n        if (!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if (utils.isInteger(tokenID))\n            tokenID = tokenID.toString()\n\n        if (!utils.isString(tokenID))\n            return callback('Invalid token ID provided');\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey,\n            address: this.tronWeb.defaultAddress.hex,\n            ...options\n        };\n\n        if (!options.privateKey && !options.address)\n            return callback('Function requires either a private key or address to be set');\n\n        try {\n            const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n            const transaction = await this.tronWeb.transactionBuilder.sendToken(to, amount, tokenID, address);\n            const signedTransaction = await this.sign(transaction, options.privateKey || undefined);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    /**\n     * Freezes an amount of TRX.\n     * Will give bandwidth OR Energy and TRON Power(voting rights)\n     * to the owner of the frozen tokens.\n     *\n     * @param amount - is the number of frozen trx\n     * @param duration - is the duration in days to be frozen\n     * @param resource - is the type, must be either \"ENERGY\" or \"BANDWIDTH\"\n     * @param options\n     * @param callback\n     */\n    async freezeBalance(amount = 0, duration = 3, resource = \"BANDWIDTH\", options = {}, receiverAddress = undefined, callback = false) {\n        if (utils.isFunction(receiverAddress)) {\n            callback = receiverAddress;\n            receiverAddress = undefined;\n        }\n        if (utils.isFunction(duration)) {\n            callback = duration;\n            duration = 3;\n        }\n\n        if (utils.isFunction(resource)) {\n            callback = resource;\n            resource = \"BANDWIDTH\";\n        }\n\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (typeof options === 'string')\n            options = {privateKey: options};\n\n        if (!callback)\n            return this.injectPromise(this.freezeBalance, amount, duration, resource, options, receiverAddress);\n\n        if (!['BANDWIDTH', 'ENERGY'].includes(resource))\n            return callback('Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"');\n\n        if (!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if (!utils.isInteger(duration) || duration < 3)\n            return callback('Invalid duration provided, minimum of 3 days');\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey,\n            address: this.tronWeb.defaultAddress.hex,\n            ...options\n        };\n\n        if (!options.privateKey && !options.address)\n            return callback('Function requires either a private key or address to be set');\n\n        try {\n            const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n            const freezeBalance = await this.tronWeb.transactionBuilder.freezeBalance(amount, duration, resource, address, receiverAddress);\n            const signedTransaction = await this.sign(freezeBalance, options.privateKey || undefined);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    /**\n     * Unfreeze TRX that has passed the minimum freeze duration.\n     * Unfreezing will remove bandwidth and TRON Power.\n     *\n     * @param resource - is the type, must be either \"ENERGY\" or \"BANDWIDTH\"\n     * @param options\n     * @param callback\n     */\n    async unfreezeBalance(resource = \"BANDWIDTH\", options = {}, receiverAddress = undefined, callback = false) {\n        if (utils.isFunction(receiverAddress)) {\n            callback = receiverAddress;\n            receiverAddress = undefined;\n        }\n\n        if (utils.isFunction(resource)) {\n            callback = resource;\n            resource = 'BANDWIDTH';\n        }\n\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (typeof options === 'string')\n            options = {privateKey: options};\n\n        if (!callback)\n            return this.injectPromise(this.unfreezeBalance, resource, options, receiverAddress);\n\n        if (!['BANDWIDTH', 'ENERGY'].includes(resource))\n            return callback('Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"');\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey,\n            address: this.tronWeb.defaultAddress.hex,\n            ...options\n        };\n\n        if (!options.privateKey && !options.address)\n            return callback('Function requires either a private key or address to be set');\n\n        try {\n            const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n            const unfreezeBalance = await this.tronWeb.transactionBuilder.unfreezeBalance(resource, address, receiverAddress);\n            const signedTransaction = await this.sign(unfreezeBalance, options.privateKey || undefined);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    /**\n     * Modify account name\n     * Note: Username is allowed to edit only once.\n     *\n     * @param privateKey - Account private Key\n     * @param accountName - name of the account\n     * @param callback\n     *\n     * @return modified Transaction Object\n     */\n    async updateAccount(accountName = false, options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (typeof options === 'string')\n            options = {privateKey: options};\n\n        if (!callback) {\n            return this.injectPromise(this.updateAccount, accountName, options);\n        }\n\n        if (!utils.isString(accountName) || !accountName.length) {\n            return callback('Name must be a string');\n        }\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey,\n            address: this.tronWeb.defaultAddress.hex,\n            ...options\n        };\n\n        if (!options.privateKey && !options.address)\n            return callback('Function requires either a private key or address to be set');\n\n        try {\n            const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n            const updateAccount = await this.tronWeb.transactionBuilder.updateAccount(accountName, address);\n            const signedTransaction = await this.sign(updateAccount, options.privateKey || undefined);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    signMessage(...args) {\n        return this.sign(...args);\n    }\n\n    sendAsset(...args) {\n        return this.sendToken(...args);\n    }\n\n    send(...args) {\n        return this.sendTransaction(...args);\n    }\n\n    sendTrx(...args) {\n        return this.sendTransaction(...args);\n    }\n\n    broadcast(...args) {\n        return this.sendRawTransaction(...args);\n    }\n\n    broadcastHex(...args) {\n        return this.sendHexTransaction(...args);\n    }\n\n    signTransaction(...args) {\n        return this.sign(...args);\n    }\n\n    /**\n     * Gets a network modification proposal by ID.\n     */\n    getProposal(proposalID = false, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getProposal, proposalID);\n\n        if (!utils.isInteger(proposalID) || proposalID < 0)\n            return callback('Invalid proposalID provided');\n\n        this.tronWeb.fullNode.request('wallet/getproposalbyid', {\n            id: parseInt(proposalID),\n        }, 'post').then(proposal => {\n            callback(null, proposal);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Lists all network modification proposals.\n     */\n    listProposals(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.listProposals);\n\n        this.tronWeb.fullNode.request('wallet/listproposals', {}, 'post').then(({proposals = []}) => {\n            callback(null, proposals);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Lists all parameters available for network modification proposals.\n     */\n    getChainParameters(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getChainParameters);\n\n        this.tronWeb.fullNode.request('wallet/getchainparameters', {}, 'post').then(({chainParameter = []}) => {\n            callback(null, chainParameter);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Get the account resources\n     */\n    getAccountResources(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getAccountResources, address);\n\n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        this.tronWeb.fullNode.request('wallet/getaccountresource', {\n            address: this.tronWeb.address.toHex(address),\n        }, 'post').then(resources => {\n            callback(null, resources);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Query the amount of resources of a specific resourceType delegated by fromAddress to toAddress\n     */\n    getDelegatedResourceV2(fromAddress = this.tronWeb.defaultAddress.hex, toAddress = this.tronWeb.defaultAddress.hex, options = { confirmed: true }, callback = false) {\n        if(utils.isFunction(options)) {\n            callback = options;\n            options = { confirmed: true };\n        }\n\n        if(utils.isFunction(toAddress)) {\n            callback = toAddress;\n            toAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(utils.isFunction(fromAddress)) {\n            callback = fromAddress;\n            fromAddress = this.tronWeb.defaultAddress.hex;\n            toAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getDelegatedResourceV2, fromAddress, toAddress, options);\n\n        if (!this.tronWeb.isAddress(fromAddress))\n            return callback('Invalid address provided');\n\n        if (!this.tronWeb.isAddress(toAddress))\n            return callback('Invalid address provided');\n\n        this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(`wallet${options.confirmed ? 'solidity' : ''}/getdelegatedresourcev2`, {\n            fromAddress: toHex(fromAddress),\n            toAddress: toHex(toAddress)\n        }, 'post').then(resources => {\n            callback(null, resources);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Query the resource delegation index by an account\n     */\n    getDelegatedResourceAccountIndexV2(address = this.tronWeb.defaultAddress.hex, options = { confirmed: true }, callback = false) {\n        if(utils.isFunction(options)) {\n            callback = options;\n            options = { confirmed: true };\n        }\n        \n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getDelegatedResourceAccountIndexV2, address, options);\n\n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(`wallet${options.confirmed ? 'solidity' : ''}/getdelegatedresourceaccountindexv2`, {\n            value: toHex(address)\n        }, 'post').then(resources => {\n            callback(null, resources);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Query the amount of delegatable resources of the specified resource Type for target address, unit is sun.\n     */\n    getCanDelegatedMaxSize(address = this.tronWeb.defaultAddress.hex, resource = 'BANDWIDTH', options = { confirmed: true }, callback = false) {\n        if(utils.isFunction(options)) {\n            callback = options;\n            options = { confirmed: true };\n        }\n        \n        if(utils.isFunction(resource)) {\n            callback = resource;\n            resource = 'BANDWIDTH';\n        }\n\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n        \n        if (!callback)\n            return this.injectPromise(this.getCanDelegatedMaxSize, address, resource, options);\n\n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n        \n        if (this.validator.notValid([\n            {\n                name: 'resource',\n                type: 'resource',\n                value: resource,\n                msg: 'Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"'\n            }\n        ], callback))\n            return;\n\n        this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(`wallet${options.confirmed ? 'solidity' : ''}/getcandelegatedmaxsize`, {\n            owner_address: toHex(address),\n            type: resource === \"ENERGY\" ? 1 : 0\n        }, 'post').then(resources => {\n            callback(null, resources);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Remaining times of available unstaking API\n     */\n    getAvailableUnfreezeCount(address = this.tronWeb.defaultAddress.hex, options = { confirmed: true }, callback = false) {\n        if(utils.isFunction(options)) {\n            callback = options;\n            options = { confirmed: true };\n        }\n\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getAvailableUnfreezeCount, address, options);\n        \n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n        \n        this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(`wallet${options.confirmed ? 'solidity' : ''}/getavailableunfreezecount`, {\n            owner_address: toHex(address),\n        }, 'post').then(data => {\n            callback(null, data);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Query the withdrawable balance at the specified timestamp\n     */\n    getCanWithdrawUnfreezeAmount(address = this.tronWeb.defaultAddress.hex, timestamp = Date.now(), options = { confirmed: true }, callback = false) {\n        if(utils.isFunction(options)) {\n            callback = options;\n            options = { confirmed: true };\n        }\n\n        if(utils.isFunction(timestamp)) {\n            callback = timestamp;\n            timestamp = Date.now();\n        }\n\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getCanWithdrawUnfreezeAmount, address, timestamp, options);\n\n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        if (!utils.isInteger(timestamp) || timestamp < 0)\n            return callback('Invalid timestamp provided');\n\n        this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(`wallet${options.confirmed ? 'solidity' : ''}/getcanwithdrawunfreezeamount`, {\n            owner_address: toHex(address),\n            timestamp: timestamp\n        }, 'post').then(data => {\n            callback(null, data);\n        }).catch(err => callback(err));\n\n    }\n\n    /**\n     * Get the exchange ID.\n     */\n    getExchangeByID(exchangeID = false, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getExchangeByID, exchangeID);\n\n        if (!utils.isInteger(exchangeID) || exchangeID < 0)\n            return callback('Invalid exchangeID provided');\n\n        this.tronWeb.fullNode.request('wallet/getexchangebyid', {\n            id: exchangeID,\n        }, 'post').then(exchange => {\n            callback(null, exchange);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Lists the exchanges\n     */\n    listExchanges(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.listExchanges);\n\n        this.tronWeb.fullNode.request('wallet/listexchanges', {}, 'post').then(({exchanges = []}) => {\n            callback(null, exchanges);\n        }, 'post').catch(err => callback(err));\n    }\n\n    /**\n     * Lists all network modification proposals.\n     */\n    listExchangesPaginated(limit = 10, offset = 0, callback = false) {\n        if (utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;\n        }\n        if (utils.isFunction(limit)) {\n            callback = limit;\n            limit = 10;\n        }\n        if (!callback)\n            return this.injectPromise(this.listExchangesPaginated, limit, offset);\n\n        this.tronWeb.fullNode.request('wallet/getpaginatedexchangelist', {\n            limit,\n            offset\n        }, 'post').then(({exchanges = []}) => {\n            callback(null, exchanges);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Get info about thre node\n     */\n    getNodeInfo(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getNodeInfo);\n\n        this.tronWeb.fullNode.request('wallet/getnodeinfo', {}, 'post').then(info => {\n            callback(null, info);\n        }, 'post').catch(err => callback(err));\n    }\n\n\n    getTokenListByName(tokenID = false, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getTokenListByName, tokenID);\n\n        if (utils.isInteger(tokenID))\n            tokenID = tokenID.toString()\n\n        if (!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        this.tronWeb.fullNode.request('wallet/getassetissuelistbyname', {\n            value: this.tronWeb.fromUtf8(tokenID)\n        }, 'post').then(token => {\n            if (Array.isArray(token.assetIssue)) {\n                callback(null, token.assetIssue.map(t => this._parseToken(t)));\n            } else if (!token.name)\n                return callback('Token does not exist');\n\n            callback(null, this._parseToken(token));\n        }).catch(err => callback(err));\n    }\n\n    getTokenByID(tokenID = false, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getTokenByID, tokenID);\n\n        if (utils.isInteger(tokenID))\n            tokenID = tokenID.toString()\n\n        if (!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        this.tronWeb.fullNode.request('wallet/getassetissuebyid', {\n            value: tokenID\n        }, 'post').then(token => {\n            if (!token.name)\n                return callback('Token does not exist');\n\n            callback(null, this._parseToken(token));\n        }).catch(err => callback(err));\n    }\n\n    async getReward(address, options = {}, callback = false) {\n        options.confirmed = true;\n        return this._getReward(address, options, callback);\n    }\n\n    async getUnconfirmedReward(address, options = {}, callback = false) {\n        options.confirmed = false;\n        return this._getReward(address, options, callback);\n    }\n\n    async getBrokerage(address, options = {}, callback = false) {\n        options.confirmed = true;\n        return this._getBrokerage(address, options, callback);\n    }\n\n    async getUnconfirmedBrokerage(address, options = {}, callback = false) {\n        options.confirmed = false;\n        return this._getBrokerage(address, options, callback);\n    }\n\n    async _getReward(address = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this._getReward, address, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            }\n        ], callback))\n            return;\n\n        const data = {\n            address: toHex(address)\n        };\n\n        this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(`wallet${options.confirmed ? 'solidity' : ''}/getReward`, data, 'post')\n            .then((result = {}) => {\n\n                if (typeof result.reward === 'undefined')\n                    return callback('Not found.');\n\n                callback(null, result.reward);\n            }).catch(err => callback(err));\n    }\n\n\n    async _getBrokerage(address = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this._getBrokerage, address, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            }\n        ], callback))\n            return;\n\n        const data = {\n            address: toHex(address)\n        };\n\n        this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(`wallet${options.confirmed ? 'solidity' : ''}/getBrokerage`, data, 'post')\n            .then((result = {}) => {\n\n                if (typeof result.brokerage === 'undefined')\n                    return callback('Not found.');\n\n                callback(null, result.brokerage);\n            }).catch(err => callback(err));\n    }\n\n};\n","import utils from 'utils';\nimport {encodeParamsV2ByABI, decodeParamsV2ByABI} from 'utils/abi';\nimport injectpromise from 'injectpromise';\n\nconst getFunctionSelector = abi => {\n    abi.stateMutability = abi.stateMutability ? abi.stateMutability.toLowerCase() : 'nonpayable';\n    abi.type = abi.type ? abi.type.toLowerCase() : '';\n    if(abi.type === 'fallback' || abi.type === 'receive') return '0x';\n    let iface = new utils.ethersUtils.Interface([abi]);\n    if(abi.type === 'event') {\n      return iface.getEvent(abi.name).format(utils.ethersUtils.FormatTypes.sighash);\n    }\n    return iface.getFunction(abi.name).format(utils.ethersUtils.FormatTypes.sighash);\n}\n\nconst decodeOutput = (abi, output) => {\n    return decodeParamsV2ByABI(abi, output)\n};\n\nexport default class Method {\n    constructor(contract, abi) {\n        this.tronWeb = contract.tronWeb;\n        this.contract = contract;\n\n        this.abi = abi;\n        this.name = abi.name || (abi.name = abi.type);\n\n        this.inputs = abi.inputs || [];\n        this.outputs = abi.outputs || [];\n\n        this.functionSelector = getFunctionSelector(abi);\n        this.signature = this.tronWeb.sha3(this.functionSelector, false).slice(0, 8);\n        this.injectPromise = injectpromise(this);\n\n        this.defaultOptions = {\n            feeLimit: this.tronWeb.feeLimit,\n            callValue: 0,\n            userFeePercentage: 100,\n            shouldPollResponse: false, // Only used for sign()\n        };\n    }\n\n    decodeInput(data) {\n        return decodeOutput(this.inputs, '0x' + data);\n    }\n\n    onMethod(...args) {\n      let rawParameter = '';\n      if(this.abi && !/event/i.test(this.abi.type)) {\n          rawParameter = encodeParamsV2ByABI(this.abi, args);\n      }\n      return {\n          call: (options = {}, callback = false) => {\n              if (utils.isFunction(options)) {\n                  callback = options;\n                  options = {};\n              }\n              options = {\n                ...options,\n                rawParameter\n              };\n\n              return this._call([], [], options, callback);\n          },\n          send: (options = {}, privateKey = this.tronWeb.defaultPrivateKey, callback = false) => {\n              if (utils.isFunction(privateKey)) {\n                  callback = privateKey;\n                  privateKey = this.tronWeb.defaultPrivateKey;\n              }\n              if (utils.isFunction(options)) {\n                callback = options;\n                options = {};\n              }\n              options = {\n                ...options,\n                rawParameter\n              };\n\n              return this._send([], [], options, privateKey, callback);\n          },\n          watch: (...methodArgs) => this._watch(...methodArgs)\n      }\n    }\n\n    async _call(types, args, options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback)\n            return this.injectPromise(this._call, types, args, options);\n\n        if (types.length !== args.length)\n            return callback('Invalid argument count provided');\n\n        if (!this.contract.address)\n            return callback('Smart contract is missing address');\n\n        if (!this.contract.deployed)\n            return callback('Calling smart contracts requires you to load the contract first');\n\n        const {stateMutability} = this.abi;\n\n        if (!['pure', 'view'].includes(stateMutability.toLowerCase()))\n            return callback(`Methods with state mutability \"${stateMutability}\" must use send()`);\n\n        options = {\n            ...this.defaultOptions,\n            from: this.tronWeb.defaultAddress.hex,\n            ...options,\n            _isConstant: true\n        };\n\n        const parameters = args.map((value, index) => ({\n            type: types[index],\n            value\n        }));\n\n        this.tronWeb.transactionBuilder.triggerSmartContract(\n            this.contract.address,\n            this.functionSelector,\n            options,\n            parameters,\n            options.from ? this.tronWeb.address.toHex(options.from) : false,\n            (err, transaction) => {\n                if (err)\n                    return callback(err);\n\n                if (!utils.hasProperty(transaction, 'constant_result'))\n                    return callback('Failed to execute');\n\n                try {\n\n                    const len = transaction.constant_result[0].length\n                    if (len === 0 || len % 64 === 8) {\n                        let msg = 'The call has been reverted or has thrown an error.'\n                        if (len !== 0) {\n                            msg += ' Error message: '\n                            let msg2 = ''\n                            let chunk = transaction.constant_result[0].substring(8)\n                            for (let i = 0; i < len - 8; i += 64) {\n                                msg2 += this.tronWeb.toUtf8(chunk.substring(i, i + 64))\n                            }\n                            msg += msg2.replace(/(\\u0000|\\u000b|\\f)+/g, ' ').replace(/ +/g, ' ').replace(/\\s+$/g, '');\n                        }\n                        return callback(msg)\n                    }\n\n                    let output = decodeOutput(this.abi, '0x' + transaction.constant_result[0]);\n\n                    if (output.length === 1 && Object.keys(output).length === 1) {\n                        output = output[0];\n                    }\n\n                    return callback(null, output);\n                } catch (ex) {\n                    return callback(ex);\n                }\n            });\n    }\n\n    async _send(types, args, options = {}, privateKey = this.tronWeb.defaultPrivateKey, callback = false) {\n        if (utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback)\n            return this.injectPromise(this._send, types, args, options, privateKey);\n\n        if (types.length !== args.length)\n            throw new Error('Invalid argument count provided');\n\n        if (!this.contract.address)\n            return callback('Smart contract is missing address');\n\n        if (!this.contract.deployed)\n            return callback('Calling smart contracts requires you to load the contract first');\n\n        const {stateMutability} = this.abi;\n\n        if (['pure', 'view'].includes(stateMutability.toLowerCase()))\n            return callback(`Methods with state mutability \"${stateMutability}\" must use call()`);\n\n        // If a function isn't payable, dont provide a callValue.\n        if (!['payable'].includes(stateMutability.toLowerCase()))\n            options.callValue = 0;\n\n        options = {\n            ...this.defaultOptions,\n            from: this.tronWeb.defaultAddress.hex,\n            ...options,\n        };\n\n        const parameters = args.map((value, index) => ({\n            type: types[index],\n            value\n        }));\n\n        try {\n            const address = privateKey ? this.tronWeb.address.fromPrivateKey(privateKey) : this.tronWeb.defaultAddress.base58;\n            const transaction = await this.tronWeb.transactionBuilder.triggerSmartContract(\n                this.contract.address,\n                this.functionSelector,\n                options,\n                parameters,\n                this.tronWeb.address.toHex(address)\n            );\n\n            if (!transaction.result || !transaction.result.result)\n                return callback('Unknown error: ' + JSON.stringify(transaction, null, 2));\n\n            // If privateKey is false, this won't be signed here. We assume sign functionality will be replaced.\n            const signedTransaction = await this.tronWeb.trx.sign(transaction.transaction, privateKey);\n\n            if (!signedTransaction.signature) {\n                if (!privateKey)\n                    return callback('Transaction was not signed properly');\n\n                return callback('Invalid private key provided');\n            }\n\n            const broadcast = await this.tronWeb.trx.sendRawTransaction(signedTransaction);\n\n            if (broadcast.code) {\n                const err = {\n                    error: broadcast.code,\n                    message: broadcast.code\n                };\n                if (broadcast.message)\n                    err.message = this.tronWeb.toUtf8(broadcast.message);\n                return callback(err)\n            }\n\n            if (!options.shouldPollResponse)\n                return callback(null, signedTransaction.txID);\n\n            const checkResult = async (index = 0) => {\n                if (index === (options.pollTimes || 20)) {\n                    return callback({\n                        error: 'Cannot find result in solidity node',\n                        transaction: signedTransaction\n                    });\n                }\n\n                const output = await this.tronWeb.trx.getTransactionInfo(signedTransaction.txID);\n\n                if (!Object.keys(output).length) {\n                    return setTimeout(() => {\n                        checkResult(index + 1);\n                    }, 3000);\n                }\n\n                if (output.result && output.result === 'FAILED') {\n                    return callback({\n                        error: this.tronWeb.toUtf8(output.resMessage),\n                        transaction: signedTransaction,\n                        output\n                    });\n                }\n\n                if (!utils.hasProperty(output, 'contractResult')) {\n                    return callback({\n                        error: 'Failed to execute: ' + JSON.stringify(output, null, 2),\n                        transaction: signedTransaction,\n                        output\n                    });\n                }\n\n                if (options.rawResponse)\n                    return callback(null, output);\n\n                let decoded = decodeOutput(this.abi, '0x' + output.contractResult[0]);\n\n                if (decoded.length === 1 && Object.keys(decoded).length === 1) {\n                    decoded = decoded[0];\n                }\n\n                if (options.keepTxID) {\n                    return callback(null, [signedTransaction.txID, decoded]);\n                }\n\n                return callback(null, decoded);\n            }\n\n            checkResult();\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async _watch(options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!utils.isFunction(callback))\n            throw new Error('Expected callback to be provided');\n\n        if (!this.contract.address)\n            return callback('Smart contract is missing address');\n\n        if (!this.abi.type || !/event/i.test(this.abi.type))\n            return callback('Invalid method type for event watching');\n\n        if (!this.tronWeb.eventServer)\n            return callback('No event server configured');\n\n        let listener = false;\n        let lastBlock = false;\n        let since = Date.now() - 1000;\n\n        const getEvents = async () => {\n            try {\n\n                const params = {\n                    since,\n                    eventName: this.name,\n                    sort: 'block_timestamp',\n                    blockNumber: 'latest',\n                    filters: options.filters\n                }\n\n                if(options.size) {\n                    params.size = options.size;\n                }\n                \n                if (options.resourceNode) {\n                    if (/full/i.test(options.resourceNode))\n                        params.onlyUnconfirmed = true\n                    else\n                        params.onlyConfirmed = true\n                }\n\n                const events = await this.tronWeb.event.getEventsByContractAddress(this.contract.address, params);\n                const [latestEvent] = events.sort((a, b) => b.block - a.block);\n                const newEvents = events.filter((event, index) => {\n\n                    if (options.resourceNode && event.resourceNode &&\n                        options.resourceNode.toLowerCase() !== event.resourceNode.toLowerCase()) {\n                        return false\n                    }\n\n                    const duplicate = events.slice(0, index).some(priorEvent => (\n                        JSON.stringify(priorEvent) == JSON.stringify(event)\n                    ));\n\n                    if (duplicate)\n                        return false;\n\n                    if (!lastBlock)\n                        return true;\n\n                    return event.block > lastBlock;\n                });\n\n                if (latestEvent)\n                    lastBlock = latestEvent.block;\n\n                return newEvents;\n            } catch (ex) {\n                return Promise.reject(ex);\n            }\n\n        };\n\n        const bindListener = () => {\n            if (listener)\n                clearInterval(listener);\n\n            listener = setInterval(() => {\n                getEvents().then(events => events.forEach(event => {\n                    callback(null, utils.parseEvent(event, this.abi))\n                })).catch(err => callback(err));\n            }, 3000);\n        };\n\n        await getEvents();\n        bindListener();\n\n        return {\n            start: bindListener,\n            stop: () => {\n                if (!listener)\n                    return;\n\n                clearInterval(listener);\n                listener = false;\n            }\n        }\n    }\n}\n","import TronWeb from 'index';\nimport utils from 'utils';\nimport Method from './method';\nimport injectpromise from 'injectpromise';\n\nexport default class Contract {\n    constructor(tronWeb = false, abi = [], address = false) {\n        if (!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n\n        this.tronWeb = tronWeb;\n        this.injectPromise = injectpromise(this);\n\n        this.address = address;\n        this.abi = abi;\n\n        this.eventListener = false;\n        this.bytecode = false;\n        this.deployed = false;\n        this.lastBlock = false;\n\n        this.methods = {};\n        this.methodInstances = {};\n        this.props = [];\n\n        if (this.tronWeb.isAddress(address))\n            this.deployed = true;\n        else this.address = false;\n\n        this.loadAbi(abi);\n    }\n\n    async _getEvents(options = {}) {\n        const events = await this.tronWeb.event.getEventsByContractAddress(this.address, options);\n        const [latestEvent] = events.sort((a, b) => b.block - a.block);\n        const newEvents = events.filter((event, index) => {\n\n            if (options.resourceNode && event.resourceNode &&\n                options.resourceNode.toLowerCase() !== event.resourceNode.toLowerCase()) {\n                return false\n            }\n\n            const duplicate = events.slice(0, index).some(priorEvent => (\n                JSON.stringify(priorEvent) == JSON.stringify(event)\n            ));\n\n            if (duplicate)\n                return false;\n\n            if (!this.lastBlock)\n                return true;\n\n            return event.block > this.lastBlock;\n        });\n\n        if (latestEvent)\n            this.lastBlock = latestEvent.block;\n\n        return newEvents;\n    }\n\n    async _startEventListener(options = {}, callback) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (this.eventListener)\n            clearInterval(this.eventListener);\n\n        if (!this.tronWeb.eventServer)\n            throw new Error('Event server is not configured');\n\n        if (!this.address)\n            throw new Error('Contract is not configured with an address');\n\n        this.eventCallback = callback;\n        await this._getEvents(options);\n\n        this.eventListener = setInterval(() => {\n            this._getEvents(options).then(newEvents => newEvents.forEach(event => {\n                this.eventCallback && this.eventCallback(event)\n            })).catch(err => {\n                console.error('Failed to get event list', err);\n            });\n        }, 3000);\n    }\n\n    _stopEventListener() {\n        if (!this.eventListener)\n            return;\n\n        clearInterval(this.eventListener);\n        this.eventListener = false;\n        this.eventCallback = false;\n    }\n\n    hasProperty(property) {\n        return this.hasOwnProperty(property) || this.__proto__.hasOwnProperty(property);\n    }\n\n    loadAbi(abi) {\n        this.abi = abi;\n        this.methods = {};\n\n        this.props.forEach(prop => delete this[prop]);\n\n        abi.forEach(func => {\n            // Don't build a method for constructor function. That's handled through contract create.\n            // Don't build a method for error function.\n            if (!func.type || /constructor|error/i.test(func.type))\n                return;\n\n            const method = new Method(this, func);\n            const methodCall = method.onMethod.bind(method);\n\n            const {\n                name,\n                functionSelector,\n                signature\n            } = method;\n\n            this.methods[name] = methodCall;\n            this.methods[functionSelector] = methodCall;\n            this.methods[signature] = methodCall;\n\n            this.methodInstances[name] = method;\n            this.methodInstances[functionSelector] = method;\n            this.methodInstances[signature] = method;\n\n            if (!this.hasProperty(name)) {\n                this[name] = methodCall;\n                this.props.push(name);\n            }\n\n            if (!this.hasProperty(functionSelector)) {\n                this[functionSelector] = methodCall;\n                this.props.push(functionSelector);\n            }\n\n            if (!this.hasProperty(signature)) {\n                this[signature] = methodCall;\n                this.props.push(signature);\n            }\n        });\n    }\n\n    decodeInput(data) {\n\n        const methodName = data.substring(0, 8);\n        const inputData = data.substring(8);\n\n        if (!this.methodInstances[methodName])\n            throw new Error('Contract method ' + methodName + \" not found\");\n\n        const methodInstance = this.methodInstances[methodName];\n\n        return {\n            name: methodInstance.name,\n            params: this.methodInstances[methodName].decodeInput(inputData),\n        }\n    }\n\n    async new(options, privateKey = this.tronWeb.defaultPrivateKey, callback = false) {\n        if (utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.new, options, privateKey);\n\n        try {\n            const address = this.tronWeb.address.fromPrivateKey(privateKey);\n            const transaction = await this.tronWeb.transactionBuilder.createSmartContract(options, address);\n            const signedTransaction = await this.tronWeb.trx.sign(transaction, privateKey);\n            const contract = await this.tronWeb.trx.sendRawTransaction(signedTransaction);\n\n            if (contract.code)\n                return callback({\n                    error: contract.code,\n                    message: this.tronWeb.toUtf8(contract.message)\n                })\n\n            await utils.sleep(3000);\n            return this.at(signedTransaction.contract_address, callback);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async at(contractAddress, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.at, contractAddress);\n\n        try {\n            const contract = await this.tronWeb.trx.getContract(contractAddress);\n\n            if (!contract.contract_address)\n                return callback('Unknown error: ' + JSON.stringify(contract, null, 2));\n\n            this.address = contract.contract_address;\n            this.bytecode = contract.bytecode;\n            this.deployed = true;\n\n            this.loadAbi(contract.abi ? contract.abi.entrys ? contract.abi.entrys : [] : []);\n\n            return callback(null, this);\n        } catch (ex) {\n            if (ex.toString().includes('does not exist'))\n                return callback('Contract has not been deployed on the network');\n\n            return callback(ex);\n        }\n    }\n\n    events(options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!utils.isFunction(callback))\n            throw new Error('Callback function expected');\n\n        const self = this;\n\n        return {\n            start(startCallback = false) {\n                if (!startCallback) {\n                    self._startEventListener(options, callback);\n                    return this;\n                }\n\n                self._startEventListener(options, callback).then(() => {\n                    startCallback();\n                }).catch(err => {\n                    startCallback(err)\n                });\n\n                return this;\n            },\n            stop() {\n                self._stopEventListener();\n            }\n        };\n    }\n}\n","import TronWeb from 'index';\nimport utils from 'utils';\nimport semver from 'semver';\n\nexport default class Plugin {\n\n    constructor(tronWeb = false, options = {}) {\n        if (!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n        this.tronWeb = tronWeb;\n        this.pluginNoOverride = ['register'];\n        this.disablePlugins = options.disablePlugins;\n    }\n\n    register(Plugin, options) {\n        let pluginInterface = {\n            requires: '0.0.0',\n            components: {}\n        }\n        let result = {\n            libs: [],\n            plugged: [],\n            skipped: []\n        }\n        if (this.disablePlugins) {\n            result.error = 'This instance of TronWeb has plugins disabled.'\n            return result;\n        }\n        const plugin = new Plugin(this.tronWeb)\n        if (utils.isFunction(plugin.pluginInterface)) {\n            pluginInterface = plugin.pluginInterface(options)\n        }\n        if (semver.satisfies(TronWeb.version, pluginInterface.requires)) {\n            if (pluginInterface.fullClass) {\n                // plug the entire class at the same level of tronWeb.trx\n                let className = plugin.constructor.name\n                let classInstanceName = className.substring(0, 1).toLowerCase() + className.substring(1)\n                if (className !== classInstanceName) {\n                    TronWeb[className] = Plugin\n                    this.tronWeb[classInstanceName] = plugin\n                    result.libs.push(className)\n                }\n            } else {\n                // plug methods into a class, like trx\n                for (let component in pluginInterface.components) {\n                    if (!this.tronWeb.hasOwnProperty(component)) {\n                        continue\n                    }\n                    let methods = pluginInterface.components[component]\n                    let pluginNoOverride = this.tronWeb[component].pluginNoOverride || []\n                    for (let method in methods) {\n                        if (method === 'constructor' || (this.tronWeb[component][method] &&\n                            (pluginNoOverride.includes(method) // blacklisted methods\n                                || /^_/.test(method)) // private methods\n                        )) {\n                            result.skipped.push(method)\n                            continue\n                        }\n                        this.tronWeb[component][method] = methods[method].bind(this.tronWeb[component])\n                        result.plugged.push(method)\n                    }\n                }\n            }\n        } else {\n            throw new Error('The plugin is not compatible with this version of TronWeb')\n        }\n        return result\n    }\n}\n\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"querystring-es3\");","import TronWeb from 'index';\nimport utils from 'utils';\nimport providers from \"./providers\";\nimport querystring from \"querystring-es3\";\nimport injectpromise from 'injectpromise';\n\nexport default class Event {\n\n    constructor(tronWeb = false) {\n        if (!tronWeb || !(tronWeb instanceof TronWeb))\n            throw new Error('Expected instance of TronWeb');\n        this.tronWeb = tronWeb;\n        this.injectPromise = injectpromise(this);\n    }\n\n    setServer(eventServer = false, healthcheck = 'healthcheck') {\n        if (!eventServer)\n            return this.tronWeb.eventServer = false;\n\n        if (utils.isString(eventServer))\n            eventServer = new providers.HttpProvider(eventServer);\n\n        if (!this.tronWeb.isValidProvider(eventServer))\n            throw new Error('Invalid event server provided');\n\n        this.tronWeb.eventServer = eventServer;\n        this.tronWeb.eventServer.isConnected = () => this.tronWeb.eventServer.request(healthcheck).then(() => true).catch(() => false);\n    }\n\n    getEventsByContractAddress(contractAddress = false, options = {}, callback = false) {\n\n        let {\n            sinceTimestamp,\n            since,\n            fromTimestamp,\n            eventName,\n            blockNumber,\n            size,\n            page,\n            onlyConfirmed,\n            onlyUnconfirmed,\n            previousLastEventFingerprint,\n            previousFingerprint,\n            fingerprint,\n            rawResponse,\n            sort,\n            filters\n        } = Object.assign({\n            sinceTimestamp: 0,\n            eventName: false,\n            blockNumber: false,\n            size: 20,\n            page: 1\n        }, options)\n\n        if (!callback)\n            return this.injectPromise(this.getEventsByContractAddress, contractAddress, options);\n\n        fromTimestamp = fromTimestamp || sinceTimestamp || since;\n\n        if (!this.tronWeb.eventServer)\n            return callback('No event server configured');\n\n        const routeParams = [];\n\n        if (!this.tronWeb.isAddress(contractAddress))\n            return callback('Invalid contract address provided');\n\n        if (eventName && !contractAddress)\n            return callback('Usage of event name filtering requires a contract address');\n\n        if (typeof fromTimestamp !== 'undefined' && !utils.isInteger(fromTimestamp))\n            return callback('Invalid fromTimestamp provided');\n\n        if (!utils.isInteger(size))\n            return callback('Invalid size provided');\n\n        if (size > 200) {\n            console.warn('Defaulting to maximum accepted size: 200');\n            size = 200;\n        }\n\n        if (!utils.isInteger(page))\n            return callback('Invalid page provided');\n\n        if (blockNumber && !eventName)\n            return callback('Usage of block number filtering requires an event name');\n\n        if (contractAddress)\n            routeParams.push(this.tronWeb.address.fromHex(contractAddress));\n\n        if (eventName)\n            routeParams.push(eventName);\n\n        if (blockNumber)\n            routeParams.push(blockNumber);\n\n        const qs = {\n            size,\n            page\n        }\n\n        if (typeof filters === 'object' && Object.keys(filters).length > 0) {\n            qs.filters = JSON.stringify(filters);\n        }\n\n        if (fromTimestamp) {\n            qs.fromTimestamp = qs.since = fromTimestamp;\n        }\n\n        if (onlyConfirmed)\n            qs.only_confirmed = onlyConfirmed\n\n        if (onlyUnconfirmed && !onlyConfirmed)\n            qs.only_unconfirmed = onlyUnconfirmed\n\n        if (sort)\n            qs.sort = sort\n\n        fingerprint = fingerprint || previousFingerprint || previousLastEventFingerprint\n        if (fingerprint)\n            qs.fingerprint = fingerprint\n\n        return this.tronWeb.eventServer.request(`event/contract/${routeParams.join('/')}?${querystring.stringify(qs)}`).then((data = false) => {\n            if (!data)\n                return callback('Unknown error occurred');\n\n            if (!utils.isArray(data))\n                return callback(data);\n\n            return callback(null,\n                rawResponse === true ? data : data.map(event => utils.mapEvent(event))\n            );\n        }).catch(err => callback((err.response && err.response.data) || err));\n    }\n\n\n    getEventsByTransactionID(transactionID = false, options = {}, callback = false) {\n\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getEventsByTransactionID, transactionID, options);\n\n        if (!this.tronWeb.eventServer)\n            return callback('No event server configured');\n\n        return this.tronWeb.eventServer.request(`event/transaction/${transactionID}`).then((data = false) => {\n            if (!data)\n                return callback('Unknown error occurred');\n\n            if (!utils.isArray(data))\n                return callback(data);\n\n            return callback(null,\n                options.rawResponse === true ? data : data.map(event => utils.mapEvent(event))\n            );\n        }).catch(err => callback((err.response && err.response.data) || err));\n    }\n\n}\n\n","import injectpromise from 'injectpromise';\nimport Validator from 'paramValidator';\n\nexport default class SideChain {\n    constructor(sideOptions, TronWeb = false, mainchain = false, privateKey = false) {\n        this.mainchain = mainchain;\n        const { fullHost, fullNode, solidityNode, eventServer, mainGatewayAddress, sideGatewayAddress, sideChainId } = sideOptions;\n        this.sidechain = new TronWeb(fullHost || fullNode, fullHost || solidityNode, fullHost || eventServer, privateKey);\n        this.isAddress = this.mainchain.isAddress;\n        this.utils = this.mainchain.utils;\n        this.setMainGatewayAddress(mainGatewayAddress);\n        this.setSideGatewayAddress(sideGatewayAddress);\n        this.setChainId(sideChainId);\n        this.injectPromise = injectpromise(this);\n        this.validator = new Validator(this.sidechain);\n\n        const self = this;\n        this.sidechain.trx.sign = (...args) => {\n            return self.sign(...args);\n        };\n        this.sidechain.trx.multiSign = (...args) => {\n            return self.multiSign(...args);\n        };\n\n        console.warn(\"TronWeb: 'tronWeb.sidechain' is deprecated and may be removed in the future. Please use the 'sunweb' sdk instead. For more information, see: https://github.com/tronprotocol/sun-network/tree/develop/js-sdk\");\n    }\n    setMainGatewayAddress(mainGatewayAddress) {\n        if (!this.isAddress(mainGatewayAddress))\n            throw new Error('Invalid main gateway address provided');\n        this.mainGatewayAddress = mainGatewayAddress;\n    }\n\n    setSideGatewayAddress(sideGatewayAddress) {\n        if (!this.isAddress(sideGatewayAddress))\n            throw new Error('Invalid side gateway address provided');\n        this.sideGatewayAddress = sideGatewayAddress;\n    }\n\n    setChainId(sideChainId) {\n        if (!this.utils.isString(sideChainId) || !sideChainId)\n            throw new Error('Invalid side chainId provided');\n        this.chainId = sideChainId;\n    }\n\n    signTransaction(priKeyBytes, transaction) {\n        if (typeof priKeyBytes === 'string') {\n            priKeyBytes = this.utils.code.hexStr2byteArray(priKeyBytes);\n        }\n        let chainIdByteArr = this.utils.code.hexStr2byteArray(this.chainId);\n\n        let byteArr = this.utils.code.hexStr2byteArray(transaction.txID).concat(chainIdByteArr);\n        let byteArrHash = this.sidechain.utils.ethersUtils.sha256(byteArr);\n\n        const signature = this.utils.crypto.ECKeySign(this.utils.code.hexStr2byteArray(byteArrHash.replace(/^0x/, '')), priKeyBytes);\n\n        if (Array.isArray(transaction.signature)) {\n            if (!transaction.signature.includes(signature))\n                transaction.signature.push(signature);\n        } else\n            transaction.signature = [signature];\n        return transaction;\n    }\n\n    async multiSign(transaction = false, privateKey = this.sidechain.defaultPrivateKey, permissionId = false, callback = false) {\n        if (this.utils.isFunction(permissionId)) {\n            callback = permissionId;\n            permissionId = 0;\n        }\n\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n            permissionId = 0;\n        }\n\n        if (!callback) return this.injectPromise(this.multiSign, transaction, privateKey, permissionId);\n\n        if (!this.utils.isObject(transaction) || !transaction.raw_data || !transaction.raw_data.contract) return callback('Invalid transaction provided');\n\n        if (!transaction.raw_data.contract[0].Permission_id && permissionId > 0) {\n            // set permission id\n            transaction.raw_data.contract[0].Permission_id = permissionId;\n\n            // check if private key insides permission list\n            const address = this.sidechain.address.toHex(this.sidechain.address.fromPrivateKey(privateKey)).toLowerCase();\n            const signWeight = await this.sidechain.trx.getSignWeight(transaction, permissionId);\n\n            if (signWeight.result.code === 'PERMISSION_ERROR') {\n                return callback(signWeight.result.message);\n            }\n\n            let foundKey = false;\n            signWeight.permission.keys.map(key => {\n                if (key.address === address) foundKey = true;\n            });\n\n            if (!foundKey) return callback(privateKey + ' has no permission to sign');\n\n            if (signWeight.approved_list && signWeight.approved_list.indexOf(address) != -1) {\n                return callback(privateKey + ' already sign transaction');\n            }\n\n            // reset transaction\n            if (signWeight.transaction && signWeight.transaction.transaction) {\n                transaction = signWeight.transaction.transaction;\n                transaction.raw_data.contract[0].Permission_id = permissionId;\n            } else {\n                return callback('Invalid transaction provided');\n            }\n        }\n        // sign\n        try {\n            return callback(null, this.signTransaction(privateKey, transaction));\n        } catch (ex) {\n            callback(ex);\n        }\n    }\n\n    async sign(transaction = false, privateKey = this.sidechain.defaultPrivateKey, useTronHeader = true, multisig = false, callback = false) {\n        if (this.utils.isFunction(multisig)) {\n            callback = multisig;\n            multisig = false;\n        }\n\n        if (this.utils.isFunction(useTronHeader)) {\n            callback = useTronHeader;\n            useTronHeader = true;\n            multisig = false;\n        }\n\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.sidechain.defaultPrivateKey;\n            useTronHeader = true;\n            multisig = false;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.sign, transaction, privateKey, useTronHeader, multisig);\n\n        // Message signing\n        if (this.utils.isString(transaction)) {\n\n            if (!this.utils.isHex(transaction))\n                return callback('Expected hex message input');\n\n            try {\n                const signatureHex = this.sidechain.trx.signString(transaction, privateKey, useTronHeader);\n                return callback(null, signatureHex);\n            } catch (ex) {\n                callback(ex);\n            }\n        }\n\n        if (!this.utils.isObject(transaction))\n            return callback('Invalid transaction provided');\n\n        if (!multisig && transaction.signature)\n            return callback('Transaction is already signed');\n\n        try {\n            if (!multisig) {\n                const address = this.sidechain.address.toHex(\n                    this.sidechain.address.fromPrivateKey(privateKey)\n                ).toLowerCase();\n                if (address !== this.sidechain.address.toHex(transaction.raw_data.contract[0].parameter.value.owner_address))\n                    return callback('Private key does not match address in transaction');\n            }\n            return callback(null,\n                this.signTransaction(privateKey, transaction)\n            );\n        } catch (ex) {\n            callback(ex);\n        }\n    }\n\n    /**\n    * deposit asset to sidechain\n    */\n    async depositTrx(\n        callValue,\n        depositFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.depositTrx, callValue, depositFee, feeLimit, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'callValue',\n                type: 'integer',\n                value: callValue,\n                gte: 0\n            },\n            {\n                name: 'depositFee',\n                type: 'integer',\n                value: depositFee,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0\n            }\n        ], callback)) {\n            return;\n        }\n        options = {\n            callValue: Number(callValue) + Number(depositFee),\n            feeLimit,\n            ...options\n        };\n        try {\n            const contractInstance = await this.mainchain.contract().at(this.mainGatewayAddress);\n            const result = await contractInstance.depositTRX().send(options, privateKey);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async depositTrc10(\n        tokenId,\n        tokenValue,\n        depositFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.depositTrc10, tokenId, tokenValue, depositFee, feeLimit, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'tokenValue',\n                type: 'integer',\n                value: tokenValue,\n                gte: 0\n            },\n            {\n                name: 'depositFee',\n                type: 'integer',\n                value: depositFee,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0\n            },\n            {\n                name: 'tokenId',\n                type: 'integer',\n                value: tokenId,\n                gte: 0\n            }\n        ], callback)) {\n            return;\n        }\n        options = {\n            tokenId,\n            tokenValue,\n            feeLimit,\n            ...options,\n            callValue: depositFee\n        };\n        try {\n            const contractInstance = await this.mainchain.contract().at(this.mainGatewayAddress);\n            const result = await contractInstance.depositTRC10(tokenId, tokenValue).send(options, privateKey);\n            callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async depositTrc(\n        functionSelector,\n        num,\n        fee,\n        feeLimit,\n        contractAddress,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.depositTrc, functionSelector, num, fee, feeLimit, contractAddress, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'functionSelector',\n                type: 'not-empty-string',\n                value: functionSelector\n            },\n            {\n                name: 'num',\n                type: 'integer',\n                value: num,\n                gte: 0\n            },\n            {\n                name: 'fee',\n                type: 'integer',\n                value: fee,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0\n            },\n            {\n                name: 'contractAddress',\n                type: 'address',\n                value: contractAddress\n            }\n        ], callback)) {\n            return;\n        }\n        options = {\n            feeLimit,\n            ...options,\n            callValue: fee,\n            tokenId: '',\n            tokenValue: 0\n        };\n        try {\n            let result = null;\n            if (functionSelector === 'approve') {\n                const approveInstance = await this.mainchain.contract().at(contractAddress);\n                result = await approveInstance.approve(this.mainGatewayAddress, num).send(options, privateKey);\n            } else {\n                const contractInstance = await this.mainchain.contract().at(this.mainGatewayAddress);\n                switch (functionSelector) {\n                    case 'depositTRC20':\n                        result = await contractInstance.depositTRC20(contractAddress, num).send(options, privateKey);\n                        break;\n                    case 'depositTRC721':\n                        result = await contractInstance.depositTRC721(contractAddress, num).send(options, privateKey);\n                        break;\n                    case 'retryDeposit':\n                        result = await contractInstance.retryDeposit(num).send(options, privateKey);\n                        break;\n                    case 'retryMapping':\n                        result = await contractInstance.retryMapping(num).send(options, privateKey);\n                        break;\n                    default:\n                        break;\n                }\n            }\n            callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async approveTrc20(\n        num,\n        feeLimit,\n        contractAddress,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'approve';\n        return this.depositTrc(\n            functionSelector,\n            num,\n            0,\n            feeLimit,\n            contractAddress,\n            options,\n            privateKey,\n            callback\n        );\n    }\n\n    async approveTrc721(\n        id,\n        feeLimit,\n        contractAddress,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'approve';\n        return this.depositTrc(\n            functionSelector,\n            id,\n            0,\n            feeLimit,\n            contractAddress,\n            options,\n            privateKey,\n            callback\n        );\n    }\n\n    async depositTrc20(\n        num,\n        depositFee,\n        feeLimit,\n        contractAddress,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'depositTRC20';\n        return this.depositTrc(\n            functionSelector,\n            num,\n            depositFee,\n            feeLimit,\n            contractAddress,\n            options,\n            privateKey,\n            callback\n        );\n    }\n\n    async depositTrc721(\n        id,\n        depositFee,\n        feeLimit,\n        contractAddress,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'depositTRC721';\n        return this.depositTrc(\n            functionSelector,\n            id,\n            depositFee,\n            feeLimit,\n            contractAddress,\n            options,\n            privateKey,\n            callback\n        );\n    }\n\n    /**\n     * mapping asset TRC20 or TRC721 to DAppChain\n     */\n    async mappingTrc(\n        trxHash,\n        mappingFee,\n        feeLimit,\n        functionSelector,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback\n    ) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.mappingTrc, trxHash, mappingFee, feeLimit, functionSelector, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'trxHash',\n                type: 'not-empty-string',\n                value: trxHash\n            },\n            {\n                name: 'mappingFee',\n                type: 'integer',\n                value: mappingFee,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0\n            }\n        ], callback)) {\n            return;\n        }\n        trxHash = trxHash.startsWith('0x') ? trxHash : ('0x' + trxHash);\n        options = {\n            feeLimit,\n            ...options,\n            callValue: mappingFee\n        };\n        try {\n            const contractInstance = await this.mainchain.contract().at(this.mainGatewayAddress);\n            let result = null;\n            if (functionSelector === 'mappingTRC20') {\n                result = await contractInstance.mappingTRC20(trxHash).send(options, privateKey);\n            } else if (functionSelector === 'mappingTRC721') {\n                result = await contractInstance.mappingTRC721(trxHash).send(options, privateKey);\n            } else {\n                callback(new Error('type must be trc20 or trc721'));\n            }\n            callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async mappingTrc20(\n        trxHash,\n        mappingFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'mappingTRC20';\n        return this.mappingTrc(\n            trxHash,\n            mappingFee,\n            feeLimit,\n            functionSelector,\n            options,\n            privateKey,\n            callback);\n    }\n\n    async mappingTrc721(\n        trxHash,\n        mappingFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'mappingTRC721';\n        return this.mappingTrc(\n            trxHash,\n            mappingFee,\n            feeLimit,\n            functionSelector,\n            options,\n            privateKey,\n            callback);\n    }\n\n    /**\n     * withdraw trx from sidechain to mainchain\n     */\n    async withdrawTrx(\n        callValue,\n        withdrawFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.withdrawTrx, callValue, withdrawFee, feeLimit, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'callValue',\n                type: 'integer',\n                value: callValue,\n                gte: 0\n            },\n            {\n                name: 'withdrawFee',\n                type: 'integer',\n                value: withdrawFee,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0\n            }\n        ], callback)) {\n            return;\n        }\n        options = {\n            callValue: Number(callValue) + Number(withdrawFee),\n            feeLimit,\n            ...options\n        };\n        try {\n            const contractInstance = await this.sidechain.contract().at(this.sideGatewayAddress);\n            const result = await contractInstance.withdrawTRX().send(options, privateKey);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async withdrawTrc10(\n        tokenId,\n        tokenValue,\n        withdrawFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.withdrawTrc10, tokenId, tokenValue, withdrawFee, feeLimit, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'tokenId',\n                type: 'integer',\n                value: tokenId,\n                gte: 0\n            },\n            {\n                name: 'tokenValue',\n                type: 'integer',\n                value: tokenValue,\n                gte: 0\n            },\n            {\n                name: 'withdrawFee',\n                type: 'integer',\n                value: withdrawFee,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0\n            }\n        ], callback)) {\n            return;\n        }\n        options = {\n            tokenValue,\n            tokenId,\n            callValue: withdrawFee,\n            feeLimit,\n            ...options\n        };\n        try {\n            const contractInstance = await this.sidechain.contract().at(this.sideGatewayAddress);\n            const result = await contractInstance.withdrawTRC10(tokenId, tokenValue).send(options, privateKey);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async withdrawTrc(\n        functionSelector,\n        numOrId,\n        withdrawFee,\n        feeLimit,\n        contractAddress,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.withdrawTrc, functionSelector, numOrId, withdrawFee, feeLimit, contractAddress, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'functionSelector',\n                type: 'not-empty-string',\n                value: functionSelector\n            },\n            {\n                name: 'numOrId',\n                type: 'integer',\n                value: numOrId,\n                gte: 0\n            },\n            {\n                name: 'withdrawFee',\n                type: 'integer',\n                value: withdrawFee,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0\n            },\n            {\n                name: 'contractAddress',\n                type: 'address',\n                value: contractAddress\n            }\n        ], callback)) {\n            return;\n        }\n        options = {\n            feeLimit,\n            ...options,\n            callValue: withdrawFee\n        };\n        const parameters = [\n            {\n                type: 'uint256',\n                value: numOrId\n            }\n        ];\n\n        try {\n            const address = privateKey ? this.sidechain.address.fromPrivateKey(privateKey) : this.sidechain.defaultAddress.base58;\n            const transaction = await this.sidechain.transactionBuilder.triggerSmartContract(\n                contractAddress,\n                functionSelector,\n                options,\n                parameters,\n                this.sidechain.address.toHex(address)\n            );\n            if (!transaction.result || !transaction.result.result) {\n                return callback('Unknown error: ' + JSON.stringify(transaction.transaction, null, 2));\n            }\n\n            const signedTransaction = await this.sidechain.trx.sign(transaction.transaction, privateKey);\n\n            if (!signedTransaction.signature) {\n                if (!privateKey)\n                    return callback('Transaction was not signed properly');\n\n                return callback('Invalid private key provided');\n            }\n\n            const broadcast = await this.sidechain.trx.sendRawTransaction(signedTransaction);\n            if (broadcast.code) {\n                const err = {\n                    error: broadcast.code,\n                    message: broadcast.code\n                };\n                if (broadcast.message)\n                    err.message = this.sidechain.toUtf8(broadcast.message);\n                return callback(err)\n            }\n\n            if (!options.shouldPollResponse)\n                return callback(null, signedTransaction.txID);\n\n            const checkResult = async (index = 0) => {\n                if (index == 20) {\n                    return callback({\n                        error: 'Cannot find result in solidity node',\n                        transaction: signedTransaction\n                    });\n                }\n\n                const output = await this.sidechain.trx.getTransactionInfo(signedTransaction.txID);\n\n                if (!Object.keys(output).length) {\n                    return setTimeout(() => {\n                        checkResult(index + 1);\n                    }, 3000);\n                }\n\n                if (output.result && output.result == 'FAILED') {\n                    return callback({\n                        error: this.sidechain.toUtf8(output.resMessage),\n                        transaction: signedTransaction,\n                        output\n                    });\n                }\n\n                if (!this.utils.hasProperty(output, 'contractResult')) {\n                    return callback({\n                        error: 'Failed to execute: ' + JSON.stringify(output, null, 2),\n                        transaction: signedTransaction,\n                        output\n                    });\n                }\n\n                if (options.rawResponse)\n                    return callback(null, output);\n\n                let decoded = decodeOutput(this.outputs, '0x' + output.contractResult[0]);\n\n                if (decoded.length === 1)\n                    decoded = decoded[0];\n\n                return callback(null, decoded);\n            }\n\n            checkResult();\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async withdrawTrc20(\n        num,\n        withdrawFee,\n        feeLimit,\n        contractAddress,\n        options,\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'withdrawal(uint256)';\n        return this.withdrawTrc(\n            functionSelector,\n            num,\n            withdrawFee,\n            feeLimit,\n            contractAddress,\n            options,\n            privateKey,\n            callback);\n    }\n\n    async withdrawTrc721(\n        id,\n        withdrawFee,\n        feeLimit,\n        contractAddress,\n        options,\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'withdrawal(uint256)';\n        return this.withdrawTrc(\n            functionSelector,\n            id,\n            withdrawFee,\n            feeLimit,\n            contractAddress,\n            options,\n            privateKey,\n            callback);\n    }\n\n\n    async injectFund(\n        num,\n        feeLimit,\n        options,\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.injectFund, num, feeLimit, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'num',\n                type: 'integer',\n                value: num,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0\n            }\n        ], callback)) {\n            return;\n        }\n\n        try {\n            const address = this.sidechain.address.fromPrivateKey(privateKey);\n            const hexAddress = this.sidechain.address.toHex(address);\n            const transaction = await this.sidechain.fullNode.request('/wallet/fundinject', {\n                owner_address: hexAddress,\n                amount: num\n            }, 'post');\n\n            const signedTransaction = await this.sidechain.trx.sign(transaction, privateKey);\n\n            if (!signedTransaction.signature) {\n                if (!privateKey)\n                    return callback('Transaction was not signed properly');\n\n                return callback('Invalid private key provided');\n            }\n\n            const broadcast = await this.sidechain.trx.sendRawTransaction(signedTransaction);\n            if (broadcast.code) {\n                const err = {\n                    error: broadcast.code,\n                    message: broadcast.code\n                };\n                if (broadcast.message)\n                    err.message = this.mainchain.toUtf8(broadcast.message);\n                return callback(err)\n            }\n            return callback(null, signedTransaction.txID);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async retryWithdraw(\n        nonce,\n        retryWithdrawFee,\n        feeLimit,\n        options = {},\n        privateKey = this.sidechain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'retryWithdraw(uint256)';\n        return this.withdrawTrc(\n            functionSelector,\n            nonce,\n            retryWithdrawFee,\n            feeLimit,\n            this.sideGatewayAddress,\n            options,\n            privateKey,\n            callback\n        );\n    }\n\n    async retryDeposit(\n        nonce,\n        retryDepositFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'retryDeposit';\n        return this.depositTrc(\n            functionSelector,\n            nonce,\n            retryDepositFee,\n            feeLimit,\n            this.mainGatewayAddress,\n            options,\n            privateKey,\n            callback\n        );\n    }\n\n    async retryMapping(\n        nonce,\n        retryMappingFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'retryMapping';\n        return this.depositTrc(\n            functionSelector,\n            nonce,\n            retryMappingFee,\n            feeLimit,\n            this.mainGatewayAddress,\n            options,\n            privateKey,\n            callback\n        );\n    }\n}\n\n","import providers from 'lib/providers';\nimport utils from 'utils';\nimport BigNumber from 'bignumber.js';\nimport EventEmitter from 'eventemitter3';\nimport { version } from '../package.json';\nimport semver from 'semver';\nimport injectpromise from 'injectpromise';\n\nimport TransactionBuilder from 'lib/transactionBuilder';\nimport Trx from 'lib/trx';\nimport Contract from 'lib/contract';\nimport Plugin from 'lib/plugin';\nimport Event from 'lib/event';\nimport SideChain from 'lib/sidechain';\nimport { keccak256 } from 'utils/ethersUtils';\nimport { ADDRESS_PREFIX, TRON_BIP39_PATH_INDEX_0 } from 'utils/address';\n\nconst DEFAULT_VERSION = '4.7.1';\n\nconst FEE_LIMIT = 150000000;\n\nexport default class TronWeb extends EventEmitter {\n    static providers = providers;\n    static BigNumber = BigNumber;\n    static TransactionBuilder = TransactionBuilder;\n    static Trx = Trx;\n    static Contract = Contract;\n    static Plugin = Plugin;\n    static Event = Event;\n    static version = version;\n    static utils = utils;\n\n    constructor(options = false,\n        // for retro-compatibility:\n        solidityNode = false, eventServer = false, sideOptions = false, privateKey = false) {\n        super();\n\n        let fullNode;\n        let headers = false;\n        let eventHeaders = false;\n\n        if (typeof options === 'object' && (options.fullNode || options.fullHost)) {\n            fullNode = options.fullNode || options.fullHost;\n            sideOptions = solidityNode;\n            solidityNode = options.solidityNode || options.fullHost;\n            eventServer = options.eventServer || options.fullHost;\n            headers = options.headers || false;\n            eventHeaders = options.eventHeaders || headers;\n            privateKey = options.privateKey;\n        } else {\n            fullNode = options;\n        }\n        if (utils.isString(fullNode))\n            fullNode = new providers.HttpProvider(fullNode);\n\n        if (utils.isString(solidityNode))\n            solidityNode = new providers.HttpProvider(solidityNode);\n\n        if (utils.isString(eventServer))\n            eventServer = new providers.HttpProvider(eventServer);\n\n        this.event = new Event(this);\n        this.transactionBuilder = new TransactionBuilder(this);\n        this.trx = new Trx(this);\n        this.plugin = new Plugin(this, options);\n        this.utils = utils;\n\n        this.setFullNode(fullNode);\n        this.setSolidityNode(solidityNode);\n        this.setEventServer(eventServer);\n\n        this.providers = providers;\n        this.BigNumber = BigNumber;\n\n        this.defaultBlock = false;\n        this.defaultPrivateKey = false;\n        this.defaultAddress = {\n            hex: false,\n            base58: false\n        };\n\n        [\n            'sha3', 'toHex', 'toUtf8', 'fromUtf8',\n            'toAscii', 'fromAscii', 'toDecimal', 'fromDecimal',\n            'toSun', 'fromSun', 'toBigNumber', 'isAddress',\n            'createAccount', 'address', 'version', 'createRandom', 'fromMnemonic'\n        ].forEach(key => {\n            this[key] = TronWeb[key];\n        });\n        // for sidechain\n        if (typeof sideOptions === 'object' && (sideOptions.fullNode || sideOptions.fullHost)) {\n            this.sidechain = new SideChain(sideOptions, TronWeb, this, privateKey);\n        } else {\n            privateKey = privateKey || sideOptions;\n        }\n\n        if (privateKey)\n            this.setPrivateKey(privateKey);\n        this.fullnodeVersion = DEFAULT_VERSION;\n        this.feeLimit = FEE_LIMIT;\n        this.injectPromise = injectpromise(this);\n\n        if (headers) {\n            this.setFullNodeHeader(headers);\n        }\n\n        if (eventHeaders) {\n            this.setEventHeader(eventHeaders);\n        }\n    }\n\n    async getFullnodeVersion() {\n        try {\n            const nodeInfo = await this.trx.getNodeInfo()\n            this.fullnodeVersion = nodeInfo.configNodeInfo.codeVersion\n            if (this.fullnodeVersion.split('.').length === 2) {\n                this.fullnodeVersion += '.0';\n            }\n        } catch (err) {\n            this.fullnodeVersion = DEFAULT_VERSION;\n        }\n    }\n\n    setDefaultBlock(blockID = false) {\n        if ([false, 'latest', 'earliest', 0].includes(blockID)) {\n            return this.defaultBlock = blockID;\n        }\n\n        if (!utils.isInteger(blockID) || !blockID)\n            throw new Error('Invalid block ID provided');\n\n        this.defaultBlock = Math.abs(blockID);\n    }\n\n    setPrivateKey(privateKey) {\n        try {\n            this.setAddress(\n                this.address.fromPrivateKey(privateKey)\n            );\n        } catch {\n            throw new Error('Invalid private key provided');\n        }\n\n        this.defaultPrivateKey = privateKey;\n        this.emit('privateKeyChanged', privateKey);\n    }\n\n    setAddress(address) {\n        if (!this.isAddress(address))\n            throw new Error('Invalid address provided');\n\n        const hex = this.address.toHex(address);\n        const base58 = this.address.fromHex(address);\n\n        if (this.defaultPrivateKey && this.address.fromPrivateKey(this.defaultPrivateKey) !== base58)\n            this.defaultPrivateKey = false;\n\n        this.defaultAddress = {\n            hex,\n            base58\n        };\n\n        this.emit('addressChanged', { hex, base58 });\n    }\n\n    fullnodeSatisfies(version) {\n        return semver.satisfies(this.fullnodeVersion, version);\n    }\n\n    isValidProvider(provider) {\n        return Object.values(providers).some(knownProvider => provider instanceof knownProvider);\n    }\n\n    setFullNode(fullNode) {\n        if (utils.isString(fullNode))\n            fullNode = new providers.HttpProvider(fullNode);\n\n        if (!this.isValidProvider(fullNode))\n            throw new Error('Invalid full node provided');\n\n        this.fullNode = fullNode;\n        this.fullNode.setStatusPage('wallet/getnowblock');\n    }\n\n    setSolidityNode(solidityNode) {\n        if (utils.isString(solidityNode))\n            solidityNode = new providers.HttpProvider(solidityNode);\n\n        if (!this.isValidProvider(solidityNode))\n            throw new Error('Invalid solidity node provided');\n\n        this.solidityNode = solidityNode;\n        this.solidityNode.setStatusPage('walletsolidity/getnowblock');\n    }\n\n    setEventServer(...params) {\n        this.event.setServer(...params)\n    }\n\n    setHeader (headers = {}) {\n        const fullNode = new providers.HttpProvider(this.fullNode.host, 30000, false, false, headers);\n        const solidityNode = new providers.HttpProvider(this.solidityNode.host, 30000, false, false, headers);\n        const eventServer = new providers.HttpProvider(this.eventServer.host, 30000, false, false, headers);\n\n        this.setFullNode(fullNode);\n        this.setSolidityNode(solidityNode);\n        this.setEventServer(eventServer);\n    }\n\n    setFullNodeHeader (headers = {}) {\n        const fullNode = new providers.HttpProvider(this.fullNode.host, 30000, false, false, headers);\n        const solidityNode = new providers.HttpProvider(this.solidityNode.host, 30000, false, false, headers);\n\n        this.setFullNode(fullNode);\n        this.setSolidityNode(solidityNode);\n    }\n\n    setEventHeader (headers = {}) {\n        const eventServer = new providers.HttpProvider(this.eventServer.host, 30000, false, false, headers);\n        this.setEventServer(eventServer);\n    }\n\n    currentProviders() {\n        return {\n            fullNode: this.fullNode,\n            solidityNode: this.solidityNode,\n            eventServer: this.eventServer\n        };\n    }\n\n    currentProvider() {\n        return this.currentProviders();\n    }\n\n\n    getEventResult(...params) {\n\n        if (typeof params[1] !== 'object') {\n            params[1] = {\n                sinceTimestamp: params[1] || 0,\n                eventName: params[2] || false,\n                blockNumber: params[3] || false,\n                size: params[4] || 20,\n                page: params[5] || 1\n            }\n            params.splice(2, 4)\n\n            // callback:\n            if (!utils.isFunction(params[2])) {\n\n                if (utils.isFunction(params[1].page)) {\n                    params[2] = params[1].page;\n                    params[1].page = 1;\n                } else if (utils.isFunction(params[1].size)) {\n                    params[2] = params[1].size;\n                    params[1].size = 20;\n                    params[1].page = 1;\n                }\n            }\n        }\n\n        return this.event.getEventsByContractAddress(...params);\n    }\n\n    getEventByTransactionID(...params) {\n        return this.event.getEventsByTransactionID(...params)\n    }\n\n    contract(abi = [], address = false) {\n        return new Contract(this, abi, address);\n    }\n\n    static get address() {\n        return {\n            fromHex(address) {\n                if (!utils.isHex(address))\n                    return address;\n\n                return utils.crypto.getBase58CheckAddress(\n                    utils.code.hexStr2byteArray(address.replace(/^0x/, ADDRESS_PREFIX))\n                );\n            },\n            toHex(address) {\n                if (utils.isHex(address))\n                    return address.toLowerCase().replace(/^0x/, ADDRESS_PREFIX);\n\n                return utils.code.byteArray2hexStr(\n                    utils.crypto.decodeBase58Address(address)\n                ).toLowerCase();\n            },\n            fromPrivateKey(privateKey, strict = false) {\n                try {\n                    return utils.crypto.pkToAddress(privateKey, strict);\n                } catch {\n                    return false;\n                }\n            }\n        }\n    }\n\n    static sha3(string, prefix = true) {\n        return (prefix ? '0x' : '') + keccak256(Buffer.from(string, 'utf-8')).toString().substring(2);\n    }\n\n    static toHex(val) {\n        if (utils.isBoolean(val))\n            return TronWeb.fromDecimal(+val);\n\n        if (utils.isBigNumber(val))\n            return TronWeb.fromDecimal(val);\n\n        if (typeof val === 'object')\n            return TronWeb.fromUtf8(JSON.stringify(val));\n\n        if (utils.isString(val)) {\n            if (/^(-|)0x/.test(val))\n                return val;\n\n            if ((!isFinite(val)) || /^\\s*$/.test(val))\n                return TronWeb.fromUtf8(val);\n        }\n\n        let result = TronWeb.fromDecimal(val);\n        if (result === '0xNaN') {\n            throw new Error('The passed value is not convertible to a hex string');\n        } else {\n            return result;\n        }\n    }\n\n    static toUtf8(hex) {\n        if (utils.isHex(hex)) {\n            hex = hex.replace(/^0x/, '');\n            return Buffer.from(hex, 'hex').toString('utf8');\n        } else {\n            throw new Error('The passed value is not a valid hex string');\n        }\n    }\n\n    static fromUtf8(string) {\n        if (!utils.isString(string)) {\n            throw new Error('The passed value is not a valid utf-8 string')\n        }\n        return '0x' + Buffer.from(string, 'utf8').toString('hex');\n    }\n\n    static toAscii(hex) {\n        if (utils.isHex(hex)) {\n            let str = \"\";\n            let i = 0, l = hex.length;\n            if (hex.substring(0, 2) === '0x') {\n                i = 2;\n            }\n            for (; i < l; i += 2) {\n                let code = parseInt(hex.substr(i, 2), 16);\n                str += String.fromCharCode(code);\n            }\n            return str;\n        } else {\n            throw new Error('The passed value is not a valid hex string');\n        }\n    }\n\n    static fromAscii(string, padding) {\n        if (!utils.isString(string)) {\n            throw new Error('The passed value is not a valid utf-8 string')\n        }\n        return '0x' + Buffer.from(string, 'ascii').toString('hex').padEnd(padding, '0');\n    }\n\n\n    static toDecimal(value) {\n        return TronWeb.toBigNumber(value).toNumber();\n    }\n\n    static fromDecimal(value) {\n        const number = TronWeb.toBigNumber(value);\n        const result = number.toString(16);\n\n        return number.isLessThan(0) ? '-0x' + result.substr(1) : '0x' + result;\n    }\n\n    static fromSun(sun) {\n        const trx = TronWeb.toBigNumber(sun).div(1_000_000);\n        return utils.isBigNumber(sun) ? trx : trx.toString(10);\n    }\n\n    static toSun(trx) {\n        const sun = TronWeb.toBigNumber(trx).times(1_000_000);\n        return utils.isBigNumber(trx) ? sun : sun.toString(10);\n    }\n\n    static toBigNumber(amount = 0) {\n        if (utils.isBigNumber(amount))\n            return amount;\n\n        if (utils.isString(amount) && /^(-|)0x/.test(amount))\n            return new BigNumber(amount.replace('0x', ''), 16);\n\n        return new BigNumber(amount.toString(10), 10);\n    }\n\n    static isAddress(address = false) {\n        if (!utils.isString(address))\n            return false;\n\n        // Convert HEX to Base58\n        if (address.length === 42) {\n            try {\n                return TronWeb.isAddress(\n                    utils.crypto.getBase58CheckAddress(\n                        utils.code.hexStr2byteArray(address) // it throws an error if the address starts with 0x\n                    )\n                );\n            } catch (err) {\n                return false;\n            }\n        }\n        try {\n            return utils.crypto.isAddressValid(address);\n        } catch (err) {\n            return false;\n        }\n    }\n\n    static async createAccount() {\n        const account = utils.accounts.generateAccount();\n\n        return account;\n    }\n\n    static createRandom(options) {\n        const account = utils.accounts.generateRandom(options);\n\n        return account\n    }\n\n    static fromMnemonic(mnemonic, path = TRON_BIP39_PATH_INDEX_0, wordlist = null) {\n        const account = utils.accounts.generateAccountWithMnemonic(mnemonic, path, wordlist);\n\n        return account\n    }\n\n    async isConnected(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.isConnected);\n\n        return callback(null, {\n            fullNode: await this.fullNode.isConnected(),\n            solidityNode: await this.solidityNode.isConnected(),\n            eventServer: this.eventServer && await this.eventServer.isConnected()\n        });\n    }\n};\n"],"names":["jspb","require","goog","global","globalThis","window","self","this","call","Function","google_protobuf_any_pb","object","extend","proto","exportSymbol","TronWebProto","AccountId","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","Vote","Proposal","repeatedFields_","Exchange","Account","Frozen","AccountResource","Key","DelegatedResource","authority","Permission","Witness","Votes","MarketOrderDetail","Transaction","Contract","Result","raw","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","obj","name","getName_asB64","address","getAddress_asB64","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readBytes","setName","setAddress","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","f","undefined","getName_asU8","length","writeBytes","getAddress_asU8","getName","getFieldWithDefault","bytesAsB64","bytesAsU8","setProto3BytesField","getAddress","voteAddress","getVoteAddress_asB64","voteCount","setVoteAddress","readInt64","setVoteCount","getVoteAddress_asU8","getVoteCount","writeInt64","getVoteAddress","setProto3IntField","proposalId","proposerAddress","getProposerAddress_asB64","parametersMap","getParametersMap","expirationTime","createTime","approvalsList","getApprovalsList_asB64","state","setProposalId","setProposerAddress","readMessage","Map","setExpirationTime","setCreateTime","addApprovals","readEnum","setState","getProposalId","getProposerAddress_asU8","getLength","getExpirationTime","getCreateTime","getApprovalsList_asU8","writeRepeatedBytes","getState","writeEnum","State","PENDING","DISAPPROVED","APPROVED","CANCELED","getProposerAddress","opt_noLazyCreate","getMapField","clearParametersMap","clear","getApprovalsList","getRepeatedField","bytesListAsB64","bytesListAsU8","setApprovalsList","setField","opt_index","addToRepeatedField","clearApprovalsList","setProto3EnumField","exchangeId","creatorAddress","getCreatorAddress_asB64","firstTokenId","getFirstTokenId_asB64","firstTokenBalance","secondTokenId","getSecondTokenId_asB64","secondTokenBalance","setExchangeId","setCreatorAddress","setFirstTokenId","setFirstTokenBalance","setSecondTokenId","setSecondTokenBalance","getExchangeId","getCreatorAddress_asU8","getFirstTokenId_asU8","getFirstTokenBalance","getSecondTokenId_asU8","getSecondTokenBalance","getCreatorAddress","getFirstTokenId","getSecondTokenId","accountName","getAccountName_asB64","type","balance","votesList","toObjectList","getVotesList","assetMap","getAssetMap","assetv2Map","getAssetv2Map","frozenList","getFrozenList","netUsage","acquiredDelegatedFrozenBalanceForBandwidth","delegatedFrozenBalanceForBandwidth","oldTronPower","tronPower","getTronPower","assetOptimized","getBooleanFieldWithDefault","latestOprationTime","allowance","latestWithdrawTime","code","getCode_asB64","isWitness","isCommittee","frozenSupplyList","getFrozenSupplyList","assetIssuedName","getAssetIssuedName_asB64","assetIssuedId","getAssetIssuedId_asB64","latestAssetOperationTimeMap","getLatestAssetOperationTimeMap","latestAssetOperationTimev2Map","getLatestAssetOperationTimev2Map","freeNetUsage","freeAssetNetUsageMap","getFreeAssetNetUsageMap","freeAssetNetUsagev2Map","getFreeAssetNetUsagev2Map","latestConsumeTime","latestConsumeFreeTime","accountId","getAccountId_asB64","accountResource","getAccountResource","codehash","getCodehash_asB64","ownerPermission","getOwnerPermission","witnessPermission","getWitnessPermission","activePermissionList","getActivePermissionList","setAccountName","setType","setBalance","addVotes","readString","addFrozen","setNetUsage","setAcquiredDelegatedFrozenBalanceForBandwidth","setDelegatedFrozenBalanceForBandwidth","setOldTronPower","setTronPower","readBool","setAssetOptimized","setLatestOprationTime","setAllowance","setLatestWithdrawTime","setCode","setIsWitness","setIsCommittee","addFrozenSupply","setAssetIssuedName","setAssetIssuedId","setFreeNetUsage","setLatestConsumeTime","setLatestConsumeFreeTime","setAccountId","setAccountResource","setCodehash","setOwnerPermission","setWitnessPermission","addActivePermission","getAccountName_asU8","getType","getBalance","writeRepeatedMessage","writeString","getNetUsage","getAcquiredDelegatedFrozenBalanceForBandwidth","getDelegatedFrozenBalanceForBandwidth","getOldTronPower","writeMessage","getAssetOptimized","writeBool","getLatestOprationTime","getAllowance","getLatestWithdrawTime","getCode_asU8","getIsWitness","getIsCommittee","getAssetIssuedName_asU8","getAssetIssuedId_asU8","getFreeNetUsage","getLatestConsumeTime","getLatestConsumeFreeTime","getAccountId_asU8","getCodehash_asU8","frozenBalance","expireTime","setFrozenBalance","setExpireTime","getFrozenBalance","getExpireTime","energyUsage","frozenBalanceForEnergy","getFrozenBalanceForEnergy","latestConsumeTimeForEnergy","acquiredDelegatedFrozenBalanceForEnergy","delegatedFrozenBalanceForEnergy","storageLimit","storageUsage","latestExchangeStorageTime","setEnergyUsage","setFrozenBalanceForEnergy","setLatestConsumeTimeForEnergy","setAcquiredDelegatedFrozenBalanceForEnergy","setDelegatedFrozenBalanceForEnergy","setStorageLimit","setStorageUsage","setLatestExchangeStorageTime","getEnergyUsage","getLatestConsumeTimeForEnergy","getAcquiredDelegatedFrozenBalanceForEnergy","getDelegatedFrozenBalanceForEnergy","getStorageLimit","getStorageUsage","getLatestExchangeStorageTime","getWrapperField","setWrapperField","clearFrozenBalanceForEnergy","hasFrozenBalanceForEnergy","getField","getAccountName","getRepeatedWrapperField","setVotesList","setRepeatedWrapperField","opt_value","addToRepeatedWrapperField","clearVotesList","clearAssetMap","clearAssetv2Map","setFrozenList","clearFrozenList","clearTronPower","hasTronPower","setProto3BooleanField","getCode","setFrozenSupplyList","clearFrozenSupplyList","getAssetIssuedName","getAssetIssuedId","clearLatestAssetOperationTimeMap","clearLatestAssetOperationTimev2Map","clearFreeAssetNetUsageMap","clearFreeAssetNetUsagev2Map","getAccountId","clearAccountResource","hasAccountResource","getCodehash","clearOwnerPermission","hasOwnerPermission","clearWitnessPermission","hasWitnessPermission","setActivePermissionList","clearActivePermissionList","weight","setWeight","getWeight","from","getFrom_asB64","to","getTo_asB64","frozenBalanceForBandwidth","expireTimeForBandwidth","expireTimeForEnergy","setFrom","setTo","setFrozenBalanceForBandwidth","setExpireTimeForBandwidth","setExpireTimeForEnergy","getFrom_asU8","getTo_asU8","getFrozenBalanceForBandwidth","getExpireTimeForBandwidth","getExpireTimeForEnergy","getFrom","getTo","account","getAccount","permissionName","getPermissionName_asB64","setAccount","setPermissionName","getPermissionName_asU8","clearAccount","hasAccount","getPermissionName","id","threshold","parentId","operations","getOperations_asB64","keysList","getKeysList","readInt32","setId","setThreshold","setParentId","setOperations","addKeys","getId","writeInt32","getThreshold","getParentId","getOperations_asU8","PermissionType","OWNER","WITNESS","ACTIVE","setProto3StringField","getOperations","setKeysList","clearKeysList","votecount","pubkey","getPubkey_asB64","url","totalproduced","totalmissed","latestblocknum","latestslotnum","isjobs","setVotecount","setPubkey","setUrl","setTotalproduced","setTotalmissed","setLatestblocknum","setLatestslotnum","setIsjobs","getVotecount","getPubkey_asU8","getUrl","getTotalproduced","getTotalmissed","getLatestblocknum","getLatestslotnum","getIsjobs","getPubkey","oldVotesList","getOldVotesList","newVotesList","getNewVotesList","addOldVotes","addNewVotes","setOldVotesList","clearOldVotesList","setNewVotesList","clearNewVotesList","makerorderid","getMakerorderid_asB64","takerorderid","getTakerorderid_asB64","fillsellquantity","fillbuyquantity","setMakerorderid","setTakerorderid","setFillsellquantity","setFillbuyquantity","getMakerorderid_asU8","getTakerorderid_asU8","getFillsellquantity","getFillbuyquantity","getMakerorderid","getTakerorderid","rawData","getRawData","signatureList","getSignatureList_asB64","retList","getRetList","setRawData","addSignature","addRet","getSignatureList_asU8","parameter","getParameter","Any","provider","getProvider_asB64","contractname","getContractname_asB64","permissionId","setParameter","setProvider","setContractname","setPermissionId","getProvider_asU8","getContractname_asU8","getPermissionId","ContractType","ACCOUNTCREATECONTRACT","TRANSFERCONTRACT","TRANSFERASSETCONTRACT","VOTEASSETCONTRACT","VOTEWITNESSCONTRACT","WITNESSCREATECONTRACT","ASSETISSUECONTRACT","WITNESSUPDATECONTRACT","PARTICIPATEASSETISSUECONTRACT","ACCOUNTUPDATECONTRACT","FREEZEBALANCECONTRACT","UNFREEZEBALANCECONTRACT","WITHDRAWBALANCECONTRACT","UNFREEZEASSETCONTRACT","UPDATEASSETCONTRACT","PROPOSALCREATECONTRACT","PROPOSALAPPROVECONTRACT","PROPOSALDELETECONTRACT","SETACCOUNTIDCONTRACT","CUSTOMCONTRACT","CREATESMARTCONTRACT","TRIGGERSMARTCONTRACT","GETCONTRACT","UPDATESETTINGCONTRACT","EXCHANGECREATECONTRACT","EXCHANGEINJECTCONTRACT","EXCHANGEWITHDRAWCONTRACT","EXCHANGETRANSACTIONCONTRACT","UPDATEENERGYLIMITCONTRACT","ACCOUNTPERMISSIONUPDATECONTRACT","CLEARABICONTRACT","UPDATEBROKERAGECONTRACT","SHIELDEDTRANSFERCONTRACT","MARKETSELLASSETCONTRACT","MARKETCANCELORDERCONTRACT","FREEZEBALANCEV2CONTRACT","UNFREEZEBALANCEV2CONTRACT","WITHDRAWEXPIREUNFREEZECONTRACT","DELEGATERESOURCECONTRACT","UNDELEGATERESOURCECONTRACT","CANCELALLUNFREEZEV2CONTRACT","clearParameter","hasParameter","getProvider","getContractname","fee","ret","contractret","assetissueid","withdrawAmount","unfreezeAmount","exchangeReceivedAmount","exchangeInjectAnotherAmount","exchangeWithdrawAnotherAmount","shieldedTransactionFee","orderid","getOrderid_asB64","orderdetailsList","getOrderdetailsList","setFee","setRet","setContractret","setAssetissueid","setWithdrawAmount","setUnfreezeAmount","setExchangeReceivedAmount","setExchangeInjectAnotherAmount","setExchangeWithdrawAnotherAmount","setShieldedTransactionFee","setOrderid","addOrderdetails","getFee","getRet","getContractret","getAssetissueid","getWithdrawAmount","getUnfreezeAmount","getExchangeReceivedAmount","getExchangeInjectAnotherAmount","getExchangeWithdrawAnotherAmount","getShieldedTransactionFee","getOrderid_asU8","SUCESS","FAILED","contractResult","DEFAULT","SUCCESS","REVERT","BAD_JUMP_DESTINATION","OUT_OF_MEMORY","PRECOMPILED_CONTRACT","STACK_TOO_SMALL","STACK_TOO_LARGE","ILLEGAL_OPERATION","STACK_OVERFLOW","OUT_OF_ENERGY","OUT_OF_TIME","JVM_STACK_OVER_FLOW","UNKNOWN","TRANSFER_FAILED","INVALID_CODE","getOrderid","setOrderdetailsList","clearOrderdetailsList","refBlockBytes","getRefBlockBytes_asB64","refBlockNum","refBlockHash","getRefBlockHash_asB64","expiration","authsList","getAuthsList","data","getData_asB64","contractList","getContractList","scripts","getScripts_asB64","timestamp","feeLimit","setRefBlockBytes","setRefBlockNum","setRefBlockHash","setExpiration","addAuths","setData","addContract","setScripts","setTimestamp","setFeeLimit","getRefBlockBytes_asU8","getRefBlockNum","getRefBlockHash_asU8","getExpiration","getData_asU8","getScripts_asU8","getTimestamp","getFeeLimit","getRefBlockBytes","getRefBlockHash","setAuthsList","clearAuthsList","getData","setContractList","clearContractList","getScripts","clearRawData","hasRawData","getSignatureList","setSignatureList","clearSignatureList","setRetList","clearRetList","AccountType","NORMAL","ASSETISSUE","CONTRACT","exports","core_Tron_pb","AccountCreateContract","AccountUpdateContract","SetAccountIdContract","AccountPermissionUpdateContract","ownerAddress","getOwnerAddress_asB64","accountAddress","getAccountAddress_asB64","setOwnerAddress","setAccountAddress","getOwnerAddress_asU8","getAccountAddress_asU8","getOwnerAddress","getAccountAddress","owner","getOwner","witness","getWitness","activesList","getActivesList","setOwner","setWitness","addActives","clearOwner","hasOwner","clearWitness","hasWitness","setActivesList","clearActivesList","AssetIssueContract","FrozenSupply","TransferAssetContract","UnfreezeAssetContract","UpdateAssetContract","ParticipateAssetIssueContract","abbr","getAbbr_asB64","totalSupply","trxNum","precision","num","startTime","endTime","order","voteScore","description","getDescription_asB64","getUrl_asB64","freeAssetNetLimit","publicFreeAssetNetLimit","publicFreeAssetNetUsage","publicLatestFreeNetTime","setAbbr","setTotalSupply","setTrxNum","setPrecision","setNum","setStartTime","setEndTime","setOrder","setVoteScore","setDescription","setFreeAssetNetLimit","setPublicFreeAssetNetLimit","setPublicFreeAssetNetUsage","setPublicLatestFreeNetTime","getAbbr_asU8","getTotalSupply","getTrxNum","getPrecision","getNum","getStartTime","getEndTime","getOrder","getVoteScore","getDescription_asU8","getUrl_asU8","getFreeAssetNetLimit","getPublicFreeAssetNetLimit","getPublicFreeAssetNetUsage","getPublicLatestFreeNetTime","frozenAmount","frozenDays","setFrozenAmount","setFrozenDays","getFrozenAmount","getFrozenDays","getAbbr","getDescription","assetName","getAssetName_asB64","toAddress","getToAddress_asB64","amount","setAssetName","setToAddress","setAmount","getAssetName_asU8","getToAddress_asU8","getAmount","getAssetName","getToAddress","newLimit","newPublicLimit","setNewLimit","setNewPublicLimit","getNewLimit","getNewPublicLimit","core_contract_common_pb","FreezeBalanceContract","UnfreezeBalanceContract","WithdrawBalanceContract","TransferContract","TransactionBalanceTrace","Operation","BlockBalanceTrace","BlockIdentifier","AccountTrace","AccountIdentifier","AccountBalanceRequest","AccountBalanceResponse","FreezeBalanceV2Contract","UnfreezeBalanceV2Contract","WithdrawExpireUnfreezeContract","DelegateResourceContract","UnDelegateResourceContract","CancelAllUnfreezeV2Contract","frozenDuration","resource","receiverAddress","getReceiverAddress_asB64","setFrozenDuration","setResource","setReceiverAddress","getFrozenDuration","getResource","getReceiverAddress_asU8","getReceiverAddress","transactionIdentifier","getTransactionIdentifier_asB64","operationList","getOperationList","status","setTransactionIdentifier","addOperation","setStatus","getTransactionIdentifier_asU8","getStatus","operationIdentifier","setOperationIdentifier","getOperationIdentifier","getTransactionIdentifier","setOperationList","clearOperationList","blockIdentifier","getBlockIdentifier","transactionBalanceTraceList","getTransactionBalanceTraceList","setBlockIdentifier","addTransactionBalanceTrace","hash","getHash_asB64","number","setHash","setNumber","getHash_asU8","getNumber","getHash","clearBlockIdentifier","hasBlockIdentifier","setTransactionBalanceTraceList","clearTransactionBalanceTraceList","placeholder","setPlaceholder","getPlaceholder","accountIdentifier","getAccountIdentifier","setAccountIdentifier","clearAccountIdentifier","hasAccountIdentifier","unfreezeBalance","setUnfreezeBalance","getUnfreezeBalance","lock","lockPeriod","setLock","setLockPeriod","getLock","getLockPeriod","ResourceCode","BANDWIDTH","ENERGY","TRON_POWER","ExchangeCreateContract","ExchangeInjectContract","ExchangeWithdrawContract","ExchangeTransactionContract","tokenId","getTokenId_asB64","quant","setTokenId","setQuant","getTokenId_asU8","getQuant","getTokenId","expected","setExpected","getExpected","ProposalApproveContract","ProposalCreateContract","ProposalDeleteContract","isAddApproval","setIsAddApproval","getIsAddApproval","SmartContract","ABI","Entry","Param","ContractState","CreateSmartContract","TriggerSmartContract","ClearABIContract","UpdateSettingContract","UpdateEnergyLimitContract","SmartContractDataWrapper","originAddress","getOriginAddress_asB64","contractAddress","getContractAddress_asB64","abi","getAbi","bytecode","getBytecode_asB64","callValue","consumeUserResourcePercent","originEnergyLimit","codeHash","getCodeHash_asB64","trxHash","getTrxHash_asB64","version","setOriginAddress","setContractAddress","setAbi","setBytecode","setCallValue","setConsumeUserResourcePercent","setOriginEnergyLimit","setCodeHash","setTrxHash","setVersion","getOriginAddress_asU8","getContractAddress_asU8","getBytecode_asU8","getCallValue","getConsumeUserResourcePercent","getOriginEnergyLimit","getCodeHash_asU8","getTrxHash_asU8","getVersion","entrysList","getEntrysList","addEntrys","anonymous","constant","inputsList","getInputsList","outputsList","getOutputsList","payable","statemutability","setAnonymous","setConstant","addInputs","addOutputs","setPayable","setStatemutability","getAnonymous","getConstant","getPayable","getStatemutability","EntryType","UNKNOWNENTRYTYPE","CONSTRUCTOR","FUNCTION","EVENT","FALLBACK","RECEIVE","ERROR","StateMutabilityType","UNKNOWNMUTABILITYTYPE","PURE","VIEW","NONPAYABLE","PAYABLE","indexed","setIndexed","getIndexed","setInputsList","clearInputsList","setOutputsList","clearOutputsList","setEntrysList","clearEntrysList","getOriginAddress","getContractAddress","clearAbi","hasAbi","getBytecode","getCodeHash","getTrxHash","energyFactor","updateCycle","setEnergyFactor","setUpdateCycle","getEnergyFactor","getUpdateCycle","newContract","getNewContract","callTokenValue","setNewContract","setCallTokenValue","getCallTokenValue","clearNewContract","hasNewContract","smartContract","getSmartContract","runtimecode","getRuntimecode_asB64","contractState","getContractState","setSmartContract","setRuntimecode","setContractState","getRuntimecode_asU8","clearSmartContract","hasSmartContract","getRuntimecode","clearContractState","hasContractState","BuyStorageBytesContract","BuyStorageContract","SellStorageContract","UpdateBrokerageContract","setBytes","getBytes","storageBytes","setStorageBytes","getStorageBytes","brokerage","setBrokerage","getBrokerage","WitnessCreateContract","WitnessUpdateContract","VoteWitnessContract","updateUrl","getUpdateUrl_asB64","setUpdateUrl","getUpdateUrl_asU8","getUpdateUrl","support","setSupport","getSupport","module","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","prop","hasOwnProperty","r","Symbol","toStringTag","Base64","_this","_keyStr","encode","input","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","i","charCodeAt","isNaN","charAt","encodeIgnoreUtf8","inputBytes","decode","replace","indexOf","String","fromCharCode","_utf8_decode","decodeToByteArray","_out2ByteArray","utftext","byteArray","Array","c","_utf8_encode","string","c2","c3","byte2hexStr","byte","Error","hexByteMap","str","bytesToString","arr","one","toString","v","match","bytesLength","store","slice","st","parseInt","hextoString","hex","split","out","tmp","concat","byteArray2hexStr","base64DecodeFromString","string64","base64EncodeToString","ADDRESS_SIZE","ADDRESS_PREFIX","ADDRESS_PREFIX_BYTE","ADDRESS_PREFIX_REGEX","TRON_BIP39_PATH_INDEX_0","TRON_BIP39_PATH_PREFIX","bin2String","array","arrayEquals","array1","array2","strict","JSON","stringify","stringToBytes","len","push","hexChar2byte","isHexChar","hexStr2byteArray","arguments","j","k","strToDate","test","tempStrs","dateStrs","year","month","day","timeStrs","hour","minute","second","Date","isNumber","getStringType","ALPHABET","ALPHABET_MAP","BASE","encode58","buffer","digits","carry","reverse","map","digit","join","decode58","ZeroHash","checkType","types","t","trim","_typeof","error","argument","resolveProperties","_x","_resolveProperties","apply","_asyncToGenerator","_regeneratorRuntime","_callee","keys","results","_context","prev","next","Promise","all","resolve","sent","abrupt","reduce","accum","index","stop","defineProperties","target","values","writable","isArray","Uint8Array","HEX","result","toJSON","BigInt","sort","isError","makeError","info","details","TypeError","RangeError","assign","assert","check","assertArgument","assertArgumentCount","count","expectedCount","_normalizeForms","form","normalize","assertNormalize","operation","assertPrivate","givenGuard","guard","className","method","_getBytes","copy","offset","substring","getBytesCopy","isHexString","isBytesLike","HexCharacters","hexlify","datas","dataLength","dataSlice","start","end","zeroPadValue","left","fill","set","zeroPad","BN_0","BN_1","maxValue","toTwos","_value","_width","getBigInt","width","limit","fault","mask","_bits","getUint","bits","Number","isInteger","e","Nibbles","toBigInt","_step","_iterator","_createForOfIteratorHelper","s","done","err","toBeHex","toBeArray","BN_2","BN_27","BN_28","BN_35","_guard","toUint256","_r2","WeakMap","_s","_v2","_networkV","_Symbol$for","Signature","_classCallCheck","_classPrivateFieldInitSpec","_classPrivateFieldSet","_createClass","_classPrivateFieldGet","networkV","getChainId","yParityAndS","yParity","clone","_type","bv","chainId","sig","assertError","getNormalizedV","_r","_ref","_v","_sha256","createHash","update","digest","_sha512","__sha256","__sha512","locked256","locked512","sha256","_data","sha512","_","register","func","freeze","locked","_pbkdf2","password","salt","iterations","keylen","algo","pbkdf2Sync","__pbkdf2","pbkdf2","_password","_salt","ignoreFunc","reason","badCodepoint","Utf8ErrorFuncs","ignore","toUtf8Bytes","pair","toUtf8String","onError","_bytes","extraLength","overlongMask","res","nextChar","getUtf8CodePoints","codePoint","_keccak256","keccak_256","__keccak256","keccak256","subsChrs","Word","unfold","words","sep","initial","word","decodeOwl","subs","clumps","leftover","item","semi","toLowerCase","Wordlist","locale","_defineProperty","phrase","_checksum","_words","_loadWords","WeakSet","WordlistOwl","_Wordlist","_inherits","_super","checksum","_assertThisInitialized","_classPrivateMethodGet","_loadWords2","_decodeWords","wordlist","LangEn","_WordlistOwl","getUpperMask","mnemonicToEntropy","mnemonic","entropy","Math","ceil","getWordIndex","bit","entropyBits","checksumMask","entropyToMnemonic","indices","remainingBits","checksumBits","getWord","Mnemonic","_entropy","_computeHmac","algorithm","createHmac","__computeHmac","computeHmac","_key","BN_36","getChecksumAddress","chars","expanded","hashed","toUpperCase","ibanLookup","safeDigits","Base36","startsWith","block","ibanChecksum","fromBase36","secp256k1","_len","messages","_privateKey","SigningKey","privateKey","computePublicKey","_secp256k1$signSync","recovered","canonical","_secp256k1$signSync2","_slicedToArray","sigDer","recid","other","pubKey","compressed","pub","toRawBytes","signature","der","toDERRawBytes","p0","p1","pub0","pub1","add","toHex","computeAddress","publicKey","recoverAddress","WordSize","Padding","passProperties","throwError","wrapped","_names","_Array","args","items","names","wrap","forEach","nameCounts","_possibleConstructorReturn","Proxy","receiver","Reflect","_len2","_key2","getValue","_this2","callback","thisArg","_wrapNativeSuper","Coder","localName","dynamic","_dataLength","_writeData","Writer","_classPrivateMethodInitSpec","_writeData2","paddingOffset","_this3","_data2","_offset","_peekBytes","Reader","allowLoose","loose","_peekBytes2","alignedLength","_gaurd","signed","Typed","b","size","_typedSymbol","_options","gaurd","options","format","isTyped","AddressCoder","_Coder","_throwError","writeValue","readValue","AnonymousCoder","coder","defaultValue","pack","coders","arrayValues","unique","staticWriter","dynamicWriter","updateFuncs","dynamicOffset","updateFunc","writeUpdatableValue","baseOffset","appendWriter","unpack","baseReader","subReader","readIndex","offsetReader","baseType","ArrayCoder","defaultChild","BooleanCoder","DynamicBytesCoder","_createSuper","BytesCoder","_DynamicBytesCoder","_super2","_get","_getPrototypeOf","FixedBytesCoder","Empty","NullCoder","BN_MAX_UINT256","NumberCoder","maxUintValue","bounds","fromTwos","StringCoder","TupleCoder","uniqueNames","setify","Set","_kwVisib","_kwTypes","_kwModifiers","KwModifiers","Keywords","SimpleTokens","regexWhitespacePrefix","RegExp","regexNumberPrefix","regexIdPrefix","regexId","regexType","_tokens","_subTokenString","TokenString","tokens","allowed","top","peek","has","text","pop","_subTokenString2","link","linkNext","peekType","_this$offset","token","linkBack","consumeKeywords","keywords","keyword","regexArrayType","verifyBasicType","internal","ParamTypeInternal","_walkAsync","ParamType","components","arrayLength","arrayChildren","_walkAsync3","isTuple","parse","comp","process","walk","promises","_walkAsync2","_x2","allowIndexed","isParamType","brackets","commas","cur","depth","suffix","lex","comps","popParams","popType","bracket","arrayMatch","setValue","childType","param","_components$index","then","_callee2","_context2","t0","t1","PanicReasons","paramTypeBytes","paramTypeNumber","defaultCoder","_getCoder","AbiCoder","_getCoder2","action","tx","abiCoder","revert","transaction","invocation","getBuiltinCallException","defaultAbiCoder","_this4","checkAddress","_checkAddress","promise","resolveAddress","resolver","resolveName","MessagePrefix","padding","BN__1","hexTrue","hexFalse","domainFieldTypes","verifyingContract","domainFieldNames","checkString","domainChecks","isSafeInteger","toQuantity","getBaseEncoder","boundsUpper","boundsLower","padOffset","hexPadRight","encodeType","fields","_types","_fullTypes","_encoderCache","_getEncoder","TypedDataEncoder","links","parents","subtypes","field","primaryTypes","filter","primaryType","checkCircular","found","_step2","_iterator2","child","_step3","_iterator3","subtype","_step4","_iterator4","_step4$value","_resolveNames","encoder","_getEncoder2","getEncoder","encodeData","hashStruct","_visit","_ref2","domain","domainFields","EIP712Domain","hashDomain","ensCache","visit","_x3","_x4","domainValues","domainTypes","typesWithDomain","subEncoder","encodedType","_ref3","unshift","hexlifyByte","unarrayifyInteger","_decodeChildren","childOffset","decoded","_decode","consumed","checkOffset","lengthLength","decodeRlp","arrayifyInteger","_encode","payload","nibbles","encodeRlp","accessSetify","addr","storageKeys","storageKey","accessListify","localeCompare","BN_MAX_UINT","handleAddress","handleAccessList","handleNumber","handleUint","formatNumber","formatAccessList","_serializeLegacy","nonce","gasPrice","gasLimit","legacyChainId","legacy","_parseEipSignature","_serializeEip1559","maxPriorityFeePerGas","maxFeePerGas","accessList","_serializeEip2930","_to","_nonce","_gasLimit","_gasPrice","_maxPriorityFeePerGas","_maxFeePerGas","_value2","_chainId","_sig","_accessList","serialized","unsignedSerialized","unsignedHash","inferType","inferTypes","hasGasPrice","hasFee","hasAccessList","_parseLegacy","_parseEip2930","_parseEip1559","isSigned","copyRequest","req","blockTag","enableCcipReadEnabled","enableCcipRead","customData","checkProvider","signer","populate","_populate","_callee12","_context12","iterator","AbstractSigner","_sendTransaction","_resolveName","_call","_estimateGas","_populateTransaction","_populateCall","_getNonce","t2","getTransactionCount","_callee3","network","hasEip1559","feeData","_feeData","_context3","getNonce","estimateGas","getNetwork","getFeeData","_x5","_callee4","_context4","populateCall","_x6","_callee5","_context5","_x7","_callee6","_context6","_x8","_callee7","txObj","_context7","populateTransaction","signTransaction","broadcastTransaction","_x9","_throwUnsupported","VoidSigner","_AbstractSigner","_signMessage","_signTransaction","_getAddress","_callee8","_context8","_callee9","_context9","_throwUnsupported2","_x10","_callee10","_context10","_x11","_signTypedData","_callee11","_context11","_x12","_x13","_x14","_signingKey","BaseWallet","sign","signingKey","_yield$resolvePropert","btx","signMessageSync","hashMessage","populated","_ripemd160","noble_ripemd160","__ripemd160","ripemd160","_randomBytes","crypto_random","__randomBytes","randomBytes","Alphabet","Lookup","getAlpha","letter","BN_58","lockedSync","lockedAsync","_scryptAsync","passwd","N","p","dkLen","onProgress","_nobleAsync","_scryptSync","_nobleSync","__scryptAsync","__scryptSync","scrypt","_scrypt","_passwd","progress","H","scryptSync","uuidV4","looseArrayify","hexString","zpad","getPassword","spelunk","_path","path","reqd","parseFloat","defaultPath","isKeystoreJson","json","ciphertext","iv","CTR","decrypt","mnemonicKey","mnemonicCiphertext","mnemonicIv","mnemonicAesCtr","getDecryptKdfParams","kdf","prf","stall","duration","setTimeout","decryptKeystoreJson","_decryptKeystoreJson","params","_salt3","_dkLen3","_key3","getEncryptKdfParams","_encryptKeystore","uuidRandom","uuid","derivedKey","macPrefix","encrypt","mac","Crypto","cipher","cipherparams","kdfparams","dklen","client","now","gethFilename","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","mnemonicCounter","encryptKeystoreJsonSync","passwordBytes","encryptKeystoreJson","_encryptKeystoreJson","progressCallback","MasterSecret","HardenedBit","trunc","encodeBase58Check","encodeBase58","ser_I","chainCode","I","IL","IR","derivePath","node","shift","component","deriveChild","_account","HDNodeWallet","_BaseWallet","_encrypt","parentFingerprint","compressedPublicKey","fingerprint","_account2","HDNodeVoidWallet","_index","_ser_I","ki","extendedKey","decodeBase58","_classStaticPrivateMethodGet","_fromSeed","computeSeed","seed","m","_seed","_VoidSigner","_ser_I2","Ki","isCrowdsaleJson","encseed","decryptCrowdsaleJson","encryptedSeed","aesCbc","CBC","pkcs7Strip","seedHex","Wallet","_fromEncryptedJson","_fromAccount","decryptKeystoreJsonSync","wallet","connect","console","log","LangCz","_accent","WordlistOwlA","accent","accents","posOffset","positions","flood","decodeBits","charCode","regex","decodeOwlA","LangEs","_WordlistOwlA","LangFr","mapping","_wordlist","KiYoKu","KyoKu","loadWords","transform","kana","LangJa","codes","LangKo","LangIt","LangPt","deltaData","zh_cn","zh_tw","Checks","style","deltaOffset","wordlists","LangZh","dialect","cz","en","es","fr","it","pt","ja","ko","KwVisib","KwTypes","allowSingle","included","consumeName","peekKeyword","consumeMutability","modifiers","consumeParams","consumeGas","consumeEoi","ErrorFragmentInternal","EventFragmentInternal","ConstructorFragmentInternal","FallbackFragmentInternal","FunctionFragmentInternal","StructFragmentInternal","Fragment","inputs","ConstructorFragment","ErrorFragment","EventFragment","FallbackFragment","FunctionFragment","StructFragment","isFragment","NamedFragment","_Fragment","joinParams","_NamedFragment","_NamedFragment2","_super3","_this5","topicHash","_Fragment2","_super4","gas","_this6","stateMutability","_Fragment3","_super5","_this7","errorObj","popKeyword","mutability","outputs","_NamedFragment3","_super6","_this8","selector","_NamedFragment4","_super7","_this9","LogDescription","fragment","topic","TransactionDescription","ErrorDescription","Indexed","_isIndexed","BuiltinErrors","_errors","_events","_functions","_abiCoder","_getFunction","_getEvent","Interface","fragments","frags","fallback","receive","getAbiCoder","bucket","deploy","minimal","_getFunction2","_getEvent2","matching","_step3$value","matchStr","_encodeParams","getError","_decodeParams","getFunction","ef","parsed","parseTransaction","getEvent","topics","encodeTopic","dataTypes","dataValues","eventTopic","nonIndexed","resultIndexed","resultNonIndexed","nonIndexedIndex","indexedIndex","fromItems","decodeEventLog","hexData","forceUnique","_step5","_iterator5","_step5$value","lastValue","valueLength","allowOptions","splice","lastArg","_step6","_iterator6","_step7","_iterator7","_step7$value","splitSignature","sigBytes","joinSignature","splitSig","arrayify","FormatTypes","sighash","full","isValidMnemonic","Buffer","TronWeb","secp","_ec$secp256k","ec","getBase58CheckAddress","addressBytes","hash0","SHA256","checkSum","decodeBase58Address","base58Sting","checkSum1","priKeyBytes","ECKeySign","txID","includes","arrayToBase64String","btoa","_toConsumableArray","signBytes","contents","messageDigest","getRowBytesFromTransactionBase64","base64Data","bytesDecode","protocol","genPriKey","priKeyHex","utils","randomPrivateKey","padStart","pubBytes","getAddressFromPriKey","getPubKeyFromPriKey","decode58Check","addressStr","decodeCheck","decodeData","hash1","isAddressValid","base58Str","getBase58CheckAddressFromPriKeyBase64String","priKeyBase64String","getHexStrAddressFromPriKeyBase64String","getAddressFromPriKeyBase64String","ProjectivePoint","fromPrivateKey","normalizePrivateKeyBytes","x","y","xHex","yHex","hashBytes","recovery","msgBytes","passwordToAddress","pkToAddress","INVALID_TRON_PATH_ERROR_MSG","generateAccount","pubKeyBytes","base58","generateRandom","ethersHDNodeWallet","generateAccountWithMnemonic","fromPhrase","_addressToHex","deepCopy","_array","newTarget","_isBigNumber","decodeParams","ignoreMethodHash","arg","substr","encodeParams","extractSize","extractArrayDim","encodeParamsV2ByABI","funABI","buildFullTypeDefinition","typeDef","innerTypes","innerType","convertAddresses","addrArr","addrs","mapTuple","dimension","encodeArgs","convertTypes","decodeParamsV2ByABI","decodeResult","buildFullTypeNameDefinition","outputTypes","convertTypeNames","decodeResCopy","TRON_MESSAGE_PREFIX","signMessage","verifyMessage","_require","_require2","_require3","_require4","_require6","_require8","_require9","_require10","fromHexString","buildCommonTransaction","contractType","typeName","anyValue","contract","contractJsonToProtobuf","to_address","owner_address","transferContract","Permission_id","buildTransferContract","asset_name","buildTransferAssetContract","pbObj","buildParticipateAssetIssueContract","triggerSmartContract","contract_address","_value$parameter","function_selector","call_value","call_token_value","token_id","contractData","sha3","buildTriggerSmartContract","freezeBalanceContract","frozen_balance","frozen_duration","receiver_address","buildFreezeBalanceContract","unfreezeBalanceContract","buildUnfreezeBalanceContract","withdrawbalanceContract","buildWithdrawBalanceContract","freezeBalanceV2Contract","buildFreezeBalanceV2Contract","withdrawExpireUnfreeze","buildCancelFreezeBalanceV2Contract","unfreezeBalanceV2Contract","unfreeze_balance","buildUnfreezeBalanceV2Contract","delegateResourceContract","_value$lock","lock_period","buildDelegateResourceContract","unDelegateResourceContract","buildUnDelegateResourceContract","buildWithdrawExpireUnfreezeContract","createWitnessContract","buildCreateWitness","voteWitnessContract","votes","voteItem","vote","vote_address","vote_count","numberOfVotes","buildVoteWitnessAccount","new_contract","_objectSpread","consume_user_resource_percent","origin_energy_limit","_params$bytecode","contracName","_params$parameter","origin_address","createSmartContract","smartContractBuilder","abiJson","entrys","abiBuilder","buildEntryParam","entryBuilders","entry","entryBuilder","bytecodeParameter","buildCreateSmartContract","clearABIContract","buildClearABIContract","updateBrokerageContract","buildUpdateBrokerageContract","total_supply","trx_num","start_time","end_time","free_asset_net_limit","public_free_asset_net_limit","_value$public_free_as","public_free_asset_net_usage","_value$public_latest_","public_latest_free_net_time","_value$vote_score","vote_score","frozen_supply","assetIssueContract","frozenSupplyContract","frozen_amount","frozen_days","buildAssetIssueContract","accountCreateContract","account_address","buildAccountCreateContract","accountUpdateContract","account_name","buildAccountUpdateContract","setAccountIdContract","account_id","buildSetAccountIdContract","proposalCreateContract","parameters","buildProposalCreateContract","proposalDeleteContract","proposal_id","buildProposalDeleteContract","proposalVoteContract","is_add_approval","buildVoteProposalContract","exchangeCreateContract","first_token_id","first_token_balance","second_token_id","second_token_balance","buildExchangeCreateContract","exchangeInjectContract","exchange_id","buildExchangeInjectContract","exchangeWithdrawContract","buildExchangeWithdrawContract","exchangeTransactionContract","buildExchangeTransactionContract","updateSettingContract","buildUpdateSettingContract","updateEnergyLimitContract","buildUpdateEnergyLimitContract","accountPermissionUpdateContract","actives","buildPermission","permission","permission_name","keyBuilder","active","buildAccountPermissionUpdateContract","updateAssetContract","new_limit","new_public_limit","buildUpdateAssetContract","txJsonToPb","contractJson","transactionObj","rawDataObj","ref_block_bytes","ref_block_hash","fee_limit","txJsonToPbWithArgs","compareTransaction","transactionPb","rawDataBytes","rawDataHex","raw_data_hex","txPbToRawDataHex","pb","txCheck","txCheckWithArgs","txPbToTxID","isValidURL","validator","protocols","require_tld","isObject","isJson","ex","isBoolean","bool","isBigNumber","BigNumber","constructor","isString","isFunction","isHex","hasProperty","property","hasProperties","properties","mapEvent","event","block_number","block_timestamp","event_name","transaction_id","resourceNode","resource_Node","_unconfirmed","unconfirmed","_fingerprint","parseEvent","_abi$index","padLeft","isNotNullOrUndefined","val","sleep","_arguments","millis","accounts","crypto","_TypedDataEncoder","ethersUtils","HttpProvider","host","timeout","user","headers","statusPage","instance","axios","baseURL","auth","_isConnected","_args","request","Validator","tronWeb","normalized","no","gt","lt","gte","lte","se","optional","isAddress","notPositive","notEqual","invalid","fromUtf8","deepCopyJson","resultManager","toUtf8","createTransaction","_createTransaction","metaData","_args7","fullNode","detail","block_header","raw_data","blockID","visible","type_url","TransactionBuilder","injectPromise","injectpromise","_addUpdateData","_extendExpiration","_alterTransaction","_newTxID","_deployConstantContract","defaultAddress","sendTrx","notValid","_options2","tokenID","sendToken","_options3","issuerAddress","buyer","purchaseToken","_options4","freezeBalance","_options5","_options6","freezeBalanceV2","_options7","unfreezeBalanceV2","_options8","cancelUnfreezeBalanceV2","_options9","delegateResource","_options10","undelegateResource","_options11","_options12","withdrawBlockRewards","_options13","applyForSR","_options14","voterAddress","entries","srAddress","userFeePercentage","tokenValue","_options$abi","_options$bytecode","_options$parameters","_options$name","_unused","some","rawParameter","funcABIV2","parametersV2","constructorParams","find","_args$origin_address","_params$","txLocal","_triggerSmartContractLocal","_triggerSmartContract","_isConstant","_len3","confirmed","_len4","_key4","estimateEnergy","_options$callValue","pathInfo","_args2","functionSelector","_parameters$i","shieldedParameter","_Object$assign","_getTriggerSmartContractArgs","_Object$assign2","resultManagerTriggerSmartContract","_options15","clearABI","trx","cache","contracts","_options16","updateBrokerage","createToken","_options$name2","_options$abbreviation","abbreviation","_options$description","_options$url","_options$totalSupply","_options$trxRatio","trxRatio","_options$tokenRatio","tokenRatio","_options$saleStart","saleStart","_options$saleEnd","saleEnd","_options$freeBandwidt","freeBandwidth","_options$freeBandwidt2","freeBandwidthLimit","_options$frozenAmount","_options$frozenDurati","_options17","createAccount","_options18","updateAccount","_options19","_options21","updateToken","_options20","_options20$descriptio","_options20$url","_options20$freeBandwi","_options20$freeBandwi2","_options22","createProposal","_options23","proposalID","deleteProposal","_options24","isApproval","voteProposal","tokenName","tokenBalance","trxBalance","_options25","createTRXExchange","firstTokenName","secondTokenName","_options26","createTokenExchange","_options27","exchangeID","tokenAmount","injectExchangeTokens","_options28","withdrawExchangeTokens","_options29","tokenAmountSold","tokenAmountExpected","tradeExchangeTokens","fromAscii","_options30","updateSetting","_options31","updateEnergyLimit","permissions","_options32","ownerPermissions","witnessPermissions","activesPermissions","updateAccountPermissions","checkPermissions","activesPermission","_ownerPermissions","_witnessPermissions","_activesPermissions","activePermissions","_options33","newTxID","newTransaction","_args4","alterTransaction","dataFormat","extension","_options34","_args5","extendExpiration","_options35","_args6","addUpdateData","TRX_MESSAGE_HEADER","ETH_MESSAGE_HEADER","Trx","_getBrokerage3","_getReward3","_getUnconfirmedBrokerage","_getBrokerage2","_getUnconfirmedReward","_getReward2","_updateAccount","_unfreezeBalance","_freezeBalance","_sendToken","_getSignWeight","_getApprovedList","_multiSign","_sign","_verifyMessage","_getTransactionsRelated","getCurrentBlock","getConfirmedCurrentBlock","solidityNode","defaultBlock","getBlockByHash","getBlockByNumber","getBlock","blockHash","getBlockTransactionCount","_ref$transactions","transactions","getTransactionFromBlock","_ref2$transactions","transactionID","getTransaction","getConfirmedTransaction","_getTransactionInfoById","getTransactionsRelated","getTransactionsToAddress","getTransactionsFromAddress","direction","_yield$Promise$all","_yield$Promise$all2","getAccountById","getAccountInfoById","_ref4","_ref4$balance","getUnconfirmedAccount","getUnconfirmedAccountById","getUnconfirmedBalance","_ref5","_ref5$balance","_ref6","_ref6$freeNetUsed","freeNetUsed","_ref6$freeNetLimit","freeNetLimit","_ref6$NetUsed","NetUsed","_ref6$NetLimit","NetLimit","getBandwidth","_ref7","_ref7$assetIssue","assetIssue","_parseToken","getTokensIssuedByAddress","getTokenFromID","listNodes","_ref8","_ref8$nodes","nodes","_ref9","_ref9$address","port","startNum","endNum","_ref10","_ref10$block","getBlockRange","listSuperRepresentatives","_ref11","_ref11$witnesses","witnesses","_ref13","_ref13$assetIssue","_ref12","_ref12$assetIssue","listTokens","timeUntilNextVoteCycle","_ref14","_ref14$num","floor","getContract","useTronHeader","verifySignature","verifyMessageV2","verifyTypedData","multisig","signatureHex","_args3","defaultPrivateKey","signString","signMessageV2","signWeight","foundKey","multiSign","getSignWeight","approved_list","getApprovedList","signedTransaction","sendRawTransaction","signedHexTransaction","sendHexTransaction","hexTransaction","sendTransaction","transactionBuilder","_args8","_freezeBalance2","_args9","_unfreezeBalance2","_args10","_updateAccount2","_args11","proposal","getProposal","listProposals","_ref15","_ref15$proposals","proposals","getChainParameters","_ref16","_ref16$chainParameter","chainParameter","resources","getAccountResources","fromAddress","getDelegatedResourceV2","getDelegatedResourceAccountIndexV2","getCanDelegatedMaxSize","getAvailableUnfreezeCount","getCanWithdrawUnfreezeAmount","exchange","getExchangeByID","listExchanges","_ref17","_ref17$exchanges","exchanges","listExchangesPaginated","_ref18","_ref18$exchanges","getNodeInfo","getTokenListByName","getTokenByID","_args12","_getReward","_callee13","_args13","_context13","_callee14","_args14","_context14","_getBrokerage","_callee15","_args15","_context15","_callee16","_args16","_context16","reward","_callee17","_args17","_context17","messageBytes","tronAddress","fromHex","getFunctionSelector","iface","decodeOutput","Method","defaultOptions","shouldPollResponse","_watch2","_send2","_call2","send","_send","watch","_watch","deployed","constant_result","msg2","chunk","broadcast","checkResult","pollTimes","getTransactionInfo","resMessage","rawResponse","keepTxID","listener","lastBlock","since","getEvents","bindListener","eventServer","events","_events$sort","_events$sort2","latestEvent","newEvents","eventName","blockNumber","filters","onlyUnconfirmed","onlyConfirmed","getEventsByContractAddress","priorEvent","reject","clearInterval","setInterval","eventListener","methods","methodInstances","props","loadAbi","_at","_new2","_startEventListener2","_getEvents2","eventCallback","_getEvents","__proto__","methodCall","onMethod","bind","methodName","inputData","decodeInput","at","startCallback","_startEventListener","_stopEventListener","Plugin","pluginNoOverride","disablePlugins","pluginInterface","requires","libs","plugged","skipped","plugin","semver","fullClass","classInstanceName","Event","healthcheck","providers","isValidProvider","isConnected","sinceTimestamp","page","fromTimestamp","previousLastEventFingerprint","previousFingerprint","routeParams","warn","qs","only_confirmed","only_unconfirmed","querystring","response","getEventsByTransactionID","SideChain","sideOptions","mainchain","fullHost","mainGatewayAddress","sideGatewayAddress","sideChainId","sidechain","setMainGatewayAddress","setSideGatewayAddress","setChainId","_retryMapping","_retryDeposit","_retryWithdraw","_injectFund","_withdrawTrc4","_withdrawTrc3","_withdrawTrc2","_withdrawTrc","_withdrawTrx","_mappingTrc3","_mappingTrc2","_mappingTrc","_depositTrc4","_depositTrc3","_approveTrc2","_approveTrc","_depositTrc2","_depositTrc","_depositTrx","chainIdByteArr","byteArr","byteArrHash","depositFee","contractInstance","depositTrx","depositTRX","depositTrc10","depositTRC10","approveInstance","depositTrc","approve","depositTRC20","depositTRC721","retryDeposit","retryMapping","_x15","_x16","_x17","_x18","_x19","_x20","_x21","_x22","_x23","_x24","_x25","_x26","mappingFee","mappingTrc","mappingTRC20","mappingTRC721","_x27","_x28","_x29","_x30","_x31","_x32","_x33","_x34","_x35","_x36","withdrawFee","withdrawTrx","withdrawTRX","_x37","_x38","_x39","withdrawTrc10","withdrawTRC10","_x40","_x41","_x42","_x43","numOrId","withdrawTrc","_x44","_x45","_x46","_x47","_x48","_x49","_x50","_x51","_x52","_x53","_callee18","_args18","_context18","_x54","_x55","_x56","_x57","_x58","_callee19","hexAddress","_args19","_context19","injectFund","_x59","_x60","_x61","_callee20","retryWithdrawFee","_args20","_context20","_x62","_x63","_x64","_callee21","retryDepositFee","_args21","_context21","_x65","_x66","_x67","_callee22","retryMappingFee","_args22","_context22","_x68","_x69","_x70","DEFAULT_VERSION","FEE_LIMIT","_EventEmitter","_createAccount","_getFullnodeVersion","eventHeaders","setFullNode","setSolidityNode","setEventServer","setPrivateKey","fullnodeVersion","setFullNodeHeader","setEventHeader","nodeInfo","configNodeInfo","codeVersion","abs","emit","knownProvider","setStatusPage","_this$event","setServer","currentProviders","_this$event2","_this$event3","t3","t4","t5","_unused2","fromDecimal","isFinite","l","padEnd","toBigNumber","toNumber","isLessThan","sun","div","times","EventEmitter"],"sourceRoot":""}